/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 36);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(18);
} else {}

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/* @flow */

/**
 * Simple-Markdown
 * ===============
 *
 * Simple-Markdown's primary goal is to be easy to adapt. It aims
 * to be compliant with John Gruber's [Markdown Syntax page][1],
 * but compatiblity with other markdown implementations' edge-cases
 * will be sacrificed where it conflicts with simplicity or
 * extensibility.
 *
 * If your goal is to simply embed a standard markdown implementation
 * in your website, simple-markdown is probably not the best library
 * for you (although it should work). But if you have struggled to
 * customize an existing library to meet your needs, simple-markdown
 * might be able to help.
 *
 * Many of the regexes and original logic has been adapted from
 * the wonderful [marked.js](https://github.com/chjj/marked)
 *
 * LICENSE (MIT):
 * New code copyright (c) 2014-2019 Khan Academy & Aria Buckles.
 *
 * Portions adapted from marked.js copyright (c) 2011-2014
 * Christopher Jeffrey (https://github.com/chjj/).
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/*::
// Flow Type Definitions:

type Capture =
    Array<string> & {index: number} |
    Array<string> & {index?: number};

type Attr = string | number | boolean;

type SingleASTNode = {
    type: string,
    [string]: any,
};

type UnTypedASTNode = {
    [string]: any
};

type ASTNode = SingleASTNode | Array<SingleASTNode>;

type State = {[string]: any};

type ReactElement = React$Element<any>;
type ReactElements = React$Node;

type MatchFunction = (
    source: string,
    state: State,
    prevCapture: string
) => ?Capture;

type Parser = (
    source: string,
    state?: ?State
) => ASTNode;

type ParseFunction = (
    capture: Capture,
    nestedParse: Parser,
    state: State,
) => (UnTypedASTNode | ASTNode);

type SingleNodeParseFunction = (
    capture: Capture,
    nestedParse: Parser,
    state: State,
) => UnTypedASTNode;

type Output<Result> = (
    node: ASTNode,
    state?: ?State
) => Result;

type NodeOutput<Result> = (
    node: SingleASTNode,
    nestedOutput: Output<Result>,
    state: State
) => Result;

type ArrayNodeOutput<Result> = (
    node: Array<SingleASTNode>,
    nestedOutput: Output<Result>,
    state: State
) => Result;

type ReactOutput = Output<ReactElements>;
type ReactNodeOutput = NodeOutput<ReactElements>;
type HtmlOutput = Output<string>;
type HtmlNodeOutput = NodeOutput<string>;

type ParserRule = {
    +order: number,
    +match: MatchFunction,
    +quality?: (capture: Capture, state: State, prevCapture: string) => number,
    +parse: ParseFunction,
};

type SingleNodeParserRule = {
    +order: number,
    +match: MatchFunction,
    +quality?: (capture: Capture, state: State, prevCapture: string) => number,
    +parse: SingleNodeParseFunction,
};

type ReactOutputRule = {
    // we allow null because some rules are never output results, and that's
    // legal as long as no parsers return an AST node matching that rule.
    // We don't use ? because this makes it be explicitly defined as either
    // a valid function or null, so it can't be forgotten.
    +react: ReactNodeOutput | null,
};

type HtmlOutputRule = {
    +html: HtmlNodeOutput | null,
};

type ArrayRule = {
    +react?: ArrayNodeOutput<ReactElements>,
    +html?: ArrayNodeOutput<string>,
    +[string]: ArrayNodeOutput<any>,
};

type ParserRules = {
    +Array?: ArrayRule,
    +[type: string]: ParserRule,
};

type OutputRules<Rule> = {
    +Array?: ArrayRule,
    +[type: string]: Rule
};
type Rules<OutputRule> = {
    +Array?: ArrayRule,
    +[type: string]: ParserRule & OutputRule,
}
type ReactRules = {
    +Array?: {
        +react: ArrayNodeOutput<ReactElements>,
    },
    +[type: string]: ParserRule & ReactOutputRule,
};
type HtmlRules = {
    +Array?: {
        +html: ArrayNodeOutput<string>,
    },
    +[type: string]: ParserRule & HtmlOutputRule,
};

// We want to clarify our defaultRules types a little bit more so clients can
// reuse defaultRules built-ins. So we make some stronger guarantess when
// we can:
type NonNullReactOutputRule = {
    +react: ReactNodeOutput,
};
type ElementReactOutputRule = {
    +react: NodeOutput<ReactElement>,
};
type TextReactOutputRule = {
    +react: NodeOutput<string>,
};
type NonNullHtmlOutputRule = {
    +html: HtmlNodeOutput,
};

type DefaultInRule = SingleNodeParserRule & ReactOutputRule & HtmlOutputRule;
type TextInOutRule = SingleNodeParserRule & TextReactOutputRule & NonNullHtmlOutputRule;
type LenientInOutRule = SingleNodeParserRule & NonNullReactOutputRule & NonNullHtmlOutputRule;
type DefaultInOutRule = SingleNodeParserRule & ElementReactOutputRule & NonNullHtmlOutputRule;

type DefaultRules = {
    +Array: {
        +react: ArrayNodeOutput<ReactElements>,
        +html: ArrayNodeOutput<string>
    },
    +heading: DefaultInOutRule,
    +nptable: DefaultInRule,
    +lheading: DefaultInRule,
    +hr: DefaultInOutRule,
    +codeBlock: DefaultInOutRule,
    +fence: DefaultInRule,
    +blockQuote: DefaultInOutRule,
    +list: DefaultInOutRule,
    +def: LenientInOutRule,
    +table: DefaultInOutRule,
    +newline: TextInOutRule,
    +paragraph: DefaultInOutRule,
    +escape: DefaultInRule,
    +autolink: DefaultInRule,
    +mailto: DefaultInRule,
    +url: DefaultInRule,
    +link: DefaultInOutRule,
    +image: DefaultInOutRule,
    +reflink: DefaultInRule,
    +refimage: DefaultInRule,
    +em: DefaultInOutRule,
    +strong: DefaultInOutRule,
    +u: DefaultInOutRule,
    +del: DefaultInOutRule,
    +inlineCode: DefaultInOutRule,
    +br: DefaultInOutRule,
    +text: TextInOutRule,
};

type RefNode = {
    type: string,
    content?: ASTNode,
    target?: string,
    title?: string,
};

// End Flow Definitions
*/
// Open IIFE, and immediately close it in flow
(function () {
  /*::})*/
  var CR_NEWLINE_R = /\r\n?/g;
  var TAB_R = /\t/g;
  var FORMFEED_R = /\f/g; // Turn various crazy whitespace into easy to process things

  var preprocess = function preprocess(source
  /* : string */
  ) {
    return source.replace(CR_NEWLINE_R, '\n').replace(FORMFEED_R, '').replace(TAB_R, '    ');
  };

  var populateInitialState = function populateInitialState(givenState
  /* : ?State */
  , defaultState
  /* : ?State */
  )
  /* : State */
  {
    var state
    /* : State */
    = givenState || {};

    if (defaultState != null) {
      for (var prop in defaultState) {
        if (Object.prototype.hasOwnProperty.call(defaultState, prop)) {
          state[prop] = defaultState[prop];
        }
      }
    }

    return state;
  };
  /**
   * Creates a parser for a given set of rules, with the precedence
   * specified as a list of rules.
   *
   * @rules: an object containing
   * rule type -> {match, order, parse} objects
   * (lower order is higher precedence)
   * (Note: `order` is added to defaultRules after creation so that
   *  the `order` of defaultRules in the source matches the `order`
   *  of defaultRules in terms of `order` fields.)
   *
   * @returns The resulting parse function, with the following parameters:
   *   @source: the input source string to be parsed
   *   @state: an optional object to be threaded through parse
   *     calls. Allows clients to add stateful operations to
   *     parsing, such as keeping track of how many levels deep
   *     some nesting is. For an example use-case, see passage-ref
   *     parsing in src/widgets/passage/passage-markdown.jsx
   */


  var parserFor = function parserFor(rules
  /*: ParserRules */
  , defaultState
  /*: ?State */
  ) {
    // Sorts rules in order of increasing order, then
    // ascending rule name in case of ties.
    var ruleList = Object.keys(rules).filter(function (type) {
      var rule = rules[type];

      if (rule == null || rule.match == null) {
        return false;
      }

      var order = rule.order;

      if ((typeof order !== 'number' || !isFinite(order)) && typeof console !== 'undefined') {
        console.warn("simple-markdown: Invalid order for rule `" + type + "`: " + String(order));
      }

      return true;
    });
    ruleList.sort(function (typeA, typeB) {
      var ruleA
      /* : ParserRule */
      =
      /*::(*/
      rules[typeA]
      /*:: :any)*/
      ;
      var ruleB
      /* : ParserRule */
      =
      /*::(*/
      rules[typeB]
      /*:: :any)*/
      ;
      var orderA = ruleA.order;
      var orderB = ruleB.order; // First sort based on increasing order

      if (orderA !== orderB) {
        return orderA - orderB;
      }

      var secondaryOrderA = ruleA.quality ? 0 : 1;
      var secondaryOrderB = ruleB.quality ? 0 : 1;

      if (secondaryOrderA !== secondaryOrderB) {
        return secondaryOrderA - secondaryOrderB; // Then based on increasing unicode lexicographic ordering
      } else if (typeA < typeB) {
        return -1;
      } else if (typeA > typeB) {
        return 1;
      } else {
        // Rules should never have the same name,
        // but this is provided for completeness.
        return 0;
      }
    });
    var latestState;

    var nestedParse = function nestedParse(source
    /* : string */
    , state
    /* : ?State */
    ) {
      var result = [];
      state = state || latestState;
      latestState = state; // We store the previous capture so that match functions can
      // use some limited amount of lookbehind. Lists use this to
      // ensure they don't match arbitrary '- ' or '* ' in inline
      // text (see the list rule for more information).

      var prevCapture = "";

      while (source) {
        // store the best match, it's rule, and quality:
        var ruleType = null;
        var rule = null;
        var capture = null;
        var quality = NaN; // loop control variables:

        var i = 0;
        var currRuleType = ruleList[0];
        var currRule
        /* : ParserRule */
        =
        /*::(*/
        rules[currRuleType]
        /*:: : any)*/
        ;

        do {
          var currOrder = currRule.order;
          var currCapture = currRule.match(source, state, prevCapture);

          if (currCapture) {
            var currQuality = currRule.quality ? currRule.quality(currCapture, state, prevCapture) : 0; // This should always be true the first time because
            // the initial quality is NaN (that's why there's the
            // condition negation).

            if (!(currQuality <= quality)) {
              ruleType = currRuleType;
              rule = currRule;
              capture = currCapture;
              quality = currQuality;
            }
          } // Move on to the next item.
          // Note that this makes `currRule` be the next item


          i++;
          currRuleType = ruleList[i];
          currRule =
          /*::((*/
          rules[currRuleType]
          /*:: : any) : ParserRule)*/
          ;
        } while ( // keep looping while we're still within the ruleList
        currRule && ( // if we don't have a match yet, continue
        !capture || // or if we have a match, but the next rule is
        // at the same order, and has a quality measurement
        // functions, then this rule must have a quality
        // measurement function (since they are sorted before
        // those without), and we need to check if there is
        // a better quality match
        currRule.order === currOrder && currRule.quality)); // TODO(aria): Write tests for these
        // Lie to flow and say these checks always happen


        if (state.disableErrorGuards !== true) {
          /*:: } { */
          if (rule == null || capture == null
          /*:: || ruleType == null */
          ) {
              throw new Error("Could not find a matching rule for the below " + "content. The rule with highest `order` should " + "always match content provided to it. Check " + "the definition of `match` for '" + ruleList[ruleList.length - 1] + "'. It seems to not match the following source:\n" + source);
            }

          if (capture.index !== 0 && source.slice(0, capture[0].length) !== capture[0]) {
            throw new Error("`match` must return a capture starting at index 0 " + "(the current parse index). Did you forget a ^ at the " + "start of the RegExp?");
          }
        }

        var parsed = rule.parse(capture, nestedParse, state); // We maintain the same object here so that rules can
        // store references to the objects they return and
        // modify them later. (oops sorry! but this adds a lot
        // of power--see reflinks.)

        if (Array.isArray(parsed)) {
          Array.prototype.push.apply(result, parsed);
        } else {
          // We also let rules override the default type of
          // their parsed node if they would like to, so that
          // there can be a single output function for all links,
          // even if there are several rules to parse them.
          if (parsed.type == null) {
            parsed.type = ruleType;
          }

          result.push(parsed);
        }

        prevCapture = capture[0];
        source = source.substring(prevCapture.length);
      }

      return result;
    };

    var outerParse = function outerParse(source
    /* : string */
    , state
    /* : ?State */
    ) {
      latestState = populateInitialState(state, defaultState);

      if (!latestState.inline && !latestState.disableAutoBlockNewlines) {
        source = source + "\n\n";
      }

      return nestedParse(preprocess(source), latestState);
    };

    return outerParse;
  }; // Creates a match function for an inline scoped element from a regex


  var inlineRegex = function inlineRegex(regex
  /* : RegExp */
  ) {
    var match
    /* : MatchFunction */
    = function match(source, state) {
      if (state.inline) {
        return regex.exec(source);
      } else {
        return null;
      }
    };

    match.regex = regex;
    return match;
  }; // Creates a match function for a block scoped element from a regex


  var blockRegex = function blockRegex(regex
  /* : RegExp */
  ) {
    var match
    /* : MatchFunction */
    = function match(source, state) {
      if (state.inline) {
        return null;
      } else {
        return regex.exec(source);
      }
    };

    match.regex = regex;
    return match;
  }; // Creates a match function from a regex, ignoring block/inline scope


  var anyScopeRegex = function anyScopeRegex(regex
  /* : RegExp */
  ) {
    var match
    /* : MatchFunction */
    = function match(source, state) {
      return regex.exec(source);
    };

    match.regex = regex;
    return match;
  };

  var TYPE_SYMBOL = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;

  var reactElement = function reactElement(type
  /* : string */
  , key
  /* : string | null */
  , props
  /* : { [string]: any } */
  ) {
    var element = {
      $$typeof: TYPE_SYMBOL,
      type: type,
      key: key,
      ref: null,
      props: props,
      _owner: null
    };
    return (
      /* :: (( */
      element
      /* :: : any ) : ReactElement) */

    );
  }; // Returns a closed HTML tag.
  // tagName: Name of HTML tag (eg. "em" or "a")
  // content: Inner content of tag
  // attributes: Optional extra attributes of tag as an object of key-value pairs
  //   eg. { "href": "http://google.com" }. Falsey attributes are filtered out.
  // isClosed: boolean that controls whether tag is closed or not (eg. img tags).
  //   defaults to true


  var htmlTag = function htmlTag(tagName
  /* : string */
  , content
  /* : string */
  , attributes
  /* : ?{[any]: ?Attr} */
  , isClosed
  /* : ?boolean */
  ) {
    attributes = attributes || {};
    isClosed = typeof isClosed !== 'undefined' ? isClosed : true;
    var attributeString = "";

    for (var attr in attributes) {
      var attribute = attributes[attr]; // Removes falsey attributes

      if (Object.prototype.hasOwnProperty.call(attributes, attr) && attribute) {
        attributeString += " " + sanitizeText(attr) + '="' + sanitizeText(attribute) + '"';
      }
    }

    var unclosedTag = "<" + tagName + attributeString + ">";

    if (isClosed) {
      return unclosedTag + content + "</" + tagName + ">";
    } else {
      return unclosedTag;
    }
  };

  var EMPTY_PROPS = {};

  var sanitizeUrl = function sanitizeUrl(url
  /* : ?string */
  ) {
    if (url == null) {
      return null;
    }

    try {
      var prot = decodeURIComponent(url).replace(/[^A-Za-z0-9/:]/g, '').toLowerCase();

      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {
        return null;
      }
    } catch (e) {
      // decodeURIComponent sometimes throws a URIError
      // See `decodeURIComponent('a%AFc');`
      // http://stackoverflow.com/questions/9064536/javascript-decodeuricomponent-malformed-uri-exception
      return null;
    }

    return url;
  };

  var SANITIZE_TEXT_R = /[<>&"']/g;
  var SANITIZE_TEXT_CODES = {
    '<': '&lt;',
    '>': '&gt;',
    '&': '&amp;',
    '"': '&quot;',
    "'": '&#x27;',
    '/': '&#x2F;',
    "`": '&#96;'
  };

  var sanitizeText = function sanitizeText(text
  /* : Attr */
  ) {
    return String(text).replace(SANITIZE_TEXT_R, function (chr) {
      return SANITIZE_TEXT_CODES[chr];
    });
  };

  var UNESCAPE_URL_R = /\\([^0-9A-Za-z\s])/g;

  var unescapeUrl = function unescapeUrl(rawUrlString
  /* : string */
  ) {
    return rawUrlString.replace(UNESCAPE_URL_R, "$1");
  }; // Parse some content with the parser `parse`, with state.inline
  // set to true. Useful for block elements; not generally necessary
  // to be used by inline elements (where state.inline is already true.


  var parseInline = function parseInline(parse, content, state) {
    var isCurrentlyInline = state.inline || false;
    state.inline = true;
    var result = parse(content, state);
    state.inline = isCurrentlyInline;
    return result;
  };

  var parseBlock = function parseBlock(parse, content, state) {
    var isCurrentlyInline = state.inline || false;
    state.inline = false;
    var result = parse(content + "\n\n", state);
    state.inline = isCurrentlyInline;
    return result;
  };

  var parseCaptureInline = function parseCaptureInline(capture, parse, state) {
    return {
      content: parseInline(parse, capture[1], state)
    };
  };

  var ignoreCapture = function ignoreCapture() {
    return {};
  }; // recognize a `*` `-`, `+`, `1.`, `2.`... list bullet


  var LIST_BULLET = "(?:[*+-]|\\d+\\.)"; // recognize the start of a list item:
  // leading space plus a bullet plus a space (`   * `)

  var LIST_ITEM_PREFIX = "( *)(" + LIST_BULLET + ") +";
  var LIST_ITEM_PREFIX_R = new RegExp("^" + LIST_ITEM_PREFIX); // recognize an individual list item:
  //  * hi
  //    this is part of the same item
  //
  //    as is this, which is a new paragraph in the same item
  //
  //  * but this is not part of the same item

  var LIST_ITEM_R = new RegExp(LIST_ITEM_PREFIX + "[^\\n]*(?:\\n" + "(?!\\1" + LIST_BULLET + " )[^\\n]*)*(\n|$)", "gm");
  var BLOCK_END_R = /\n{2,}$/; // recognize the end of a paragraph block inside a list item:
  // two or more newlines at end end of the item

  var LIST_BLOCK_END_R = BLOCK_END_R;
  var LIST_ITEM_END_R = / *\n+$/; // check whether a list item has paragraphs: if it does,
  // we leave the newlines at the end

  var LIST_R = new RegExp("^( *)(" + LIST_BULLET + ") " + "[\\s\\S]+?(?:\n{2,}(?! )" + "(?!\\1" + LIST_BULLET + " )\\n*" + // the \\s*$ here is so that we can parse the inside of nested
  // lists, where our content might end before we receive two `\n`s
  "|\\s*\n*$)");
  var LIST_LOOKBEHIND_R = /(?:^|\n)( *)$/;

  var TABLES = function () {
    // predefine regexes so we don't have to create them inside functions
    // sure, regex literals should be fast, even inside functions, but they
    // aren't in all browsers.
    var TABLE_HEADER_TRIM = /^ *| *\| *$/g;
    var TABLE_CELLS_TRIM = /\n+$/;
    var PLAIN_TABLE_ROW_TRIM = /^ *\| *| *\| *$/g;
    var NPTABLE_ROW_TRIM = /^ *| *$/g;
    var TABLE_ROW_SPLIT = / *\| */;
    var TABLE_RIGHT_ALIGN = /^ *-+: *$/;
    var TABLE_CENTER_ALIGN = /^ *:-+: *$/;
    var TABLE_LEFT_ALIGN = /^ *:-+ *$/;

    var parseTableAlignCapture = function parseTableAlignCapture(alignCapture) {
      if (TABLE_RIGHT_ALIGN.test(alignCapture)) {
        return "right";
      } else if (TABLE_CENTER_ALIGN.test(alignCapture)) {
        return "center";
      } else if (TABLE_LEFT_ALIGN.test(alignCapture)) {
        return "left";
      } else {
        return null;
      }
    };

    var parseTableHeader = function parseTableHeader(trimRegex, capture, parse, state) {
      var headerText = capture[1].replace(trimRegex, "").split(TABLE_ROW_SPLIT);
      return headerText.map(function (text) {
        return parse(text, state);
      });
    };

    var parseTableAlign = function parseTableAlign(trimRegex, capture, parse, state) {
      var alignText = capture[2].replace(trimRegex, "").split(TABLE_ROW_SPLIT);
      return alignText.map(parseTableAlignCapture);
    };

    var parseTableCells = function parseTableCells(capture, parse, state) {
      var rowsText = capture[3].replace(TABLE_CELLS_TRIM, "").split("\n");
      return rowsText.map(function (rowText) {
        var cellText = rowText.replace(PLAIN_TABLE_ROW_TRIM, "").split(TABLE_ROW_SPLIT);
        return cellText.map(function (text) {
          return parse(text, state);
        });
      });
    };

    var parseNpTableCells = function parseNpTableCells(capture, parse, state) {
      var rowsText = capture[3].replace(TABLE_CELLS_TRIM, "").split("\n");
      return rowsText.map(function (rowText) {
        var cellText = rowText.split(TABLE_ROW_SPLIT);
        return cellText.map(function (text) {
          return parse(text, state);
        });
      });
    };

    var parseTable = function parseTable(capture, parse, state) {
      state.inline = true;
      var header = parseTableHeader(TABLE_HEADER_TRIM, capture, parse, state);
      var align = parseTableAlign(TABLE_HEADER_TRIM, capture, parse, state);
      var cells = parseTableCells(capture, parse, state);
      state.inline = false;
      return {
        type: "table",
        header: header,
        align: align,
        cells: cells
      };
    };

    var parseNpTable = function parseNpTable(capture, parse, state) {
      state.inline = true;
      var header = parseTableHeader(NPTABLE_ROW_TRIM, capture, parse, state);
      var align = parseTableAlign(NPTABLE_ROW_TRIM, capture, parse, state);
      var cells = parseNpTableCells(capture, parse, state);
      state.inline = false;
      return {
        type: "table",
        header: header,
        align: align,
        cells: cells
      };
    };

    return {
      parseTable: parseTable,
      parseNpTable: parseNpTable,
      NPTABLE_REGEX: /^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/
    };
  }();

  var LINK_INSIDE = "(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*";
  var LINK_HREF_AND_TITLE = "\\s*<?((?:[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*";
  var AUTOLINK_MAILTO_CHECK_R = /mailto:/i;

  var parseRef = function parseRef(capture, state, refNode
  /* : RefNode */
  ) {
    var ref = (capture[2] || capture[1]).replace(/\s+/g, ' ').toLowerCase(); // We store information about previously seen defs on
    // state._defs (_ to deconflict with client-defined
    // state). If the def for this reflink/refimage has
    // already been seen, we can use its target/source
    // and title here:

    if (state._defs && state._defs[ref]) {
      var def = state._defs[ref]; // `refNode` can be a link or an image. Both use
      // target and title properties.

      refNode.target = def.target;
      refNode.title = def.title;
    } // In case we haven't seen our def yet (or if someone
    // overwrites that def later on), we add this node
    // to the list of ref nodes for that def. Then, when
    // we find the def, we can modify this link/image AST
    // node :).
    // I'm sorry.


    state._refs = state._refs || {};
    state._refs[ref] = state._refs[ref] || [];

    state._refs[ref].push(refNode);

    return refNode;
  };

  var currOrder = 0;
  var defaultRules
  /* : DefaultRules */
  = {
    Array: {
      react: function react(arr, output, state) {
        var oldKey = state.key;
        var result
        /* : Array<ReactElements> */
        = []; // map output over the ast, except group any text
        // nodes together into a single string output.

        for (var i = 0, key = 0; i < arr.length; i++, key++) {
          // `key` is our numerical `state.key`, which we increment for
          // every output node, but don't change for joined text nodes.
          // (i, however, must change for joined text nodes)
          state.key = '' + i;
          var node = arr[i];

          if (node.type === 'text') {
            node = {
              type: 'text',
              content: node.content
            };

            for (; i + 1 < arr.length && arr[i + 1].type === 'text'; i++) {
              node.content += arr[i + 1].content;
            }
          }

          result.push(output(node, state));
        }

        state.key = oldKey;
        return result;
      },
      html: function html(arr, output, state) {
        var result = ""; // map output over the ast, except group any text
        // nodes together into a single string output.

        for (var i = 0, key = 0; i < arr.length; i++) {
          var node = arr[i];

          if (node.type === 'text') {
            node = {
              type: 'text',
              content: node.content
            };

            for (; i + 1 < arr.length && arr[i + 1].type === 'text'; i++) {
              node.content += arr[i + 1].content;
            }
          }

          result += output(node, state);
        }

        return result;
      }
    },
    heading: {
      order: currOrder++,
      match: blockRegex(/^ *(#{1,6}) *([^\n]+?) *#* *(?:\n *)+\n/),
      parse: function parse(capture, _parse, state) {
        return {
          level: capture[1].length,
          content: parseInline(_parse, capture[2], state)
        };
      },
      react: function react(node, output, state) {
        return reactElement('h' + node.level, state.key, {
          children: output(node.content, state)
        });
      },
      html: function html(node, output, state) {
        return htmlTag("h" + node.level, output(node.content, state));
      }
    },
    nptable: {
      order: currOrder++,
      match: blockRegex(TABLES.NPTABLE_REGEX),
      parse: TABLES.parseNpTable,
      react: null,
      html: null
    },
    lheading: {
      order: currOrder++,
      match: blockRegex(/^([^\n]+)\n *(=|-){3,} *(?:\n *)+\n/),
      parse: function parse(capture, _parse2, state) {
        return {
          type: "heading",
          level: capture[2] === '=' ? 1 : 2,
          content: parseInline(_parse2, capture[1], state)
        };
      },
      react: null,
      html: null
    },
    hr: {
      order: currOrder++,
      match: blockRegex(/^( *[-*_]){3,} *(?:\n *)+\n/),
      parse: ignoreCapture,
      react: function react(node, output, state) {
        return reactElement('hr', state.key, EMPTY_PROPS);
      },
      html: function html(node, output, state) {
        return "<hr>";
      }
    },
    codeBlock: {
      order: currOrder++,
      match: blockRegex(/^(?:    [^\n]+\n*)+(?:\n *)+\n/),
      parse: function parse(capture, _parse3, state) {
        var content = capture[0].replace(/^    /gm, '').replace(/\n+$/, '');
        return {
          lang: undefined,
          content: content
        };
      },
      react: function react(node, output, state) {
        var className = node.lang ? "markdown-code-" + node.lang : undefined;
        return reactElement('pre', state.key, {
          children: reactElement('code', null, {
            className: className,
            children: node.content
          })
        });
      },
      html: function html(node, output, state) {
        var className = node.lang ? "markdown-code-" + node.lang : undefined;
        var codeBlock = htmlTag("code", sanitizeText(node.content), {
          class: className
        });
        return htmlTag("pre", codeBlock);
      }
    },
    fence: {
      order: currOrder++,
      match: blockRegex(/^ *(`{3,}|~{3,}) *(\S+)? *\n([\s\S]+?)\s*\1 *(?:\n *)+\n/),
      parse: function parse(capture, _parse4, state) {
        return {
          type: "codeBlock",
          lang: capture[2] || undefined,
          content: capture[3]
        };
      },
      react: null,
      html: null
    },
    blockQuote: {
      order: currOrder++,
      match: blockRegex(/^( *>[^\n]+(\n[^\n]+)*\n*)+\n{2,}/),
      parse: function parse(capture, _parse5, state) {
        var content = capture[0].replace(/^ *> ?/gm, '');
        return {
          content: _parse5(content, state)
        };
      },
      react: function react(node, output, state) {
        return reactElement('blockquote', state.key, {
          children: output(node.content, state)
        });
      },
      html: function html(node, output, state) {
        return htmlTag("blockquote", output(node.content, state));
      }
    },
    list: {
      order: currOrder++,
      match: function match(source, state, prevCapture) {
        // We only want to break into a list if we are at the start of a
        // line. This is to avoid parsing "hi * there" with "* there"
        // becoming a part of a list.
        // You might wonder, "but that's inline, so of course it wouldn't
        // start a list?". You would be correct! Except that some of our
        // lists can be inline, because they might be inside another list,
        // in which case we can parse with inline scope, but need to allow
        // nested lists inside this inline scope.
        var isStartOfLineCapture = LIST_LOOKBEHIND_R.exec(prevCapture);
        var isListBlock = state._list || !state.inline;

        if (isStartOfLineCapture && isListBlock) {
          source = isStartOfLineCapture[1] + source;
          var res = LIST_R.exec(source);
          return LIST_R.exec(source);
        } else {
          return null;
        }
      },
      parse: function parse(capture, _parse6, state) {
        var bullet = capture[2];
        var ordered = bullet.length > 1;
        var start = ordered ? +bullet : undefined;
        var items = capture[0].replace(LIST_BLOCK_END_R, "\n").match(LIST_ITEM_R); // We know this will match here, because of how the regexes are
        // defined

        /*:: items = ((items : any) : Array<string>) */

        var lastItemWasAParagraph = false;
        var itemContent = items.map(function (item, i) {
          // We need to see how far indented this item is:
          var prefixCapture = LIST_ITEM_PREFIX_R.exec(item);
          var space = prefixCapture ? prefixCapture[0].length : 0; // And then we construct a regex to "unindent" the subsequent
          // lines of the items by that amount:

          var spaceRegex = new RegExp("^ {1," + space + "}", "gm"); // Before processing the item, we need a couple things

          var content = item // remove indents on trailing lines:
          .replace(spaceRegex, '') // remove the bullet:
          .replace(LIST_ITEM_PREFIX_R, ''); // I'm not sur4 why this is necessary again?

          /*:: items = ((items : any) : Array<string>) */
          // Handling "loose" lists, like:
          //
          //  * this is wrapped in a paragraph
          //
          //  * as is this
          //
          //  * as is this

          var isLastItem = i === items.length - 1;
          var containsBlocks = content.indexOf("\n\n") !== -1; // Any element in a list is a block if it contains multiple
          // newlines. The last element in the list can also be a block
          // if the previous item in the list was a block (this is
          // because non-last items in the list can end with \n\n, but
          // the last item can't, so we just "inherit" this property
          // from our previous element).

          var thisItemIsAParagraph = containsBlocks || isLastItem && lastItemWasAParagraph;
          lastItemWasAParagraph = thisItemIsAParagraph; // backup our state for restoration afterwards. We're going to
          // want to set state._list to true, and state.inline depending
          // on our list's looseness.

          var oldStateInline = state.inline;
          var oldStateList = state._list;
          state._list = true; // Parse inline if we're in a tight list, or block if we're in
          // a loose list.

          var adjustedContent;

          if (thisItemIsAParagraph) {
            state.inline = false;
            adjustedContent = content.replace(LIST_ITEM_END_R, "\n\n");
          } else {
            state.inline = true;
            adjustedContent = content.replace(LIST_ITEM_END_R, "");
          }

          var result = _parse6(adjustedContent, state); // Restore our state before returning


          state.inline = oldStateInline;
          state._list = oldStateList;
          return result;
        });
        return {
          ordered: ordered,
          start: start,
          items: itemContent
        };
      },
      react: function react(node, output, state) {
        var ListWrapper = node.ordered ? "ol" : "ul";
        return reactElement(ListWrapper, state.key, {
          start: node.start,
          children: node.items.map(function (item, i) {
            return reactElement('li', '' + i, {
              children: output(item, state)
            });
          })
        });
      },
      html: function html(node, output, state) {
        var listItems = node.items.map(function (item) {
          return htmlTag("li", output(item, state));
        }).join("");
        var listTag = node.ordered ? "ol" : "ul";
        var attributes = {
          start: node.start
        };
        return htmlTag(listTag, listItems, attributes);
      }
    },
    def: {
      order: currOrder++,
      // TODO(aria): This will match without a blank line before the next
      // block element, which is inconsistent with most of the rest of
      // simple-markdown.
      match: blockRegex(/^ *\[([^\]]+)\]: *<?([^\s>]*)>?(?: +["(]([^\n]+)[")])? *\n(?: *\n)*/),
      parse: function parse(capture, _parse7, state) {
        var def = capture[1].replace(/\s+/g, ' ').toLowerCase();
        var target = capture[2];
        var title = capture[3]; // Look for previous links/images using this def
        // If any links/images using this def have already been declared,
        // they will have added themselves to the state._refs[def] list
        // (_ to deconflict with client-defined state). We look through
        // that list of reflinks for this def, and modify those AST nodes
        // with our newly found information now.
        // Sorry :(.

        if (state._refs && state._refs[def]) {
          // `refNode` can be a link or an image
          state._refs[def].forEach(function (refNode) {
            refNode.target = target;
            refNode.title = title;
          });
        } // Add this def to our map of defs for any future links/images
        // In case we haven't found any or all of the refs referring to
        // this def yet, we add our def to the table of known defs, so
        // that future reflinks can modify themselves appropriately with
        // this information.


        state._defs = state._defs || {};
        state._defs[def] = {
          target: target,
          title: title
        }; // return the relevant parsed information
        // for debugging only.

        return {
          def: def,
          target: target,
          title: title
        };
      },
      react: function react() {
        return null;
      },
      html: function html() {
        return "";
      }
    },
    table: {
      order: currOrder++,
      match: blockRegex(/^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/),
      parse: TABLES.parseTable,
      react: function react(node, output, state) {
        var getStyle = function getStyle(colIndex) {
          return node.align[colIndex] == null ? {} : {
            textAlign: node.align[colIndex]
          };
        };

        var headers = node.header.map(function (content, i) {
          return reactElement('th', '' + i, {
            style: getStyle(i),
            scope: 'col',
            children: output(content, state)
          });
        });
        var rows = node.cells.map(function (row, r) {
          return reactElement('tr', '' + r, {
            children: row.map(function (content, c) {
              return reactElement('td', '' + c, {
                style: getStyle(c),
                children: output(content, state)
              });
            })
          });
        });
        return reactElement('table', state.key, {
          children: [reactElement('thead', 'thead', {
            children: reactElement('tr', null, {
              children: headers
            })
          }), reactElement('tbody', 'tbody', {
            children: rows
          })]
        });
      },
      html: function html(node, output, state) {
        var getStyle = function getStyle(colIndex) {
          return node.align[colIndex] == null ? "" : "text-align:" + node.align[colIndex] + ";";
        };

        var headers = node.header.map(function (content, i) {
          return htmlTag("th", output(content, state), {
            style: getStyle(i),
            scope: "col"
          });
        }).join("");
        var rows = node.cells.map(function (row) {
          var cols = row.map(function (content, c) {
            return htmlTag("td", output(content, state), {
              style: getStyle(c)
            });
          }).join("");
          return htmlTag("tr", cols);
        }).join("");
        var thead = htmlTag("thead", htmlTag("tr", headers));
        var tbody = htmlTag("tbody", rows);
        return htmlTag("table", thead + tbody);
      }
    },
    newline: {
      order: currOrder++,
      match: blockRegex(/^(?:\n *)*\n/),
      parse: ignoreCapture,
      react: function react(node, output, state) {
        return "\n";
      },
      html: function html(node, output, state) {
        return "\n";
      }
    },
    paragraph: {
      order: currOrder++,
      match: blockRegex(/^((?:[^\n]|\n(?! *\n))+)(?:\n *)+\n/),
      parse: parseCaptureInline,
      react: function react(node, output, state) {
        return reactElement('div', state.key, {
          className: 'paragraph',
          children: output(node.content, state)
        });
      },
      html: function html(node, output, state) {
        var attributes = {
          class: 'paragraph'
        };
        return htmlTag("div", output(node.content, state), attributes);
      }
    },
    escape: {
      order: currOrder++,
      // We don't allow escaping numbers, letters, or spaces here so that
      // backslashes used in plain text still get rendered. But allowing
      // escaping anything else provides a very flexible escape mechanism,
      // regardless of how this grammar is extended.
      match: inlineRegex(/^\\([^0-9A-Za-z\s])/),
      parse: function parse(capture, _parse8, state) {
        return {
          type: "text",
          content: capture[1]
        };
      },
      react: null,
      html: null
    },
    autolink: {
      order: currOrder++,
      match: inlineRegex(/^<([^ >]+:\/[^ >]+)>/),
      parse: function parse(capture, _parse9, state) {
        return {
          type: "link",
          content: [{
            type: "text",
            content: capture[1]
          }],
          target: capture[1]
        };
      },
      react: null,
      html: null
    },
    mailto: {
      order: currOrder++,
      match: inlineRegex(/^<([^ >]+@[^ >]+)>/),
      parse: function parse(capture, _parse10, state) {
        var address = capture[1];
        var target = capture[1]; // Check for a `mailto:` already existing in the link:

        if (!AUTOLINK_MAILTO_CHECK_R.test(target)) {
          target = "mailto:" + target;
        }

        return {
          type: "link",
          content: [{
            type: "text",
            content: address
          }],
          target: target
        };
      },
      react: null,
      html: null
    },
    url: {
      order: currOrder++,
      match: inlineRegex(/^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/),
      parse: function parse(capture, _parse11, state) {
        return {
          type: "link",
          content: [{
            type: "text",
            content: capture[1]
          }],
          target: capture[1],
          title: undefined
        };
      },
      react: null,
      html: null
    },
    link: {
      order: currOrder++,
      match: inlineRegex(new RegExp("^\\[(" + LINK_INSIDE + ")\\]\\(" + LINK_HREF_AND_TITLE + "\\)")),
      parse: function parse(capture, _parse12, state) {
        var link = {
          content: _parse12(capture[1], state),
          target: unescapeUrl(capture[2]),
          title: capture[3]
        };
        return link;
      },
      react: function react(node, output, state) {
        return reactElement('a', state.key, {
          href: sanitizeUrl(node.target),
          title: node.title,
          children: output(node.content, state)
        });
      },
      html: function html(node, output, state) {
        var attributes = {
          href: sanitizeUrl(node.target),
          title: node.title
        };
        return htmlTag("a", output(node.content, state), attributes);
      }
    },
    image: {
      order: currOrder++,
      match: inlineRegex(new RegExp("^!\\[(" + LINK_INSIDE + ")\\]\\(" + LINK_HREF_AND_TITLE + "\\)")),
      parse: function parse(capture, _parse13, state) {
        var image = {
          alt: capture[1],
          target: unescapeUrl(capture[2]),
          title: capture[3]
        };
        return image;
      },
      react: function react(node, output, state) {
        return reactElement('img', state.key, {
          src: sanitizeUrl(node.target),
          alt: node.alt,
          title: node.title
        });
      },
      html: function html(node, output, state) {
        var attributes = {
          src: sanitizeUrl(node.target),
          alt: node.alt,
          title: node.title
        };
        return htmlTag("img", "", attributes, false);
      }
    },
    reflink: {
      order: currOrder++,
      match: inlineRegex(new RegExp( // The first [part] of the link
      "^\\[(" + LINK_INSIDE + ")\\]" + // The [ref] target of the link
      "\\s*\\[([^\\]]*)\\]")),
      parse: function parse(capture, _parse14, state) {
        return parseRef(capture, state, {
          type: "link",
          content: _parse14(capture[1], state)
        });
      },
      react: null,
      html: null
    },
    refimage: {
      order: currOrder++,
      match: inlineRegex(new RegExp( // The first [part] of the link
      "^!\\[(" + LINK_INSIDE + ")\\]" + // The [ref] target of the link
      "\\s*\\[([^\\]]*)\\]")),
      parse: function parse(capture, _parse15, state) {
        return parseRef(capture, state, {
          type: "image",
          alt: capture[1]
        });
      },
      react: null,
      html: null
    },
    em: {
      order: currOrder
      /* same as strong/u */
      ,
      match: inlineRegex(new RegExp( // only match _s surrounding words.
      "^\\b_" + "((?:__|\\\\[\\s\\S]|[^\\\\_])+?)_" + "\\b" + // Or match *s:
      "|" + // Only match *s that are followed by a non-space:
      "^\\*(?=\\S)(" + // Match at least one of:
      "(?:" + //  - `**`: so that bolds inside italics don't close the
      //          italics
      "\\*\\*|" + //  - escape sequence: so escaped *s don't close us
      "\\\\[\\s\\S]|" + //  - whitespace: followed by a non-* (we don't
      //          want ' *' to close an italics--it might
      //          start a list)
      "\\s+(?:\\\\[\\s\\S]|[^\\s\\*\\\\]|\\*\\*)|" + //  - non-whitespace, non-*, non-backslash characters
      "[^\\s\\*\\\\]" + ")+?" + // followed by a non-space, non-* then *
      ")\\*(?!\\*)")),
      quality: function quality(capture) {
        // precedence by length, `em` wins ties:
        return capture[0].length + 0.2;
      },
      parse: function parse(capture, _parse16, state) {
        return {
          content: _parse16(capture[2] || capture[1], state)
        };
      },
      react: function react(node, output, state) {
        return reactElement('em', state.key, {
          children: output(node.content, state)
        });
      },
      html: function html(node, output, state) {
        return htmlTag("em", output(node.content, state));
      }
    },
    strong: {
      order: currOrder
      /* same as em */
      ,
      match: inlineRegex(/^\*\*((?:\\[\s\S]|[^\\])+?)\*\*(?!\*)/),
      quality: function quality(capture) {
        // precedence by length, wins ties vs `u`:
        return capture[0].length + 0.1;
      },
      parse: parseCaptureInline,
      react: function react(node, output, state) {
        return reactElement('strong', state.key, {
          children: output(node.content, state)
        });
      },
      html: function html(node, output, state) {
        return htmlTag("strong", output(node.content, state));
      }
    },
    u: {
      order: currOrder++
      /* same as em&strong; increment for next rule */
      ,
      match: inlineRegex(/^__((?:\\[\s\S]|[^\\])+?)__(?!_)/),
      quality: function quality(capture) {
        // precedence by length, loses all ties
        return capture[0].length;
      },
      parse: parseCaptureInline,
      react: function react(node, output, state) {
        return reactElement('u', state.key, {
          children: output(node.content, state)
        });
      },
      html: function html(node, output, state) {
        return htmlTag("u", output(node.content, state));
      }
    },
    del: {
      order: currOrder++,
      match: inlineRegex(/^~~(?=\S)((?:\\[\s\S]|~(?!~)|[^\s\\~]|\s+(?!~~))+?)~~/),
      parse: parseCaptureInline,
      react: function react(node, output, state) {
        return reactElement('del', state.key, {
          children: output(node.content, state)
        });
      },
      html: function html(node, output, state) {
        return htmlTag("del", output(node.content, state));
      }
    },
    inlineCode: {
      order: currOrder++,
      match: inlineRegex(/^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/),
      parse: function parse(capture, _parse17, state) {
        return {
          content: capture[2]
        };
      },
      react: function react(node, output, state) {
        return reactElement('code', state.key, {
          children: node.content
        });
      },
      html: function html(node, output, state) {
        return htmlTag("code", sanitizeText(node.content));
      }
    },
    br: {
      order: currOrder++,
      match: anyScopeRegex(/^ {2,}\n/),
      parse: ignoreCapture,
      react: function react(node, output, state) {
        return reactElement('br', state.key, EMPTY_PROPS);
      },
      html: function html(node, output, state) {
        return "<br>";
      }
    },
    text: {
      order: currOrder++,
      // Here we look for anything followed by non-symbols,
      // double newlines, or double-space-newlines
      // We break on any symbol characters so that this grammar
      // is easy to extend without needing to modify this regex
      match: anyScopeRegex(/^[\s\S]+?(?=[^0-9A-Za-z\s\u00c0-\uffff]|\n\n| {2,}\n|\w+:\S|$)/),
      parse: function parse(capture, _parse18, state) {
        return {
          content: capture[0]
        };
      },
      react: function react(node, output, state) {
        return node.content;
      },
      html: function html(node, output, state) {
        return sanitizeText(node.content);
      }
    }
  };

  var ruleOutput = function ruleOutput(
  /* :: <Rule : Object> */
  rules
  /* : OutputRules<Rule> */
  , property
  /* : $Keys<Rule> */
  ) {
    if (!property && typeof console !== "undefined") {
      console.warn("simple-markdown ruleOutput should take 'react' or " + "'html' as the second argument.");
    }

    var nestedRuleOutput
    /* : NodeOutput<any> */
    = function nestedRuleOutput(ast
    /* : SingleASTNode */
    , outputFunc
    /* : NodeOutput<any> */
    , state
    /* : State */
    ) {
      return rules[ast.type][property](ast, outputFunc, state);
    };

    return nestedRuleOutput;
  };

  var reactFor = function reactFor(outputFunc
  /* : ReactNodeOutput */
  )
  /* : ReactOutput */
  {
    var nestedOutput
    /* : ReactOutput */
    = function nestedOutput(ast, state) {
      state = state || {};

      if (Array.isArray(ast)) {
        var oldKey = state.key;
        var result
        /* : Array<ReactElements> */
        = []; // map nestedOutput over the ast, except group any text
        // nodes together into a single string output.

        var lastResult = null;

        for (var i = 0; i < ast.length; i++) {
          state.key = '' + i;
          var nodeOut = nestedOutput(ast[i], state);

          if (typeof nodeOut === "string" && typeof lastResult === "string") {
            lastResult = lastResult + nodeOut;
            result[result.length - 1] = lastResult;
          } else {
            result.push(nodeOut);
            lastResult = nodeOut;
          }
        }

        state.key = oldKey;
        return result;
      } else {
        return outputFunc(ast, nestedOutput, state);
      }
    };

    return nestedOutput;
  };

  var htmlFor = function htmlFor(outputFunc
  /* : HtmlNodeOutput */
  )
  /* : HtmlOutput */
  {
    var nestedOutput
    /* : HtmlOutput */
    = function nestedOutput(ast, state) {
      state = state || {};

      if (Array.isArray(ast)) {
        return ast.map(function (node) {
          return nestedOutput(node, state);
        }).join("");
      } else {
        return outputFunc(ast, nestedOutput, state);
      }
    };

    return nestedOutput;
  };

  var outputFor = function outputFor(
  /* :: <Rule : Object> */
  rules
  /* : OutputRules<Rule> */
  , property
  /* : $Keys<Rule> */
  , defaultState
  /* : ?State */
  ) {
    if (!property) {
      throw new Error('simple-markdown: outputFor: `property` must be ' + 'defined. ' + 'if you just upgraded, you probably need to replace `outputFor` ' + 'with `reactFor`');
    }

    var latestState;
    var arrayRule = rules.Array || defaultRules.Array;

    var nestedOutput
    /* : Output<any> */
    = function nestedOutput(ast, state) {
      state = state || latestState;
      latestState = state;

      if (Array.isArray(ast)) {
        return arrayRule[property](ast, nestedOutput, state);
      } else {
        return rules[ast.type][property](ast, nestedOutput, state);
      }
    };

    var outerOutput = function outerOutput(ast, state) {
      latestState = populateInitialState(state, defaultState);
      return nestedOutput(ast, latestState);
    };

    return outerOutput;
  };

  var defaultRawParse = parserFor(defaultRules);

  var defaultBlockParse = function defaultBlockParse(source, state) {
    state = state || {};
    state.inline = false;
    return defaultRawParse(source, state);
  };

  var defaultInlineParse = function defaultInlineParse(source, state) {
    state = state || {};
    state.inline = true;
    return defaultRawParse(source, state);
  };

  var defaultImplicitParse = function defaultImplicitParse(source, state) {
    var isBlock = BLOCK_END_R.test(source);
    state = state || {};
    state.inline = !isBlock;
    return defaultRawParse(source, state);
  };

  var defaultReactOutput
  /* : ReactOutput */
  = outputFor(defaultRules, "react");
  var defaultHtmlOutput
  /* : HtmlOutput */
  = outputFor(defaultRules, "html");

  var markdownToReact = function markdownToReact(source, state)
  /* : ReactElements */
  {
    return defaultReactOutput(defaultBlockParse(source, state), state);
  };

  var markdownToHtml = function markdownToHtml(source, state)
  /* : string */
  {
    return defaultHtmlOutput(defaultBlockParse(source, state), state);
  };

  var ReactMarkdown = function ReactMarkdown(props) {
    var divProps = {};

    for (var prop in props) {
      if (prop !== 'source' && Object.prototype.hasOwnProperty.call(props, prop)) {
        divProps[prop] = props[prop];
      }
    }

    divProps.children = markdownToReact(props.source);
    return reactElement('div', null, divProps);
  };
  /*:: // Flow exports:
  type Exports = {
      +defaultRules: DefaultRules,
      +parserFor: (rules: ParserRules, defaultState?: ?State) => Parser,
      +outputFor: <Rule : Object>(rules: OutputRules<Rule>, param: $Keys<Rule>, defaultState?: ?State) => Output<any>,
  
      +ruleOutput: <Rule : Object>(rules: OutputRules<Rule>, param: $Keys<Rule>) => NodeOutput<any>,
      +reactFor: (ReactNodeOutput) => ReactOutput,
      +htmlFor: (HtmlNodeOutput) => HtmlOutput,
  
      +inlineRegex: (regex: RegExp) => MatchFunction,
      +blockRegex: (regex: RegExp) => MatchFunction,
      +anyScopeRegex: (regex: RegExp) => MatchFunction,
      +parseInline: (parse: Parser, content: string, state: State) => ASTNode,
      +parseBlock: (parse: Parser, content: string, state: State) => ASTNode,
  
      +markdownToReact: (source: string, state?: ?State) => ReactElements,
      +markdownToHtml: (source: string, state?: ?State) => string,
      +ReactMarkdown: (props: { source: string, [string]: any }) => ReactElement,
  
      +defaultRawParse: (source: string, state?: ?State) => Array<SingleASTNode>,
      +defaultBlockParse: (source: string, state?: ?State) => Array<SingleASTNode>,
      +defaultInlineParse: (source: string, state?: ?State) => Array<SingleASTNode>,
      +defaultImplicitParse: (source: string, state?: ?State) => Array<SingleASTNode>,
  
      +defaultReactOutput: ReactOutput,
      +defaultHtmlOutput: HtmlOutput,
  
      +preprocess: (source: string) => string,
      +sanitizeText: (text: Attr) => string,
      +sanitizeUrl: (url: ?string) => ?string,
      +unescapeUrl: (url: string) => string,
      +htmlTag: (tagName: string, content: string, attributes: ?{[any]: ?Attr}, isClosed: ?boolean) => string,
      +reactElement: (type: string, key: string | null, props: { [string]: any }) => ReactElement,
  };
  
  export type {
      // Hopefully you shouldn't have to use these, but they're here if you need!
      // Top-level API:
      State,
      Parser,
      Output,
      ReactOutput,
      HtmlOutput,
  
      // Most of the following types should be considered experimental and
      // subject to change or change names. Again, they shouldn't be necessary,
      // but if they are I'd love to hear how so I can better support them!
  
      // Individual Rule fields:
      Capture,
      MatchFunction,
      ParseFunction,
      NodeOutput,
      ArrayNodeOutput,
      ReactNodeOutput,
  
      // Single rules:
      ParserRule,
      ReactOutputRule,
      HtmlOutputRule,
  
      // Sets of rules:
      ParserRules,
      OutputRules,
      Rules,
      ReactRules,
      HtmlRules,
  };
  */


  var SimpleMarkdown
  /* : Exports */
  = {
    defaultRules: defaultRules,
    parserFor: parserFor,
    outputFor: outputFor,
    inlineRegex: inlineRegex,
    blockRegex: blockRegex,
    anyScopeRegex: anyScopeRegex,
    parseInline: parseInline,
    parseBlock: parseBlock,
    // default wrappers:
    markdownToReact: markdownToReact,
    markdownToHtml: markdownToHtml,
    ReactMarkdown: ReactMarkdown,
    defaultBlockParse: defaultBlockParse,
    defaultInlineParse: defaultInlineParse,
    defaultImplicitParse: defaultImplicitParse,
    defaultReactOutput: defaultReactOutput,
    defaultHtmlOutput: defaultHtmlOutput,
    preprocess: preprocess,
    sanitizeText: sanitizeText,
    sanitizeUrl: sanitizeUrl,
    unescapeUrl: unescapeUrl,
    htmlTag: htmlTag,
    reactElement: reactElement,
    // deprecated:
    defaultRawParse: defaultRawParse,
    ruleOutput: ruleOutput,
    reactFor: reactFor,
    htmlFor: htmlFor,
    defaultParse: function defaultParse() {
      if (typeof console !== 'undefined') {
        console.warn('defaultParse is deprecated, please use `defaultImplicitParse`');
      }

      return defaultImplicitParse.apply(null, arguments);
    },
    defaultOutput: function defaultOutput() {
      if (typeof console !== 'undefined') {
        console.warn('defaultOutput is deprecated, please use `defaultReactOutput`');
      }

      return defaultReactOutput.apply(null, arguments);
    }
  };

  if ( true && module.exports) {
    module.exports = SimpleMarkdown;
  } else if (typeof global !== "undefined") {
    global.SimpleMarkdown = SimpleMarkdown;
  } else {
    window.SimpleMarkdown = SimpleMarkdown;
  }
  /*:: module.exports = SimpleMarkdown; */
  // Close the IIFE

  /*:: (function() { */

})();
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6)))

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.9.1
//     http://underscorejs.org
//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function () {
  // Baseline setup
  // --------------
  // Establish the root object, `window` (`self`) in the browser, `global`
  // on the server, or `this` in some virtual machines. We use `self`
  // instead of `window` for `WebWorker` support.
  var root = typeof self == 'object' && self.self === self && self || typeof global == 'object' && global.global === global && global || this || {}; // Save the previous value of the `_` variable.

  var previousUnderscore = root._; // Save bytes in the minified (but not gzipped) version:

  var ArrayProto = Array.prototype,
      ObjProto = Object.prototype;
  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null; // Create quick reference variables for speed access to core prototypes.

  var push = ArrayProto.push,
      slice = ArrayProto.slice,
      toString = ObjProto.toString,
      hasOwnProperty = ObjProto.hasOwnProperty; // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.

  var nativeIsArray = Array.isArray,
      nativeKeys = Object.keys,
      nativeCreate = Object.create; // Naked function reference for surrogate-prototype-swapping.

  var Ctor = function Ctor() {}; // Create a safe reference to the Underscore object for use below.


  var _ = function _(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  }; // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for their old module API. If we're in
  // the browser, add `_` as a global object.
  // (`nodeType` is checked to ensure that `module`
  // and `exports` are not HTML elements.)


  if ( true && !exports.nodeType) {
    if ( true && !module.nodeType && module.exports) {
      exports = module.exports = _;
    }

    exports._ = _;
  } else {
    root._ = _;
  } // Current version.


  _.VERSION = '1.9.1'; // Internal function that returns an efficient (for current engines) version
  // of the passed-in callback, to be repeatedly applied in other Underscore
  // functions.

  var optimizeCb = function optimizeCb(func, context, argCount) {
    if (context === void 0) return func;

    switch (argCount == null ? 3 : argCount) {
      case 1:
        return function (value) {
          return func.call(context, value);
        };
      // The 2-argument case is omitted because we’re not using it.

      case 3:
        return function (value, index, collection) {
          return func.call(context, value, index, collection);
        };

      case 4:
        return function (accumulator, value, index, collection) {
          return func.call(context, accumulator, value, index, collection);
        };
    }

    return function () {
      return func.apply(context, arguments);
    };
  };

  var builtinIteratee; // An internal function to generate callbacks that can be applied to each
  // element in a collection, returning the desired result — either `identity`,
  // an arbitrary callback, a property matcher, or a property accessor.

  var cb = function cb(value, context, argCount) {
    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);
    if (value == null) return _.identity;
    if (_.isFunction(value)) return optimizeCb(value, context, argCount);
    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);
    return _.property(value);
  }; // External wrapper for our callback generator. Users may customize
  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.
  // This abstraction hides the internal-only argCount argument.


  _.iteratee = builtinIteratee = function builtinIteratee(value, context) {
    return cb(value, context, Infinity);
  }; // Some functions take a variable number of arguments, or a few expected
  // arguments at the beginning and then a variable number of values to operate
  // on. This helper accumulates all remaining arguments past the function’s
  // argument length (or an explicit `startIndex`), into an array that becomes
  // the last argument. Similar to ES6’s "rest parameter".


  var restArguments = function restArguments(func, startIndex) {
    startIndex = startIndex == null ? func.length - 1 : +startIndex;
    return function () {
      var length = Math.max(arguments.length - startIndex, 0),
          rest = Array(length),
          index = 0;

      for (; index < length; index++) {
        rest[index] = arguments[index + startIndex];
      }

      switch (startIndex) {
        case 0:
          return func.call(this, rest);

        case 1:
          return func.call(this, arguments[0], rest);

        case 2:
          return func.call(this, arguments[0], arguments[1], rest);
      }

      var args = Array(startIndex + 1);

      for (index = 0; index < startIndex; index++) {
        args[index] = arguments[index];
      }

      args[startIndex] = rest;
      return func.apply(this, args);
    };
  }; // An internal function for creating a new object that inherits from another.


  var baseCreate = function baseCreate(prototype) {
    if (!_.isObject(prototype)) return {};
    if (nativeCreate) return nativeCreate(prototype);
    Ctor.prototype = prototype;
    var result = new Ctor();
    Ctor.prototype = null;
    return result;
  };

  var shallowProperty = function shallowProperty(key) {
    return function (obj) {
      return obj == null ? void 0 : obj[key];
    };
  };

  var has = function has(obj, path) {
    return obj != null && hasOwnProperty.call(obj, path);
  };

  var deepGet = function deepGet(obj, path) {
    var length = path.length;

    for (var i = 0; i < length; i++) {
      if (obj == null) return void 0;
      obj = obj[path[i]];
    }

    return length ? obj : void 0;
  }; // Helper for collection methods to determine whether a collection
  // should be iterated as an array or as an object.
  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094


  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
  var getLength = shallowProperty('length');

  var isArrayLike = function isArrayLike(collection) {
    var length = getLength(collection);
    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
  }; // Collection Functions
  // --------------------
  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles raw objects in addition to array-likes. Treats all
  // sparse array-likes as if they were dense.


  _.each = _.forEach = function (obj, iteratee, context) {
    iteratee = optimizeCb(iteratee, context);
    var i, length;

    if (isArrayLike(obj)) {
      for (i = 0, length = obj.length; i < length; i++) {
        iteratee(obj[i], i, obj);
      }
    } else {
      var keys = _.keys(obj);

      for (i = 0, length = keys.length; i < length; i++) {
        iteratee(obj[keys[i]], keys[i], obj);
      }
    }

    return obj;
  }; // Return the results of applying the iteratee to each element.


  _.map = _.collect = function (obj, iteratee, context) {
    iteratee = cb(iteratee, context);

    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length,
        results = Array(length);

    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      results[index] = iteratee(obj[currentKey], currentKey, obj);
    }

    return results;
  }; // Create a reducing function iterating left or right.


  var createReduce = function createReduce(dir) {
    // Wrap code that reassigns argument variables in a separate function than
    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)
    var reducer = function reducer(obj, iteratee, memo, initial) {
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length,
          index = dir > 0 ? 0 : length - 1;

      if (!initial) {
        memo = obj[keys ? keys[index] : index];
        index += dir;
      }

      for (; index >= 0 && index < length; index += dir) {
        var currentKey = keys ? keys[index] : index;
        memo = iteratee(memo, obj[currentKey], currentKey, obj);
      }

      return memo;
    };

    return function (obj, iteratee, memo, context) {
      var initial = arguments.length >= 3;
      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);
    };
  }; // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`.


  _.reduce = _.foldl = _.inject = createReduce(1); // The right-associative version of reduce, also known as `foldr`.

  _.reduceRight = _.foldr = createReduce(-1); // Return the first value which passes a truth test. Aliased as `detect`.

  _.find = _.detect = function (obj, predicate, context) {
    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;
    var key = keyFinder(obj, predicate, context);
    if (key !== void 0 && key !== -1) return obj[key];
  }; // Return all the elements that pass a truth test.
  // Aliased as `select`.


  _.filter = _.select = function (obj, predicate, context) {
    var results = [];
    predicate = cb(predicate, context);

    _.each(obj, function (value, index, list) {
      if (predicate(value, index, list)) results.push(value);
    });

    return results;
  }; // Return all the elements for which a truth test fails.


  _.reject = function (obj, predicate, context) {
    return _.filter(obj, _.negate(cb(predicate)), context);
  }; // Determine whether all of the elements match a truth test.
  // Aliased as `all`.


  _.every = _.all = function (obj, predicate, context) {
    predicate = cb(predicate, context);

    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;

    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (!predicate(obj[currentKey], currentKey, obj)) return false;
    }

    return true;
  }; // Determine if at least one element in the object matches a truth test.
  // Aliased as `any`.


  _.some = _.any = function (obj, predicate, context) {
    predicate = cb(predicate, context);

    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;

    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (predicate(obj[currentKey], currentKey, obj)) return true;
    }

    return false;
  }; // Determine if the array or object contains a given item (using `===`).
  // Aliased as `includes` and `include`.


  _.contains = _.includes = _.include = function (obj, item, fromIndex, guard) {
    if (!isArrayLike(obj)) obj = _.values(obj);
    if (typeof fromIndex != 'number' || guard) fromIndex = 0;
    return _.indexOf(obj, item, fromIndex) >= 0;
  }; // Invoke a method (with arguments) on every item in a collection.


  _.invoke = restArguments(function (obj, path, args) {
    var contextPath, func;

    if (_.isFunction(path)) {
      func = path;
    } else if (_.isArray(path)) {
      contextPath = path.slice(0, -1);
      path = path[path.length - 1];
    }

    return _.map(obj, function (context) {
      var method = func;

      if (!method) {
        if (contextPath && contextPath.length) {
          context = deepGet(context, contextPath);
        }

        if (context == null) return void 0;
        method = context[path];
      }

      return method == null ? method : method.apply(context, args);
    });
  }); // Convenience version of a common use case of `map`: fetching a property.

  _.pluck = function (obj, key) {
    return _.map(obj, _.property(key));
  }; // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.


  _.where = function (obj, attrs) {
    return _.filter(obj, _.matcher(attrs));
  }; // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.


  _.findWhere = function (obj, attrs) {
    return _.find(obj, _.matcher(attrs));
  }; // Return the maximum element (or element-based computation).


  _.max = function (obj, iteratee, context) {
    var result = -Infinity,
        lastComputed = -Infinity,
        value,
        computed;

    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);

      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];

        if (value != null && value > result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);

      _.each(obj, function (v, index, list) {
        computed = iteratee(v, index, list);

        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
          result = v;
          lastComputed = computed;
        }
      });
    }

    return result;
  }; // Return the minimum element (or element-based computation).


  _.min = function (obj, iteratee, context) {
    var result = Infinity,
        lastComputed = Infinity,
        value,
        computed;

    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);

      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];

        if (value != null && value < result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);

      _.each(obj, function (v, index, list) {
        computed = iteratee(v, index, list);

        if (computed < lastComputed || computed === Infinity && result === Infinity) {
          result = v;
          lastComputed = computed;
        }
      });
    }

    return result;
  }; // Shuffle a collection.


  _.shuffle = function (obj) {
    return _.sample(obj, Infinity);
  }; // Sample **n** random values from a collection using the modern version of the
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
  // If **n** is not specified, returns a single random element.
  // The internal `guard` argument allows it to work with `map`.


  _.sample = function (obj, n, guard) {
    if (n == null || guard) {
      if (!isArrayLike(obj)) obj = _.values(obj);
      return obj[_.random(obj.length - 1)];
    }

    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);
    var length = getLength(sample);
    n = Math.max(Math.min(n, length), 0);
    var last = length - 1;

    for (var index = 0; index < n; index++) {
      var rand = _.random(index, last);

      var temp = sample[index];
      sample[index] = sample[rand];
      sample[rand] = temp;
    }

    return sample.slice(0, n);
  }; // Sort the object's values by a criterion produced by an iteratee.


  _.sortBy = function (obj, iteratee, context) {
    var index = 0;
    iteratee = cb(iteratee, context);
    return _.pluck(_.map(obj, function (value, key, list) {
      return {
        value: value,
        index: index++,
        criteria: iteratee(value, key, list)
      };
    }).sort(function (left, right) {
      var a = left.criteria;
      var b = right.criteria;

      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }

      return left.index - right.index;
    }), 'value');
  }; // An internal function used for aggregate "group by" operations.


  var group = function group(behavior, partition) {
    return function (obj, iteratee, context) {
      var result = partition ? [[], []] : {};
      iteratee = cb(iteratee, context);

      _.each(obj, function (value, index) {
        var key = iteratee(value, index, obj);
        behavior(result, value, key);
      });

      return result;
    };
  }; // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.


  _.groupBy = group(function (result, value, key) {
    if (has(result, key)) result[key].push(value);else result[key] = [value];
  }); // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.

  _.indexBy = group(function (result, value, key) {
    result[key] = value;
  }); // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.

  _.countBy = group(function (result, value, key) {
    if (has(result, key)) result[key]++;else result[key] = 1;
  });
  var reStrSymbol = /[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g; // Safely create a real, live array from anything iterable.

  _.toArray = function (obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);

    if (_.isString(obj)) {
      // Keep surrogate pair characters together
      return obj.match(reStrSymbol);
    }

    if (isArrayLike(obj)) return _.map(obj, _.identity);
    return _.values(obj);
  }; // Return the number of elements in an object.


  _.size = function (obj) {
    if (obj == null) return 0;
    return isArrayLike(obj) ? obj.length : _.keys(obj).length;
  }; // Split a collection into two arrays: one whose elements all satisfy the given
  // predicate, and one whose elements all do not satisfy the predicate.


  _.partition = group(function (result, value, pass) {
    result[pass ? 0 : 1].push(value);
  }, true); // Array Functions
  // ---------------
  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.

  _.first = _.head = _.take = function (array, n, guard) {
    if (array == null || array.length < 1) return n == null ? void 0 : [];
    if (n == null || guard) return array[0];
    return _.initial(array, array.length - n);
  }; // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N.


  _.initial = function (array, n, guard) {
    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
  }; // Get the last element of an array. Passing **n** will return the last N
  // values in the array.


  _.last = function (array, n, guard) {
    if (array == null || array.length < 1) return n == null ? void 0 : [];
    if (n == null || guard) return array[array.length - 1];
    return _.rest(array, Math.max(0, array.length - n));
  }; // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array.


  _.rest = _.tail = _.drop = function (array, n, guard) {
    return slice.call(array, n == null || guard ? 1 : n);
  }; // Trim out all falsy values from an array.


  _.compact = function (array) {
    return _.filter(array, Boolean);
  }; // Internal implementation of a recursive `flatten` function.


  var flatten = function flatten(input, shallow, strict, output) {
    output = output || [];
    var idx = output.length;

    for (var i = 0, length = getLength(input); i < length; i++) {
      var value = input[i];

      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
        // Flatten current level of array or arguments object.
        if (shallow) {
          var j = 0,
              len = value.length;

          while (j < len) {
            output[idx++] = value[j++];
          }
        } else {
          flatten(value, shallow, strict, output);
          idx = output.length;
        }
      } else if (!strict) {
        output[idx++] = value;
      }
    }

    return output;
  }; // Flatten out an array, either recursively (by default), or just one level.


  _.flatten = function (array, shallow) {
    return flatten(array, shallow, false);
  }; // Return a version of the array that does not contain the specified value(s).


  _.without = restArguments(function (array, otherArrays) {
    return _.difference(array, otherArrays);
  }); // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // The faster algorithm will not work with an iteratee if the iteratee
  // is not a one-to-one function, so providing an iteratee will disable
  // the faster algorithm.
  // Aliased as `unique`.

  _.uniq = _.unique = function (array, isSorted, iteratee, context) {
    if (!_.isBoolean(isSorted)) {
      context = iteratee;
      iteratee = isSorted;
      isSorted = false;
    }

    if (iteratee != null) iteratee = cb(iteratee, context);
    var result = [];
    var seen = [];

    for (var i = 0, length = getLength(array); i < length; i++) {
      var value = array[i],
          computed = iteratee ? iteratee(value, i, array) : value;

      if (isSorted && !iteratee) {
        if (!i || seen !== computed) result.push(value);
        seen = computed;
      } else if (iteratee) {
        if (!_.contains(seen, computed)) {
          seen.push(computed);
          result.push(value);
        }
      } else if (!_.contains(result, value)) {
        result.push(value);
      }
    }

    return result;
  }; // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.


  _.union = restArguments(function (arrays) {
    return _.uniq(flatten(arrays, true, true));
  }); // Produce an array that contains every item shared between all the
  // passed-in arrays.

  _.intersection = function (array) {
    var result = [];
    var argsLength = arguments.length;

    for (var i = 0, length = getLength(array); i < length; i++) {
      var item = array[i];
      if (_.contains(result, item)) continue;
      var j;

      for (j = 1; j < argsLength; j++) {
        if (!_.contains(arguments[j], item)) break;
      }

      if (j === argsLength) result.push(item);
    }

    return result;
  }; // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.


  _.difference = restArguments(function (array, rest) {
    rest = flatten(rest, true, true);
    return _.filter(array, function (value) {
      return !_.contains(rest, value);
    });
  }); // Complement of _.zip. Unzip accepts an array of arrays and groups
  // each array's elements on shared indices.

  _.unzip = function (array) {
    var length = array && _.max(array, getLength).length || 0;
    var result = Array(length);

    for (var index = 0; index < length; index++) {
      result[index] = _.pluck(array, index);
    }

    return result;
  }; // Zip together multiple lists into a single array -- elements that share
  // an index go together.


  _.zip = restArguments(_.unzip); // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values. Passing by pairs is the reverse of _.pairs.

  _.object = function (list, values) {
    var result = {};

    for (var i = 0, length = getLength(list); i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }

    return result;
  }; // Generator function to create the findIndex and findLastIndex functions.


  var createPredicateIndexFinder = function createPredicateIndexFinder(dir) {
    return function (array, predicate, context) {
      predicate = cb(predicate, context);
      var length = getLength(array);
      var index = dir > 0 ? 0 : length - 1;

      for (; index >= 0 && index < length; index += dir) {
        if (predicate(array[index], index, array)) return index;
      }

      return -1;
    };
  }; // Returns the first index on an array-like that passes a predicate test.


  _.findIndex = createPredicateIndexFinder(1);
  _.findLastIndex = createPredicateIndexFinder(-1); // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.

  _.sortedIndex = function (array, obj, iteratee, context) {
    iteratee = cb(iteratee, context, 1);
    var value = iteratee(obj);
    var low = 0,
        high = getLength(array);

    while (low < high) {
      var mid = Math.floor((low + high) / 2);
      if (iteratee(array[mid]) < value) low = mid + 1;else high = mid;
    }

    return low;
  }; // Generator function to create the indexOf and lastIndexOf functions.


  var createIndexFinder = function createIndexFinder(dir, predicateFind, sortedIndex) {
    return function (array, item, idx) {
      var i = 0,
          length = getLength(array);

      if (typeof idx == 'number') {
        if (dir > 0) {
          i = idx >= 0 ? idx : Math.max(idx + length, i);
        } else {
          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
        }
      } else if (sortedIndex && idx && length) {
        idx = sortedIndex(array, item);
        return array[idx] === item ? idx : -1;
      }

      if (item !== item) {
        idx = predicateFind(slice.call(array, i, length), _.isNaN);
        return idx >= 0 ? idx + i : -1;
      }

      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
        if (array[idx] === item) return idx;
      }

      return -1;
    };
  }; // Return the position of the first occurrence of an item in an array,
  // or -1 if the item is not included in the array.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.


  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex); // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).

  _.range = function (start, stop, step) {
    if (stop == null) {
      stop = start || 0;
      start = 0;
    }

    if (!step) {
      step = stop < start ? -1 : 1;
    }

    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var range = Array(length);

    for (var idx = 0; idx < length; idx++, start += step) {
      range[idx] = start;
    }

    return range;
  }; // Chunk a single array into multiple arrays, each containing `count` or fewer
  // items.


  _.chunk = function (array, count) {
    if (count == null || count < 1) return [];
    var result = [];
    var i = 0,
        length = array.length;

    while (i < length) {
      result.push(slice.call(array, i, i += count));
    }

    return result;
  }; // Function (ahem) Functions
  // ------------------
  // Determines whether to execute a function as a constructor
  // or a normal function with the provided arguments.


  var executeBound = function executeBound(sourceFunc, boundFunc, context, callingContext, args) {
    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
    var self = baseCreate(sourceFunc.prototype);
    var result = sourceFunc.apply(self, args);
    if (_.isObject(result)) return result;
    return self;
  }; // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.


  _.bind = restArguments(function (func, context, args) {
    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
    var bound = restArguments(function (callArgs) {
      return executeBound(func, bound, context, this, args.concat(callArgs));
    });
    return bound;
  }); // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context. _ acts
  // as a placeholder by default, allowing any combination of arguments to be
  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.

  _.partial = restArguments(function (func, boundArgs) {
    var placeholder = _.partial.placeholder;

    var bound = function bound() {
      var position = 0,
          length = boundArgs.length;
      var args = Array(length);

      for (var i = 0; i < length; i++) {
        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];
      }

      while (position < arguments.length) {
        args.push(arguments[position++]);
      }

      return executeBound(func, bound, this, this, args);
    };

    return bound;
  });
  _.partial.placeholder = _; // Bind a number of an object's methods to that object. Remaining arguments
  // are the method names to be bound. Useful for ensuring that all callbacks
  // defined on an object belong to it.

  _.bindAll = restArguments(function (obj, keys) {
    keys = flatten(keys, false, false);
    var index = keys.length;
    if (index < 1) throw new Error('bindAll must be passed function names');

    while (index--) {
      var key = keys[index];
      obj[key] = _.bind(obj[key], obj);
    }
  }); // Memoize an expensive function by storing its results.

  _.memoize = function (func, hasher) {
    var memoize = function memoize(key) {
      var cache = memoize.cache;
      var address = '' + (hasher ? hasher.apply(this, arguments) : key);
      if (!has(cache, address)) cache[address] = func.apply(this, arguments);
      return cache[address];
    };

    memoize.cache = {};
    return memoize;
  }; // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.


  _.delay = restArguments(function (func, wait, args) {
    return setTimeout(function () {
      return func.apply(null, args);
    }, wait);
  }); // Defers a function, scheduling it to run after the current call stack has
  // cleared.

  _.defer = _.partial(_.delay, _, 1); // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.

  _.throttle = function (func, wait, options) {
    var timeout, context, args, result;
    var previous = 0;
    if (!options) options = {};

    var later = function later() {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    };

    var throttled = function throttled() {
      var now = _.now();

      if (!previous && options.leading === false) previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;

      if (remaining <= 0 || remaining > wait) {
        if (timeout) {
          clearTimeout(timeout);
          timeout = null;
        }

        previous = now;
        result = func.apply(context, args);
        if (!timeout) context = args = null;
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }

      return result;
    };

    throttled.cancel = function () {
      clearTimeout(timeout);
      previous = 0;
      timeout = context = args = null;
    };

    return throttled;
  }; // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.


  _.debounce = function (func, wait, immediate) {
    var timeout, result;

    var later = function later(context, args) {
      timeout = null;
      if (args) result = func.apply(context, args);
    };

    var debounced = restArguments(function (args) {
      if (timeout) clearTimeout(timeout);

      if (immediate) {
        var callNow = !timeout;
        timeout = setTimeout(later, wait);
        if (callNow) result = func.apply(this, args);
      } else {
        timeout = _.delay(later, wait, this, args);
      }

      return result;
    });

    debounced.cancel = function () {
      clearTimeout(timeout);
      timeout = null;
    };

    return debounced;
  }; // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.


  _.wrap = function (func, wrapper) {
    return _.partial(wrapper, func);
  }; // Returns a negated version of the passed-in predicate.


  _.negate = function (predicate) {
    return function () {
      return !predicate.apply(this, arguments);
    };
  }; // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.


  _.compose = function () {
    var args = arguments;
    var start = args.length - 1;
    return function () {
      var i = start;
      var result = args[start].apply(this, arguments);

      while (i--) {
        result = args[i].call(this, result);
      }

      return result;
    };
  }; // Returns a function that will only be executed on and after the Nth call.


  _.after = function (times, func) {
    return function () {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  }; // Returns a function that will only be executed up to (but not including) the Nth call.


  _.before = function (times, func) {
    var memo;
    return function () {
      if (--times > 0) {
        memo = func.apply(this, arguments);
      }

      if (times <= 1) func = null;
      return memo;
    };
  }; // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.


  _.once = _.partial(_.before, 2);
  _.restArguments = restArguments; // Object Functions
  // ----------------
  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.

  var hasEnumBug = !{
    toString: null
  }.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  var collectNonEnumProps = function collectNonEnumProps(obj, keys) {
    var nonEnumIdx = nonEnumerableProps.length;
    var constructor = obj.constructor;
    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto; // Constructor is a special case.

    var prop = 'constructor';
    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);

    while (nonEnumIdx--) {
      prop = nonEnumerableProps[nonEnumIdx];

      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
        keys.push(prop);
      }
    }
  }; // Retrieve the names of an object's own properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`.


  _.keys = function (obj) {
    if (!_.isObject(obj)) return [];
    if (nativeKeys) return nativeKeys(obj);
    var keys = [];

    for (var key in obj) {
      if (has(obj, key)) keys.push(key);
    } // Ahem, IE < 9.


    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  }; // Retrieve all the property names of an object.


  _.allKeys = function (obj) {
    if (!_.isObject(obj)) return [];
    var keys = [];

    for (var key in obj) {
      keys.push(key);
    } // Ahem, IE < 9.


    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  }; // Retrieve the values of an object's properties.


  _.values = function (obj) {
    var keys = _.keys(obj);

    var length = keys.length;
    var values = Array(length);

    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }

    return values;
  }; // Returns the results of applying the iteratee to each element of the object.
  // In contrast to _.map it returns an object.


  _.mapObject = function (obj, iteratee, context) {
    iteratee = cb(iteratee, context);

    var keys = _.keys(obj),
        length = keys.length,
        results = {};

    for (var index = 0; index < length; index++) {
      var currentKey = keys[index];
      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
    }

    return results;
  }; // Convert an object into a list of `[key, value]` pairs.
  // The opposite of _.object.


  _.pairs = function (obj) {
    var keys = _.keys(obj);

    var length = keys.length;
    var pairs = Array(length);

    for (var i = 0; i < length; i++) {
      pairs[i] = [keys[i], obj[keys[i]]];
    }

    return pairs;
  }; // Invert the keys and values of an object. The values must be serializable.


  _.invert = function (obj) {
    var result = {};

    var keys = _.keys(obj);

    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }

    return result;
  }; // Return a sorted list of the function names available on the object.
  // Aliased as `methods`.


  _.functions = _.methods = function (obj) {
    var names = [];

    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }

    return names.sort();
  }; // An internal function for creating assigner functions.


  var createAssigner = function createAssigner(keysFunc, defaults) {
    return function (obj) {
      var length = arguments.length;
      if (defaults) obj = Object(obj);
      if (length < 2 || obj == null) return obj;

      for (var index = 1; index < length; index++) {
        var source = arguments[index],
            keys = keysFunc(source),
            l = keys.length;

        for (var i = 0; i < l; i++) {
          var key = keys[i];
          if (!defaults || obj[key] === void 0) obj[key] = source[key];
        }
      }

      return obj;
    };
  }; // Extend a given object with all the properties in passed-in object(s).


  _.extend = createAssigner(_.allKeys); // Assigns a given object with all the own properties in the passed-in object(s).
  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)

  _.extendOwn = _.assign = createAssigner(_.keys); // Returns the first key on an object that passes a predicate test.

  _.findKey = function (obj, predicate, context) {
    predicate = cb(predicate, context);

    var keys = _.keys(obj),
        key;

    for (var i = 0, length = keys.length; i < length; i++) {
      key = keys[i];
      if (predicate(obj[key], key, obj)) return key;
    }
  }; // Internal pick helper function to determine if `obj` has key `key`.


  var keyInObj = function keyInObj(value, key, obj) {
    return key in obj;
  }; // Return a copy of the object only containing the whitelisted properties.


  _.pick = restArguments(function (obj, keys) {
    var result = {},
        iteratee = keys[0];
    if (obj == null) return result;

    if (_.isFunction(iteratee)) {
      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);
      keys = _.allKeys(obj);
    } else {
      iteratee = keyInObj;
      keys = flatten(keys, false, false);
      obj = Object(obj);
    }

    for (var i = 0, length = keys.length; i < length; i++) {
      var key = keys[i];
      var value = obj[key];
      if (iteratee(value, key, obj)) result[key] = value;
    }

    return result;
  }); // Return a copy of the object without the blacklisted properties.

  _.omit = restArguments(function (obj, keys) {
    var iteratee = keys[0],
        context;

    if (_.isFunction(iteratee)) {
      iteratee = _.negate(iteratee);
      if (keys.length > 1) context = keys[1];
    } else {
      keys = _.map(flatten(keys, false, false), String);

      iteratee = function iteratee(value, key) {
        return !_.contains(keys, key);
      };
    }

    return _.pick(obj, iteratee, context);
  }); // Fill in a given object with default properties.

  _.defaults = createAssigner(_.allKeys, true); // Creates an object that inherits from the given prototype object.
  // If additional properties are provided then they will be added to the
  // created object.

  _.create = function (prototype, props) {
    var result = baseCreate(prototype);
    if (props) _.extendOwn(result, props);
    return result;
  }; // Create a (shallow-cloned) duplicate of an object.


  _.clone = function (obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  }; // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.


  _.tap = function (obj, interceptor) {
    interceptor(obj);
    return obj;
  }; // Returns whether an object has a given set of `key:value` pairs.


  _.isMatch = function (object, attrs) {
    var keys = _.keys(attrs),
        length = keys.length;

    if (object == null) return !length;
    var obj = Object(object);

    for (var i = 0; i < length; i++) {
      var key = keys[i];
      if (attrs[key] !== obj[key] || !(key in obj)) return false;
    }

    return true;
  }; // Internal recursive comparison function for `isEqual`.


  var eq, deepEq;

  eq = function eq(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b) return a !== 0 || 1 / a === 1 / b; // `null` or `undefined` only equal to itself (strict comparison).

    if (a == null || b == null) return false; // `NaN`s are equivalent, but non-reflexive.

    if (a !== a) return b !== b; // Exhaust primitive checks

    var type = typeof a;
    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;
    return deepEq(a, b, aStack, bStack);
  }; // Internal recursive comparison function for `isEqual`.


  deepEq = function deepEq(a, b, aStack, bStack) {
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped; // Compare `[[Class]]` names.

    var className = toString.call(a);
    if (className !== toString.call(b)) return false;

    switch (className) {
      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
      case '[object RegExp]': // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')

      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return '' + a === '' + b;

      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive.
        // Object(NaN) is equivalent to NaN.
        if (+a !== +a) return +b !== +b; // An `egal` comparison is performed for other numeric values.

        return +a === 0 ? 1 / +a === 1 / b : +a === +b;

      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a === +b;

      case '[object Symbol]':
        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);
    }

    var areArrays = className === '[object Array]';

    if (!areArrays) {
      if (typeof a != 'object' || typeof b != 'object') return false; // Objects with different constructors are not equivalent, but `Object`s or `Array`s
      // from different frames are.

      var aCtor = a.constructor,
          bCtor = b.constructor;

      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor) && 'constructor' in a && 'constructor' in b) {
        return false;
      }
    } // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
    // Initializing stack of traversed objects.
    // It's done here since we only need them for objects and arrays comparison.


    aStack = aStack || [];
    bStack = bStack || [];
    var length = aStack.length;

    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] === a) return bStack[length] === b;
    } // Add the first object to the stack of traversed objects.


    aStack.push(a);
    bStack.push(b); // Recursively compare objects and arrays.

    if (areArrays) {
      // Compare array lengths to determine if a deep comparison is necessary.
      length = a.length;
      if (length !== b.length) return false; // Deep compare the contents, ignoring non-numeric properties.

      while (length--) {
        if (!eq(a[length], b[length], aStack, bStack)) return false;
      }
    } else {
      // Deep compare objects.
      var keys = _.keys(a),
          key;

      length = keys.length; // Ensure that both objects contain the same number of properties before comparing deep equality.

      if (_.keys(b).length !== length) return false;

      while (length--) {
        // Deep compare each member
        key = keys[length];
        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
      }
    } // Remove the first object from the stack of traversed objects.


    aStack.pop();
    bStack.pop();
    return true;
  }; // Perform a deep comparison to check if two objects are equal.


  _.isEqual = function (a, b) {
    return eq(a, b);
  }; // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.


  _.isEmpty = function (obj) {
    if (obj == null) return true;
    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
    return _.keys(obj).length === 0;
  }; // Is a given value a DOM element?


  _.isElement = function (obj) {
    return !!(obj && obj.nodeType === 1);
  }; // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray


  _.isArray = nativeIsArray || function (obj) {
    return toString.call(obj) === '[object Array]';
  }; // Is a given variable an object?


  _.isObject = function (obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  }; // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.


  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function (name) {
    _['is' + name] = function (obj) {
      return toString.call(obj) === '[object ' + name + ']';
    };
  }); // Define a fallback version of the method in browsers (ahem, IE < 9), where
  // there isn't any inspectable "Arguments" type.


  if (!_.isArguments(arguments)) {
    _.isArguments = function (obj) {
      return has(obj, 'callee');
    };
  } // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).


  var nodelist = root.document && root.document.childNodes;

  if ( true && typeof Int8Array != 'object' && typeof nodelist != 'function') {
    _.isFunction = function (obj) {
      return typeof obj == 'function' || false;
    };
  } // Is a given object a finite number?


  _.isFinite = function (obj) {
    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));
  }; // Is the given value `NaN`?


  _.isNaN = function (obj) {
    return _.isNumber(obj) && isNaN(obj);
  }; // Is a given value a boolean?


  _.isBoolean = function (obj) {
    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
  }; // Is a given value equal to null?


  _.isNull = function (obj) {
    return obj === null;
  }; // Is a given variable undefined?


  _.isUndefined = function (obj) {
    return obj === void 0;
  }; // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).


  _.has = function (obj, path) {
    if (!_.isArray(path)) {
      return has(obj, path);
    }

    var length = path.length;

    for (var i = 0; i < length; i++) {
      var key = path[i];

      if (obj == null || !hasOwnProperty.call(obj, key)) {
        return false;
      }

      obj = obj[key];
    }

    return !!length;
  }; // Utility Functions
  // -----------------
  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.


  _.noConflict = function () {
    root._ = previousUnderscore;
    return this;
  }; // Keep the identity function around for default iteratees.


  _.identity = function (value) {
    return value;
  }; // Predicate-generating functions. Often useful outside of Underscore.


  _.constant = function (value) {
    return function () {
      return value;
    };
  };

  _.noop = function () {}; // Creates a function that, when passed an object, will traverse that object’s
  // properties down the given `path`, specified as an array of keys or indexes.


  _.property = function (path) {
    if (!_.isArray(path)) {
      return shallowProperty(path);
    }

    return function (obj) {
      return deepGet(obj, path);
    };
  }; // Generates a function for a given object that returns a given property.


  _.propertyOf = function (obj) {
    if (obj == null) {
      return function () {};
    }

    return function (path) {
      return !_.isArray(path) ? obj[path] : deepGet(obj, path);
    };
  }; // Returns a predicate for checking whether an object has a given set of
  // `key:value` pairs.


  _.matcher = _.matches = function (attrs) {
    attrs = _.extendOwn({}, attrs);
    return function (obj) {
      return _.isMatch(obj, attrs);
    };
  }; // Run a function **n** times.


  _.times = function (n, iteratee, context) {
    var accum = Array(Math.max(0, n));
    iteratee = optimizeCb(iteratee, context, 1);

    for (var i = 0; i < n; i++) {
      accum[i] = iteratee(i);
    }

    return accum;
  }; // Return a random integer between min and max (inclusive).


  _.random = function (min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }

    return min + Math.floor(Math.random() * (max - min + 1));
  }; // A (possibly faster) way to get the current timestamp as an integer.


  _.now = Date.now || function () {
    return new Date().getTime();
  }; // List of HTML entities for escaping.


  var escapeMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#x27;',
    '`': '&#x60;'
  };

  var unescapeMap = _.invert(escapeMap); // Functions for escaping and unescaping strings to/from HTML interpolation.


  var createEscaper = function createEscaper(map) {
    var escaper = function escaper(match) {
      return map[match];
    }; // Regexes for identifying a key that needs to be escaped.


    var source = '(?:' + _.keys(map).join('|') + ')';
    var testRegexp = RegExp(source);
    var replaceRegexp = RegExp(source, 'g');
    return function (string) {
      string = string == null ? '' : '' + string;
      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
    };
  };

  _.escape = createEscaper(escapeMap);
  _.unescape = createEscaper(unescapeMap); // Traverses the children of `obj` along `path`. If a child is a function, it
  // is invoked with its parent as context. Returns the value of the final
  // child, or `fallback` if any child is undefined.

  _.result = function (obj, path, fallback) {
    if (!_.isArray(path)) path = [path];
    var length = path.length;

    if (!length) {
      return _.isFunction(fallback) ? fallback.call(obj) : fallback;
    }

    for (var i = 0; i < length; i++) {
      var prop = obj == null ? void 0 : obj[path[i]];

      if (prop === void 0) {
        prop = fallback;
        i = length; // Ensure we don't continue iterating.
      }

      obj = _.isFunction(prop) ? prop.call(obj) : prop;
    }

    return obj;
  }; // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.


  var idCounter = 0;

  _.uniqueId = function (prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  }; // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.


  _.templateSettings = {
    evaluate: /<%([\s\S]+?)%>/g,
    interpolate: /<%=([\s\S]+?)%>/g,
    escape: /<%-([\s\S]+?)%>/g
  }; // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.

  var noMatch = /(.)^/; // Certain characters need to be escaped so that they can be put into a
  // string literal.

  var escapes = {
    "'": "'",
    '\\': '\\',
    '\r': 'r',
    '\n': 'n',
    "\u2028": 'u2028',
    "\u2029": 'u2029'
  };
  var escapeRegExp = /\\|'|\r|\n|\u2028|\u2029/g;

  var escapeChar = function escapeChar(match) {
    return '\\' + escapes[match];
  }; // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  // NB: `oldSettings` only exists for backwards compatibility.


  _.template = function (text, settings, oldSettings) {
    if (!settings && oldSettings) settings = oldSettings;
    settings = _.defaults({}, settings, _.templateSettings); // Combine delimiters into one regular expression via alternation.

    var matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g'); // Compile the template source, escaping string literals appropriately.

    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);
      index = offset + match.length;

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      } else if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      } else if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      } // Adobe VMs need the match returned to produce the correct offset.


      return match;
    });
    source += "';\n"; // If a variable is not specified, place data values in local scope.

    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';
    source = "var __t,__p='',__j=Array.prototype.join," + "print=function(){__p+=__j.call(arguments,'');};\n" + source + 'return __p;\n';
    var render;

    try {
      render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    var template = function template(data) {
      return render.call(this, data, _);
    }; // Provide the compiled source as a convenience for precompilation.


    var argument = settings.variable || 'obj';
    template.source = 'function(' + argument + '){\n' + source + '}';
    return template;
  }; // Add a "chain" function. Start chaining a wrapped Underscore object.


  _.chain = function (obj) {
    var instance = _(obj);

    instance._chain = true;
    return instance;
  }; // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.
  // Helper function to continue chaining intermediate results.


  var chainResult = function chainResult(instance, obj) {
    return instance._chain ? _(obj).chain() : obj;
  }; // Add your own custom functions to the Underscore object.


  _.mixin = function (obj) {
    _.each(_.functions(obj), function (name) {
      var func = _[name] = obj[name];

      _.prototype[name] = function () {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return chainResult(this, func.apply(_, args));
      };
    });

    return _;
  }; // Add all of the Underscore functions to the wrapper object.


  _.mixin(_); // Add all mutator Array functions to the wrapper.


  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {
    var method = ArrayProto[name];

    _.prototype[name] = function () {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
      return chainResult(this, obj);
    };
  }); // Add all accessor Array functions to the wrapper.


  _.each(['concat', 'join', 'slice'], function (name) {
    var method = ArrayProto[name];

    _.prototype[name] = function () {
      return chainResult(this, method.apply(this._wrapped, arguments));
    };
  }); // Extracts the result from a wrapped and chained object.


  _.prototype.value = function () {
    return this._wrapped;
  }; // Provide unwrapping proxy for some methods used in engine operations
  // such as arithmetic and JSON stringification.


  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

  _.prototype.toString = function () {
    return String(this._wrapped);
  }; // AMD registration happens at the end for compatibility with AMD loaders
  // that may not enforce next-turn semantics on modules. Even though general
  // practice for AMD registration is to be anonymous, underscore registers
  // as a named module because, like jQuery, it is a base library that is
  // popular enough to be bundled in a third party lib, but not be part of
  // an AMD load request. Those cases could generate an error when an
  // anonymous define() is called outside of a loader request.


  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return _;
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
})();
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6), __webpack_require__(22)(module)))

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

/*! KAS | https://github.com/Khan/KAS */ // This is a @generated file
/* eslint-disable */var _,KAS={};if( true&&module.exports){_=__webpack_require__(2);module.exports=KAS;}else{_=window._;window.KAS=KAS;}(function(KAS){/* parser generated by jison 0.4.15 */ /*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/var parser=function(){var o=function o(k,v,_o,l){for(_o=_o||{},l=k.length;l--;_o[k[l]]=v){;}return _o;},$V0=[1,7],$V1=[1,17],$V2=[1,13],$V3=[1,14],$V4=[1,15],$V5=[1,32],$V6=[1,22],$V7=[1,23],$V8=[1,24],$V9=[1,25],$Va=[1,26],$Vb=[1,33],$Vc=[1,27],$Vd=[1,28],$Ve=[1,29],$Vf=[1,30],$Vg=[1,20],$Vh=[1,36],$Vi=[1,37],$Vj=[5,6,8,10,33,35,41,43,45],$Vk=[1,39],$Vl=[1,40],$Vm=[5,6,8,10,12,14,16,19,21,22,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46],$Vn=[10,16,19,21,22,28,29,30,31,32,34,37,39,42,43,44,46],$Vo=[5,6,8,10,12,14,16,18,19,21,22,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46];var parser={trace:function trace(){},yy:{},symbols_:{"error":2,"equation":3,"expression":4,"SIGN":5,"EOF":6,"additive":7,"+":8,"multiplicative":9,"-":10,"triglog":11,"*":12,"negative":13,"/":14,"trig":15,"TRIG":16,"trigfunc":17,"^":18,"TRIGINV":19,"logbase":20,"ln":21,"log":22,"_":23,"subscriptable":24,"power":25,"primitive":26,"variable":27,"VAR":28,"CONST":29,"INT":30,"FLOAT":31,"{":32,"}":33,"(":34,")":35,"function":36,"FUNC":37,"invocation":38,"sqrt":39,"[":40,"]":41,"abs":42,"|":43,"LEFT|":44,"RIGHT|":45,"FRAC":46,"$accept":0,"$end":1},terminals_:{2:"error",5:"SIGN",6:"EOF",8:"+",10:"-",12:"*",14:"/",16:"TRIG",18:"^",19:"TRIGINV",21:"ln",22:"log",23:"_",28:"VAR",29:"CONST",30:"INT",31:"FLOAT",32:"{",33:"}",34:"(",35:")",37:"FUNC",39:"sqrt",40:"[",41:"]",42:"abs",43:"|",44:"LEFT|",45:"RIGHT|",46:"FRAC"},productions_:[0,[3,4],[3,2],[3,1],[4,1],[7,3],[7,3],[7,1],[9,2],[9,3],[9,3],[9,1],[13,2],[13,1],[15,1],[17,1],[17,3],[17,1],[20,1],[20,1],[20,3],[11,2],[11,2],[11,1],[25,3],[25,1],[27,1],[24,3],[24,1],[24,1],[24,1],[24,1],[24,3],[24,3],[36,1],[38,4],[38,4],[38,7],[38,4],[38,3],[38,3],[38,4],[26,1],[26,1],[26,7]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate/* action[1] */,$$/* vstack */,_$/* lstack */){/* this == yyval */var $0=$$.length-1;switch(yystate){case 1:return new yy.Eq($$[$0-3],$$[$0-2],$$[$0-1]);break;case 2:return $$[$0-1];break;case 3:return new yy.Add([]);break;case 4:case 7:case 11:case 13:case 15:case 20:case 23:case 25:case 42:case 43:this.$=$$[$0];break;case 5:this.$=yy.Add.createOrAppend($$[$0-2],$$[$0]);break;case 6:this.$=yy.Add.createOrAppend($$[$0-2],yy.Mul.handleNegative($$[$0],"subtract"));break;case 8:this.$=yy.Mul.fold(yy.Mul.createOrAppend($$[$0-1],$$[$0]));break;case 9:this.$=yy.Mul.fold(yy.Mul.createOrAppend($$[$0-2],$$[$0]));break;case 10:this.$=yy.Mul.fold(yy.Mul.handleDivide($$[$0-2],$$[$0]));break;case 12:this.$=yy.Mul.handleNegative($$[$0]);break;case 14:case 17:this.$=[yytext];break;case 16:this.$=$$[$0-2].concat($$[$0]);break;case 18:this.$=yy.Log.natural();break;case 19:this.$=yy.Log.common();break;case 21:this.$=yy.Trig.create($$[$0-1],$$[$0]);break;case 22:this.$=yy.Log.create($$[$0-1],$$[$0]);break;case 24:this.$=new yy.Pow($$[$0-2],$$[$0]);break;case 26:case 34:this.$=yytext;break;case 27:this.$=new yy.Var($$[$0-2],$$[$0]);break;case 28:this.$=new yy.Var($$[$0]);break;case 29:this.$=new yy.Const(yytext.toLowerCase());break;case 30:this.$=yy.Int.create(Number(yytext));break;case 31:this.$=yy.Float.create(Number(yytext));break;case 32:this.$=$$[$0-1].completeParse();break;case 33:this.$=$$[$0-1].completeParse().addHint('parens');break;case 35:case 36:this.$=yy.Pow.sqrt($$[$0-1]);break;case 37:this.$=new yy.Pow.nthroot($$[$0-1],$$[$0-4]);break;case 38:case 39:case 40:this.$=new yy.Abs($$[$0-1]);break;case 41:this.$=new yy.Func($$[$0-3],$$[$0-1]);break;case 44:this.$=yy.Mul.handleDivide($$[$0-4],$$[$0-1]);break;}},table:[{3:1,4:2,6:[1,3],7:4,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{1:[3]},{5:[1,34],6:[1,35]},{1:[2,3]},o([5,6],[2,4],{8:$Vh,10:$Vi}),o($Vj,[2,7],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vm,[2,11]),{10:$V0,11:8,13:41,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,13]),{10:$V0,11:8,13:42,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{10:$V0,11:8,13:43,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,23]),o($Vn,[2,15],{18:[1,44]}),o($Vn,[2,17]),o($Vn,[2,18]),o($Vn,[2,19],{23:[1,45]}),o($Vm,[2,25],{18:[1,46]}),o([10,16,18,19,21,22,28,29,30,31,32,34,37,39,42,43,44,46],[2,14]),o($Vo,[2,42]),o($Vo,[2,43]),{32:[1,47]},o($Vo,[2,28],{23:[1,48]}),o($Vo,[2,29]),o($Vo,[2,30]),o($Vo,[2,31]),{7:49,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:50,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{32:[1,52],34:[1,51],40:[1,53]},{34:[1,54]},{7:55,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:56,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{34:[1,57]},o([5,6,8,10,12,14,16,18,19,21,22,23,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46],[2,26]),{34:[2,34]},{4:58,7:4,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{1:[2,2]},{9:59,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{9:60,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,8]),{10:$V0,11:8,13:61,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{10:$V0,11:8,13:62,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,12]),o($Vm,[2,21]),o($Vm,[2,22]),{10:$V0,11:8,13:63,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{24:64,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va},{10:$V0,11:8,13:65,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:66,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{24:67,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va},{8:$Vh,10:$Vi,33:[1,68]},{8:$Vh,10:$Vi,35:[1,69]},{7:70,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:71,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:72,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:73,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{8:$Vh,10:$Vi,43:[1,74]},{8:$Vh,10:$Vi,45:[1,75]},{7:76,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{6:[1,77]},o($Vj,[2,5],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vj,[2,6],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vm,[2,9]),o($Vm,[2,10]),o($Vn,[2,16]),o($Vn,[2,20]),o($Vm,[2,24]),{8:$Vh,10:$Vi,33:[1,78]},o($Vo,[2,27]),o($Vo,[2,32]),o($Vo,[2,33]),{8:$Vh,10:$Vi,35:[1,79]},{8:$Vh,10:$Vi,33:[1,80]},{8:$Vh,10:$Vi,41:[1,81]},{8:$Vh,10:$Vi,35:[1,82]},o($Vo,[2,39]),o($Vo,[2,40]),{8:$Vh,10:$Vi,35:[1,83]},{1:[2,1]},{32:[1,84]},o($Vo,[2,35]),o($Vo,[2,36]),{32:[1,85]},o($Vo,[2,38]),o($Vo,[2,41]),{7:86,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:87,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{8:$Vh,10:$Vi,33:[1,88]},{8:$Vh,10:$Vi,33:[1,89]},o($Vo,[2,44]),o($Vo,[2,37])],defaultActions:{3:[2,3],33:[2,34],35:[2,2],77:[2,1]},parseError:function parseError(str,hash){if(hash.recoverable){this.trace(str);}else{throw new Error(str);}},parse:function parse(input){var self=this,stack=[0],tstack=[],vstack=[null],lstack=[],table=this.table,yytext='',yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1;var args=lstack.slice.call(arguments,1);var lexer=Object.create(this.lexer);var sharedState={yy:{}};for(var k in this.yy){if(Object.prototype.hasOwnProperty.call(this.yy,k)){sharedState.yy[k]=this.yy[k];}}lexer.setInput(input,sharedState.yy);sharedState.yy.lexer=lexer;sharedState.yy.parser=this;if(typeof lexer.yylloc=='undefined'){lexer.yylloc={};}var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;if(typeof sharedState.yy.parseError==='function'){this.parseError=sharedState.yy.parseError;}else{this.parseError=Object.getPrototypeOf(this).parseError;}function popStack(n){stack.length=stack.length-2*n;vstack.length=vstack.length-n;lstack.length=lstack.length-n;}//_token_stack:
function lex(){var token;token=lexer.lex()||EOF;if(typeof token!=='number'){token=self.symbols_[token]||token;}return token;}var symbol,preErrorSymbol,state,action,a,r,yyval={},p,len,newState,expected;while(true){state=stack[stack.length-1];if(this.defaultActions[state]){action=this.defaultActions[state];}else{if(symbol===null||typeof symbol=='undefined'){symbol=lex();}action=table[state]&&table[state][symbol];}if(typeof action==='undefined'||!action.length||!action[0]){var errStr='';expected=[];for(p in table[state]){if(this.terminals_[p]&&p>TERROR){expected.push('\''+this.terminals_[p]+'\'');}}if(lexer.showPosition){errStr='Parse error on line '+(yylineno+1)+':\n'+lexer.showPosition()+'\nExpecting '+expected.join(', ')+', got \''+(this.terminals_[symbol]||symbol)+'\'';}else{errStr='Parse error on line '+(yylineno+1)+': Unexpected '+(symbol==EOF?'end of input':'\''+(this.terminals_[symbol]||symbol)+'\'');}this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected:expected});}if(action[0]instanceof Array&&action.length>1){throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);}switch(action[0]){case 1:stack.push(symbol);vstack.push(lexer.yytext);lstack.push(lexer.yylloc);stack.push(action[1]);symbol=null;if(!preErrorSymbol){yyleng=lexer.yyleng;yytext=lexer.yytext;yylineno=lexer.yylineno;yyloc=lexer.yylloc;if(recovering>0){recovering--;}}else{symbol=preErrorSymbol;preErrorSymbol=null;}break;case 2:len=this.productions_[action[1]][1];yyval.$=vstack[vstack.length-len];yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column};if(ranges){yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]];}r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args));if(typeof r!=='undefined'){return r;}if(len){stack=stack.slice(0,-1*len*2);vstack=vstack.slice(0,-1*len);lstack=lstack.slice(0,-1*len);}stack.push(this.productions_[action[1]][0]);vstack.push(yyval.$);lstack.push(yyval._$);newState=table[stack[stack.length-2]][stack[stack.length-1]];stack.push(newState);break;case 3:return true;}}return true;}};/* generated by jison-lex 0.3.4 */var lexer=function(){var lexer={EOF:1,parseError:function parseError(str,hash){if(this.yy.parser){this.yy.parser.parseError(str,hash);}else{throw new Error(str);}},// resets the lexer, sets new input
setInput:function setInput(input,yy){this.yy=yy||this.yy||{};this._input=input;this._more=this._backtrack=this.done=false;this.yylineno=this.yyleng=0;this.yytext=this.matched=this.match='';this.conditionStack=['INITIAL'];this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0};if(this.options.ranges){this.yylloc.range=[0,0];}this.offset=0;return this;},// consumes and returns one char from the input
input:function input(){var ch=this._input[0];this.yytext+=ch;this.yyleng++;this.offset++;this.match+=ch;this.matched+=ch;var lines=ch.match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno++;this.yylloc.last_line++;}else{this.yylloc.last_column++;}if(this.options.ranges){this.yylloc.range[1]++;}this._input=this._input.slice(1);return ch;},// unshifts one char (or a string) into the input
unput:function unput(ch){var len=ch.length;var lines=ch.split(/(?:\r\n?|\n)/g);this._input=ch+this._input;this.yytext=this.yytext.substr(0,this.yytext.length-len);//this.yyleng -= len;
this.offset-=len;var oldLines=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1);this.matched=this.matched.substr(0,this.matched.length-1);if(lines.length-1){this.yylineno-=lines.length-1;}var r=this.yylloc.range;this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len};if(this.options.ranges){this.yylloc.range=[r[0],r[0]+this.yyleng-len];}this.yyleng=this.yytext.length;return this;},// When called from action, caches matched text and appends it on next action
more:function more(){this._more=true;return this;},// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function reject(){if(this.options.backtrack_lexer){this._backtrack=true;}else{return this.parseError('Lexical error on line '+(this.yylineno+1)+'. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n'+this.showPosition(),{text:"",token:null,line:this.yylineno});}return this;},// retain first n characters of the match
less:function less(n){this.unput(this.match.slice(n));},// displays already matched input, i.e. for error messages
pastInput:function pastInput(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?'...':'')+past.substr(-20).replace(/\n/g,"");},// displays upcoming input, i.e. for error messages
upcomingInput:function upcomingInput(){var next=this.match;if(next.length<20){next+=this._input.substr(0,20-next.length);}return(next.substr(0,20)+(next.length>20?'...':'')).replace(/\n/g,"");},// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function showPosition(){var pre=this.pastInput();var c=new Array(pre.length+1).join("-");return pre+this.upcomingInput()+"\n"+c+"^";},// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function test_match(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer){// save context
backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done};if(this.options.ranges){backup.yylloc.range=this.yylloc.range.slice(0);}}lines=match[0].match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno+=lines.length;}this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+match[0].length};this.yytext+=match[0];this.match+=match[0];this.matches=match;this.yyleng=this.yytext.length;if(this.options.ranges){this.yylloc.range=[this.offset,this.offset+=this.yyleng];}this._more=false;this._backtrack=false;this._input=this._input.slice(match[0].length);this.matched+=match[0];token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]);if(this.done&&this._input){this.done=false;}if(token){return token;}else if(this._backtrack){// recover context
for(var k in backup){this[k]=backup[k];}return false;// rule action called reject() implying the next rule should be tested instead.
}return false;},// return next match in input
next:function next(){if(this.done){return this.EOF;}if(!this._input){this.done=true;}var token,match,tempMatch,index;if(!this._more){this.yytext='';this.match='';}var rules=this._currentRules();for(var i=0;i<rules.length;i++){tempMatch=this._input.match(this.rules[rules[i]]);if(tempMatch&&(!match||tempMatch[0].length>match[0].length)){match=tempMatch;index=i;if(this.options.backtrack_lexer){token=this.test_match(tempMatch,rules[i]);if(token!==false){return token;}else if(this._backtrack){match=false;continue;// rule action called reject() implying a rule MISmatch.
}else{// else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
return false;}}else if(!this.options.flex){break;}}}if(match){token=this.test_match(match,rules[index]);if(token!==false){return token;}// else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
return false;}if(this._input===""){return this.EOF;}else{return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),{text:"",token:null,line:this.yylineno});}},// return next match that has a token
lex:function lex(){var r=this.next();if(r){return r;}else{return this.lex();}},// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition){this.conditionStack.push(condition);},// pop the previously active lexer condition state off the condition stack
popState:function popState(){var n=this.conditionStack.length-1;if(n>0){return this.conditionStack.pop();}else{return this.conditionStack[0];}},// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules(){if(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;}else{return this.conditions["INITIAL"].rules;}},// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n){n=this.conditionStack.length-1-Math.abs(n||0);if(n>=0){return this.conditionStack[n];}else{return"INITIAL";}},// alias for begin(condition)
pushState:function pushState(condition){this.begin(condition);},// return the number of states currently on the stack
stateStackSize:function stateStackSize(){return this.conditionStack.length;},options:{"flex":true},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){var YYSTATE=YY_START;switch($avoiding_name_collisions){case 0:/* skip whitespace */break;case 1:/* skip \space */break;case 2:/* skip '\ ' */break;case 3:return"INT";break;case 4:return"FLOAT";break;case 5:return"^";break;case 6:return"*";break;case 7:return"*";break;case 8:return"*";break;case 9:return"*";break;case 10:return"/";break;case 11:return"/";break;case 12:return"-";break;case 13:return"-";break;case 14:return"+";break;case 15:return"^";break;case 16:return"(";break;case 17:return")";break;case 18:return"(";break;case 19:return")";break;case 20:return"[";break;case 21:return"]";break;case 22:return"{";break;case 23:return"}";break;case 24:return"{";break;case 25:return"}";break;case 26:return"_";break;case 27:return"|";break;case 28:return"LEFT|";break;case 29:return"RIGHT|";break;case 30:return"!";break;case 31:return"SIGN";break;case 32:yy_.yytext="<=";return"SIGN";break;case 33:yy_.yytext=">=";return"SIGN";break;case 34:yy_.yytext="<=";return"SIGN";break;case 35:yy_.yytext=">=";return"SIGN";break;case 36:yy_.yytext="<>";return"SIGN";break;case 37:yy_.yytext="<>";return"SIGN";break;case 38:yy_.yytext="<>";return"SIGN";break;case 39:yy_.yytext="<>";return"SIGN";break;case 40:yy_.yytext="<=";return"SIGN";break;case 41:yy_.yytext=">=";return"SIGN";break;case 42:return"FRAC";break;case 43:return"FRAC";break;case 44:return"sqrt";break;case 45:return"abs";break;case 46:return"ln";break;case 47:return"log";break;case 48:return"TRIG";break;case 49:return"TRIG";break;case 50:return"TRIG";break;case 51:return"TRIG";break;case 52:yy_.yytext="sin";return"TRIG";break;case 53:yy_.yytext="cos";return"TRIG";break;case 54:yy_.yytext="tan";return"TRIG";break;case 55:yy_.yytext="csc";return"TRIG";break;case 56:yy_.yytext="sec";return"TRIG";break;case 57:yy_.yytext="cot";return"TRIG";break;case 58:yy_.yytext="arcsin";return"TRIG";break;case 59:yy_.yytext="arccos";return"TRIG";break;case 60:yy_.yytext="arctan";return"TRIG";break;case 61:yy_.yytext="arccsc";return"TRIG";break;case 62:yy_.yytext="arcsec";return"TRIG";break;case 63:yy_.yytext="arccot";return"TRIG";break;case 64:return"TRIGINV";break;case 65:return"TRIGINV";break;case 66:yy_.yytext="sinh";return"TRIG";break;case 67:yy_.yytext="cosh";return"TRIG";break;case 68:yy_.yytext="tanh";return"TRIG";break;case 69:yy_.yytext="csch";return"TRIG";break;case 70:yy_.yytext="sech";return"TRIG";break;case 71:yy_.yytext="tanh";return"TRIG";break;case 72:return"CONST";break;case 73:yy_.yytext="pi";return"CONST";break;case 74:yy_.yytext="pi";return"CONST";break;case 75:return"VAR";break;case 76:yy_.yytext="theta";return"VAR";break;case 77:yy_.yytext="theta";return"VAR";break;case 78:return"VAR";break;case 79:yy_.yytext="phi";return"VAR";break;case 80:yy_.yytext="phi";return"VAR";break;case 81:return yy.symbolLexer(yy_.yytext);break;case 82:return"EOF";break;case 83:return"INVALID";break;case 84:console.log(yy_.yytext);break;}},rules:[/^(?:\s+)/,/^(?:\\space)/,/^(?:\\ )/,/^(?:[0-9]+\.?)/,/^(?:([0-9]+)?\.[0-9]+)/,/^(?:\*\*)/,/^(?:\*)/,/^(?:\\cdot|·)/,/^(?:\\times|×)/,/^(?:\\ast)/,/^(?:\/)/,/^(?:\\div|÷)/,/^(?:-)/,/^(?:−)/,/^(?:\+)/,/^(?:\^)/,/^(?:\()/,/^(?:\))/,/^(?:\\left\()/,/^(?:\\right\))/,/^(?:\[)/,/^(?:\])/,/^(?:\{)/,/^(?:\})/,/^(?:\\left\{)/,/^(?:\\right\})/,/^(?:_)/,/^(?:\|)/,/^(?:\\left\|)/,/^(?:\\right\|)/,/^(?:\!)/,/^(?:<=|>=|<>|<|>|=)/,/^(?:\\le)/,/^(?:\\ge)/,/^(?:\\leq)/,/^(?:\\geq)/,/^(?:=\/=)/,/^(?:\\ne)/,/^(?:\\neq)/,/^(?:≠)/,/^(?:≤)/,/^(?:≥)/,/^(?:\\frac)/,/^(?:\\dfrac)/,/^(?:sqrt|\\sqrt)/,/^(?:abs|\\abs)/,/^(?:ln|\\ln)/,/^(?:log|\\log)/,/^(?:sin|cos|tan)/,/^(?:csc|sec|cot)/,/^(?:sinh|cosh|tanh)/,/^(?:csch|sech|coth)/,/^(?:\\sin)/,/^(?:\\cos)/,/^(?:\\tan)/,/^(?:\\csc)/,/^(?:\\sec)/,/^(?:\\cot)/,/^(?:\\arcsin)/,/^(?:\\arccos)/,/^(?:\\arctan)/,/^(?:\\arccsc)/,/^(?:\\arcsec)/,/^(?:\\arccot)/,/^(?:arcsin|arccos|arctan)/,/^(?:arccsc|arcsec|arccot)/,/^(?:\\sinh)/,/^(?:\\cosh)/,/^(?:\\tanh)/,/^(?:\\csch)/,/^(?:\\sech)/,/^(?:\\coth)/,/^(?:pi)/,/^(?:π)/,/^(?:\\pi)/,/^(?:theta)/,/^(?:θ)/,/^(?:\\theta)/,/^(?:phi)/,/^(?:φ)/,/^(?:\\phi)/,/^(?:[a-zA-Z])/,/^(?:$)/,/^(?:.)/,/^(?:.)/],conditions:{"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"inclusive":true}}};return lexer;}();parser.lexer=lexer;function Parser(){this.yy={};}Parser.prototype=parser;parser.Parser=Parser;return new Parser();}();KAS.parser=parser;})(KAS);// this is a @generated file
(function(KAS){/* parser generated by jison 0.4.15 */ /*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/var parser=function(){var o=function o(k,v,_o2,l){for(_o2=_o2||{},l=k.length;l--;_o2[k[l]]=v){;}return _o2;},$V0=[1,11],$V1=[1,9],$V2=[8,17],$V3=[6,11],$V4=[6,11,13,17];var parser={trace:function trace(){},yy:{},symbols_:{"error":2,"unitvalue":3,"magnitude":4,"unit":5,"EOF":6,"float":7,"POW":8,"int":9,"multatoms":10,"DIV":11,"expatom":12,"MUL":13,"atom":14,"^":15,"nat":16,"ATOM":17,"FLOAT":18,"NAT":19,"NEG":20,"$accept":0,"$end":1},terminals_:{2:"error",6:"EOF",8:"POW",11:"DIV",13:"MUL",15:"^",17:"ATOM",18:"FLOAT",19:"NAT",20:"NEG"},productions_:[0,[3,3],[3,2],[4,3],[4,1],[5,3],[5,1],[10,3],[10,2],[10,1],[12,3],[12,1],[14,1],[7,1],[7,1],[16,1],[9,2],[9,1]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate/* action[1] */,$$/* vstack */,_$/* lstack */){/* this == yyval */var $0=$$.length-1;switch(yystate){case 1:return{type:"unitMagnitude",magnitude:$$[$0-2],unit:$$[$0-1]};break;case 2:return{type:"unitStandalone",unit:$$[$0-1]};break;case 3:this.$=$$[$0-2]+"e"+$$[$0];break;case 4:case 13:case 14:case 15:case 17:this.$=$$[$0];break;case 5:this.$={num:$$[$0-2],denom:$$[$0]};break;case 6:this.$={num:$$[$0],denom:null};break;case 7:this.$=[$$[$0-2]].concat($$[$0]);break;case 8:this.$=[$$[$0-1]].concat($$[$0]);break;case 9:this.$=[$$[$0]];break;case 10:this.$={name:$$[$0-2],pow:$$[$0]};break;case 11:this.$={name:$$[$0],pow:1};break;case 12:this.$=yytext;break;case 16:this.$="-"+$$[$0];break;}},table:[{3:1,4:2,5:3,7:4,10:5,12:8,14:10,16:7,17:$V0,18:[1,6],19:$V1},{1:[3]},{5:12,10:5,12:8,14:10,17:$V0},{6:[1,13]},{8:[1,14],17:[2,4]},{6:[2,6],11:[1,15]},o($V2,[2,13]),o($V2,[2,14]),o($V3,[2,9],{12:8,14:10,10:17,13:[1,16],17:$V0}),o([6,8,11,13,17],[2,15]),o($V4,[2,11],{15:[1,18]}),o([6,11,13,15,17],[2,12]),{6:[1,19]},{1:[2,2]},{9:20,19:[1,22],20:[1,21]},{10:23,12:8,14:10,17:$V0},{10:24,12:8,14:10,17:$V0},o($V3,[2,8]),{16:25,19:$V1},{1:[2,1]},{17:[2,3]},{19:[1,26]},{17:[2,17]},{6:[2,5]},o($V3,[2,7]),o($V4,[2,10]),{17:[2,16]}],defaultActions:{13:[2,2],19:[2,1],20:[2,3],22:[2,17],23:[2,5],26:[2,16]},parseError:function parseError(str,hash){if(hash.recoverable){this.trace(str);}else{throw new Error(str);}},parse:function parse(input){var self=this,stack=[0],tstack=[],vstack=[null],lstack=[],table=this.table,yytext='',yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1;var args=lstack.slice.call(arguments,1);var lexer=Object.create(this.lexer);var sharedState={yy:{}};for(var k in this.yy){if(Object.prototype.hasOwnProperty.call(this.yy,k)){sharedState.yy[k]=this.yy[k];}}lexer.setInput(input,sharedState.yy);sharedState.yy.lexer=lexer;sharedState.yy.parser=this;if(typeof lexer.yylloc=='undefined'){lexer.yylloc={};}var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;if(typeof sharedState.yy.parseError==='function'){this.parseError=sharedState.yy.parseError;}else{this.parseError=Object.getPrototypeOf(this).parseError;}function popStack(n){stack.length=stack.length-2*n;vstack.length=vstack.length-n;lstack.length=lstack.length-n;}//_token_stack:
function lex(){var token;token=lexer.lex()||EOF;if(typeof token!=='number'){token=self.symbols_[token]||token;}return token;}var symbol,preErrorSymbol,state,action,a,r,yyval={},p,len,newState,expected;while(true){state=stack[stack.length-1];if(this.defaultActions[state]){action=this.defaultActions[state];}else{if(symbol===null||typeof symbol=='undefined'){symbol=lex();}action=table[state]&&table[state][symbol];}if(typeof action==='undefined'||!action.length||!action[0]){var errStr='';expected=[];for(p in table[state]){if(this.terminals_[p]&&p>TERROR){expected.push('\''+this.terminals_[p]+'\'');}}if(lexer.showPosition){errStr='Parse error on line '+(yylineno+1)+':\n'+lexer.showPosition()+'\nExpecting '+expected.join(', ')+', got \''+(this.terminals_[symbol]||symbol)+'\'';}else{errStr='Parse error on line '+(yylineno+1)+': Unexpected '+(symbol==EOF?'end of input':'\''+(this.terminals_[symbol]||symbol)+'\'');}this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected:expected});}if(action[0]instanceof Array&&action.length>1){throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);}switch(action[0]){case 1:stack.push(symbol);vstack.push(lexer.yytext);lstack.push(lexer.yylloc);stack.push(action[1]);symbol=null;if(!preErrorSymbol){yyleng=lexer.yyleng;yytext=lexer.yytext;yylineno=lexer.yylineno;yyloc=lexer.yylloc;if(recovering>0){recovering--;}}else{symbol=preErrorSymbol;preErrorSymbol=null;}break;case 2:len=this.productions_[action[1]][1];yyval.$=vstack[vstack.length-len];yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column};if(ranges){yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]];}r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args));if(typeof r!=='undefined'){return r;}if(len){stack=stack.slice(0,-1*len*2);vstack=vstack.slice(0,-1*len);lstack=lstack.slice(0,-1*len);}stack.push(this.productions_[action[1]][0]);vstack.push(yyval.$);lstack.push(yyval._$);newState=table[stack[stack.length-2]][stack[stack.length-1]];stack.push(newState);break;case 3:return true;}}return true;}};/* generated by jison-lex 0.3.4 */var lexer=function(){var lexer={EOF:1,parseError:function parseError(str,hash){if(this.yy.parser){this.yy.parser.parseError(str,hash);}else{throw new Error(str);}},// resets the lexer, sets new input
setInput:function setInput(input,yy){this.yy=yy||this.yy||{};this._input=input;this._more=this._backtrack=this.done=false;this.yylineno=this.yyleng=0;this.yytext=this.matched=this.match='';this.conditionStack=['INITIAL'];this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0};if(this.options.ranges){this.yylloc.range=[0,0];}this.offset=0;return this;},// consumes and returns one char from the input
input:function input(){var ch=this._input[0];this.yytext+=ch;this.yyleng++;this.offset++;this.match+=ch;this.matched+=ch;var lines=ch.match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno++;this.yylloc.last_line++;}else{this.yylloc.last_column++;}if(this.options.ranges){this.yylloc.range[1]++;}this._input=this._input.slice(1);return ch;},// unshifts one char (or a string) into the input
unput:function unput(ch){var len=ch.length;var lines=ch.split(/(?:\r\n?|\n)/g);this._input=ch+this._input;this.yytext=this.yytext.substr(0,this.yytext.length-len);//this.yyleng -= len;
this.offset-=len;var oldLines=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1);this.matched=this.matched.substr(0,this.matched.length-1);if(lines.length-1){this.yylineno-=lines.length-1;}var r=this.yylloc.range;this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len};if(this.options.ranges){this.yylloc.range=[r[0],r[0]+this.yyleng-len];}this.yyleng=this.yytext.length;return this;},// When called from action, caches matched text and appends it on next action
more:function more(){this._more=true;return this;},// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function reject(){if(this.options.backtrack_lexer){this._backtrack=true;}else{return this.parseError('Lexical error on line '+(this.yylineno+1)+'. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n'+this.showPosition(),{text:"",token:null,line:this.yylineno});}return this;},// retain first n characters of the match
less:function less(n){this.unput(this.match.slice(n));},// displays already matched input, i.e. for error messages
pastInput:function pastInput(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?'...':'')+past.substr(-20).replace(/\n/g,"");},// displays upcoming input, i.e. for error messages
upcomingInput:function upcomingInput(){var next=this.match;if(next.length<20){next+=this._input.substr(0,20-next.length);}return(next.substr(0,20)+(next.length>20?'...':'')).replace(/\n/g,"");},// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function showPosition(){var pre=this.pastInput();var c=new Array(pre.length+1).join("-");return pre+this.upcomingInput()+"\n"+c+"^";},// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function test_match(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer){// save context
backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done};if(this.options.ranges){backup.yylloc.range=this.yylloc.range.slice(0);}}lines=match[0].match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno+=lines.length;}this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+match[0].length};this.yytext+=match[0];this.match+=match[0];this.matches=match;this.yyleng=this.yytext.length;if(this.options.ranges){this.yylloc.range=[this.offset,this.offset+=this.yyleng];}this._more=false;this._backtrack=false;this._input=this._input.slice(match[0].length);this.matched+=match[0];token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]);if(this.done&&this._input){this.done=false;}if(token){return token;}else if(this._backtrack){// recover context
for(var k in backup){this[k]=backup[k];}return false;// rule action called reject() implying the next rule should be tested instead.
}return false;},// return next match in input
next:function next(){if(this.done){return this.EOF;}if(!this._input){this.done=true;}var token,match,tempMatch,index;if(!this._more){this.yytext='';this.match='';}var rules=this._currentRules();for(var i=0;i<rules.length;i++){tempMatch=this._input.match(this.rules[rules[i]]);if(tempMatch&&(!match||tempMatch[0].length>match[0].length)){match=tempMatch;index=i;if(this.options.backtrack_lexer){token=this.test_match(tempMatch,rules[i]);if(token!==false){return token;}else if(this._backtrack){match=false;continue;// rule action called reject() implying a rule MISmatch.
}else{// else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
return false;}}else if(!this.options.flex){break;}}}if(match){token=this.test_match(match,rules[index]);if(token!==false){return token;}// else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
return false;}if(this._input===""){return this.EOF;}else{return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),{text:"",token:null,line:this.yylineno});}},// return next match that has a token
lex:function lex(){var r=this.next();if(r){return r;}else{return this.lex();}},// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition){this.conditionStack.push(condition);},// pop the previously active lexer condition state off the condition stack
popState:function popState(){var n=this.conditionStack.length-1;if(n>0){return this.conditionStack.pop();}else{return this.conditionStack[0];}},// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules(){if(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;}else{return this.conditions["INITIAL"].rules;}},// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n){n=this.conditionStack.length-1-Math.abs(n||0);if(n>=0){return this.conditionStack[n];}else{return"INITIAL";}},// alias for begin(condition)
pushState:function pushState(condition){this.begin(condition);},// return the number of states currently on the stack
stateStackSize:function stateStackSize(){return this.conditionStack.length;},options:{},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){var YYSTATE=YY_START;switch($avoiding_name_collisions){case 0:return 11;break;case 1:return'(';break;case 2:return')';break;case 3:return 8;break;case 4:return 15;break;case 5:return 13;break;case 6:return 18;break;case 7:return 19;break;case 8:return 20;break;case 9:return 17;break;case 10:return 17;break;case 11:return 17;break;case 12:/* skip whitespace */break;case 13:return 6;break;}},rules:[/^(?:\/)/,/^(?:\()/,/^(?:\))/,/^(?:(\*|x|\u00d7|\u2219|\u22c5|\u00b7)\s*10\s*\^)/,/^(?:\^)/,/^(?:\*)/,/^(?:[0-9]+\.[0-9]+)/,/^(?:[0-9]+)/,/^(?:-)/,/^(?:\u00b0( ?)[cCfF])/,/^(?:fl\.? oz\.?)/,/^(?:[\u00b5]?([A-Za-z-]+|[\u2103\u2109\u212b]))/,/^(?:\s+)/,/^(?:$)/],conditions:{"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"inclusive":true}}};return lexer;}();parser.lexer=lexer;function Parser(){this.yy={};}Parser.prototype=parser;parser.Parser=Parser;return new Parser();}();KAS.unitParser=parser;})(KAS);/* TODO(charlie): fix these lint errors (http://eslint.org/docs/rules): */ /* eslint-disable indent, no-undef, no-var, one-var, no-dupe-keys, no-new-func, no-redeclare, no-unused-vars, comma-dangle, max-len, prefer-spread, space-infix-ops, space-unary-ops */(function(KAS){/*  The node hierarcy is as follows:

    (Expr)
        (Seq)           2+ children
            Add
            Mul
        Pow             2 children
        Log             2 children
        Eq              2 children
        Trig            1 child
        Abs             1 child
        (Symbol)
            Func        1 child     e.g. f(x)
            Var         leaf node   e.g. x, x_n
            Const       leaf node   e.g. pi, e, <i>
            Unit        leaf node   e.g. kg
        (Num)           leaf node
            Rational                e.g. 2/3
                Int
            Float

    (abstract, not meant to be instantiated)

    == Key design concepts ==
    Functional: All methods return new nodes - nodes are never mutated.
    Ignore commutativity: Commutative inputs should be parsed equivalently.
    Exploit commutativity: Output should take advantage of ordering.
*/ /* non user-facing functions */ // assert that all abstract methods have been overridden
var _abstract=function _abstract(){// Try to give people a bit of information when this happens
throw new Error("Abstract method - must override for expr: "+this.print());};// throw an error that is meant to be caught by the test suite (not user facing)
var error=function error(message){throw new Error(message);};// reliably detect NaN
var isNaN=function isNaN(object){return object!==object;};// return a random float between min (inclusive) and max (exclusive),
// not that inclusivity means much, probabilistically, on floats
var randomFloat=function randomFloat(min,max){var extent=max-min;return Math.random()*extent+min;};/* constants */var ITERATIONS=12;var TOLERANCE=9;// decimal places
/* abstract base expression node */function Expr(){}_.extend(Expr.prototype,{// this node's immediate constructor
func:_abstract,// an array of the arguments to this node's immediate constructor
args:_abstract,// make a new node with the given arguments
construct:function construct(args){var instance=new this.func();this.func.apply(instance,args);return instance;},// an abstraction for chainable, bottom-up recursion
recurse:function recurse(method){var passed=Array.prototype.slice.call(arguments,1);var args=_.map(this.args(),function(arg){return _.isString(arg)?arg:arg[method].apply(arg,passed);});return this.construct(args);},// evaluate numerically with given variable mapping
eval:_abstract,codegen:_abstract,compile:function compile(){var code=this.codegen();try{return new Function("vars","return "+code+";");}catch(e){throw new Error("Function did not compile: "+code);}},// returns a string unambiguously representing the expression
// should be valid as input
// e.g. this.equals(parse(this.print())) === true
print:_abstract,// returns a TeX string representing the expression
tex:_abstract,// returns a TeX string, modified by the given options
asTex:function asTex(options){options=options||{};_.defaults(options,{display:true,dynamic:true,times:false});var tex=this.tex();if(options.display){tex="\\displaystyle "+tex;}if(options.dynamic){tex=tex.replace(/\(/g,"\\left(");tex=tex.replace(/\)/g,"\\right)");}if(options.times){tex=tex.replace(/\\cdot/g,"\\times");}return tex;},// returns the name of this expression's constructor as a string
// only used for testing and debugging (the ugly regex is for IE8)
name:function name(){if(this.func.name){return this.func.name;}else{return this.func.toString().match(/^function\s*([^\s(]+)/)[1];}},// returns a string representing current node structure
repr:function repr(){return this.name()+"("+_.map(this.args(),function(arg){return _.isString(arg)?arg:arg.repr();}).join(",")+")";},// removes all negative signs
strip:function strip(){return this.recurse("strip");},// canonically reorders all commutative elements
normalize:function normalize(){return this.recurse("normalize");},// expands the expression
expand:function expand(){return this.recurse("expand");},// naively factors out like terms
factor:function factor(options){return this.recurse("factor",options);},// collect all like terms
collect:function collect(options){return this.recurse("collect",options);},// strict syntactic equality check
equals:function equals(other){return this.normalize().print()===other.normalize().print();},// expand and collect until the expression no longer changes
simplify:function simplify(options){options=_.extend({once:false},options);// Attempt to factor and collect
var step1=this.factor(options);var step2=step1.collect(options);// Rollback if collect didn't do anything
if(step1.equals(step2)){step2=this.collect(options);}// Attempt to expand and collect
var step3=step2.expand(options);var step4=step3.collect(options);// Rollback if collect didn't do anything
if(step3.equals(step4)){step4=step2.collect(options);}// One round of simplification complete
var simplified=step4;if(options.once||this.equals(simplified)){return simplified;}else{return simplified.simplify(options);}},// check whether this expression is simplified
isSimplified:function isSimplified(){return this.equals(this.simplify());},// return the child nodes of this node
exprArgs:function exprArgs(){return _.filter(this.args(),function(arg){return arg instanceof Expr;});},// return the variables (function and non) within the expression
getVars:function getVars(excludeFunc){return _.uniq(_.flatten(_.invoke(this.exprArgs(),"getVars",excludeFunc))).sort();},getConsts:function getConsts(){return _.uniq(_.flatten(_.invoke(this.exprArgs(),"getConsts"))).sort();},getUnits:function getUnits(){return _.flatten(_.invoke(this.exprArgs(),"getUnits"));},// check whether this expression node is of a particular type
is:function is(func){return this instanceof func;},// check whether this expression has a particular node type
has:function has(func){if(this instanceof func){return true;}return _.any(this.exprArgs(),function(arg){return arg.has(func);});},// raise this expression to a given exponent
// most useful for eventually implementing i^3 = -i, etc.
raiseToThe:function raiseToThe(exp){return new Pow(this,exp);},// does this expression have a specific rendering hint?
// rendering hints are picked up while parsing, but are lost during transformations
isSubtract:function isSubtract(){return false;},isDivide:function isDivide(){return false;},isRoot:function isRoot(){return false;},// whether this node needs an explicit multiplication sign if following a Num
needsExplicitMul:function needsExplicitMul(){return this.args()[0].needsExplicitMul();},// check that the variables in both expressions are the same
sameVars:function sameVars(other){var vars1=this.getVars();var vars2=other.getVars();// the other Expr can have more variables than this one
// this lets you multiply equations by other variables
var same=function same(array1,array2){return!_.difference(array1,array2).length;};var lower=function lower(array){return _.uniq(_.invoke(array,"toLowerCase")).sort();};var equal=same(vars1,vars2);var equalIgnoringCase=same(lower(vars1),lower(vars2));return{equal:equal,equalIgnoringCase:equalIgnoringCase};},// semantic equality check, call after sameVars() to avoid potential false positives
// plug in random numbers for the variables in both expressions
// if they both consistently evaluate the same, then they're the same
compare:function compare(other){// equation comparisons are handled by Eq.compare()
if(other instanceof Eq){return false;}var varList=_.union(this.getVars(/* excludeFunc */true),other.getVars(/* excludeFunc */true));// If the numbers are large we would like to do a relative comparison
// rather than an absolute one, but if they're small enough then an
// absolute comparison makes more sense
var getDelta=function getDelta(num1,num2){if(Math.abs(num1)<1||Math.abs(num2)<1){return Math.abs(num1-num2);}else{return Math.abs(1-num1/num2);}};var equalNumbers=function equalNumbers(num1,num2){var delta=getDelta(num1,num2);return num1===num2||/* needed if either is +/- Infinity */isNaN(num1)&&isNaN(num2)||delta<Math.pow(10,-TOLERANCE);};// if no variables, only need to evaluate once
if(!varList.length&&!this.has(Unit)&&!other.has(Unit)){return equalNumbers(this.eval(),other.eval());}// collect here to avoid sometimes dividing by zero, and sometimes not
// it is better to be deterministic, e.g. x/x -> 1
// TODO(alex): may want to keep track of assumptions as they're made
var expr1=this.collect();var expr2=other.collect();var unitList1=this.getUnits();var unitList2=other.getUnits();if(!_.isEqual(unitList1,unitList2)){return false;}// Compare at a set number (currently 12) of points to determine
// equality.
//
// `range` (and `vars`) is the only variable that varies through the
// iterations. For each of range = 10, 100, and 1000, each random
// variable is picked from (-range, range).
//
// Note that because there are 12 iterations and three ranges, each
// range is checked four times.
for(var i=0;i<ITERATIONS;i++){var vars={};// One third total iterations each with range 10, 100, and 1000
var range=Math.pow(10,1+Math.floor(3*i/ITERATIONS));// Half of the iterations should only use integer values.
// This is because expressions like (-2)^x are common but result
// in NaN when evaluated in JS with non-integer values of x.
// Without this, (-2)^x and (-2)^(x+1) both end up always being NaN
// and thus equivalent. With this, the most common failure case is
// avoided. However, less common cases such as (-2)^(x+0.1) and
// (-2)^(x+1.1) will still both evaluate to NaN and result in a
// false positive.
//
// Note that the above is only true in vanilla JS Number-land,
// which has no concept of complex numbers. The solution is simple:
// Integrate a library for handling complex numbers.
//
// TODO(alex): Add support for complex numbers, then remove this.
var useFloats=i%2===0;_.each(varList,function(v){vars[v]=useFloats?randomFloat(-range,range):_.random(-range,range);});var equal;if(expr1.has(Func)||expr2.has(Func)||expr1.has(Unit)||expr2.has(Unit)){var result1=expr1.partialEval(vars);var result2=expr2.partialEval(vars);equal=result1.simplify().equals(result2.simplify());}else{var result1=expr1.eval(vars);var result2=expr2.eval(vars);equal=equalNumbers(result1,result2);}if(!equal){return false;}}return true;},// evaluate as much of the expression as possible
partialEval:function partialEval(vars){if(this instanceof Unit){return this;}else if(!this.has(Func)){return new Float(this.eval(vars).toFixed(TOLERANCE)).collect();}else if(this instanceof Func){return new Func(this.symbol,this.arg.partialEval(vars));}else{return this.recurse("partialEval",vars);}},// check that the structure of both expressions is the same
// all negative signs are stripped and the expressions are converted to
// a canonical commutative form
// should only be done after compare() returns true to avoid false positives
sameForm:function sameForm(other){return this.strip().equals(other.strip());},// returns the GCD of this expression and the given factor
findGCD:function findGCD(factor){return this.equals(factor)?factor:Num.One;},// return this expression's denominator
getDenominator:function getDenominator(){return Num.One;},// return this expression as a Mul
asMul:function asMul(){return new Mul(Num.One,this);},// TODO(alex): rename to isDefinitePositive or similar?
// return whether this expression is 100% positive
isPositive:_abstract,// TODO(alex): rename to hasNegativeSign or similar?
// return whether this expression has a negative sign
isNegative:function isNegative(){return false;},// return a factor of this expression that is 100% positive
asPositiveFactor:function asPositiveFactor(){return this.isPositive()?this:Num.One;},// return a copy of the expression with a new hint set (preserves hints)
addHint:function addHint(hint){if(!hint){return this;}var expr=this.construct(this.args());expr.hints=_.clone(this.hints);expr.hints[hint]=true;return expr;},hints:{parens:false},// currently unused!
asExpr:function asExpr(){return this;},// complete parse by performing a few necessary transformations
completeParse:function completeParse(){return this.recurse("completeParse");},abs:_abstract,negate:function negate(){return new Mul(Num.Neg,this);}});/* abstract sequence node */function Seq(){}Seq.prototype=new Expr();_.extend(Seq.prototype,{args:function args(){return this.terms;},normalize:function normalize(){var terms=_.sortBy(_.invoke(this.terms,"normalize"),function(term){return term.print();});return new this.func(terms);},expand:function expand(){return this.recurse("expand").flatten();},// partition the sequence into its numeric and non-numeric parts
// makes no guarantees about the validity of either part!
partition:function partition(){var terms=_.groupBy(this.terms,function(term){return term instanceof Num;});// XXX using a boolean as a key just converts it to a string. I don't
// think this code was written with that in mind. Probably doesn't
// matter except for readability.
var numbers=terms[true]||[];var others=terms[false]||[];return[new this.func(numbers),new this.func(others)];},// ensure that sequences have 2+ terms and no nested sequences of the same type
// this is a shallow flattening and will return a non-Seq if terms.length <= 1
flatten:function flatten(){var type=this;var terms=_.reject(this.terms,function(term){return term.equals(type.identity);});if(terms.length===0){return type.identity;}if(terms.length===1){return terms[0];}var grouped=_.groupBy(terms,function(term){return term instanceof type.func;});// same contains the children which are Seqs of the same type as this Seq
var same=grouped[true]||[];var others=grouped[false]||[];var flattened=others.concat(_.flatten(_.pluck(same,"terms"),/* shallow: */true));return new type.func(flattened);},// the identity associated with the sequence
identity:undefined,// reduce a numeric sequence to a Num
reduce:_abstract,isPositive:function isPositive(){var terms=_.invoke(this.terms,"collect");return _.all(_.invoke(terms,"isPositive"));},// return a new Seq with a given term replaced by a different term
// (or array of terms). given term can be passed directly, or by index
// if no new term is provided, the old one is simply removed
replace:function replace(oldTerm,newTerm){var index;if(oldTerm instanceof Expr){index=_.indexOf(this.terms,oldTerm);}else{index=oldTerm;}var newTerms=[];if(_.isArray(newTerm)){newTerms=newTerm;}else if(newTerm){newTerms=[newTerm];}var terms=this.terms.slice(0,index).concat(newTerms).concat(this.terms.slice(index+1));return new this.func(terms);},// syntactic sugar for replace()
remove:function remove(term){return this.replace(term);},getDenominator:function getDenominator(){// TODO(alex): find and return LCM
return new Mul(_.invoke(this.terms,"getDenominator")).flatten();}});/* sequence of additive terms */function Add(){if(arguments.length===1){this.terms=arguments[0];}else{this.terms=_.toArray(arguments);}}Add.prototype=new Seq();_.extend(Add.prototype,{func:Add,eval:function _eval(vars,options){return _.reduce(this.terms,function(memo,term){return memo+term.eval(vars,options);},0);},codegen:function codegen(){return _.map(this.terms,function(term){return"("+term.codegen()+")";}).join(" + ")||"0";},print:function print(){return _.invoke(this.terms,"print").join("+");},tex:function tex(){var tex="";_.each(this.terms,function(term){if(!tex||term.isSubtract()){tex+=term.tex();}else{tex+="+"+term.tex();}});return tex;},collect:function collect(options){var terms=_.invoke(this.terms,"collect",options);// [Expr expr, Num coefficient]
var pairs=[];_.each(terms,function(term){if(term instanceof Mul){var muls=term.partition();pairs.push([muls[1].flatten(),muls[0].reduce(options)]);}else if(term instanceof Num){pairs.push([Num.One,term]);}else{pairs.push([term,Num.One]);}});// { (Expr expr).print(): [[Expr expr, Num coefficient]] }
var grouped=_.groupBy(pairs,function(pair){return pair[0].normalize().print();});var collected=_.compact(_.map(grouped,function(pairs){var expr=pairs[0][0];var sum=new Add(_.zip.apply(_,pairs)[1]);var coefficient=sum.reduce(options);return new Mul(coefficient,expr).collect(options);}));// TODO(alex): use the Pythagorean identity here
// e.g. x*sin^2(y) + x*cos^2(y) -> x
return new Add(collected).flatten();},// naively factor out anything that is common to all terms
// if options.keepNegative is specified, won't factor out a common -1
factor:function factor(options){options=_.extend({keepNegative:false},options);var terms=_.invoke(this.terms,"collect");var factors;if(terms[0]instanceof Mul){factors=terms[0].terms;}else{factors=[terms[0]];}_.each(_.rest(this.terms),function(term){factors=_.map(factors,function(factor){return term.findGCD(factor);});});if(!options.keepNegative&&this.isNegative()){factors.push(Num.Neg);}factors=new Mul(factors).flatten().collect();var remainder=_.map(terms,function(term){return Mul.handleDivide(term,factors).simplify();});remainder=new Add(remainder).flatten();return Mul.createOrAppend(factors,remainder).flatten();},reduce:function reduce(options){return _.reduce(this.terms,function(memo,term){return memo.add(term,options);},this.identity);},needsExplicitMul:function needsExplicitMul(){return false;},isNegative:function isNegative(){var terms=_.invoke(this.terms,"collect");return _.all(_.invoke(terms,"isNegative"));},negate:function negate(){return new Add(_.invoke(this.terms,"negate"));}});/* sequence of multiplicative terms */function Mul(){if(arguments.length===1){this.terms=arguments[0];}else{this.terms=_.toArray(arguments);}}Mul.prototype=new Seq();_.extend(Mul.prototype,{func:Mul,eval:function _eval(vars,options){return _.reduce(this.terms,function(memo,term){return memo*term.eval(vars,options);},1);},codegen:function codegen(){return _.map(this.terms,function(term){return"("+term.codegen()+")";}).join(" * ")||"0";},print:function print(){return _.map(this.terms,function(term){return term instanceof Add?"("+term.print()+")":term.print();}).join("*");},getUnits:function getUnits(){var tmUnits=_(this.terms).chain().map(function(term){return term.getUnits();}).flatten().value();tmUnits.sort(function(a,b){return a.unit<b.unit;});return tmUnits;},// since we don't care about commutativity, we can render a Mul any way we choose
// so we follow convention: first any negatives, then any numbers, then everything else
tex:function tex(){var cdot=" \\cdot ";var terms=_.groupBy(this.terms,function(term){if(term.isDivide()){return"inverse";}else if(term instanceof Num){return"number";}else{return"other";}});var inverses=terms.inverse||[];var numbers=terms.number||[];var others=terms.other||[];var negatives="";var numerator;// check all the numbers to see if there is a rational we can extract,
// since we would like 1/2x/y to come out as \frac{1}{2}\frac{x}{y},
// and not \frac{1x}{2y}.
for(var i=0;i<numbers.length;i++){var isRational=numbers[i]instanceof Rational&&!(numbers[i]instanceof Int);if(isRational&&others.length>0&&inverses.length>0){var withThisRemoved=numbers.slice();withThisRemoved.splice(i,1);var newTerms=withThisRemoved.concat(inverses).concat(others);return numbers[i].tex()+new Mul(newTerms).tex();}}numbers=_.compact(_.map(numbers,function(term){var hasDenom=term instanceof Rational&&!(term instanceof Int);var shouldPushDown=!term.hints.fraction||inverses.length>0;if(hasDenom&&shouldPushDown){// e.g. 3x/4 -> 3/4*x (internally) -> 3x/4 (rendered)
inverses.push(new Pow(new Int(term.d),Num.Div));var number=new Int(term.n);number.hints=term.hints;return _.any(term.hints)?number:null;}else{return term;}}));if(numbers.length===0&&others.length===1){// e.g. (x+y)/z -> \frac{x+y}{z}
numerator=others[0].tex();}else{var tex="";_.each(numbers,function(term){if(term.hints.subtract&&term.hints.entered){negatives+="-";tex+=(tex?cdot:"")+term.abs().tex();}else if(term instanceof Int&&term.n===-1&&(term.hints.negate||term.hints.subtract)){// e.g. -1*-1 -> --1
// e.g. -1*x -> -x
negatives+="-";}else{// e.g. 2*3 -> 2(dot)3
tex+=(tex?cdot:"")+term.tex();}});_.each(others,function(term){if(term.needsExplicitMul()){// e.g. 2*2^3 -> 2(dot)2^3
tex+=(tex?cdot:"")+term.tex();}else if(term instanceof Add){// e.g. (a+b)*c -> (a+b)c
tex+="("+term.tex()+")";}else{// e.g. a*b*c -> abc
tex+=term.tex();}});numerator=tex?tex:"1";}if(!inverses.length){return negatives+numerator;}else{var denominator=new Mul(_.invoke(inverses,"asDivide")).flatten().tex();return negatives+"\\frac{"+numerator+"}{"+denominator+"}";}},strip:function strip(){var terms=_.map(this.terms,function(term){return term instanceof Num?term.abs():term.strip();});return new Mul(terms).flatten();},// expand numerator and denominator separately
expand:function expand(){var isAdd=function isAdd(term){return term instanceof Add;};var isInverse=function isInverse(term){return term instanceof Pow&&term.exp.isNegative();};var isInverseAdd=function isInverseAdd(term){return isInverse(term)&&isAdd(term.base);};var mul=this.recurse("expand").flatten();var hasAdd=_.any(mul.terms,isAdd);var hasInverseAdd=_.any(mul.terms,isInverseAdd);if(!(hasAdd||hasInverseAdd)){return mul;}var terms=_.groupBy(mul.terms,isInverse);var normals=terms[false]||[];var inverses=terms[true]||[];if(hasAdd){var grouped=_.groupBy(normals,isAdd);var adds=grouped[true]||[];var others=grouped[false]||[];// loop over each additive sequence
var expanded=_.reduce(adds,function(expanded,add){// loop over each expanded array of terms
return _.reduce(expanded,function(temp,array){// loop over each additive sequence's terms
return temp.concat(_.map(add.terms,function(term){return array.concat(term);}));},[]);},[[]]);// join each fully expanded array of factors with remaining multiplicative factors
var muls=_.map(expanded,function(array){return new Mul(others.concat(array)).flatten();});normals=[new Add(muls)];}if(hasInverseAdd){var denominator=new Mul(_.invoke(inverses,"getDenominator")).flatten();inverses=[new Pow(denominator.expand(),Num.Div)];}return new Mul(normals.concat(inverses)).flatten();},factor:function factor(options){var factored=this.recurse("factor",options).flatten();if(!(factored instanceof Mul)){return factored;}// Combine any factored out Rationals into one, but don't collect
var grouped=_.groupBy(factored.terms,function(term){return term instanceof Rational;});// Could also accomplish this by passing a new option
// e.g. return  memo.mul(term, {autocollect: false});
// TODO(alex): Decide whether this is a good use of options or not
var rational=_.reduce(grouped[true],function(memo,term){return{n:memo.n*term.n,d:memo.d*term.d};},{n:1,d:1});if(rational.d===1){rational=new Int(rational.n);}else{rational=new Rational(rational.n,rational.d);}return new Mul((grouped[false]||[]).concat(rational)).flatten();},collect:function collect(options){var partitioned=this.recurse("collect",options).partition();var number=partitioned[0].reduce(options);// e.g. 0*x -> 0
if(number.eval()===0){return Num.Zero;}var others=partitioned[1].flatten();// e.g. 2*2 -> 4
// e.g. 2*2*x -> 4*x
if(!(others instanceof Mul)){return new Mul(number,others).flatten();}others=others.terms;// [Expr base, Expr exp]
var pairs=[];_.each(others,function(term){if(term instanceof Pow){pairs.push([term.base,term.exp]);}else{pairs.push([term,Num.One]);}});// {(Expr base).print(): [[Expr base, Expr exp]]}
var grouped=_.groupBy(pairs,function(pair){return pair[0].normalize().print();});// [[Expr base, Expr exp]]
var summed=_.compact(_.map(grouped,function(pairs){var base=pairs[0][0];var sum=new Add(_.zip.apply(_,pairs)[1]);var exp=sum.collect(options);if(exp instanceof Num&&exp.eval()===0){return null;}else{return[base,exp];}}));// XXX `pairs` is shadowed four or five times in this function
var pairs=_.groupBy(summed,function(pair){if(pair[0]instanceof Trig&&pair[0].isBasic()){return"trig";}else if(pair[0]instanceof Log){return"log";}else{return"expr";}});var trigs=pairs.trig||[];var logs=pairs.log||[];var exprs=pairs.expr||[];if(trigs.length>1){// combine sines and cosines into other trig functions
// {Trig.arg.print(): [[Trig base, Expr exp]]}
var byArg=_.groupBy(trigs,function(pair){return pair[0].arg.normalize().print();});trigs=[];_.each(byArg,function(pairs){var arg=pairs[0][0].arg;// {Trig.type: Expr exp}
var funcs={sin:Num.Zero,cos:Num.Zero};_.each(pairs,function(pair){funcs[pair[0].type]=pair[1];});if(Mul.handleNegative(funcs.sin).collect(options).equals(funcs.cos)){// e.g. sin^x(y)/cos^x(y) -> tan^x(y)
if(funcs.cos.isNegative()){funcs={tan:funcs.sin};}else{funcs={cot:funcs.cos};}}// TODO(alex): combine even if exponents not a perfect match
// TODO(alex): transform 1/sin and 1/cos into csc and sec
_.each(funcs,function(exp,type){trigs.push([new Trig(type,arg),exp]);});});}if(logs.length>1){// combine logs with the same base
// {Log.base.print(): [[Log base, Expr exp]]}
var byBase=_.groupBy(logs,function(pair){return pair[0].base.normalize().print();});logs=[];_.each(byBase,function(pairs){// only combine two logs of the same base, otherwise commutative
// differences result in different equally valid output
// e.g. ln(x)/ln(z)*ln(y) -> log_z(x)*ln(y)
// e.g. ln(x)*ln(y)/ln(z) -> ln(x)*log_z(y)
if(pairs.length===2&&Mul.handleNegative(pairs[0][1]).collect(options).equals(pairs[1][1])){// e.g. ln(x)^y/ln(b)^y -> log_b(x)^y
if(pairs[0][1].isNegative()){logs.push([new Log(pairs[0][0].power,pairs[1][0].power),pairs[1][1]]);}else{logs.push([new Log(pairs[1][0].power,pairs[0][0].power),pairs[0][1]]);}}else{logs=logs.concat(pairs);}});// TODO(alex): combine if all inverses are the same e.g. ln(y)*ln(z)/ln(x)/ln(x)
}pairs=trigs.concat(logs).concat(exprs);var collected=_.map(pairs,function(pair){return new Pow(pair[0],pair[1]).collect(options);});return new Mul([number].concat(collected)).flatten();},isSubtract:function isSubtract(){return _.any(this.terms,function(term){return term instanceof Num&&term.hints.subtract;});},// factor a single -1 in to the Mul
// combine with a Num if all Nums are positive, else add as a term
factorIn:function factorIn(hint){var partitioned=this.partition();var numbers=partitioned[0].terms;var fold=numbers.length&&_.all(numbers,function(num){return num.n>0;});if(fold){// e.g. - x*2*3 -> x*-2*3
var num=numbers[0].negate();num.hints=numbers[0].hints;return this.replace(numbers[0],num.addHint(hint));}else{// e.g. - x*y -> -1*x*y
// e.g. - x*-2 -> -1*x*-2
return new Mul([Num.negativeOne(hint)].concat(this.terms));}},// factor out a single hinted -1 (assume it is the division hint)
// TODO(alex): make more general or rename to be more specific
factorOut:function factorOut(){var factored=false;var terms=_.compact(_.map(this.terms,function(term,i,list){if(!factored&&term instanceof Num&&term.hints.divide){factored=true;return term.n!==-1?term.negate():null;}else{return term;}}));if(terms.length===1){return terms[0];}else{return new Mul(terms);}},reduce:function reduce(options){return _.reduce(this.terms,function(memo,term){return memo.mul(term,options);},this.identity);},findGCD:function findGCD(factor){return new Mul(_.invoke(this.terms,"findGCD",factor)).flatten();},asMul:function asMul(){return this;},asPositiveFactor:function asPositiveFactor(){if(this.isPositive()){return this;}else{var terms=_.invoke(this.collect().terms,"asPositiveFactor");return new Mul(terms).flatten();}},isNegative:function isNegative(){return _.any(_.invoke(this.collect().terms,"isNegative"));},fold:function fold(){return Mul.fold(this);},negate:function negate(){var isNum=function isNum(expr){return expr instanceof Num;};if(_.any(this.terms,isNum)){var num=_.find(this.terms,isNum);return this.replace(num,num.negate());}else{return new Mul([Num.Neg].concat(this.terms));}}});// static methods for the sequence types
_.each([Add,Mul],function(type){_.extend(type,{// create a new sequence unless left is already one (returns a copy)
createOrAppend:function createOrAppend(left,right){if(left instanceof type){return new type(left.terms.concat(right));}else{return new type(left,right);}}});});_.extend(Mul,{// negative signs should be folded into numbers whenever possible
// never fold into a Num that's already negative or a Mul that has a negative Num
// an optional hint is kept track of to properly render user input
// an empty hint means negation
handleNegative:function handleNegative(expr,hint){if(expr instanceof Num&&expr.n>0){// e.g. - 2 -> -2
var negated=expr.negate();// TODO(alex): rework hint system so that this isn't necessary
negated.hints=expr.hints;return negated.addHint(hint);}else if(expr instanceof Mul){// e.g. - x*2*3 -> x*-2*3
// e.g. - x*y -> -1*x*y
// e.g. - x*-2 -> -1*x*-2
return expr.factorIn(hint);}else{// e.g. - x -> -1*x
return new Mul(Num.negativeOne(hint),expr);}},// division can create either a Rational or a Mul
handleDivide:function handleDivide(left,right){// dividing by a Mul is the same as repeated division by its terms
if(right instanceof Mul){var first=Mul.handleDivide(left,right.terms[0]);var rest=new Mul(_.rest(right.terms)).flatten();return Mul.handleDivide(first,rest);}var isInt=function isInt(expr){return expr instanceof Int;};var isRational=function isRational(expr){return expr instanceof Rational;};// for simplification purposes, fold Ints into Rationals if possible
// e.g. 3x / 4 -> 3/4 * x (will still render as 3x/4)
if(isInt(right)&&left instanceof Mul&&_.any(left.terms,isInt)){// search from the right
var reversed=left.terms.slice().reverse();var num=_.find(reversed,isRational);if(!isInt(num)){return new Mul(left.terms.concat([new Rational(1,right.n).addHint("fraction")]));}var rational=new Rational(num.n,right.n);rational.hints=num.hints;// in the case of something like 1/3 * 6/8, we want the
// 6/8 to be considered a fraction, not just a division
if(num===reversed[0]){rational=rational.addHint("fraction");}var result;if(num.n<0&&right.n<0){rational.d=-rational.d;return left.replace(num,[Num.Neg,rational]);}else{return left.replace(num,rational);}}var divide=function divide(a,b){if(b instanceof Int){if(a instanceof Int){if(a.n<0&&b.n<0){// e.g. -2 / -3 -> -1*-2/3
return[Num.Neg,new Rational(a.n,-b.n).addHint("fraction")];}else{// e.g. 2 / 3 -> 2/3
// e.g. -2 / 3 -> -2/3
// e.g. 2 / -3 -> -2/3
return[new Rational(a.n,b.n).addHint("fraction")];}}else{// e.g. x / 3 -> x*1/3
// e.g. x / -3 -> x*-1/3
var inverse=new Rational(1,b.eval());if(b.eval()<0){return[a,inverse.addHint("negate")];}else{return[a,inverse];}}}else{var pow;if(b instanceof Trig&&b.exp){// e.g. sin^2(x) -> sin(x)^2
var exp=b.exp;b.exp=undefined;b=new Pow(b,exp);}if(b instanceof Pow){// e.g. (x^2) ^ -1 -> x^-2
// e.g. (x^y) ^ -1 -> x^(-1*y)
// e.g. (x^(yz)) ^ -1 -> x^(-1*y*z)
pow=new Pow(b.base,Mul.handleNegative(b.exp,"divide"));}else{// e.g. x ^ -1 -> x^-1
pow=new Pow(b,Num.Div);}if(a instanceof Int&&a.n===1){// e.g. 1 / x -> x^-1
return[pow];}else{// e.g. 2 / x -> 2*x^-1
return[a,pow];}}};if(left instanceof Mul){var divided=divide(_.last(left.terms),right);return new Mul(_.initial(left.terms).concat(divided));}else{var divided=divide(left,right);return new Mul(divided).flatten();}},// fold negative signs into numbers if possible
// negative signs are not the same as multiplying by negative one!
// e.g. -x      ->  -1*x    simplified
// e.g. -2*x    ->  -2*x    simplified
// e.g. -x*2    ->  -1*x*2  not simplified -> x*-2 simplified
// e.g. -1*x*2  ->  -1*x*2  not simplified
// also fold multiplicative terms into open Trig and Log nodes
// e.g. (sin x)*x -> sin(x)*x
// e.g. sin(x)*x -> sin(x)*x
// e.g. sin(x)*(x) -> sin(x)*x
// e.g. sin(x)*sin(y) -> sin(x)*sin(y)
fold:function fold(expr){if(expr instanceof Mul){// assuming that this will be second to last
var trigLog=_.find(_.initial(expr.terms),function(term){return(term instanceof Trig||term instanceof Log)&&term.hints.open;});var index=_.indexOf(expr.terms,trigLog);if(trigLog){var last=_.last(expr.terms);if(trigLog.hints.parens||last.hints.parens||last.has(Trig)||last.has(Log)){trigLog.hints.open=false;}else{var newTrigLog;if(trigLog instanceof Trig){newTrigLog=Trig.create([trigLog.type,trigLog.exp],Mul.createOrAppend(trigLog.arg,last).fold());}else{newTrigLog=Log.create(trigLog.base,Mul.createOrAppend(trigLog.power,last).fold());}if(index===0){return newTrigLog;}else{return new Mul(expr.terms.slice(0,index).concat(newTrigLog)).fold();}}}var partitioned=expr.partition();var numbers=partitioned[0].terms;var pos=function pos(num){return num.n>0;};var neg=function neg(num){return num.n===-1&&num.hints.negate;};var posOrNeg=function posOrNeg(num){return pos(num)||neg(num);};if(numbers.length>1&&_.some(numbers,neg)&&_.some(numbers,pos)&&_.every(numbers,posOrNeg)){var firstNeg=_.indexOf(expr.terms,_.find(expr.terms,neg));var firstNum=_.indexOf(expr.terms,_.find(expr.terms,pos));// e.g. -x*2 -> x*-2
if(firstNeg<firstNum){return expr.replace(firstNum,expr.terms[firstNum].negate()).remove(firstNeg);}}}// in all other cases, make no change
return expr;}});/* exponentiation */function Pow(base,exp){this.base=base;this.exp=exp;}Pow.prototype=new Expr();_.extend(Pow.prototype,{func:Pow,args:function args(){return[this.base,this.exp];},eval:function _eval(vars,options){var evaledBase=this.base.eval(vars,options);var evaledExp=this.exp.eval(vars,options);// Math.pow unequivocally returns NaN when provided with both a
// negative base and a fractional exponent. However, in some cases, we
// know that our exponent is actually valid for use with negative
// bases (e.g., (-5)^(1/3)).
//
// Here, we explicitly check for such cases. We really only handle a
// limited subset (by requiring that the exponent is rational with an
// odd denominator), but it's still useful.
//   See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow
if(evaledBase<0){var simplifiedExp=this.exp.simplify();// If Float, convert to a Rational to enable the logic below
if(simplifiedExp instanceof Float){var num=simplifiedExp.n;var decimals=(num-num.toFixed()).toString().length-2;var denominator=Math.pow(10,decimals);var rationalExp=new Rational(num*denominator,denominator);simplifiedExp=rationalExp.simplify();}if(simplifiedExp instanceof Rational){var oddDenominator=Math.abs(simplifiedExp.d)%2===1;if(oddDenominator){var oddNumerator=Math.abs(simplifiedExp.n)%2===1;var sign=oddNumerator?-1:1;return sign*Math.pow(-1*evaledBase,evaledExp);}}}return Math.pow(evaledBase,evaledExp);},getUnits:function getUnits(){return this.base.getUnits().map(function(unit){return{unit:unit.unit,pow:unit.pow*this.exp.n};}.bind(this));},codegen:function codegen(){return"Math.pow("+this.base.codegen()+", "+this.exp.codegen()+")";},print:function print(){var base=this.base.print();if(this.base instanceof Seq||this.base instanceof Pow||this.base instanceof Rational&&!this.base.isSimple()||this.base instanceof Num&&this.base.isNegative()){base="("+base+")";}return base+"^("+this.exp.print()+")";},tex:function tex(){if(this.isDivide()){// e.g. x ^ -1 w/hint -> 1/x
return"\\frac{1}{"+this.asDivide().tex()+"}";}else if(this.isRoot()){if(this.exp.n!==1){error("Node marked with hint 'root' does not have exponent "+"of form 1/x.");}if(this.exp.d===2){// e.g. x ^ 1/2 w/hint -> sqrt{x}
return"\\sqrt{"+this.base.tex()+"}";}else{// e.g. x ^ 1/y w/hint -> sqrt[y]{x}
return"\\sqrt["+this.exp.d+"]{"+this.base.tex()+"}";}}else if(this.base instanceof Trig&&!this.base.isInverse()&&this.exp instanceof Num&&this.exp.isSimple()&&this.exp.eval()>=0){// e.g sin(x) ^ 2 -> sin^2(x)
var split=this.base.tex({split:true});return split[0]+"^{"+this.exp.tex()+"}"+split[1];}else{// e.g. x ^ y -> x^y
var base=this.base.tex();if(this.base instanceof Seq||this.base instanceof Pow||this.base instanceof Num&&!this.base.isSimple()){// e.g. a+b ^ c -> (a+b)^c
base="("+base+")";}else if(this.base instanceof Trig||this.base instanceof Log){// e.g. ln(x) ^ 2 -> [ln(x)]^2
base="["+base+"]";}return base+"^{"+this.exp.tex()+"}";}},needsExplicitMul:function needsExplicitMul(){return this.isRoot()?false:this.base.needsExplicitMul();},expand:function expand(){var pow=this.recurse("expand");if(pow.base instanceof Mul){// e.g. (ab)^c -> a^c*b^c
var terms=_.map(pow.base.terms,function(term){return new Pow(term,pow.exp);});return new Mul(terms).expand();}else if(pow.base instanceof Add&&pow.exp instanceof Int&&pow.exp.abs().eval()>1){// e.g. (a+b)^2 -> a*a+a*b+a*b+b*b
// e.g. (a+b)^-2 -> (a*a+a*b+a*b+b*b)^-1
var positive=pow.exp.eval()>0;var n=pow.exp.abs().eval();var signed=function signed(mul){return positive?mul:new Pow(mul,Num.Div);};// compute and cache powers of 2 up to n
var cache={1:pow.base};for(var i=2;i<=n;i*=2){var mul=new Mul(cache[i/2],cache[i/2]);cache[i]=mul.expand().collect();}// if n is a power of 2, you're done!
if(_.has(cache,n)){return signed(cache[n]);}// otherwise decompose n into powers of 2 ...
var indices=_.map(n.toString(2).split(""),function(str,i,list){return Number(str)*Math.pow(2,list.length-i-1);});indices=_.without(indices,0);// ... then combine
var mul=new Mul(_.pick(cache,indices)).expand().collect();return signed(mul);}else if(pow.exp instanceof Add){// DEFINITELY want behind super-simplify() flag
// e.g. x^(a+b) -> x^a*x^b
var terms=_.map(pow.exp.terms,function(term){return new Pow(pow.base,term).expand();});return new Mul(terms).expand();}else{return pow;}},factor:function factor(){var pow=this.recurse("factor");if(pow.base instanceof Mul){var terms=_.map(pow.base.terms,function(term){if(term instanceof Int&&pow.exp.equals(Num.Div)){// Anything that can be a Rational should be a Rational
// e.g. 2^(-1) -> 1/2
return new Rational(1,term.n);}else{return new Pow(term,pow.exp);}});return new Mul(terms);}else{return pow;}},collect:function collect(options){if(this.base instanceof Pow){// collect this first to avoid having to deal with float precision
// e.g. sqrt(2)^2 -> 2, not 2.0000000000000004
// e.g. (x^y)^z -> x^(yz)
var base=this.base.base;var exp=Mul.createOrAppend(this.base.exp,this.exp);return new Pow(base,exp).collect(options);}var pow=this.recurse("collect",options);var isSimilarLog=function isSimilarLog(term){return term instanceof Log&&term.base.equals(pow.base);};if(pow.exp instanceof Num&&pow.exp.eval()===0){// e.g. x^0 -> 1
return Num.One;}else if(pow.exp instanceof Num&&pow.exp.eval()===1){// e.g. x^1 -> x
return pow.base;}else if(isSimilarLog(pow.exp)){// e.g. b^(log_b(x)) -> x
return pow.exp.power;}else if(pow.exp instanceof Mul&&_.any(pow.exp.terms,isSimilarLog)){// e.g. b^(2*y*log_b(x)) -> x^(2*y)
var log=_.find(pow.exp.terms,isSimilarLog);var base=log.power;var exp=pow.exp.remove(log).flatten();return new Pow(base,exp).collect(options);}else if(pow.base instanceof Num&&pow.exp instanceof Num){// TODO(alex): Consider encapsualting this logic (and similar logic
// elsewhere) into a separate Decimal class for user-entered floats
if(options&&options.preciseFloats){// Avoid creating an imprecise float
// e.g. 23^1.5 -> 12167^0.5, not ~110.304
// If you take the root as specified by the denominator and
// end up with more digits after the decimal point,
// the result is imprecise. This works for rationals as well
// as floats, but ideally rationals should be pre-processed
// e.g. (1/27)^(1/3) -> 1/3 to avoid most cases.
// TODO(alex): Catch such cases and avoid converting to floats.
var exp=pow.exp.asRational();var decimalsInBase=pow.base.getDecimalPlaces();var root=new Pow(pow.base,new Rational(1,exp.d));var decimalsInRoot=root.collect().getDecimalPlaces();if(decimalsInRoot>decimalsInBase){// Collecting over this denominator would result in an
// imprecise float, so avoid doing so.
var newBase=new Pow(pow.base,new Int(exp.n)).collect();return new Pow(newBase,new Rational(1,exp.d));}}// e.g. 4^1.5 -> 8
return pow.base.raiseToThe(pow.exp,options);}else{return pow;}},// checks whether this Pow represents user-entered division
isDivide:function isDivide(){var isDiv=function isDiv(arg){return arg instanceof Num&&arg.hints.divide;};return isDiv(this.exp)||this.exp instanceof Mul&&_.any(this.exp.terms,isDiv);},// assuming this Pow represents user-entered division, returns the denominator
asDivide:function asDivide(){if(this.exp instanceof Num){if(this.exp.eval()===-1){return this.base;}else{var negated=this.exp.negate();negated.hints=_.clone(this.exp.hints);negated.hints.divide=false;return new Pow(this.base,negated);}}else if(this.exp instanceof Mul){return new Pow(this.base,this.exp.factorOut());}else{error("called asDivide() on an Expr that wasn't a Num or Mul");}},isRoot:function isRoot(){return this.exp instanceof Rational&&this.exp.hints.root;},isSquaredTrig:function isSquaredTrig(){return this.base instanceof Trig&&!this.base.isInverse()&&this.exp instanceof Num&&this.exp.eval()===2;},// extract whatever denominator makes sense, ignoring hints
// if negative exponent, will recursively include the base's denominator as well
getDenominator:function getDenominator(){if(this.exp instanceof Num&&this.exp.eval()===-1){return Mul.createOrAppend(this.base,this.base.getDenominator()).flatten();}else if(this.exp.isNegative()){var pow=new Pow(this.base,Mul.handleNegative(this.exp).collect());return Mul.createOrAppend(pow,pow.collect().getDenominator()).flatten();}else if(this.base instanceof Num){return new Pow(this.base.getDenominator(),this.exp).collect();}else{return Num.One;}},findGCD:function findGCD(factor){var base,exp;if(factor instanceof Pow){base=factor.base;exp=factor.exp;}else{base=factor;exp=Num.One;}// GCD is only relevant if same base
if(this.base.equals(base)){if(this.exp.equals(exp)){// exact match
// e.g. GCD(x^y^z, x^y^z) -> x^y^z
return this;}else if(this.exp instanceof Num&&exp instanceof Num){// two numerical exponents
// e.g. GCD(x^3, x^2) -> x^2
return new Pow(this.base,Num.min(this.exp,exp)).collect();}else if(this.exp instanceof Num||exp instanceof Num){// one numerical exponent
// e.g. GCD(x^2, x^y) -> 1
return Num.One;}var expA=this.exp.asMul().partition();var expB=exp.asMul().partition();if(expA[1].equals(expB[1])){// exponents match except for coefficient
// e.g. GCD(x^3y, x^y) -> x^y
var coefficient=Num.min(expA[0].reduce(),expB[0].reduce());var mul=new Mul(coefficient,expA[1].flatten()).flatten();return new Pow(base,mul).collect();}}return Num.One;},isPositive:function isPositive(){if(this.base.isPositive()){return true;}var exp=this.exp.simplify();return exp instanceof Int&&exp.eval()%2===0;},asPositiveFactor:function asPositiveFactor(){if(this.isPositive()){return this;}else{var exp=this.exp.simplify();if(exp instanceof Int){var n=exp.eval();if(n>2){// e.g. x^3 -> x^2
return new Pow(this.base,new Int(n-1));}else if(n<-2){// e.g. x^-3 -> x^-2
return new Pow(this.base,new Int(n+1));}}return Num.One;}}});_.extend(Pow,{sqrt:function sqrt(arg){return new Pow(arg,Num.Sqrt);},nthroot:function nthroot(radicand,degree){var exp=Mul.fold(Mul.handleDivide(new Int(1),degree));// FIXME(johnsullivan): If oneOverDegree ends up being a pow object,
//     this "root" hint is lost between here and when tex() is called.
return new Pow(radicand,exp.addHint("root"));}});/* logarithm */function Log(base,power){this.base=base;this.power=power;}Log.prototype=new Expr();_.extend(Log.prototype,{func:Log,args:function args(){return[this.base,this.power];},eval:function _eval(vars,options){return Math.log(this.power.eval(vars,options))/Math.log(this.base.eval(vars,options));},codegen:function codegen(){return"(Math.log("+this.power.codegen()+") / Math.log("+this.base.codegen()+"))";},print:function print(){var power="("+this.power.print()+")";if(this.isNatural()){return"ln"+power;}else{return"log_("+this.base.print()+") "+power;}},tex:function tex(){var power="("+this.power.tex()+")";if(this.isNatural()){return"\\ln"+power;}else{return"\\log_{"+this.base.tex()+"}"+power;}},collect:function collect(options){var log=this.recurse("collect",options);if(log.power instanceof Num&&log.power.eval()===1){// e.g. ln(1) -> 0
return Num.Zero;}else if(log.base.equals(log.power)){// e.g. log_b(b) -> 1
return Num.One;}else if(log.power instanceof Pow&&log.power.base.equals(log.base)){// e.g. log_b(b^x) -> x
return log.power.exp;}else{return log;}},expand:function expand(){var log=this.recurse("expand");if(log.power instanceof Mul){// might want behind super-simplify() flag
// e.g. ln(xy) -> ln(x) + ln(y)
var terms=_.map(log.power.terms,function(term){// need to expand again in case new log powers are Pows
return new Log(log.base,term).expand();});return new Add(terms);}else if(log.power instanceof Pow){// e.g. ln(x^y) -> y*ln(x)
return new Mul(log.power.exp,new Log(log.base,log.power.base).expand()).flatten();}else if(!log.isNatural()){// e.g. log_b(x) -> ln(x)/ln(b)
return Mul.handleDivide(new Log(Const.e,log.power),new Log(Const.e,log.base));}else{return log;}},hints:_.extend(Log.prototype.hints,{open:false}),isPositive:function isPositive(){var log=this.collect();if(log.base instanceof Num&&log.power instanceof Num){return this.eval()>0;}else{return false;}},needsExplicitMul:function needsExplicitMul(){return false;},isNatural:function isNatural(){return this.base.equals(Const.e);}});_.extend(Log,{natural:function natural(){return Const.e;},common:function common(){return Num.Ten;},create:function create(base,power){var log=new Log(base,power);if(!power.hints.parens){log=log.addHint("open");}return log;}});/* trigonometric functions */function Trig(type,arg){this.type=type;this.arg=arg;}Trig.prototype=new Expr();_.extend(Trig.prototype,{func:Trig,args:function args(){return[this.type,this.arg];},functions:{sin:{eval:Math.sin,codegen:"Math.sin((",tex:"\\sin",expand:function expand(){return this;}},cos:{eval:Math.cos,codegen:"Math.cos((",tex:"\\cos",expand:function expand(){return this;}},tan:{eval:Math.tan,codegen:"Math.tan((",tex:"\\tan",expand:function expand(){return Mul.handleDivide(Trig.sin(this.arg),Trig.cos(this.arg));}},csc:{eval:function _eval(arg){return 1/Math.sin(arg);},codegen:"(1/Math.sin(",tex:"\\csc",expand:function expand(){return Mul.handleDivide(Num.One,Trig.sin(this.arg));}},sec:{eval:function _eval(arg){return 1/Math.cos(arg);},codegen:"(1/Math.cos(",tex:"\\sec",expand:function expand(){return Mul.handleDivide(Num.One,Trig.cos(this.arg));}},cot:{eval:function _eval(arg){return 1/Math.tan(arg);},codegen:"(1/Math.tan(",tex:"\\cot",expand:function expand(){return Mul.handleDivide(Trig.cos(this.arg),Trig.sin(this.arg));}},arcsin:{eval:Math.asin,codegen:"Math.asin((",tex:"\\arcsin"},arccos:{eval:Math.acos,codegen:"Math.acos((",tex:"\\arccos"},arctan:{eval:Math.atan,codegen:"Math.atan((",tex:"\\arctan"},arccsc:{eval:function _eval(arg){return Math.asin(1/arg);},codegen:"Math.asin(1/(",tex:"\\operatorname{arccsc}"},arcsec:{eval:function _eval(arg){return Math.acos(1/arg);},codegen:"Math.acos(1/(",tex:"\\operatorname{arcsec}"},arccot:{eval:function _eval(arg){return Math.atan(1/arg);},codegen:"Math.atan(1/(",tex:"\\operatorname{arccot}"},sinh:{eval:function _eval(arg){return(Math.exp(arg)-Math.exp(-arg))/2;},codegen:function codegen(argStr){return"((Math.exp("+argStr+") - Math.exp(-("+argStr+"))) / 2)";},tex:"\\sinh",expand:function expand(){return this;}},cosh:{eval:function _eval(arg){return(Math.exp(arg)+Math.exp(-arg))/2;},codegen:function codegen(argStr){return"((Math.exp("+argStr+") + Math.exp(-("+argStr+"))) / 2)";},tex:"\\cosh",expand:function expand(){return this;}},tanh:{eval:function _eval(arg){return(Math.exp(arg)-Math.exp(-arg))/(Math.exp(arg)+Math.exp(-arg));},codegen:function codegen(argStr){return"("+"(Math.exp("+argStr+") - Math.exp(-("+argStr+")))"+" / "+"(Math.exp("+argStr+") + Math.exp(-("+argStr+")))"+")";},tex:"\\tanh",expand:function expand(){return Mul.handleDivide(Trig.sinh(this.arg),Trig.cosh(this.arg));}},csch:{eval:function _eval(arg){return 2/(Math.exp(arg)-Math.exp(-arg));},codegen:function codegen(argStr){return"(2 / (Math.exp("+argStr+") - Math.exp(-("+argStr+"))))";},tex:"\\csch",expand:function expand(){return Mul.handleDivide(Num.One,Trig.sinh(this.arg));}},sech:{eval:function _eval(arg){return 2/(Math.exp(arg)+Math.exp(-arg));},codegen:function codegen(argStr){return"(2 / (Math.exp("+argStr+") + Math.exp(-("+argStr+"))))";},tex:"\\sech",expand:function expand(){return Mul.handleDivide(Num.One,Trig.cosh(this.arg));}},coth:{eval:function _eval(arg){return(Math.exp(arg)+Math.exp(-arg))/(Math.exp(arg)-Math.exp(-arg));},codegen:function codegen(argStr){return"("+"(Math.exp("+argStr+") + Math.exp(-("+argStr+")))"+" / "+"(Math.exp("+argStr+") - Math.exp(-("+argStr+")))"+")";},tex:"\\coth",expand:function expand(){return Mul.handleDivide(Trig.cosh(this.arg),Trig.sinh(this.arg));}}},isEven:function isEven(){return _.contains(["cos","sec"],this.type);},isInverse:function isInverse(){return this.type.indexOf("arc")===0;},isBasic:function isBasic(){return _.contains(["sin","cos"],this.type);},eval:function _eval(vars,options){var func=this.functions[this.type].eval;var arg=this.arg.eval(vars,options);return func(arg);},codegen:function codegen(){var func=this.functions[this.type].codegen;if(typeof func==="function"){return func(this.arg.codegen());}else if(typeof func==="string"){return func+this.arg.codegen()+"))";}else{throw new Error("codegen not implemented for "+this.type);}},print:function print(){return this.type+"("+this.arg.print()+")";},tex:function tex(options){var func=this.functions[this.type].tex;var arg="("+this.arg.tex()+")";return options&&options.split?[func,arg]:func+arg;},hints:_.extend(Trig.prototype.hints,{open:false}),isPositive:function isPositive(){var trig=this.collect();if(trig.arg instanceof Num){return this.eval()>0;}else{return false;}},completeParse:function completeParse(){if(this.exp){var pow=new Pow(this,this.exp);this.exp=undefined;return pow;}else{return this;}},// TODO(alex): does every new node type need to redefine these?
needsExplicitMul:function needsExplicitMul(){return false;},expand:function expand(){var trig=this.recurse("expand");if(!trig.isInverse()){// e.g. tan(x) -> sin(x)/cos(x)
var expand=trig.functions[trig.type].expand;return _.bind(expand,trig)();}else{return trig;}},collect:function collect(options){var trig=this.recurse("collect",options);if(!trig.isInverse()&&trig.arg.isNegative()){var arg;if(trig.arg instanceof Num){arg=trig.arg.abs();}else{arg=Mul.handleDivide(trig.arg,Num.Neg).collect(options);}if(trig.isEven()){// e.g. cos(-x) -> cos(x)
return new Trig(trig.type,arg);}else{// e.g. sin(-x) -> -sin(x)
return new Mul(Num.Neg,new Trig(trig.type,arg));}}else{return trig;}}});_.extend(Trig,{create:function create(pair,arg){var type=pair[0];var exp=pair[1];if(exp&&exp.equals(Num.Neg)){// e.g. sin^-1(x) -> arcsin(x)
type="arc"+type;exp=undefined;}var trig=new Trig(type,arg);if(!arg.hints.parens){trig=trig.addHint("open");}if(exp){trig.exp=exp;}return trig;},sin:function sin(arg){return new Trig("sin",arg);},cos:function cos(arg){return new Trig("cos",arg);},sinh:function sinh(arg){return new Trig("sinh",arg);},cosh:function cosh(arg){return new Trig("cosh",arg);}});function Abs(arg){this.arg=arg;}Abs.prototype=new Expr();_.extend(Abs.prototype,{func:Abs,args:function args(){return[this.arg];},eval:function _eval(vars,options){return Math.abs(this.arg.eval(vars,options));},codegen:function codegen(){return"Math.abs("+this.arg.codegen()+")";},print:function print(){return"abs("+this.arg.print()+")";},tex:function tex(){return"\\left|"+this.arg.tex()+"\\right|";},collect:function collect(options){var abs=this.recurse("collect",options);if(abs.arg.isPositive()){// e.g. |2^x| -> 2^x
return abs.arg;}else if(abs.arg instanceof Num){// e.g. |-2| -> 2
return abs.arg.abs();}else if(abs.arg instanceof Mul){// e.g. |-2*pi*x| -> 2*pi*|x|
var terms=_.groupBy(abs.arg.terms,function(term){if(term.isPositive()){return"positive";}else if(term instanceof Num){return"number";}else{return"other";}});var positives=terms.positive.concat(_.invoke(terms.number,"abs"));if(terms.other.length){positives.push(new Abs(new Mul(terms.other).flatten()));}return new Mul(positives).flatten();}else{return abs;}},// this should definitely be behind a super-simplify flag
expand:function expand(){var abs=this.recurse("expand");if(abs.arg instanceof Mul){// e.g. |xyz| -> |x|*|y|*|z|
var terms=_.map(abs.arg.terms,function(term){return new Abs(term);});return new Mul(terms);}else{return abs;}},isPositive:function isPositive(){return true;}});/* equation */function Eq(left,type,right){this.left=left;this.type=type;this.right=right;}Eq.prototype=new Expr();_.extend(Eq.prototype,{func:Eq,args:function args(){return[this.left,this.type,this.right];},needsExplicitMul:function needsExplicitMul(){return false;},print:function print(){return this.left.print()+this.type+this.right.print();},signs:{"=":" = ","<":" < ",">":" > ","<>":" \\ne ","<=":" \\le ",">=":" \\ge "},tex:function tex(){return this.left.tex()+this.signs[this.type]+this.right.tex();},normalize:function normalize(){var eq=this.recurse("normalize");if(_.contains([">",">="],eq.type)){// inequalities should have the smaller side on the left
return new Eq(eq.right,eq.type.replace(">","<"),eq.left);}else{return eq;}},// convert this equation to an expression set to zero
// the expression is normalized to a canonical form
// e.g. y/2=x/4 -> y/2-x/4(=0) -> 2y-x(=0)
// unless unfactored is specified, will then divide through
asExpr:function asExpr(unfactored){var isZero=function isZero(expr){return expr instanceof Num&&expr.isSimple()&&expr.eval()===0;};// first convert to a sequence of additive terms
var terms=[];if(this.left instanceof Add){terms=_.clone(this.left.terms);}else if(!isZero(this.left)){terms=[this.left];}if(this.right instanceof Add){terms=terms.concat(this.right.negate().terms);}else if(!isZero(this.right)){terms.push(this.right.negate());}var isInequality=!this.isEquality();// Collect over each term individually to transform simple expressions
// into numbers that might have denominators, taking into account
// float precision. We have to be very careful to not introduce any
// irrational floats before asExpr() returns, because by definition
// they do not have exact denominators...
terms=_.invoke(terms,"collect",{preciseFloats:true});// ...and we multiply through by every denominator.
for(var i=0;i<terms.length;i++){var denominator=terms[i].getDenominator();// Can't multiply inequalities by non 100% positive factors
if(isInequality&&!denominator.isPositive()){denominator=denominator.asPositiveFactor();}if(!denominator.equals(Num.One)){terms=_.map(terms,function(term){return Mul.createOrAppend(term,denominator).simplify({once:true,preciseFloats:true});});}}var add=new Add(terms).flatten();return unfactored?add:this.divideThrough(add);},// divide through by every common factor in the expression
// e.g. 2y-4x(=0) -> y-2x(=0)
// TODO(alex): Make it an option to only divide by variables/expressions
// guaranteed to be nonzero
divideThrough:function divideThrough(expr){var isInequality=!this.isEquality();var simplified=expr.simplify({once:true});var factored=simplified.factor({keepNegative:isInequality});if(!(factored instanceof Mul)){return expr;}var terms=factored.terms;var isAdd=function isAdd(term){return term instanceof Add;};var hasVar=function hasVar(term){return!!term.getVars().length;};var isOne=function isOne(term){return term.equals(Num.One);};var grouped=_.groupBy(terms,isAdd);var adds=grouped[true]||[];var others=grouped[false]||[];if(adds.length&&this.isEquality()){// keep only Adds
// e.g. 2xy(z+1)(=0) -> z+1(=0)
return new Mul(adds).flatten();}var denominator=others;if(!adds.length){// if no Adds, keep all variable terms to preserve meaning
// e.g. 42xyz(=0) -> xyz(=0)
denominator=_.reject(denominator,hasVar);}if(isInequality){// can't divide inequalities by non 100% positive factors
// e.g. 42x^2y(z+1)(=0) -> y(z+1)(=0)
denominator=_.invoke(denominator,"asPositiveFactor");}// don't need to divide by one
denominator=_.reject(denominator,isOne);denominator=_.map(denominator,function(term){return new Pow(term,Num.Div);});var dividedResult=new Mul(terms.concat(denominator)).collect();// If the end result is the same as the original factoring,
// rollback the factoring and discard all intermediate steps.
if(dividedResult.equals(factored)){return simplified;}else{return dividedResult;}},isEquality:function isEquality(){return _.contains(["=","<>"],this.type);},compare:function compare(other){// expression comparisons are handled by Expr.compare()
if(!(other instanceof Eq)){return false;}var eq1=this.normalize();var eq2=other.normalize();if(eq1.type!==eq2.type){return false;}// need to collect to properly factor out common factors
// e.g x+2x=6 -> 3x=6 -> 3x-6(=0) -> x-2(=0)
var expr1=eq1.divideThrough(eq1.asExpr(/* unfactored */true).collect());var expr2=eq2.divideThrough(eq2.asExpr(/* unfactored */true).collect());if(eq1.isEquality()){// equals and not-equals can be subtracted either way
return expr1.compare(expr2)||expr1.compare(Mul.handleNegative(expr2));}else{return expr1.compare(expr2);}},// should only be done after compare() returns true to avoid false positives
sameForm:function sameForm(other){var eq1=this.normalize();var eq2=other.normalize();var same=eq1.left.sameForm(eq2.left)&&eq1.right.sameForm(eq2.right);if(eq1.isEquality()){// equals and not-equals can be commutative with respect to the sign
return same||eq1.left.sameForm(eq2.right)&&eq1.right.sameForm(eq2.left);}else{return same;}},// we don't want to override collect because it would turn y=x into y-x(=0)
// instead, we ask if the equation was in that form, would it be simplified?
isSimplified:function isSimplified(){var expr=this.asExpr(/* unfactored */true);var simplified=this.divideThrough(expr).simplify();return expr.equals(simplified)&&this.left.isSimplified()&&this.right.isSimplified();}});_.extend(Eq.prototype,{// Assumptions: Expression is of the form a+bx, and we solve for x
solveLinearEquationForVariable:function solveLinearEquationForVariable(variable){var expr=this.asExpr();if(!expr.is(Add)||expr.terms.length!==2){throw new Error("Can only handle linear equations of the form "+"a + bx (= 0)");}var hasVar=function hasVar(term){return term.has(Var)&&_.contains(term.getVars(),variable.symbol);};var a,b;if(hasVar(expr.terms[0])){a=Mul.handleNegative(expr.terms[1]);b=Mul.handleDivide(expr.terms[0],variable);}else{a=Mul.handleNegative(expr.terms[0]);b=Mul.handleDivide(expr.terms[1],variable);}return Mul.handleDivide(a,b).simplify();}});/* abstract symbol node */function Symbol(){}Symbol.prototype=new Expr();_.extend(Symbol.prototype,{needsExplicitMul:function needsExplicitMul(){return false;},findGCD:function findGCD(factor){if(factor instanceof Symbol||factor instanceof Num){return this.equals(factor)?this:Num.One;}else{return factor.findGCD(this);}}});/* function variable */function Func(symbol,arg){this.symbol=symbol;this.arg=arg;}Func.prototype=new Symbol();_.extend(Func.prototype,{func:Func,args:function args(){return[this.symbol,this.arg];},print:function print(){return this.symbol+"("+this.arg.print()+")";},tex:function tex(){return this.symbol+"("+this.arg.tex()+")";},eval:function _eval(vars,options){var arg=this.arg;var func=vars[this.symbol];var newVars=_.extend(_.clone(vars),{x:arg.eval(vars,options)});var parsedFunc=KAS.parse(func,options);if(parsedFunc.parsed){return parsedFunc.expr.eval(newVars,options);}// If parsedFunc isn't actually parsed, return its error
return parsedFunc;},codegen:function codegen(){return'vars["'+this.symbol+'"]('+this.arg.codegen()+')';},getUnits:function getUnits(){return this.arg.getUnits();},getVars:function getVars(excludeFunc){if(excludeFunc){return this.arg.getVars();}else{return _.union(this.arg.getVars(),[this.symbol]).sort();}},getConsts:function getConsts(){return this.arg.getConsts();}});/* variable */function Var(symbol,subscript){this.symbol=symbol;this.subscript=subscript;}Var.prototype=new Symbol();_.extend(Var.prototype,{func:Var,args:function args(){return[this.symbol,this.subscript];},exprArgs:function exprArgs(){return[];},recurse:function recurse(){return this;},print:function print(){var sub="";if(this.subscript){sub="_("+this.subscript.print()+")";}return this.symbol+sub;},// Provide a way to easily evalate expressions with the common case,
// subscripts that consist of a single number or symbol e.g. x_a or x_42
prettyPrint:function prettyPrint(){var sub=this.subscript;if(sub&&(sub instanceof Num||sub instanceof Symbol)){return this.symbol+"_"+sub.print();}else{return this.print();}},tex:function tex(){var sub="";if(this.subscript){sub="_{"+this.subscript.tex()+"}";}var prefix=this.symbol.length>1?"\\":"";return prefix+this.symbol+sub;},repr:function repr(){return"Var("+this.print()+")";},eval:function _eval(vars,options){return vars[this.prettyPrint()];},codegen:function codegen(){return'vars["'+this.prettyPrint()+'"]';},getVars:function getVars(){return[this.prettyPrint()];},isPositive:function isPositive(){return false;}});/* constant */function Const(symbol){this.symbol=symbol;}Const.prototype=new Symbol();_.extend(Const.prototype,{func:Const,args:function args(){return[this.symbol];},recurse:function recurse(){return this;},eval:function _eval(vars,options){if(this.symbol==="pi"){return Math.PI;}else if(this.symbol==="e"){return Math.E;}},codegen:function codegen(){if(this.symbol==="pi"){return"Math.PI";}else if(this.symbol==="e"){return"Math.E";}},print:function print(){return this.symbol;},tex:function tex(){if(this.symbol==="pi"){return"\\pi ";}else if(this.symbol==="e"){return"e";}},isPositive:function isPositive(){return this.eval()>0;},abs:function abs(){if(this.eval()>0){return this;}else{return Mul.handleNegative(this);}},getConsts:function getConsts(){return[this.print()];}});Const.e=new Const("e");Const.pi=new Const("pi");/* abstract number node */function Num(){}Num.prototype=new Expr();_.extend(Num.prototype,{repr:function repr(){return this.print();},strip:function strip(){return this.abs();},recurse:function recurse(){return this;},codegen:function codegen(){return this.print();},// takes another Num and returns a new Num
add:_abstract,mul:_abstract,// returns this Num's additive inverse
negate:_abstract,isSubtract:function isSubtract(){return this.hints.subtract;},// return the absolute value of the number
abs:_abstract,needsExplicitMul:function needsExplicitMul(){return true;},findGCD:_abstract,isPositive:function isPositive(){return this.eval()>0;},isNegative:function isNegative(){return this.eval()<0;},asPositiveFactor:function asPositiveFactor(){return this.isPositive()?this:this.abs();},// hints for interpreting and rendering user input
hints:_.extend(Num.prototype.hints,{negate:false,subtract:false,divide:false,root:false,fraction:false,entered:false}),// whether a number is considered simple (one term)
// e.g. for reals, ints and floats are simple
isSimple:_abstract,// Based on http://stackoverflow.com/a/10454560/2571482
getDecimalPlaces:function getDecimalPlaces(){var match=(""+this.n).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);if(match){return Math.max(0,// Number of digits right of decimal point
(match[1]?match[1].length:0)-(// Adjust for scientific notation
match[2]?+match[2]:0));}else{return 0;}},asRational:_abstract});/* rational number (n: numerator, d: denominator) */function Rational(numerator,denominator){var n=numerator;var d=denominator;if(d<0){n=-n;d=-d;}this.n=n;this.d=d;}Rational.prototype=new Num();_.extend(Rational.prototype,{func:Rational,args:function args(){return[this.n,this.d];},eval:function _eval(){return this.n/this.d;},print:function print(){return this.n.toString()+"/"+this.d.toString();},tex:function tex(){var tex="\\frac{"+Math.abs(this.n).toString()+"}{"+this.d.toString()+"}";return this.n<0?"-"+tex:tex;},add:function add(num,options){if(num instanceof Rational){return new Rational(this.n*num.d+this.d*num.n,this.d*num.d).collect();}else{return num.add(this,options);}},mul:function mul(num,options){if(num instanceof Rational){return new Rational(this.n*num.n,this.d*num.d).collect();}else{return num.mul(this,options);}},collect:function collect(){var gcd=Num.findGCD(this.n,this.d);var n=this.n/gcd;var d=this.d/gcd;if(d===1){return new Int(n);}else{return new Rational(n,d);}},negate:function negate(){return new Rational(-this.n,this.d);},abs:function abs(){return new Rational(Math.abs(this.n),this.d);},findGCD:function findGCD(factor){// Attempt to factor out common numerators and denominators to return
// a Rational instead of a Float
if(factor instanceof Rational){// For more background, see
// http://math.stackexchange.com/questions/151081/gcd-of-rationals
var numerator=Num.findGCD(this.n*factor.d,factor.n*this.d);var denominator=this.d*factor.d;// Create the rational, then call .collect() to simplify it
return new Rational(numerator,denominator).collect();}else if(factor instanceof Int){return new Rational(Num.findGCD(this.n,factor.n),this.d);}else{return factor.findGCD(this);}},// for now, assuming that exp is a Num
raiseToThe:function raiseToThe(exp){if(exp instanceof Int){var positive=exp.eval()>0;var abs=exp.abs().eval();var n=Math.pow(this.n,abs);var d=Math.pow(this.d,abs);if(positive){return new Rational(n,d).collect();}else{return new Rational(d,n).collect();}}else{return new Float(this.eval()).raiseToThe(exp);}},getDenominator:function getDenominator(){return new Int(this.d);},isSimple:function isSimple(){return false;},asRational:function asRational(){return this;}});/* integer (n: numerator/number) */function Int(number){this.n=number;}Int.prototype=new Rational(0,1);_.extend(Int.prototype,{func:Int,args:function args(){return[this.n];},print:function print(){return this.n.toString();},tex:function tex(){return this.n.toString();},negate:function negate(){return new Int(-this.n);},abs:function abs(){return new Int(Math.abs(this.n));},isSimple:function isSimple(){return true;},findGCD:function findGCD(factor){if(factor instanceof Int){return new Int(Num.findGCD(this.n,factor.n));}else{return factor.findGCD(this);}}});_.extend(Int,{create:function create(n){return new Int(n).addHint("entered");}});/* float (n: number) */function Float(number){this.n=number;}Float.prototype=new Num();_.extend(Float.prototype,{func:Float,args:function args(){return[this.n];},eval:function _eval(){return this.n;},// TODO(alex): when we internationalize number parsing/display
// we should make sure to use the appropriate decimal mark here
print:function print(){return this.n.toString();},tex:function tex(){return this.n.toString();},add:function add(num,options){if(options&&options.preciseFloats){return Float.toDecimalPlaces(this.n+num.eval(),Math.max(this.getDecimalPlaces(),num.getDecimalPlaces()));}else{return new Float(this.n+num.eval()).collect();}},mul:function mul(num,options){if(options&&options.preciseFloats){return Float.toDecimalPlaces(this.n*num.eval(),this.getDecimalPlaces()+num.getDecimalPlaces());}else{return new Float(this.n*num.eval()).collect();}},collect:function collect(){// We used to simplify Floats to Ints here whenever possible, but no
// longer do so in order to preserve significant figures.
return this;},negate:function negate(){return new Float(-this.n);},abs:function abs(){return new Float(Math.abs(this.n));},findGCD:function findGCD(factor){if(factor instanceof Num){return new Float(Num.findGCD(this.eval(),factor.eval())).collect();}else{return factor.findGCD(this);}},// for now, assuming that exp is a Num
raiseToThe:function raiseToThe(exp,options){if(options&&options.preciseFloats&&exp instanceof Int&&exp.n>1){return Float.toDecimalPlaces(new Pow(this,exp).eval(),this.getDecimalPlaces()*exp.n);}else{return new Float(new Pow(this,exp).eval()).collect();}},// only to be used on non-repeating decimals (e.g. user-provided)
asRational:function asRational(){var parts=this.n.toString().split(".");if(parts.length===1){return new Rational(this.n,1);}else{var numerator=Number(parts.join(""));var denominator=Math.pow(10,parts[1].length);return new Rational(numerator,denominator).collect();}},getDenominator:function getDenominator(){return this.asRational().getDenominator();},isSimple:function isSimple(){return true;}});_.extend(Float,{create:function create(n){return new Float(n).addHint("entered");},// Account for floating point imprecision by explicitly controlling the
// number of decimal places in common operations (e.g. +, *, ^)
toDecimalPlaces:function toDecimalPlaces(n,places){return new Float(+n.toFixed(Math.min(places,20))).collect();}});// static methods and fields that are best defined on Num
_.extend(Num,{negativeOne:function negativeOne(hint){if(hint==="subtract"){return Num.Sub;}else if(hint==="divide"){return Num.Div;}else{return Num.Neg;}},// find the greatest common denominator
findGCD:function findGCD(a,b){var mod;a=Math.abs(a);b=Math.abs(b);// Euclid's method doesn't handle non-integers very well. For now
// we just say we can't pull out a common factor. It might be
// reasonable to do better than this in the future.
if(a!==Math.floor(a)||b!==Math.floor(b)){return 1;}while(b){mod=a%b;a=b;b=mod;}return a;},min:function min(){return _.min(_.toArray(arguments),function(num){return num.eval();});},max:function max(){return _.max(_.toArray(arguments),function(num){return num.eval();});}});Num.Neg=new Int(-1).addHint("negate");Num.Sub=new Int(-1).addHint("subtract");Num.Div=new Int(-1).addHint("divide");Num.Sqrt=new Rational(1,2).addHint("root");Num.Zero=new Int(0);Num.One=new Int(1);Num.Ten=new Int(10);// set identities here
Add.prototype.identity=Num.Zero;Mul.prototype.identity=Num.One;var parser=KAS.parser;var parseError=function parseError(str,hash){// return int location of parsing error
throw new Error(hash.loc.first_column);};// expose concrete nodes to parser scope
// see http://zaach.github.io/jison/docs/#sharing-scope
parser.yy={Add:Add,Mul:Mul,Pow:Pow,Log:Log,Trig:Trig,Eq:Eq,Abs:Abs,Func:Func,Const:Const,Var:Var,Int:Int,Float:Float,parseError:parseError,constants:["e"],symbolLexer:function symbolLexer(symbol){if(_.contains(parser.yy.constants,symbol)){return"CONST";}else if(_.contains(parser.yy.functions,symbol)){return"FUNC";}else{return"VAR";}}};KAS.parse=function(input,options){try{if(options&&options.functions){// reserve the symbol "i" for complex numbers
parser.yy.functions=_.without(options.functions,"i");}else{parser.yy.functions=[];}// If ',' is the decimal dividor in your country, replace any ','s
// with '.'s.
// This isn't perfect, since the output will all still have '.'s.
// TODO(jack): Fix the output to have ','s in this case
if(options&&options.decimal_separator){input=input.split(options.decimal_separator).join(".");}var expr=parser.parse(input).completeParse();return{parsed:true,expr:expr};}catch(e){return{parsed:false,error:e.message};}};/* unit */function Unit(symbol){this.symbol=symbol;}Unit.prototype=new Symbol();// If possible, replace unit prefixes with a multiplication.
//
// "g" -> Unit("g")
// "kg" -> 1000 * Unit("g")
var unprefixify=function unprefixify(symbol){if(_(baseUnits).has(symbol)||_(derivedUnits).has(symbol)){return new Unit(symbol);}// check for prefix
var prefix=_(_(siPrefixes).keys()).find(function(testPrefix){return new RegExp("^"+testPrefix).test(symbol);});if(prefix){var base=symbol.replace(new RegExp("^"+prefix),"");// It's okay to be here if either:
// * `base` is a base unit (the seven units listed in baseUnits)
// * `base` is a derived unit which allows prefixes
//
// Otherwise, we're trying to parse a unit label which is not
// allowed (mwk, mBTU, etc).
if(_(baseUnits).has(base)||derivedUnits[base]&&derivedUnits[base].prefixes===hasPrefixes){return new Mul(siPrefixes[prefix],new Unit(base));}else{throw new Error(base+" does not allow prefixes");}}else{return new Unit(symbol);}};KAS.unitParse=function(input){try{var parseResult=KAS.unitParser.parse(input);// parseResult looks like:
// {
//   magnitude: "5",
//   unit: {
//     num: [
//       { name: "s", pow: 2 }
//     ],
//     denom: [
//       { name: "kg", pow: 1 }
//     ]
//   }
// }
//
// denom is optionally null
var unitArray=[];_(parseResult.unit.num).each(function(unitSpec){unitArray.push(new Pow(unprefixify(unitSpec.name),new Int(unitSpec.pow)));});_(parseResult.unit.denom).each(function(unitSpec){unitArray.push(new Pow(unprefixify(unitSpec.name),new Int(-1*unitSpec.pow)));});var unit=new Mul(unitArray).flatten();if(parseResult.type==="unitMagnitude"){// in the first case we have a magnitude coefficient as well as the
// unit itself.
var coefArray=[new Float(+parseResult.magnitude)].concat(unitArray);var expr=new Mul(coefArray);return{parsed:true,unit:unit,expr:expr,coefficient:parseResult.magnitude,type:parseResult.type};}else{// in the second case it's just the unit with no magnitude.
return{parsed:true,unit:unit,type:parseResult.type};}}catch(e){return{parsed:false,error:e.message};}};_.extend(Unit.prototype,{func:Unit,args:function args(){return[this.symbol];},recurse:function recurse(){return this;},eval:function _eval(vars,options){// This is called when comparing units. A unit doesn't affect the
// numerical value of its coefficient, so this needs to be 1.
//
// On the other hand, things must not evaluate to the same thing if
// they don't have the same type. I believe that's also true - form is
// checked before numerical equivalence. I do not know where, though.
// However, there are a couple tests checking this.
return 1;},getUnits:function getUnits(){return[{unit:this.symbol,pow:1}];},codegen:function codegen(){return"1";},print:function print(){return this.symbol;},tex:function tex(){return this.symbol;},// Simplify units by replacing prefixes with multiplication
collect:function collect(options){if(_(baseUnits).has(this.symbol)){return this;}else if(_(derivedUnits).has(this.symbol)){return derivedUnits[this.symbol].conversion;}else{throw new Error("could not understand unit: "+this.symbol);}}});var baseUnits={m:new Unit("m"),// Note: kg is the SI base unit but we use g for consistency
g:new Unit("g"),s:new Unit("s"),A:new Unit("A"),K:new Unit("K"),mol:new Unit("mol"),cd:new Unit("cd")};var siPrefixes={a:new Pow(new Int(10),new Int(-18)),f:new Pow(new Int(10),new Int(-15)),p:new Pow(new Int(10),new Int(-12)),n:new Pow(new Int(10),new Int(-9)),u:new Pow(new Int(10),new Int(-6)),m:new Pow(new Int(10),new Int(-3)),c:new Pow(new Int(10),new Int(-2)),d:new Pow(new Int(10),new Int(-1)),da:new Int(10),h:new Pow(new Int(10),new Int(2)),k:new Pow(new Int(10),new Int(3)),M:new Pow(new Int(10),new Int(6)),G:new Pow(new Int(10),new Int(9)),T:new Pow(new Int(10),new Int(12)),P:new Pow(new Int(10),new Int(15)),E:new Pow(new Int(10),new Int(18)),// http://en.wikipedia.org/wiki/Metric_prefix#.22Hella.22_prefix_proposal
hella:new Pow(new Int(10),new Int(27))};// Use these two values to mark a unit as either SI-prefixable or not.
var hasPrefixes={};var hasntPrefixes={};var makeAlias=function makeAlias(str,prefixes){var splits=str.split("|");var coefficientStr=splits[0].trim();var unitsStr=splits[1].trim();var coefficient=Num.One;if(coefficientStr!==""){coefficient=KAS.parse(coefficientStr).expr;}var numdenomStr=unitsStr.split("/");var numdenom=[coefficient];if(numdenomStr[0]){numdenomStr[0].split(" ").filter(function(x){return x!=="";}).map(function(x){numdenom.push(new Unit(x));});}if(numdenomStr[1]){numdenomStr[1].split(" ").filter(function(x){return x!=="";}).map(function(x){numdenom.push(new Pow(new Unit(x),Num.Div));});}return{conversion:new Mul(numdenom),prefixes:prefixes};};// This is a mapping of derived units (or different names for a unit) to their
// definitions. For example, an inch is defined as 0.0254 m.
//
// Definitions don't need to be in terms of base units. For example, tsp is
// defined in terms of tbsp (which is defined in terms of cup -> gal -> L ->
// m^3). However, units must get simpler. I.e. there's no loop checking.
//
// makeAlias takes two parameters:
// * a string specifying the simplification to perform
//   - a required pipe separates the constant factor from the base units
//   - the constant factor is parsed by KAS
//   - the base units are in a simple format which disallows exponents and
//     requires multiplicands to be space-separated ("m m" rather than "m^2)
//     with an optional "/" separating numerator and denominator
//   - prefixes are not allowed to be used in the converted to units
//     (note that this restriction, the format of the string, and the choice to
//     use a string in the first place are made out of laziness to minimize
//     both typing and parsing)
// * a boolean specifying whether or not it's acceptable to use SI units
//
// Where possible, these units are taken from "The International System of
// Units (SI)" 8th edition (2006).
var derivedUnits={// mass
// The atomic mass unit / dalton.
Da:makeAlias("1.6605388628 x 10^-24 | g",hasPrefixes),u:makeAlias("| Da",hasntPrefixes),// length
"meter":makeAlias("| m",hasntPrefixes),"meters":makeAlias("| m",hasntPrefixes),"in":makeAlias("254 / 10000 | m",hasntPrefixes),"ft":makeAlias("3048  / 10000 | m",hasntPrefixes),"yd":makeAlias("9144  / 10000 | m",hasntPrefixes),"mi":makeAlias("1609344 / 1000 | m",hasntPrefixes),"ly":makeAlias("9.4607 x 10^15 | m",hasntPrefixes),"nmi":makeAlias("1852 | m",hasntPrefixes),"Å":makeAlias("10^-10 | m",hasntPrefixes),"pc":makeAlias("3.0857 x 10^16 | m",hasntPrefixes),// time
"min":makeAlias("60 | s",hasntPrefixes),"hr":makeAlias("3600 | s",hasntPrefixes),"sec":makeAlias("| s",hasntPrefixes),// TODO(joel) make day work
"day":makeAlias("86400 | s",hasntPrefixes),"wk":makeAlias("604800 | s",hasntPrefixes),"fortnight":makeAlias("14 | day",hasntPrefixes),"shake":makeAlias("10^-8 | s",hasntPrefixes),"olympiad":makeAlias("126200000 | s",hasntPrefixes),// temperature
"°C":makeAlias("1 | K",hasntPrefixes),"°F":makeAlias("5/9 | K",hasntPrefixes),"°R":makeAlias("5/9 | K",hasntPrefixes),// electric charge
"e":makeAlias("1.6021765314 x 10^-19 | C",hasntPrefixes),// speed
"c":makeAlias("299792458 | m / s",hasntPrefixes),"kn":makeAlias("514/1000 | m / s",hasntPrefixes),"kt":makeAlias("| kn",hasntPrefixes),"knot":makeAlias("| kn",hasntPrefixes),// energy
"J":makeAlias("| N m",hasPrefixes),"BTU":makeAlias("1060 | J",hasntPrefixes),"cal":makeAlias("4184 / 1000 | J",hasPrefixes),"eV":makeAlias("1.602176514 x 10^-19 | J",hasPrefixes),"erg":makeAlias("10^−7 | J",hasPrefixes),// power
"W":makeAlias("| J / s",hasPrefixes),"H-e":makeAlias("80 | W",hasntPrefixes),// force
"N":makeAlias("1000 | g m / s s",hasPrefixes),// "lb": makeAlias("4448 / 1000 | N", hasntPrefixes),
// 4.4482216152605
"lb":makeAlias("4448221615 / 1000000000 | N",hasntPrefixes),"dyn":makeAlias("10^-5 | N",hasntPrefixes),// pressure
"Pa":makeAlias("1 | N / m m m",hasPrefixes),"bar":makeAlias("10^5 | Pa",hasPrefixes),"㏔":makeAlias("1/1000 | bar",hasntPrefixes),"㍴":makeAlias("| bar",hasntPrefixes),"atm":makeAlias("101325 | Pa",hasntPrefixes),"Torr":makeAlias("1/760 | atm",hasntPrefixes),"mmHg":makeAlias("| Torr",hasntPrefixes),// area
"ha":makeAlias("10^4 | m m",hasntPrefixes),"b":makeAlias("10^−28 | m m",hasPrefixes),"barn":makeAlias("| b",hasPrefixes),"acre":makeAlias("4046.87 | m m",hasntPrefixes),"skilodge":makeAlias("10^-31 | m m",hasntPrefixes),"outhouse":makeAlias("10^-34 | m m",hasntPrefixes),"shed":makeAlias("10^-52 | m m",hasntPrefixes),// volume
"L":makeAlias("1/1000 | m m m",hasPrefixes),"gal":makeAlias("3785/1000 | L",hasPrefixes),"cup":makeAlias("1/16 | gal",hasntPrefixes),"qt":makeAlias("1/4 | gal",hasntPrefixes),"quart":makeAlias("| qt",hasntPrefixes),"p":makeAlias("1/8 | gal",hasntPrefixes),"pt":makeAlias("| p",hasntPrefixes),"pint":makeAlias("| p",hasntPrefixes),"fl oz":makeAlias("1/8 | cup",hasntPrefixes),"fl. oz.":makeAlias("1/8 | cup",hasntPrefixes),"tbsp":makeAlias("1/16 | cup",hasntPrefixes),"tsp":makeAlias("1/3 | tbsp",hasntPrefixes),// rotational
// "rad":
"rev":makeAlias("2 pi | rad",hasntPrefixes),"deg":makeAlias("180 pi | rad",hasntPrefixes),"°":makeAlias("| deg",hasntPrefixes),"arcminute":makeAlias("1/60 | deg",hasntPrefixes),"arcsec":makeAlias("1/3600 | deg",hasntPrefixes),// dimensionless
// "B": makeAlias("10 | dB", hasntPrefixes), // XXX danger - logarithmic
// "dB"
// "nP"
"Hu":makeAlias("1000 | dB",hasPrefixes),"dozen":makeAlias("12 |",hasntPrefixes),// XXX
"mol":makeAlias("6.0221412927 x 10^23 |",hasPrefixes),"%":makeAlias("1/100 |",hasntPrefixes),"percent":makeAlias("| %",hasntPrefixes),"ppm":makeAlias("1/1000000 |",hasntPrefixes),// electric / magnetic
"V":makeAlias("1000 | g m m / s s C",hasPrefixes),"C":makeAlias("| A s",hasPrefixes),"ampere":makeAlias("| A",hasntPrefixes),"Ω":makeAlias("| V / A",hasPrefixes),"ohm":makeAlias("| Ω",hasntPrefixes),"F":makeAlias("| C / V",hasPrefixes),"H":makeAlias("| ohm s",hasPrefixes),"T":makeAlias("1000 | g / C s",hasPrefixes),"Wb":makeAlias("1000 | g m m / C s",hasPrefixes),// photometry
// TODO not sure this is right
"lm":makeAlias("pi x 10^4 | cd / m m",hasntPrefixes),"lx":makeAlias("| lm / m m",hasntPrefixes),"nit":makeAlias("| cd / m m",hasntPrefixes),"sb":makeAlias("10^4 | cd / m m",hasntPrefixes),"stilb":makeAlias("1 | sb",hasntPrefixes),"apostilb":makeAlias("1 / pi x 10^(-4) | sb",hasntPrefixes),"blondel":makeAlias("| apostilb",hasntPrefixes),"asb":makeAlias("| apostilb",hasntPrefixes),"la":makeAlias("| lm",hasntPrefixes),"Lb":makeAlias("| lm",hasntPrefixes),"sk":makeAlias("10^-7 | lm",hasntPrefixes),"skot":makeAlias("| sk",hasntPrefixes),"bril":makeAlias("10^-11 | lm",hasntPrefixes),// other
"Hz":makeAlias("| / s",hasPrefixes)};KAS.Add=Add;KAS.Mul=Mul;KAS.Pow=Pow;KAS.Log=Log;KAS.Eq=Eq;KAS.Trig=Trig;KAS.Abs=Abs;KAS.Func=Func;KAS.Var=Var;KAS.Const=Const;KAS.Unit=Unit;KAS.Rational=Rational;KAS.Int=Int;KAS.Float=Float;KAS.Zero=Num.Zero;KAS.One=Num.One;})(KAS);(function(KAS){// Assumes that both expressions have already been parsed
// TODO(alex): be able to pass a random() function to compare()
KAS.compare=function(expr1,expr2,options){var defaults={form:false,// Check that the two expressions have the same form
simplify:false// Check that the second expression is simplified
};/* Options that could be added in the future:
         * - Allow ratios: e.g. 3/1 and 3 should both be accepted for something
         *   like slope
         * - Allow student to choose their own variable names
         */if(options!==undefined){// eslint-disable-next-line no-undef
options=_.extend(defaults,options);}else{options=defaults;}// TODO(CP-1614): Figure out how to make these messages translatable
// Variable check
var vars=expr1.sameVars(expr2);if(!vars.equal){var message;if(vars.equalIgnoringCase){message="Check your variables; one or more are using "+"the wrong case (upper or lower).";}else{message="Check your variables; you may have used the wrong "+"letter for one or more of them.";}return{equal:false,wrongVariableCase:vars.equalIgnoringCase,wrongVariableNames:!vars.equalIgnoringCase,message:message};}// Semantic check
if(!expr1.compare(expr2)){return{equal:false,message:null};}// Syntactic check
if(options.form&&!expr1.sameForm(expr2)){return{equal:false,message:"Your answer is not in the correct form."};}// Syntactic check
if(options.simplify&&!expr1.isSimplified()){return{equal:false,message:"Your answer is not fully expanded and simplified."};}return{equal:true,message:null};};})(KAS);

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _slicedToArray; });



function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export Immer */
/* unused harmony export applyPatches */
/* unused harmony export createDraft */
/* unused harmony export finishDraft */
/* unused harmony export immerable */
/* unused harmony export isDraft */
/* unused harmony export isDraftable */
/* unused harmony export nothing */
/* unused harmony export original */
/* unused harmony export produce */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return setAutoFreeze; });
/* unused harmony export setUseProxies */
var obj;
var NOTHING = typeof Symbol !== "undefined" ? Symbol("immer-nothing") : (obj = {}, obj["immer-nothing"] = true, obj);
var DRAFTABLE = typeof Symbol !== "undefined" && Symbol.for ? Symbol.for("immer-draftable") : "__$immer_draftable";
var DRAFT_STATE = typeof Symbol !== "undefined" && Symbol.for ? Symbol.for("immer-state") : "__$immer_state";

function isDraft(value) {
  return !!value && !!value[DRAFT_STATE];
}

function isDraftable(value) {
  if (!value || typeof value !== "object") {
    return false;
  }

  if (Array.isArray(value)) {
    return true;
  }

  var proto = Object.getPrototypeOf(value);

  if (!proto || proto === Object.prototype) {
    return true;
  }

  return !!value[DRAFTABLE] || !!value.constructor[DRAFTABLE];
}

function original(value) {
  if (value && value[DRAFT_STATE]) {
    return value[DRAFT_STATE].base;
  } // otherwise return undefined

}

var assign = Object.assign || function assign(target, value) {
  for (var key in value) {
    if (has(value, key)) {
      target[key] = value[key];
    }
  }

  return target;
};

var ownKeys = typeof Reflect !== "undefined" && Reflect.ownKeys ? Reflect.ownKeys : typeof Object.getOwnPropertySymbols !== "undefined" ? function (obj) {
  return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj));
} : Object.getOwnPropertyNames;

function shallowCopy(base, invokeGetters) {
  if (invokeGetters === void 0) invokeGetters = false;

  if (Array.isArray(base)) {
    return base.slice();
  }

  var clone = Object.create(Object.getPrototypeOf(base));
  ownKeys(base).forEach(function (key) {
    if (key === DRAFT_STATE) {
      return; // Never copy over draft state.
    }

    var desc = Object.getOwnPropertyDescriptor(base, key);
    var value = desc.value;

    if (desc.get) {
      if (!invokeGetters) {
        throw new Error("Immer drafts cannot have computed properties");
      }

      value = desc.get.call(base);
    }

    if (desc.enumerable) {
      clone[key] = value;
    } else {
      Object.defineProperty(clone, key, {
        value: value,
        writable: true,
        configurable: true
      });
    }
  });
  return clone;
}

function each(value, cb) {
  if (Array.isArray(value)) {
    for (var i = 0; i < value.length; i++) {
      cb(i, value[i], value);
    }
  } else {
    ownKeys(value).forEach(function (key) {
      return cb(key, value[key], value);
    });
  }
}

function isEnumerable(base, prop) {
  var desc = Object.getOwnPropertyDescriptor(base, prop);
  return !!desc && desc.enumerable;
}

function has(thing, prop) {
  return Object.prototype.hasOwnProperty.call(thing, prop);
}

function is(x, y) {
  // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}
/** Each scope represents a `produce` call. */


var ImmerScope = function ImmerScope(parent) {
  this.drafts = [];
  this.parent = parent; // Whenever the modified draft contains a draft from another scope, we
  // need to prevent auto-freezing so the unowned draft can be finalized.

  this.canAutoFreeze = true; // To avoid prototype lookups:

  this.patches = null;
};

ImmerScope.prototype.usePatches = function usePatches(patchListener) {
  if (patchListener) {
    this.patches = [];
    this.inversePatches = [];
    this.patchListener = patchListener;
  }
};

ImmerScope.prototype.revoke = function revoke$1() {
  this.leave();
  this.drafts.forEach(revoke);
  this.drafts = null; // Make draft-related methods throw.
};

ImmerScope.prototype.leave = function leave() {
  if (this === ImmerScope.current) {
    ImmerScope.current = this.parent;
  }
};

ImmerScope.current = null;

ImmerScope.enter = function () {
  return this.current = new ImmerScope(this.current);
};

function revoke(draft) {
  draft[DRAFT_STATE].revoke();
} // but share them all instead


var descriptors = {};

function willFinalize(scope, result, isReplaced) {
  scope.drafts.forEach(function (draft) {
    draft[DRAFT_STATE].finalizing = true;
  });

  if (!isReplaced) {
    if (scope.patches) {
      markChangesRecursively(scope.drafts[0]);
    } // This is faster when we don't care about which attributes changed.


    markChangesSweep(scope.drafts);
  } // When a child draft is returned, look for changes.
  else if (isDraft(result) && result[DRAFT_STATE].scope === scope) {
      markChangesSweep(scope.drafts);
    }
}

function createProxy(base, parent) {
  var isArray = Array.isArray(base);
  var draft = clonePotentialDraft(base);
  each(draft, function (prop) {
    proxyProperty(draft, prop, isArray || isEnumerable(base, prop));
  }); // See "proxy.js" for property documentation.

  var scope = parent ? parent.scope : ImmerScope.current;
  var state = {
    scope: scope,
    modified: false,
    finalizing: false,
    // es5 only
    finalized: false,
    assigned: {},
    parent: parent,
    base: base,
    draft: draft,
    copy: null,
    revoke: revoke$1,
    revoked: false // es5 only

  };
  createHiddenProperty(draft, DRAFT_STATE, state);
  scope.drafts.push(draft);
  return draft;
}

function revoke$1() {
  this.revoked = true;
}

function source(state) {
  return state.copy || state.base;
} // Access a property without creating an Immer draft.


function peek(draft, prop) {
  var state = draft[DRAFT_STATE];

  if (state && !state.finalizing) {
    state.finalizing = true;
    var value = draft[prop];
    state.finalizing = false;
    return value;
  }

  return draft[prop];
}

function get(state, prop) {
  assertUnrevoked(state);
  var value = peek(source(state), prop);

  if (state.finalizing) {
    return value;
  } // Create a draft if the value is unmodified.


  if (value === peek(state.base, prop) && isDraftable(value)) {
    prepareCopy(state);
    return state.copy[prop] = createProxy(value, state);
  }

  return value;
}

function set(state, prop, value) {
  assertUnrevoked(state);
  state.assigned[prop] = true;

  if (!state.modified) {
    if (is(value, peek(source(state), prop))) {
      return;
    }

    markChanged(state);
    prepareCopy(state);
  }

  state.copy[prop] = value;
}

function markChanged(state) {
  if (!state.modified) {
    state.modified = true;

    if (state.parent) {
      markChanged(state.parent);
    }
  }
}

function prepareCopy(state) {
  if (!state.copy) {
    state.copy = clonePotentialDraft(state.base);
  }
}

function clonePotentialDraft(base) {
  var state = base && base[DRAFT_STATE];

  if (state) {
    state.finalizing = true;
    var draft = shallowCopy(state.draft, true);
    state.finalizing = false;
    return draft;
  }

  return shallowCopy(base);
}

function proxyProperty(draft, prop, enumerable) {
  var desc = descriptors[prop];

  if (desc) {
    desc.enumerable = enumerable;
  } else {
    descriptors[prop] = desc = {
      configurable: true,
      enumerable: enumerable,
      get: function get$1() {
        return get(this[DRAFT_STATE], prop);
      },
      set: function set$1(value) {
        set(this[DRAFT_STATE], prop, value);
      }
    };
  }

  Object.defineProperty(draft, prop, desc);
}

function assertUnrevoked(state) {
  if (state.revoked === true) {
    throw new Error("Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? " + JSON.stringify(source(state)));
  }
} // This looks expensive, but only proxies are visited, and only objects without known changes are scanned.


function markChangesSweep(drafts) {
  // The natural order of drafts in the `scope` array is based on when they
  // were accessed. By processing drafts in reverse natural order, we have a
  // better chance of processing leaf nodes first. When a leaf node is known to
  // have changed, we can avoid any traversal of its ancestor nodes.
  for (var i = drafts.length - 1; i >= 0; i--) {
    var state = drafts[i][DRAFT_STATE];

    if (!state.modified) {
      if (Array.isArray(state.base)) {
        if (hasArrayChanges(state)) {
          markChanged(state);
        }
      } else if (hasObjectChanges(state)) {
        markChanged(state);
      }
    }
  }
}

function markChangesRecursively(object) {
  if (!object || typeof object !== "object") {
    return;
  }

  var state = object[DRAFT_STATE];

  if (!state) {
    return;
  }

  var base = state.base;
  var draft = state.draft;
  var assigned = state.assigned;

  if (!Array.isArray(object)) {
    // Look for added keys.
    Object.keys(draft).forEach(function (key) {
      // The `undefined` check is a fast path for pre-existing keys.
      if (base[key] === undefined && !has(base, key)) {
        assigned[key] = true;
        markChanged(state);
      } else if (!assigned[key]) {
        // Only untouched properties trigger recursion.
        markChangesRecursively(draft[key]);
      }
    }); // Look for removed keys.

    Object.keys(base).forEach(function (key) {
      // The `undefined` check is a fast path for pre-existing keys.
      if (draft[key] === undefined && !has(draft, key)) {
        assigned[key] = false;
        markChanged(state);
      }
    });
  } else if (hasArrayChanges(state)) {
    markChanged(state);
    assigned.length = true;

    if (draft.length < base.length) {
      for (var i = draft.length; i < base.length; i++) {
        assigned[i] = false;
      }
    } else {
      for (var i$1 = base.length; i$1 < draft.length; i$1++) {
        assigned[i$1] = true;
      }
    }

    for (var i$2 = 0; i$2 < draft.length; i$2++) {
      // Only untouched indices trigger recursion.
      if (assigned[i$2] === undefined) {
        markChangesRecursively(draft[i$2]);
      }
    }
  }
}

function hasObjectChanges(state) {
  var base = state.base;
  var draft = state.draft; // Search for added keys and changed keys. Start at the back, because
  // non-numeric keys are ordered by time of definition on the object.

  var keys = Object.keys(draft);

  for (var i = keys.length - 1; i >= 0; i--) {
    var key = keys[i];
    var baseValue = base[key]; // The `undefined` check is a fast path for pre-existing keys.

    if (baseValue === undefined && !has(base, key)) {
      return true;
    } // Once a base key is deleted, future changes go undetected, because its
    // descriptor is erased. This branch detects any missed changes.
    else {
        var value = draft[key];
        var state$1 = value && value[DRAFT_STATE];

        if (state$1 ? state$1.base !== baseValue : !is(value, baseValue)) {
          return true;
        }
      }
  } // At this point, no keys were added or changed.
  // Compare key count to determine if keys were deleted.


  return keys.length !== Object.keys(base).length;
}

function hasArrayChanges(state) {
  var draft = state.draft;

  if (draft.length !== state.base.length) {
    return true;
  } // See #116
  // If we first shorten the length, our array interceptors will be removed.
  // If after that new items are added, result in the same original length,
  // those last items will have no intercepting property.
  // So if there is no own descriptor on the last position, we know that items were removed and added
  // N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check
  // the last one


  var descriptor = Object.getOwnPropertyDescriptor(draft, draft.length - 1); // descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)

  if (descriptor && !descriptor.get) {
    return true;
  } // For all other cases, we don't have to compare, as they would have been picked up by the index setters


  return false;
}

function createHiddenProperty(target, prop, value) {
  Object.defineProperty(target, prop, {
    value: value,
    enumerable: false,
    writable: true
  });
}

var legacyProxy =
/*#__PURE__*/
Object.freeze({
  willFinalize: willFinalize,
  createProxy: createProxy
});

function willFinalize$1() {}

function createProxy$1(base, parent) {
  var scope = parent ? parent.scope : ImmerScope.current;
  var state = {
    // Track which produce call this is associated with.
    scope: scope,
    // True for both shallow and deep changes.
    modified: false,
    // Used during finalization.
    finalized: false,
    // Track which properties have been assigned (true) or deleted (false).
    assigned: {},
    // The parent draft state.
    parent: parent,
    // The base state.
    base: base,
    // The base proxy.
    draft: null,
    // Any property proxies.
    drafts: {},
    // The base copy with any updated values.
    copy: null,
    // Called by the `produce` function.
    revoke: null
  };
  var ref = Array.isArray(base) ? // [state] is used for arrays, to make sure the proxy is array-ish and not violate invariants,
  // although state itself is an object
  Proxy.revocable([state], arrayTraps) : Proxy.revocable(state, objectTraps);
  var revoke = ref.revoke;
  var proxy = ref.proxy;
  state.draft = proxy;
  state.revoke = revoke;
  scope.drafts.push(proxy);
  return proxy;
}

var objectTraps = {
  get: get$1,
  has: function has(target, prop) {
    return prop in source$1(target);
  },
  ownKeys: function ownKeys(target) {
    return Reflect.ownKeys(source$1(target));
  },
  set: set$1,
  deleteProperty: deleteProperty,
  getOwnPropertyDescriptor: getOwnPropertyDescriptor,
  defineProperty: function defineProperty() {
    throw new Error("Object.defineProperty() cannot be used on an Immer draft"); // prettier-ignore
  },
  getPrototypeOf: function getPrototypeOf(target) {
    return Object.getPrototypeOf(target.base);
  },
  setPrototypeOf: function setPrototypeOf() {
    throw new Error("Object.setPrototypeOf() cannot be used on an Immer draft"); // prettier-ignore
  }
};
var arrayTraps = {};
each(objectTraps, function (key, fn) {
  arrayTraps[key] = function () {
    arguments[0] = arguments[0][0];
    return fn.apply(this, arguments);
  };
});

arrayTraps.deleteProperty = function (state, prop) {
  if (isNaN(parseInt(prop))) {
    throw new Error("Immer only supports deleting array indices"); // prettier-ignore
  }

  return objectTraps.deleteProperty.call(this, state[0], prop);
};

arrayTraps.set = function (state, prop, value) {
  if (prop !== "length" && isNaN(parseInt(prop))) {
    throw new Error("Immer only supports setting array indices and the 'length' property"); // prettier-ignore
  }

  return objectTraps.set.call(this, state[0], prop, value);
}; // returns the object we should be reading the current value from, which is base, until some change has been made


function source$1(state) {
  return state.copy || state.base;
} // Access a property without creating an Immer draft.


function peek$1(draft, prop) {
  var state = draft[DRAFT_STATE];
  var desc = Reflect.getOwnPropertyDescriptor(state ? source$1(state) : draft, prop);
  return desc && desc.value;
}

function get$1(state, prop) {
  if (prop === DRAFT_STATE) {
    return state;
  }

  var drafts = state.drafts; // Check for existing draft in unmodified state.

  if (!state.modified && has(drafts, prop)) {
    return drafts[prop];
  }

  var value = source$1(state)[prop];

  if (state.finalized || !isDraftable(value)) {
    return value;
  } // Check for existing draft in modified state.


  if (state.modified) {
    // Assigned values are never drafted. This catches any drafts we created, too.
    if (value !== peek$1(state.base, prop)) {
      return value;
    } // Store drafts on the copy (when one exists).


    drafts = state.copy;
  }

  return drafts[prop] = createProxy$1(value, state);
}

function set$1(state, prop, value) {
  if (!state.modified) {
    var baseValue = peek$1(state.base, prop); // Optimize based on value's truthiness. Truthy values are guaranteed to
    // never be undefined, so we can avoid the `in` operator. Lastly, truthy
    // values may be drafts, but falsy values are never drafts.

    var isUnchanged = value ? is(baseValue, value) || value === state.drafts[prop] : is(baseValue, value) && prop in state.base;

    if (isUnchanged) {
      return true;
    }

    markChanged$1(state);
  }

  state.assigned[prop] = true;
  state.copy[prop] = value;
  return true;
}

function deleteProperty(state, prop) {
  // The `undefined` check is a fast path for pre-existing keys.
  if (peek$1(state.base, prop) !== undefined || prop in state.base) {
    state.assigned[prop] = false;
    markChanged$1(state);
  }

  if (state.copy) {
    delete state.copy[prop];
  }

  return true;
} // Note: We never coerce `desc.value` into an Immer draft, because we can't make
// the same guarantee in ES5 mode.


function getOwnPropertyDescriptor(state, prop) {
  var owner = source$1(state);
  var desc = Reflect.getOwnPropertyDescriptor(owner, prop);

  if (desc) {
    desc.writable = true;
    desc.configurable = !Array.isArray(owner) || prop !== "length";
  }

  return desc;
}

function markChanged$1(state) {
  if (!state.modified) {
    state.modified = true;
    state.copy = assign(shallowCopy(state.base), state.drafts);
    state.drafts = null;

    if (state.parent) {
      markChanged$1(state.parent);
    }
  }
}

var modernProxy =
/*#__PURE__*/
Object.freeze({
  willFinalize: willFinalize$1,
  createProxy: createProxy$1
});

function generatePatches(state, basePath, patches, inversePatches) {
  Array.isArray(state.base) ? generateArrayPatches(state, basePath, patches, inversePatches) : generateObjectPatches(state, basePath, patches, inversePatches);
}

function generateArrayPatches(state, basePath, patches, inversePatches) {
  var assign, assign$1;
  var base = state.base;
  var copy = state.copy;
  var assigned = state.assigned; // Reduce complexity by ensuring `base` is never longer.

  if (copy.length < base.length) {
    assign = [copy, base], base = assign[0], copy = assign[1];
    assign$1 = [inversePatches, patches], patches = assign$1[0], inversePatches = assign$1[1];
  }

  var delta = copy.length - base.length; // Find the first replaced index.

  var start = 0;

  while (base[start] === copy[start] && start < base.length) {
    ++start;
  } // Find the last replaced index. Search from the end to optimize splice patches.


  var end = base.length;

  while (end > start && base[end - 1] === copy[end + delta - 1]) {
    --end;
  } // Process replaced indices.


  for (var i = start; i < end; ++i) {
    if (assigned[i] && copy[i] !== base[i]) {
      var path = basePath.concat([i]);
      patches.push({
        op: "replace",
        path: path,
        value: copy[i]
      });
      inversePatches.push({
        op: "replace",
        path: path,
        value: base[i]
      });
    }
  }

  var useRemove = end != base.length;
  var replaceCount = patches.length; // Process added indices.

  for (var i$1 = end + delta - 1; i$1 >= end; --i$1) {
    var path$1 = basePath.concat([i$1]);
    patches[replaceCount + i$1 - end] = {
      op: "add",
      path: path$1,
      value: copy[i$1]
    };

    if (useRemove) {
      inversePatches.push({
        op: "remove",
        path: path$1
      });
    }
  } // One "replace" patch reverses all non-splicing "add" patches.


  if (!useRemove) {
    inversePatches.push({
      op: "replace",
      path: basePath.concat(["length"]),
      value: base.length
    });
  }
}

function generateObjectPatches(state, basePath, patches, inversePatches) {
  var base = state.base;
  var copy = state.copy;
  each(state.assigned, function (key, assignedValue) {
    var origValue = base[key];
    var value = copy[key];
    var op = !assignedValue ? "remove" : key in base ? "replace" : "add";

    if (origValue === value && op === "replace") {
      return;
    }

    var path = basePath.concat(key);
    patches.push(op === "remove" ? {
      op: op,
      path: path
    } : {
      op: op,
      path: path,
      value: value
    });
    inversePatches.push(op === "add" ? {
      op: "remove",
      path: path
    } : op === "remove" ? {
      op: "add",
      path: path,
      value: origValue
    } : {
      op: "replace",
      path: path,
      value: origValue
    });
  });
}

function applyPatches(draft, patches) {
  for (var i = 0; i < patches.length; i++) {
    var patch = patches[i];
    var path = patch.path;

    if (path.length === 0 && patch.op === "replace") {
      draft = patch.value;
    } else {
      var base = draft;

      for (var i$1 = 0; i$1 < path.length - 1; i$1++) {
        base = base[path[i$1]];

        if (!base || typeof base !== "object") {
          throw new Error("Cannot apply patch, path doesn't resolve: " + path.join("/"));
        } // prettier-ignore

      }

      var key = path[path.length - 1];

      switch (patch.op) {
        case "replace":
          base[key] = patch.value;
          break;

        case "add":
          if (Array.isArray(base)) {
            // TODO: support "foo/-" paths for appending to an array
            base.splice(key, 0, patch.value);
          } else {
            base[key] = patch.value;
          }

          break;

        case "remove":
          if (Array.isArray(base)) {
            base.splice(key, 1);
          } else {
            delete base[key];
          }

          break;

        default:
          throw new Error("Unsupported patch operation: " + patch.op);
      }
    }
  }

  return draft;
}

function verifyMinified() {}

var configDefaults = {
  useProxies: typeof Proxy !== "undefined" && typeof Reflect !== "undefined",
  autoFreeze: typeof process !== "undefined" ? "production" !== "production" : verifyMinified.name === "verifyMinified",
  onAssign: null,
  onDelete: null,
  onCopy: null
};

var Immer = function Immer(config) {
  assign(this, configDefaults, config);
  this.setUseProxies(this.useProxies);
  this.produce = this.produce.bind(this);
};

Immer.prototype.produce = function produce(base, recipe, patchListener) {
  var this$1 = this; // curried invocation

  if (typeof base === "function" && typeof recipe !== "function") {
    var defaultBase = recipe;
    recipe = base;
    var self = this;
    return function curriedProduce(base) {
      var this$1 = this;
      if (base === void 0) base = defaultBase;
      var args = [],
          len = arguments.length - 1;

      while (len-- > 0) {
        args[len] = arguments[len + 1];
      }

      return self.produce(base, function (draft) {
        return recipe.call.apply(recipe, [this$1, draft].concat(args));
      }); // prettier-ignore
    };
  } // prettier-ignore


  {
    if (typeof recipe !== "function") {
      throw new Error("The first or second argument to `produce` must be a function");
    }

    if (patchListener !== undefined && typeof patchListener !== "function") {
      throw new Error("The third argument to `produce` must be a function or undefined");
    }
  }
  var result; // Only plain objects, arrays, and "immerable classes" are drafted.

  if (isDraftable(base)) {
    var scope = ImmerScope.enter();
    var proxy = this.createProxy(base);
    var hasError = true;

    try {
      result = recipe(proxy);
      hasError = false;
    } finally {
      // finally instead of catch + rethrow better preserves original stack
      if (hasError) {
        scope.revoke();
      } else {
        scope.leave();
      }
    }

    if (result instanceof Promise) {
      return result.then(function (result) {
        scope.usePatches(patchListener);
        return this$1.processResult(result, scope);
      }, function (error) {
        scope.revoke();
        throw error;
      });
    }

    scope.usePatches(patchListener);
    return this.processResult(result, scope);
  } else {
    result = recipe(base);

    if (result === undefined) {
      return base;
    }

    return result !== NOTHING ? result : undefined;
  }
};

Immer.prototype.createDraft = function createDraft(base) {
  if (!isDraftable(base)) {
    throw new Error("First argument to `createDraft` must be a plain object, an array, or an immerable object"); // prettier-ignore
  }

  var scope = ImmerScope.enter();
  var proxy = this.createProxy(base);
  proxy[DRAFT_STATE].isManual = true;
  scope.leave();
  return proxy;
};

Immer.prototype.finishDraft = function finishDraft(draft, patchListener) {
  var state = draft && draft[DRAFT_STATE];

  if (!state || !state.isManual) {
    throw new Error("First argument to `finishDraft` must be a draft returned by `createDraft`"); // prettier-ignore
  }

  if (state.finalized) {
    throw new Error("The given draft is already finalized"); // prettier-ignore
  }

  var scope = state.scope;
  scope.usePatches(patchListener);
  return this.processResult(undefined, scope);
};

Immer.prototype.setAutoFreeze = function setAutoFreeze(value) {
  this.autoFreeze = value;
};

Immer.prototype.setUseProxies = function setUseProxies(value) {
  this.useProxies = value;
  assign(this, value ? modernProxy : legacyProxy);
};

Immer.prototype.applyPatches = function applyPatches$1(base, patches) {
  // Mutate the base state when a draft is passed.
  if (isDraft(base)) {
    return applyPatches(base, patches);
  } // Otherwise, produce a copy of the base state.


  return this.produce(base, function (draft) {
    return applyPatches(draft, patches);
  });
};
/** @internal */


Immer.prototype.processResult = function processResult(result, scope) {
  var baseDraft = scope.drafts[0];
  var isReplaced = result !== undefined && result !== baseDraft;
  this.willFinalize(scope, result, isReplaced);

  if (isReplaced) {
    if (baseDraft[DRAFT_STATE].modified) {
      scope.revoke();
      throw new Error("An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft."); // prettier-ignore
    }

    if (isDraftable(result)) {
      // Finalize the result in case it contains (or is) a subset of the draft.
      result = this.finalize(result, null, scope);
    }

    if (scope.patches) {
      scope.patches.push({
        op: "replace",
        path: [],
        value: result
      });
      scope.inversePatches.push({
        op: "replace",
        path: [],
        value: baseDraft[DRAFT_STATE].base
      });
    }
  } else {
    // Finalize the base draft.
    result = this.finalize(baseDraft, [], scope);
  }

  scope.revoke();

  if (scope.patches) {
    scope.patchListener(scope.patches, scope.inversePatches);
  }

  return result !== NOTHING ? result : undefined;
};
/**
 * @internal
 * Finalize a draft, returning either the unmodified base state or a modified
 * copy of the base state.
 */


Immer.prototype.finalize = function finalize(draft, path, scope) {
  var this$1 = this;
  var state = draft[DRAFT_STATE];

  if (!state) {
    if (Object.isFrozen(draft)) {
      return draft;
    }

    return this.finalizeTree(draft, null, scope);
  } // Never finalize drafts owned by another scope.


  if (state.scope !== scope) {
    return draft;
  }

  if (!state.modified) {
    return state.base;
  }

  if (!state.finalized) {
    state.finalized = true;
    this.finalizeTree(state.draft, path, scope);

    if (this.onDelete) {
      // The `assigned` object is unreliable with ES5 drafts.
      if (this.useProxies) {
        var assigned = state.assigned;

        for (var prop in assigned) {
          if (!assigned[prop]) {
            this.onDelete(state, prop);
          }
        }
      } else {
        var base = state.base;
        var copy = state.copy;
        each(base, function (prop) {
          if (!has(copy, prop)) {
            this$1.onDelete(state, prop);
          }
        });
      }
    }

    if (this.onCopy) {
      this.onCopy(state);
    } // At this point, all descendants of `state.copy` have been finalized,
    // so we can be sure that `scope.canAutoFreeze` is accurate.


    if (this.autoFreeze && scope.canAutoFreeze) {
      Object.freeze(state.copy);
    }

    if (path && scope.patches) {
      generatePatches(state, path, scope.patches, scope.inversePatches);
    }
  }

  return state.copy;
};
/**
 * @internal
 * Finalize all drafts in the given state tree.
 */


Immer.prototype.finalizeTree = function finalizeTree(root, rootPath, scope) {
  var this$1 = this;
  var state = root[DRAFT_STATE];

  if (state) {
    if (!this.useProxies) {
      // Create the final copy, with added keys and without deleted keys.
      state.copy = shallowCopy(state.draft, true);
    }

    root = state.copy;
  }

  var needPatches = !!rootPath && !!scope.patches;

  var finalizeProperty = function finalizeProperty(prop, value, parent) {
    if (value === parent) {
      throw Error("Immer forbids circular references");
    } // In the `finalizeTree` method, only the `root` object may be a draft.


    var isDraftProp = !!state && parent === root;

    if (isDraft(value)) {
      var path = isDraftProp && needPatches && !state.assigned[prop] ? rootPath.concat(prop) : null; // Drafts owned by `scope` are finalized here.

      value = this$1.finalize(value, path, scope); // Drafts from another scope must prevent auto-freezing.

      if (isDraft(value)) {
        scope.canAutoFreeze = false;
      } // Preserve non-enumerable properties.


      if (Array.isArray(parent) || isEnumerable(parent, prop)) {
        parent[prop] = value;
      } else {
        Object.defineProperty(parent, prop, {
          value: value
        });
      } // Unchanged drafts are never passed to the `onAssign` hook.


      if (isDraftProp && value === state.base[prop]) {
        return;
      }
    } // Unchanged draft properties are ignored.
    else if (isDraftProp && is(value, state.base[prop])) {
        return;
      } // Search new objects for unfinalized drafts. Frozen objects should never contain drafts.
      else if (isDraftable(value) && !Object.isFrozen(value)) {
          each(value, finalizeProperty);
        }

    if (isDraftProp && this$1.onAssign) {
      this$1.onAssign(state, prop, value);
    }
  };

  each(root, finalizeProperty);
  return root;
};

var immer = new Immer();
/**
 * The `produce` function takes a value and a "recipe function" (whose
 * return value often depends on the base state). The recipe function is
 * free to mutate its first argument however it wants. All mutations are
 * only ever applied to a __copy__ of the base state.
 *
 * Pass only a function to create a "curried producer" which relieves you
 * from passing the recipe function every time.
 *
 * Only plain objects and arrays are made mutable. All other objects are
 * considered uncopyable.
 *
 * Note: This function is __bound__ to its `Immer` instance.
 *
 * @param {any} base - the initial state
 * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified
 * @param {Function} patchListener - optional function that will be called with all the patches produced here
 * @returns {any} a new state, or the initial state if nothing was modified
 */

var produce = immer.produce;
/**
 * Pass true to automatically freeze all copies created by Immer.
 *
 * By default, auto-freezing is disabled in production.
 */

var setAutoFreeze = immer.setAutoFreeze.bind(immer);
/**
 * Pass true to use the ES2015 `Proxy` class when creating drafts, which is
 * always faster than using ES5 proxies.
 *
 * By default, feature detection is used, so calling this is rarely necessary.
 */

var setUseProxies = immer.setUseProxies.bind(immer);
/**
 * Apply an array of Immer patches to the first argument.
 *
 * This function is a producer, which means copy-on-write is in effect.
 */

var applyPatches$1 = immer.applyPatches.bind(immer);
/**
 * Create an Immer draft from the given base state, which may be a draft itself.
 * The draft can be modified until you finalize it with the `finishDraft` function.
 */

var createDraft = immer.createDraft.bind(immer);
/**
 * Finalize an Immer draft from a `createDraft` call, returning the base state
 * (if no changes were made) or a modified copy. The draft must *not* be
 * mutated afterwards.
 *
 * Pass a function as the 2nd argument to generate Immer patches based on the
 * changes that were made.
 */

var finishDraft = immer.finishDraft.bind(immer);
/* harmony default export */ __webpack_exports__["a"] = (produce);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(28)))

/***/ }),
/* 6 */
/***/ (function(module, exports) {

var g; // This works in non-strict mode

g = function () {
  return this;
}();

try {
  // This works if eval is allowed (see CSP)
  g = g || new Function("return this")();
} catch (e) {
  // This works if the window reference is available
  if (typeof window === "object") g = window;
} // g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}


module.exports = g;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(32);

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
   true ? factory(exports, __webpack_require__(0), __webpack_require__(24), __webpack_require__(27)) : undefined;
})(this, function (exports, React, PropTypes, KaTeX) {
  'use strict';

  React = React && 'default' in React ? React['default'] : React;
  PropTypes = PropTypes && 'default' in PropTypes ? PropTypes['default'] : PropTypes;
  KaTeX = KaTeX && 'default' in KaTeX ? KaTeX['default'] : KaTeX;

  var classCallCheck = function classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };

  var createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var inherits = function inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  };

  var possibleConstructorReturn = function possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  };

  var createMathComponent = function createMathComponent(Component, _ref) {
    var displayMode = _ref.displayMode;

    var MathComponent = function (_React$Component) {
      inherits(MathComponent, _React$Component);

      function MathComponent(props) {
        classCallCheck(this, MathComponent);

        var _this = possibleConstructorReturn(this, (MathComponent.__proto__ || Object.getPrototypeOf(MathComponent)).call(this, props));

        _this.usedProp = props.math ? 'math' : 'children';
        _this.state = _this.createNewState(null, props);
        return _this;
      }

      createClass(MathComponent, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps() {
          this.setState(this.createNewState);
        }
      }, {
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
          return nextProps[this.usedProp] !== this.props[this.usedProp];
        }
      }, {
        key: 'createNewState',
        value: function createNewState(prevState, props) {
          try {
            var html = this.generateHtml(props);
            return {
              html: html,
              error: undefined
            };
          } catch (error) {
            if (error instanceof KaTeX.ParseError || error instanceof TypeError) {
              return {
                error: error
              };
            }

            throw error;
          }
        }
      }, {
        key: 'generateHtml',
        value: function generateHtml(props) {
          var errorColor = props.errorColor,
              renderError = props.renderError;
          return KaTeX.renderToString(props[this.usedProp], {
            displayMode: displayMode,
            errorColor: errorColor,
            throwOnError: !!renderError
          });
        }
      }, {
        key: 'render',
        value: function render() {
          var _state = this.state,
              error = _state.error,
              html = _state.html;
          var renderError = this.props.renderError;

          if (error) {
            return renderError ? renderError(error) : React.createElement(Component, {
              html: '' + error.message
            });
          }

          return React.createElement(Component, {
            html: html
          });
        }
      }]);
      return MathComponent;
    }(React.Component);

    MathComponent.propTypes = {
      children: PropTypes.string,
      errorColor: PropTypes.string,
      math: PropTypes.string,
      renderError: PropTypes.func
    };
    return MathComponent;
  };

  var InlineMath = function InlineMath(_ref) {
    var html = _ref.html;
    return React.createElement('span', {
      dangerouslySetInnerHTML: {
        __html: html
      }
    });
  };

  InlineMath.propTypes = {
    html: PropTypes.string.isRequired
  };
  var InlineMath$1 = createMathComponent(InlineMath, {
    displayMode: false
  });

  var BlockMath = function BlockMath(_ref) {
    var html = _ref.html;
    return React.createElement('div', {
      dangerouslySetInnerHTML: {
        __html: html
      }
    });
  };

  BlockMath.propTypes = {
    html: PropTypes.string.isRequired
  };
  var BlockMath$1 = createMathComponent(BlockMath, {
    displayMode: true
  });
  exports.InlineMath = InlineMath$1;
  exports.BlockMath = BlockMath$1;
  Object.defineProperty(exports, '__esModule', {
    value: true
  });
});

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);
/* global window */

var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (true) {
  root = module;
} else {}

var result = Object(_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(root);
/* harmony default export */ __webpack_exports__["a"] = (result);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6), __webpack_require__(29)(module)))

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }

  if (false) {}

  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(19);
} else {}

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
 *  base64.js
 *
 *  Licensed under the BSD 3-Clause License.
 *    http://opensource.org/licenses/BSD-3-Clause
 *
 *  References:
 *    http://en.wikipedia.org/wiki/Base64
 */
;

(function (global, factory) {
   true ? module.exports = factory(global) : undefined;
})(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : this, function (global) {
  'use strict'; // existing version for noConflict()

  global = global || {};
  var _Base64 = global.Base64;
  var version = "2.5.1"; // if node.js and NOT React Native, we use Buffer

  var buffer;

  if ( true && module.exports) {
    try {
      buffer = eval("require('buffer').Buffer");
    } catch (err) {
      buffer = undefined;
    }
  } // constants


  var b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

  var b64tab = function (bin) {
    var t = {};

    for (var i = 0, l = bin.length; i < l; i++) {
      t[bin.charAt(i)] = i;
    }

    return t;
  }(b64chars);

  var fromCharCode = String.fromCharCode; // encoder stuff

  var cb_utob = function cb_utob(c) {
    if (c.length < 2) {
      var cc = c.charCodeAt(0);
      return cc < 0x80 ? c : cc < 0x800 ? fromCharCode(0xc0 | cc >>> 6) + fromCharCode(0x80 | cc & 0x3f) : fromCharCode(0xe0 | cc >>> 12 & 0x0f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);
    } else {
      var cc = 0x10000 + (c.charCodeAt(0) - 0xD800) * 0x400 + (c.charCodeAt(1) - 0xDC00);
      return fromCharCode(0xf0 | cc >>> 18 & 0x07) + fromCharCode(0x80 | cc >>> 12 & 0x3f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);
    }
  };

  var re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;

  var utob = function utob(u) {
    return u.replace(re_utob, cb_utob);
  };

  var cb_encode = function cb_encode(ccc) {
    var padlen = [0, 2, 1][ccc.length % 3],
        ord = ccc.charCodeAt(0) << 16 | (ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8 | (ccc.length > 2 ? ccc.charCodeAt(2) : 0),
        chars = [b64chars.charAt(ord >>> 18), b64chars.charAt(ord >>> 12 & 63), padlen >= 2 ? '=' : b64chars.charAt(ord >>> 6 & 63), padlen >= 1 ? '=' : b64chars.charAt(ord & 63)];
    return chars.join('');
  };

  var btoa = global.btoa ? function (b) {
    return global.btoa(b);
  } : function (b) {
    return b.replace(/[\s\S]{1,3}/g, cb_encode);
  };

  var _encode = buffer ? buffer.from && Uint8Array && buffer.from !== Uint8Array.from ? function (u) {
    return (u.constructor === buffer.constructor ? u : buffer.from(u)).toString('base64');
  } : function (u) {
    return (u.constructor === buffer.constructor ? u : new buffer(u)).toString('base64');
  } : function (u) {
    return btoa(utob(u));
  };

  var encode = function encode(u, urisafe) {
    return !urisafe ? _encode(String(u)) : _encode(String(u)).replace(/[+\/]/g, function (m0) {
      return m0 == '+' ? '-' : '_';
    }).replace(/=/g, '');
  };

  var encodeURI = function encodeURI(u) {
    return encode(u, true);
  }; // decoder stuff


  var re_btou = new RegExp(['[\xC0-\xDF][\x80-\xBF]', '[\xE0-\xEF][\x80-\xBF]{2}', '[\xF0-\xF7][\x80-\xBF]{3}'].join('|'), 'g');

  var cb_btou = function cb_btou(cccc) {
    switch (cccc.length) {
      case 4:
        var cp = (0x07 & cccc.charCodeAt(0)) << 18 | (0x3f & cccc.charCodeAt(1)) << 12 | (0x3f & cccc.charCodeAt(2)) << 6 | 0x3f & cccc.charCodeAt(3),
            offset = cp - 0x10000;
        return fromCharCode((offset >>> 10) + 0xD800) + fromCharCode((offset & 0x3FF) + 0xDC00);

      case 3:
        return fromCharCode((0x0f & cccc.charCodeAt(0)) << 12 | (0x3f & cccc.charCodeAt(1)) << 6 | 0x3f & cccc.charCodeAt(2));

      default:
        return fromCharCode((0x1f & cccc.charCodeAt(0)) << 6 | 0x3f & cccc.charCodeAt(1));
    }
  };

  var btou = function btou(b) {
    return b.replace(re_btou, cb_btou);
  };

  var cb_decode = function cb_decode(cccc) {
    var len = cccc.length,
        padlen = len % 4,
        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0) | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0) | (len > 2 ? b64tab[cccc.charAt(2)] << 6 : 0) | (len > 3 ? b64tab[cccc.charAt(3)] : 0),
        chars = [fromCharCode(n >>> 16), fromCharCode(n >>> 8 & 0xff), fromCharCode(n & 0xff)];
    chars.length -= [0, 0, 2, 1][padlen];
    return chars.join('');
  };

  var _atob = global.atob ? function (a) {
    return global.atob(a);
  } : function (a) {
    return a.replace(/\S{1,4}/g, cb_decode);
  };

  var atob = function atob(a) {
    return _atob(String(a).replace(/[^A-Za-z0-9\+\/]/g, ''));
  };

  var _decode = buffer ? buffer.from && Uint8Array && buffer.from !== Uint8Array.from ? function (a) {
    return (a.constructor === buffer.constructor ? a : buffer.from(a, 'base64')).toString();
  } : function (a) {
    return (a.constructor === buffer.constructor ? a : new buffer(a, 'base64')).toString();
  } : function (a) {
    return btou(_atob(a));
  };

  var decode = function decode(a) {
    return _decode(String(a).replace(/[-_]/g, function (m0) {
      return m0 == '-' ? '+' : '/';
    }).replace(/[^A-Za-z0-9\+\/]/g, ''));
  };

  var noConflict = function noConflict() {
    var Base64 = global.Base64;
    global.Base64 = _Base64;
    return Base64;
  }; // export Base64


  global.Base64 = {
    VERSION: version,
    atob: atob,
    btoa: btoa,
    fromBase64: decode,
    toBase64: encode,
    utob: utob,
    encode: encode,
    encodeURI: encodeURI,
    btou: btou,
    decode: decode,
    noConflict: noConflict,
    __buffer__: buffer
  }; // if ES5 is available, make Base64.extendString() available

  if (typeof Object.defineProperty === 'function') {
    var noEnum = function noEnum(v) {
      return {
        value: v,
        enumerable: false,
        writable: true,
        configurable: true
      };
    };

    global.Base64.extendString = function () {
      Object.defineProperty(String.prototype, 'fromBase64', noEnum(function () {
        return decode(this);
      }));
      Object.defineProperty(String.prototype, 'toBase64', noEnum(function (urisafe) {
        return encode(this, urisafe);
      }));
      Object.defineProperty(String.prototype, 'toBase64URI', noEnum(function () {
        return encode(this, true);
      }));
    };
  } //
  // export Base64 to the namespace
  //


  if (global['Meteor']) {
    // Meteor.js
    Base64 = global.Base64;
  } // module.exports and AMD are mutually exclusive.
  // module.exports has precedence.


  if ( true && module.exports) {
    module.exports.Base64 = global.Base64;
  } else if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return global.Base64;
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } // that's it!


  return {
    Base64: global.Base64
  };
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6)))

/***/ }),
/* 13 */
/***/ (function(module, exports) {

//
module.exports = function shallowEqual(objA, objB, compare, compareContext) {
  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

  if (ret !== void 0) {
    return !!ret;
  }

  if (objA === objB) {
    return true;
  }

  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB); // Test for A's keys different from B.

  for (var idx = 0; idx < keysA.length; idx++) {
    var key = keysA[idx];

    if (!bHasOwnProperty(key)) {
      return false;
    }

    var valueA = objA[key];
    var valueB = objB[key];
    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;

    if (ret === false || ret === void 0 && valueA !== valueB) {
      return false;
    }
  }

  return true;
};

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var require;var require;(function (f) {
  if (true) {
    module.exports = f();
  } else { var g; }
})(function () {
  var define, module, exports;
  return function e(t, n, r) {
    function s(o, u) {
      if (!n[o]) {
        if (!t[o]) {
          var a = typeof require == "function" && require;
          if (!u && a) return require(o, !0);
          if (i) return i(o, !0);
          var f = new Error("Cannot find module '" + o + "'");
          throw f.code = "MODULE_NOT_FOUND", f;
        }

        var l = n[o] = {
          exports: {}
        };
        t[o][0].call(l.exports, function (e) {
          var n = t[o][1][e];
          return s(n ? n : e);
        }, l, l.exports, e, t, n, r);
      }

      return n[o].exports;
    }

    var i = typeof require == "function" && require;

    for (var o = 0; o < r.length; o++) {
      s(r[o]);
    }

    return s;
  }({
    1: [function (_dereq_, module, exports) {
      module.exports = function (forceSimilar) {
        if (typeof Map !== 'function' || forceSimilar) {
          var Similar = _dereq_('./similar');

          return new Similar();
        } else {
          return new Map();
        }
      };
    }, {
      "./similar": 2
    }],
    2: [function (_dereq_, module, exports) {
      function Similar() {
        this.list = [];
        this.lastItem = undefined;
        this.size = 0;
        return this;
      }

      Similar.prototype.get = function (key) {
        var index;

        if (this.lastItem && this.isEqual(this.lastItem.key, key)) {
          return this.lastItem.val;
        }

        index = this.indexOf(key);

        if (index >= 0) {
          this.lastItem = this.list[index];
          return this.list[index].val;
        }

        return undefined;
      };

      Similar.prototype.set = function (key, val) {
        var index;

        if (this.lastItem && this.isEqual(this.lastItem.key, key)) {
          this.lastItem.val = val;
          return this;
        }

        index = this.indexOf(key);

        if (index >= 0) {
          this.lastItem = this.list[index];
          this.list[index].val = val;
          return this;
        }

        this.lastItem = {
          key: key,
          val: val
        };
        this.list.push(this.lastItem);
        this.size++;
        return this;
      };

      Similar.prototype.delete = function (key) {
        var index;

        if (this.lastItem && this.isEqual(this.lastItem.key, key)) {
          this.lastItem = undefined;
        }

        index = this.indexOf(key);

        if (index >= 0) {
          this.size--;
          return this.list.splice(index, 1)[0];
        }

        return undefined;
      }; // important that has() doesn't use get() in case an existing key has a falsy value, in which case has() would return false


      Similar.prototype.has = function (key) {
        var index;

        if (this.lastItem && this.isEqual(this.lastItem.key, key)) {
          return true;
        }

        index = this.indexOf(key);

        if (index >= 0) {
          this.lastItem = this.list[index];
          return true;
        }

        return false;
      };

      Similar.prototype.forEach = function (callback, thisArg) {
        var i;

        for (i = 0; i < this.size; i++) {
          callback.call(thisArg || this, this.list[i].val, this.list[i].key, this);
        }
      };

      Similar.prototype.indexOf = function (key) {
        var i;

        for (i = 0; i < this.size; i++) {
          if (this.isEqual(this.list[i].key, key)) {
            return i;
          }
        }

        return -1;
      }; // check if the numbers are equal, or whether they are both precisely NaN (isNaN returns true for all non-numbers)


      Similar.prototype.isEqual = function (val1, val2) {
        return val1 === val2 || val1 !== val1 && val2 !== val2;
      };

      module.exports = Similar;
    }, {}],
    3: [function (_dereq_, module, exports) {
      var MapOrSimilar = _dereq_('map-or-similar');

      module.exports = function (limit) {
        var cache = new MapOrSimilar(undefined === 'true'),
            lru = [];
        return function (fn) {
          var memoizerific = function memoizerific() {
            var currentCache = cache,
                newMap,
                fnResult,
                argsLengthMinusOne = arguments.length - 1,
                lruPath = Array(argsLengthMinusOne + 1),
                isMemoized = true,
                i;

            if ((memoizerific.numArgs || memoizerific.numArgs === 0) && memoizerific.numArgs !== argsLengthMinusOne + 1) {
              throw new Error('Memoizerific functions should always be called with the same number of arguments');
            } // loop through each argument to traverse the map tree


            for (i = 0; i < argsLengthMinusOne; i++) {
              lruPath[i] = {
                cacheItem: currentCache,
                arg: arguments[i]
              }; // climb through the hierarchical map tree until the second-last argument has been found, or an argument is missing.
              // if all arguments up to the second-last have been found, this will potentially be a cache hit (determined later)

              if (currentCache.has(arguments[i])) {
                currentCache = currentCache.get(arguments[i]);
                continue;
              }

              isMemoized = false; // make maps until last value

              newMap = new MapOrSimilar(undefined === 'true');
              currentCache.set(arguments[i], newMap);
              currentCache = newMap;
            } // we are at the last arg, check if it is really memoized


            if (isMemoized) {
              if (currentCache.has(arguments[argsLengthMinusOne])) {
                fnResult = currentCache.get(arguments[argsLengthMinusOne]);
              } else {
                isMemoized = false;
              }
            }

            if (!isMemoized) {
              fnResult = fn.apply(null, arguments);
              currentCache.set(arguments[argsLengthMinusOne], fnResult);
            }

            if (limit > 0) {
              lruPath[argsLengthMinusOne] = {
                cacheItem: currentCache,
                arg: arguments[argsLengthMinusOne]
              };

              if (isMemoized) {
                moveToMostRecentLru(lru, lruPath);
              } else {
                lru.push(lruPath);
              }

              if (lru.length > limit) {
                removeCachedResult(lru.shift());
              }
            }

            memoizerific.wasMemoized = isMemoized;
            memoizerific.numArgs = argsLengthMinusOne + 1;
            return fnResult;
          };

          memoizerific.limit = limit;
          memoizerific.wasMemoized = false;
          memoizerific.cache = cache;
          memoizerific.lru = lru;
          return memoizerific;
        };
      }; // move current args to most recent position


      function moveToMostRecentLru(lru, lruPath) {
        var lruLen = lru.length,
            lruPathLen = lruPath.length,
            isMatch,
            i,
            ii;

        for (i = 0; i < lruLen; i++) {
          isMatch = true;

          for (ii = 0; ii < lruPathLen; ii++) {
            if (!isEqual(lru[i][ii].arg, lruPath[ii].arg)) {
              isMatch = false;
              break;
            }
          }

          if (isMatch) {
            break;
          }
        }

        lru.push(lru.splice(i, 1)[0]);
      } // remove least recently used cache item and all dead branches


      function removeCachedResult(removedLru) {
        var removedLruLen = removedLru.length,
            currentLru = removedLru[removedLruLen - 1],
            tmp,
            i;
        currentLru.cacheItem.delete(currentLru.arg); // walk down the tree removing dead branches (size 0) along the way

        for (i = removedLruLen - 2; i >= 0; i--) {
          currentLru = removedLru[i];
          tmp = currentLru.cacheItem.get(currentLru.arg);

          if (!tmp || !tmp.size) {
            currentLru.cacheItem.delete(currentLru.arg);
          } else {
            break;
          }
        }
      } // check if the numbers are equal, or whether they are both precisely NaN (isNaN returns true for all non-numbers)


      function isEqual(val1, val2) {
        return val1 === val2 || val1 !== val1 && val2 !== val2;
      }
    }, {
      "map-or-similar": 1
    }]
  }, {}, [3])(3);
});

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return symbolObservablePonyfill; });
function symbolObservablePonyfill(root) {
  var result;
  var Symbol = root.Symbol;

  if (typeof Symbol === 'function') {
    if (Symbol.observable) {
      result = Symbol.observable;
    } else {
      result = Symbol('observable');
      Symbol.observable = result;
    }
  } else {
    result = '@@observable';
  }

  return result;
}
;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/

/* global define */
(function () {
  'use strict';

  var hasOwn = {}.hasOwnProperty;

  function classNames() {
    var classes = [];

    for (var i = 0; i < arguments.length; i++) {
      var arg = arguments[i];
      if (!arg) continue;
      var argType = typeof arg;

      if (argType === 'string' || argType === 'number') {
        classes.push(arg);
      } else if (Array.isArray(arg) && arg.length) {
        var inner = classNames.apply(null, arg);

        if (inner) {
          classes.push(inner);
        }
      } else if (argType === 'object') {
        for (var key in arg) {
          if (hasOwn.call(arg, key) && arg[key]) {
            classes.push(key);
          }
        }
      }
    }

    return classes.join(' ');
  }

  if ( true && module.exports) {
    classNames.default = classNames;
    module.exports = classNames;
  } else if (true) {
    // register as 'classnames', consistent with npm package name
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return classNames;
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})();

/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var node_modules_react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(node_modules_react);

// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(11);
var react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);

// EXTERNAL MODULE: ./node_modules/js-base64/base64.js
var base64 = __webpack_require__(12);

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__(4);

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread.js

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js



function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}
// EXTERNAL MODULE: ./node_modules/underscore/underscore.js
var underscore = __webpack_require__(2);
var underscore_default = /*#__PURE__*/__webpack_require__.n(underscore);

// EXTERNAL MODULE: ./node_modules/simple-markdown/simple-markdown.js
var simple_markdown = __webpack_require__(1);
var simple_markdown_default = /*#__PURE__*/__webpack_require__.n(simple_markdown);

// EXTERNAL MODULE: ./node_modules/katex/dist/katex.min.css
var katex_min = __webpack_require__(23);

// EXTERNAL MODULE: ./node_modules/react-katex/dist/react-katex.js
var react_katex = __webpack_require__(8);

// CONCATENATED MODULE: ./src/components/tex.js
//import MathJax from "react-mathjax";
function TeX(props){var children=props.children,rest=_objectWithoutProperties(props,["children"]);if(rest.displaystyle){return react_default.a.createElement(react_katex["BlockMath"],null,children);}return react_default.a.createElement(react_katex["InlineMath"],null,children);}/* harmony default export */ var tex = (TeX);
// CONCATENATED MODULE: ./src/components/utils/perseus-markdown.js
/* eslint-disable no-var, object-curly-spacing */ /* TODO(csilvers): fix these lint errors (http://eslint.org/docs/rules): */ /* To fix, remove an entry above, run ka-lint, and fix errors. */ /* globals KA *///import SimpleMarkdown from "../../libs/simple-markdown.js";
var Util={rWidgetRule:/^\[\[\u2603 (([a-z-]+) ([0-9]+))\]\]/};/**
 * This match function matches math in `$`s, such as:
 *
 * $y = x + 1$
 *
 * It functions roughly like the following regex:
 * /\$([^\$]*)\$/
 *
 * Unfortunately, math may have other `$`s inside it, as
 * long as they are inside `{` braces `}`, mostly for
 * `\text{ $math$ }`.
 *
 * To parse this, we can't use a regex, since we
 * should support arbitrary nesting (even though
 * MathJax actually only supports two levels of nesting
 * here, which we *could* parse with a regex).
 *
 * Non-regex matchers like this are now a first-class
 * concept in simple-markdown. Yay!
 *
 * This can also match block-math, which is math alone in a paragraph.
 */var mathMatcher=function mathMatcher(source,state,isBlock){var length=source.length;var index=0;// When looking for blocks, skip over leading spaces
if(isBlock){if(state.inline){return null;}while(index<length&&source[index]===" "){index++;}}// Our source must start with a "$"
if(!(index<length&&source[index]==="$")){return null;}index++;var startIndex=index;var braceLevel=0;// Loop through the source, looking for a closing '$'
// closing '$'s only count if they are not escaped with
// a `\`, and we are not in nested `{}` braces.
while(index<length){var character=source[index];if(character==="\\"){// Consume both the `\` and the escaped char as a single
// token.
// This is so that the second `$` in `$\\$` closes
// the math expression, since the first `\` is escaping
// the second `\`, but the second `\` is not escaping
// the second `$`.
// This also handles the case of escaping `$`s or
// braces `\{`
index++;}else if(braceLevel<=0&&character==="$"){var endIndex=index+1;if(isBlock){// Look for two trailing newlines after the closing `$`
var match=/^(?: *\n){2,}/.exec(source.slice(endIndex));endIndex=match?endIndex+match[0].length:null;}// Return an array that looks like the results of a
// regex's .exec function:
// capture[0] is the whole string
// capture[1] is the first "paren" match, which is the
//   content of the math here, as if we wrote the regex
//   /\$([^\$]*)\$/
if(endIndex){return[source.substring(0,endIndex),source.substring(startIndex,index)];}return null;}else if(character==="{"){braceLevel++;}else if(character==="}"){braceLevel--;}else if(character==="\n"&&source[index-1]==="\n"){// This is a weird case we supported in the old
// math implementation--double newlines break
// math. I'm preserving it for now because content
// creators might have questions with single '$'s
// in paragraphs...
return null;}index++;}// we didn't find a closing `$`
return null;};var mathMatch=function mathMatch(source,state){return mathMatcher(source,state,false);};var blockMathMatch=function blockMathMatch(source,state){return mathMatcher(source,state,true);};var TITLED_TABLE_REGEX=new RegExp("^\\|\\| +(.*) +\\|\\| *\\n"+"("+// The simple-markdown nptable regex, without
// the leading `^`
simple_markdown_default.a.defaultRules.nptable.match.regex.source.substring(1)+")");var crowdinJiptMatcher=simple_markdown_default.a.blockRegex(/^(crwdns.*)\n\s*\n/);var perseus_markdown_rules=underscore_default.a.extend({},simple_markdown_default.a.defaultRules,{// NOTE: basically ignored by JIPT. wraps everything at the outer layer
columns:{order:-2,match:simple_markdown_default.a.blockRegex(/^([\s\S]*\n\n)={5,}\n\n([\s\S]*)/),parse:function parse(capture,_parse,state){return{col1:_parse(capture[1],state),col2:_parse(capture[2],state)};},react:function react(node,output,state){return react_default.a.createElement("div",{className:"perseus-two-columns",key:state.key},react_default.a.createElement("div",{className:"perseus-column"},react_default.a.createElement("div",{className:"perseus-column-content"},output(node.col1,state))),react_default.a.createElement("div",{className:"perseus-column"},react_default.a.createElement("div",{className:"sat-header-grafting-area"}),react_default.a.createElement("div",{className:"perseus-column-content"},react_default.a.createElement("div",{className:"sat-skill-subscore-grafting-area"}),output(node.col2,state),react_default.a.createElement("div",{className:"sat-grafting-area"}))));}},// Match paragraphs consisting solely of crowdin IDs
// (they look roughly like crwdns9238932:0), which means that
// crowdin is going to take the DOM node that ID is rendered into
// and count it as the top-level translation node. They mutate this
// node, so we need to make sure it is an outer node, not an inner
// span. So here we parse this separately and just output the
// raw string, which becomes the body of the <QuestionParagraph>
// created by the Renderer.
// This currently (2015-09-01) affects only articles, since
// for exercises the renderer just renders the crowdin id to the
// renderer div.
crowdinId:{order:-1,match:function match(source,state,prevCapture){// Only match on the just-in-place translation site
if(state.isJipt){return crowdinJiptMatcher(source,state,prevCapture);}else{return null;}},parse:function parse(capture,_parse2,state){return{id:capture[1]};},react:function react(node,output,state){return node.id;}},// This is pretty much horrible, but we have a regex here to capture an
// entire table + a title. capture[1] is the title. capture[2] of the
// regex is a copy of the simple-markdown nptable regex. Then we turn
// our capture[2] into tableCapture[0], and any further captures in
// our table regex into tableCapture[1..], and we pass tableCapture to
// our nptable regex
titledTable:{// process immediately before nptables
order:simple_markdown_default.a.defaultRules.nptable.order-0.5,match:simple_markdown_default.a.blockRegex(TITLED_TABLE_REGEX),parse:function parse(capture,_parse3,state){var title=simple_markdown_default.a.parseInline(_parse3,capture[1],state);// Remove our [0] and [1] captures, and pass the rest to
// the nptable parser
var tableCapture=underscore_default.a.rest(capture,2);var table=simple_markdown_default.a.defaultRules.nptable.parse(tableCapture,_parse3,state);return{title:title,table:table};},react:function react(node,output,state){var contents;if(!node.table){contents="//invalid table//";}else{var tableOutput=simple_markdown_default.a.defaultRules.table.react(node.table,output,state);var caption=react_default.a.createElement("caption",{key:"caption",className:"perseus-table-title"},output(node.title,state));// Splice the caption into the table's children with the
// caption as the first child.
contents=react_default.a.cloneElement(tableOutput,null,[caption].concat(_toConsumableArray(tableOutput.props.children)));}// Note: if the DOM structure changes, edit the Zoomable wrapper
// in src/renderer.jsx.
return react_default.a.createElement("div",{className:"perseus-titled-table",key:state.key},contents);}},widget:{order:simple_markdown_default.a.defaultRules.link.order-0.75,match:simple_markdown_default.a.inlineRegex(Util.rWidgetRule),parse:function parse(capture,_parse4,state){return{id:capture[1],widgetType:capture[2]};},react:function react(node,output,state){// The actual output is handled in the renderer, where
// we know the current widget props/state. This is
// just a stub for testing.
return react_default.a.createElement("em",{key:state.key},"[Widget: ",node.id,"]");}},blockMath:{order:simple_markdown_default.a.defaultRules.codeBlock.order+0.5,match:blockMathMatch,parse:function parse(capture,_parse5,state){return{content:capture[1]};},react:function react(node,output,state){// The actual output is handled in the renderer, because
// it needs to pass in an `onRender` callback prop. This
// is just a stub for testing.
return react_default.a.createElement(tex,{key:state.key,displaystyle:true},node.content);}},math:{order:simple_markdown_default.a.defaultRules.link.order-0.25,match:mathMatch,parse:function parse(capture,_parse6,state){return{content:capture[1]};},react:function react(node,output,state){return react_default.a.createElement(tex,{key:state.key},node.content);}},unescapedDollar:{order:simple_markdown_default.a.defaultRules.link.order-0.24,match:simple_markdown_default.a.inlineRegex(/^(?!\\)\$/),parse:function parse(capture,_parse7,state){return{};},react:function react(node,output,state){// Unescaped dollar signs render correctly, but result in
// untranslatable text after the i18n python linter flags it
return"$";}},fence:underscore_default.a.extend({},simple_markdown_default.a.defaultRules.fence,{parse:function parse(capture,_parse8,state){var node=simple_markdown_default.a.defaultRules.fence.parse(capture,_parse8,state);// support screenreader-only text with ```alt
if(node.lang==="alt"){return{type:"codeBlock",lang:"alt",// default codeBlock parsing doesn't parse the contents.
// We need to parse the contents for things like table
// support :).
// The \n\n is because the inside of the codeblock might
// not end in double newlines for block rules, because
// ordinarily we don't parse this :).
content:_parse8(node.content+"\n\n",state)};}else{return node;}}}),// Extend the SimpleMarkdown link parser to make the link
// zero-rating-friendly if necessary. No changes will be made for
// non-zero-rated requests, but zero-rated requests will be re-pointed at
// either the zero-rated version of khanacademy.org or the external link
// warning interstitial. We also replace the default <a /> tag with a custom
// element, if necessary.
link:underscore_default.a.extend({},simple_markdown_default.a.defaultRules.link,{react:function react(node,output,state){var link=simple_markdown_default.a.defaultRules.link.react(node,output,state);var href=link.props.href;// TODO(charlie): Move this logic out of Perseus and into webapp via
// the <Link /> component that is now injected as a dependency.
if(typeof KA!=="undefined"&&KA.isZeroRated){if(href.match(/https?:\/\/[^/]*khanacademy.org/)){href=href.replace("khanacademy.org","zero.khanacademy.org");}else{href="/zero/external-link?url="+encodeURIComponent(href);}}var newProps=_objectSpread({},link.props,{href:href});if(state.baseElements&&state.baseElements.Link){return state.baseElements.Link(newProps);}else{return react_default.a.cloneElement(link,newProps);}}}),codeBlock:underscore_default.a.extend({},simple_markdown_default.a.defaultRules.codeBlock,{react:function react(node,output,state){// ideally this should be a different rule, with only an
// output function, but right now that breaks the parser.
if(node.lang==="alt"){return react_default.a.createElement("div",{key:state.key,className:"perseus-markdown-alt perseus-sr-only"},output(node.content,state));}else{return simple_markdown_default.a.defaultRules.codeBlock.react(node,output,state);}}}),list:underscore_default.a.extend({},simple_markdown_default.a.defaultRules.list,{match:function match(source,state,prevCapture){// Since lists can contain double newlines and we have special
// handling of double newlines while parsing jipt content, just
// disable the list parser.
if(state.isJipt){return null;}else{return simple_markdown_default.a.defaultRules.list.match(source,state,prevCapture);}}}),// The lint rule never actually matches anything.
// We check for lint after parsing, and, if we find any, we
// transform the tree to add lint nodes. This rule is here
// just for the react() function
lint:{order:1000,match:function match(s){return null;},parse:function parse(capture,_parse9,state){return{};},react:function react(node,output,state){console.log("perseus-markdown lint triggered",node.message,node.ruleName,node.severity);return react_default.a.createElement("div",null);}}});// Return true if the specified parse tree node represents inline content
// and false otherwise. We need this so that lint nodes can figure out whether
// they should behave as an inline wrapper or a block wrapper
var builtParser=simple_markdown_default.a.parserFor(perseus_markdown_rules);var perseus_markdown_parse=function parse(source,state){var paragraphedSource=source+"\n\n";return builtParser(paragraphedSource,underscore_default.a.extend({inline:false},state));};var perseus_markdown_inlineParser=function inlineParser(source,state){return builtParser(source,underscore_default.a.extend({inline:true},state));};/**
 * Traverse all of the nodes in the Perseus Markdown AST. The callback is
 * called for each node in the AST.
 */var perseus_markdown_traverseContent=function traverseContent(ast,cb){if(underscore_default.a.isArray(ast)){underscore_default.a.each(ast,function(node){return traverseContent(node,cb);});}else if(underscore_default.a.isObject(ast)){cb(ast);if(ast.type==="table"){traverseContent(ast.header,cb);traverseContent(ast.cells,cb);}else if(ast.type==="list"){traverseContent(ast.items,cb);}else if(ast.type==="titledTable"){traverseContent(ast.table,cb);}else if(ast.type==="columns"){traverseContent(ast.col1,cb);traverseContent(ast.col2,cb);}else if(underscore_default.a.isArray(ast.content)){traverseContent(ast.content,cb);}}};/**
 * Pull out text content from a Perseus Markdown AST.
 * Returns an array of strings.
 */var perseus_markdown_getContent=function getContent(ast){// Simplify logic by dealing with a single AST node at a time
if(underscore_default.a.isArray(ast)){return underscore_default.a.flatten(underscore_default.a.map(ast,getContent));}// Base case: This is where we actually extract text content
if(ast.content&&underscore_default.a.isString(ast.content)){// Collapse whitespace within content unless it is code
if(ast.type.toLowerCase().indexOf("code")!==-1){// In case this is the sole child of a paragraph,
// prevent whitespace from being trimmed later
return["",ast.content,""];}else{return[ast.content.replace(/\s+/g," ")];}}// Recurse through child AST nodes
// Assumptions made:
// 1) Child AST nodes are either direct properties or inside
//    arbitrarily nested lists that are direct properties.
// 2) Only AST nodes have a 'type' property.
var children=underscore_default.a.chain(ast).values().flatten().filter(function(object){return object!=null&&underscore_default.a.has(object,"type");}).value();if(!children.length){return[];}else{var nestedContent=getContent(children);if(ast.type==="paragraph"&&nestedContent.length){// Trim whitespace before or after a paragraph
nestedContent[0]=nestedContent[0].replace(/^\s+/,"");var last=nestedContent.length-1;nestedContent[last]=nestedContent[last].replace(/\s+$/,"");}return nestedContent;}};/**
 * Count the number of characters in Perseus Markdown source.
 * Markdown markup and widget references are ignored.
 */var characterCount=function characterCount(source){var ast=perseus_markdown_parse(source);var content=perseus_markdown_getContent(ast).join("");return content.length;};function ruleOverrideOutput(){var newRules=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var extendedRules=_objectSpread({},perseus_markdown_rules);for(var _i=0,_Object$entries=Object.entries(newRules);_i<_Object$entries.length;_i++){var _ref3=_Object$entries[_i];var _ref2=Object(slicedToArray["a" /* default */])(_ref3,2);var key=_ref2[0];var val=_ref2[1];extendedRules[key]=extendedRules[key]||{};extendedRules[key]=_objectSpread({},extendedRules[key],val);}return simple_markdown_default.a.reactFor(simple_markdown_default.a.ruleOutput(extendedRules,"react"));}var _parseInline$reactFor={parseInline:perseus_markdown_inlineParser,reactFor:simple_markdown_default.a.reactFor,ruleOutput:simple_markdown_default.a.ruleOutput(perseus_markdown_rules,"react"),basicOutput:simple_markdown_default.a.reactFor(simple_markdown_default.a.ruleOutput(perseus_markdown_rules,"react")),sanitizeUrl:simple_markdown_default.a.sanitizeUrl},ruleOutput=_parseInline$reactFor.ruleOutput,basicOutput=_parseInline$reactFor.basicOutput,sanitizeUrl=_parseInline$reactFor.sanitizeUrl,reactFor=_parseInline$reactFor.reactFor,parseInline=_parseInline$reactFor.parseInline;/* harmony default export */ var perseus_markdown = ({characterCount:characterCount,traverseContent:perseus_markdown_traverseContent,parse:perseus_markdown_parse,ruleOutput:ruleOutput,ruleOverrideOutput:ruleOverrideOutput,basicOutput:basicOutput,sanitizeUrl:sanitizeUrl,reactFor:reactFor,parseInline:parseInline});
// EXTERNAL MODULE: ./node_modules/easy-peasy/node_modules/immer/dist/immer.module.js
var immer_module = __webpack_require__(5);

// EXTERNAL MODULE: ./node_modules/shallowequal/index.js
var shallowequal = __webpack_require__(13);
var shallowequal_default = /*#__PURE__*/__webpack_require__.n(shallowequal);

// EXTERNAL MODULE: ./node_modules/symbol-observable/es/index.js
var es = __webpack_require__(9);

// CONCATENATED MODULE: ./node_modules/redux/es/redux.js

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */

var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};
/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */

function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
}
/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */


function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function');
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error('Expected the enhancer to be a function.');
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error('Expected the reducer to be a function.');
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected the listener to be a function.');
    }

    if (isDispatching) {
      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    if (isDispatching) {
      throw new Error('Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error('Expected the nextReducer to be a function.');
    }

    currentReducer = nextReducer;
    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[es["a" /* default */]] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[es["a" /* default */]] = observable, _ref2;
}
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */


function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
  } catch (e) {} // eslint-disable-line no-empty

}

function getUndefinedStateErrorMessage(key, action) {
  var actionType = action && action.type;
  var actionDescription = actionType && "action \"" + String(actionType) + "\"" || 'an action';
  return "Given " + actionDescription + ", reducer \"" + key + "\" returned undefined. " + "To ignore an action, you must explicitly return the previous state. " + "If you want this reducer to hold no value, you can return null instead of undefined.";
}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!isPlainObject(inputState)) {
    return "The " + argumentName + " has unexpected type of \"" + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + "\". Expected argument to be an object with the following " + ("keys: \"" + reducerKeys.join('", "') + "\"");
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });
  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });
  if (action && action.type === ActionTypes.REPLACE) return;

  if (unexpectedKeys.length > 0) {
    return "Unexpected " + (unexpectedKeys.length > 1 ? 'keys' : 'key') + " " + ("\"" + unexpectedKeys.join('", "') + "\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\"" + reducerKeys.join('", "') + "\". Unexpected keys will be ignored.");
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, {
      type: ActionTypes.INIT
    });

    if (typeof initialState === 'undefined') {
      throw new Error("Reducer \"" + key + "\" returned undefined during initialization. " + "If the state passed to the reducer is undefined, you must " + "explicitly return the initial state. The initial state may " + "not be undefined. If you don't want to set a value for this reducer, " + "you can use null instead of undefined.");
    }

    if (typeof reducer(undefined, {
      type: ActionTypes.PROBE_UNKNOWN_ACTION()
    }) === 'undefined') {
      throw new Error("Reducer \"" + key + "\" returned undefined when probed with a random type. " + ("Don't try to handle " + ActionTypes.INIT + " or other actions in \"redux/*\" ") + "namespace. They are considered private. Instead, you must return the " + "current state for any unknown actions, unless it is undefined, " + "in which case you must return the initial state, regardless of the " + "action type. The initial state may not be undefined, but can be null.");
    }
  });
}
/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */


function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};

  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (false) {}

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }

  var finalReducerKeys = Object.keys(finalReducers);
  var unexpectedKeyCache;

  if (false) {}

  var shapeAssertionError;

  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination(state, action) {
    if (state === void 0) {
      state = {};
    }

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (false) { var warningMessage; }

    var hasChanged = false;
    var nextState = {};

    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);

      if (typeof nextStateForKey === 'undefined') {
        var errorMessage = getUndefinedStateErrorMessage(_key, action);
        throw new Error(errorMessage);
      }

      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }

    return hasChanged ? nextState : state;
  };
}

function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass a single function as the first argument,
 * and get a function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */


function redux_bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error("bindActionCreators expected an object or a function, instead received " + (actionCreators === null ? 'null' : typeof actionCreators) + ". " + "Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?");
  }

  var keys = Object.keys(actionCreators);
  var boundActionCreators = {};

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }

  return boundActionCreators;
}

function redux_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function redux_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      redux_defineProperty(target, key, source[key]);
    });
  }

  return target;
}
/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */


function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}
/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */


function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function () {
      var store = createStore.apply(void 0, arguments);

      var _dispatch = function dispatch() {
        throw new Error("Dispatching while constructing your middleware is not allowed. " + "Other middleware would not be applied to this dispatch.");
      };

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose.apply(void 0, chain)(store.dispatch);
      return redux_objectSpread({}, store, {
        dispatch: _dispatch
      });
    };
  };
}
/*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */


function isCrushed() {}

if (false) {}


// CONCATENATED MODULE: ./node_modules/redux-thunk/es/index.js
function createThunkMiddleware(extraArgument) {
  return function (_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
      return function (action) {
        if (typeof action === 'function') {
          return action(dispatch, getState, extraArgument);
        }

        return next(action);
      };
    };
  };
}

var thunk = createThunkMiddleware();
thunk.withExtraArgument = createThunkMiddleware;
/* harmony default export */ var redux_thunk_es = (thunk);
// EXTERNAL MODULE: ./node_modules/memoizerific/memoizerific.js
var memoizerific = __webpack_require__(14);
var memoizerific_default = /*#__PURE__*/__webpack_require__.n(memoizerific);

// CONCATENATED MODULE: ./node_modules/easy-peasy/dist/easy-peasy.esm.js






var StoreContext = Object(node_modules_react["createContext"])();

var isStateObject = function isStateObject(x) {
  return x !== null && typeof x === 'object' && !Array.isArray(x);
};

var get = function get(path, target) {
  return path.reduce(function (acc, cur) {
    return isStateObject(acc) ? acc[cur] : undefined;
  }, target);
};

var set = function set(path, target, value) {
  path.reduce(function (acc, cur, idx) {
    if (idx + 1 === path.length) {
      acc[cur] = value;
    } else {
      acc[cur] = acc[cur] || {};
    }

    return acc[cur];
  }, target);
};

function useStore(mapState, dependencies) {
  if (dependencies === void 0) {
    dependencies = [];
  }

  var store = Object(node_modules_react["useContext"])(StoreContext);

  var _useState = Object(node_modules_react["useState"])(mapState(store.getState())),
      state = _useState[0],
      setState = _useState[1];

  var _useState2 = Object(node_modules_react["useState"])(null),
      error = _useState2[0],
      setError = _useState2[1]; // As our effect only fires on mount and unmount it won't have the state
  // changes visible to it, therefore we use a mutable ref to track this.


  var stateRef = Object(node_modules_react["useRef"])(state); // Helps avoid firing of events when unsubscribed, i.e. unmounted

  var isActive = Object(node_modules_react["useRef"])(true); // Tracks when a hooked component is unmounting

  var unmounted = Object(node_modules_react["useRef"])(false); // Throwing the error inline allows error boundaries the opportunity to
  // catch the error

  if (error) {
    throw error;
  }

  Object(node_modules_react["useEffect"])(function () {
    isActive.current = true;

    var calculateState = function calculateState() {
      if (!isActive.current) {
        return;
      }

      try {
        var newState = mapState(store.getState());

        if (newState === stateRef.current || isStateObject(newState) && isStateObject(stateRef.current) && shallowequal_default()(newState, stateRef.current)) {
          // Do nothing
          return;
        }

        stateRef.current = newState;
        setState(stateRef.current);
      } catch (err) {
        // see https://github.com/reduxjs/react-redux/issues/1179
        // There is a possibility mapState will fail as the props/state that
        // the component has received is stale. Therefore we will afford the
        // application a small window of opportunity, where if they unmount
        // the component or provide it with new "valid" props (which will
        // subsequently cause a refreshed subscription cycle) then we will not
        // throw an error.
        // This is by no means a robust solution. We should track the
        // associated issue in the hope for a more dependable solution.
        // Setting the listener as "inactive", this can only be changed if the
        // incoming dependencies are different (i.e. props have changed)
        isActive.current = false;
        setTimeout(function () {
          if (!unmounted.current && !isActive.current) {
            setError(err);
          }
        }, 200); // give a window of opportunity
      }
    };

    calculateState();
    var unsubscribe = store.subscribe(calculateState);
    return function () {
      isActive.current = false;
      unsubscribe();
    };
  }, dependencies); // This effect will set the ref value to indicate that the component has
  // unmounted

  Object(node_modules_react["useEffect"])(function () {
    return function () {
      unmounted.current = true;
    };
  }, []);
  return state;
}

function useActions(mapActions) {
  var store = Object(node_modules_react["useContext"])(StoreContext);
  return mapActions(store.dispatch);
}

function useDispatch() {
  var store = Object(node_modules_react["useContext"])(StoreContext);
  return store.dispatch;
}

function createTypedHooks() {
  return {
    useActions: useActions,
    useDispatch: useDispatch,
    useStore: useStore
  };
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var actionNameSymbol = '__actionName__';
var actionSymbol = '__action__';
var listenSymbol = '__listen__';
var metaSymbol = '__meta__';
var reducerSymbol = '__reducer__';
var selectDependenciesSymbol = '__selectDependencies__';
var selectImpSymbol = '__selectImp__';
var selectStateSymbol = '__selectState__';
var selectSymbol = '__select__';
var thunkSymbol = '__thunk__';

var actionName = function actionName(action) {
  return action[actionNameSymbol];
};

var thunkStartName = function thunkStartName(action) {
  return action[actionNameSymbol] + "(started)";
};

var thunkCompleteName = function thunkCompleteName(action) {
  return action[actionNameSymbol] + "(completed)";
};

var thunkFailName = function thunkFailName(action) {
  return action[actionNameSymbol] + "(failed)";
};

var easy_peasy_esm_action = function action(fn) {
  fn[actionSymbol] = true;
  return fn;
};

var listen = function listen(fn) {
  fn[listenSymbol] = true;
  return fn;
};

var easy_peasy_esm_thunk = function thunk(fn) {
  fn[thunkSymbol] = true;
  return fn;
};

var easy_peasy_esm_select = function select(fn, dependencies) {
  fn[selectSymbol] = true;
  fn[selectDependenciesSymbol] = dependencies;
  fn[selectStateSymbol] = {};
  return fn;
};

var easy_peasy_esm_reducer = function reducer(fn) {
  fn[reducerSymbol] = true;
  return fn;
};

var maxSelectFnMemoize = 100;

var tick = function tick() {
  return new Promise(function (resolve) {
    return setTimeout(resolve);
  });
};

var errorToPayload = function errorToPayload(err) {
  if (err instanceof Error) {
    return {
      message: err.message,
      stack: err.stack
    };
  }

  if (typeof err === 'string') {
    return err;
  }

  return undefined;
};

function createStoreInternals(_ref) {
  var disableInternalSelectFnMemoize = _ref.disableInternalSelectFnMemoize,
      initialState = _ref.initialState,
      injections = _ref.injections,
      isRebind = _ref.isRebind,
      model = _ref.model,
      reducerEnhancer = _ref.reducerEnhancer,
      references = _ref.references;

  var wrapFnWithMemoize = function wrapFnWithMemoize(x) {
    return !disableInternalSelectFnMemoize && typeof x === 'function' ? memoizerific_default()(maxSelectFnMemoize)(x) : x;
  };

  var defaultState = initialState || {};
  var actionThunks = {};
  var actionCreators = {};
  var actionCreatorDict = {};
  var customReducers = [];
  var selectorReducers = [];
  var listenDefinitions = [];
  var thunkListenersDict = {};
  var actionListenersDict = {};
  var actionReducersDict = {};

  var recursiveExtractDefsFromModel = function recursiveExtractDefsFromModel(current, parentPath) {
    return Object.keys(current).forEach(function (key) {
      var value = current[key];
      var path = [].concat(parentPath, [key]);
      var meta = {
        parent: parentPath,
        path: path
      };

      if (typeof value === 'function') {
        if (value[actionSymbol]) {
          var name = "@action." + path.join('.');
          value[actionNameSymbol] = name;
          value[metaSymbol] = meta; // Action Reducer

          var actionReducer = value;
          actionReducer[actionNameSymbol] = name;
          actionReducersDict[name] = actionReducer;

          var actionCreator = function actionCreator(payload) {
            var result = references.dispatch({
              type: actionReducer[actionNameSymbol],
              payload: payload
            });
            return result;
          };

          actionCreator[actionNameSymbol] = name;
          actionCreatorDict[name] = actionCreator;
          set(path, actionCreators, actionCreator);
        } else if (value[thunkSymbol]) {
          var _name = "@thunk." + path.join('.');

          value[actionNameSymbol] = _name; // Thunk Action

          var action = function action(payload) {
            return value(get(parentPath, actionCreators), payload, {
              dispatch: references.dispatch,
              getState: function getState() {
                return get(parentPath, references.getState());
              },
              getStoreState: references.getState,
              injections: injections,
              meta: meta
            });
          };

          set(path, actionThunks, action); // Thunk Action Creator

          var _actionCreator = function _actionCreator(payload) {
            return tick().then(function () {
              return references.dispatch({
                type: _name + "(started)",
                payload: payload
              });
            }).then(function () {
              return references.dispatch(function () {
                return action(payload);
              });
            }).then(function (result) {
              references.dispatch({
                type: _name + "(completed)",
                payload: payload
              });
              return result;
            }).catch(function (err) {
              references.dispatch({
                type: _name + "(failed)",
                payload: payload,
                error: errorToPayload(err)
              });
              throw err;
            });
          };

          _actionCreator[actionNameSymbol] = _name;
          actionCreatorDict[_name] = _actionCreator;
          set(path, actionCreators, _actionCreator);
        } else if (value[selectSymbol]) {
          value[selectStateSymbol] = {
            parentPath: parentPath,
            key: key,
            executed: false
          };
          selectorReducers.push(value);
        } else if (value[reducerSymbol]) {
          customReducers.push({
            path: path,
            reducer: value
          });
        } else if (value[listenSymbol]) {
          listenDefinitions.push(value);
          value[metaSymbol] = meta;
        } else if (false) {}
      } else if (isStateObject(value) && Object.keys(value).length > 0) {
        var existing = get(path, defaultState);

        if (existing == null) {
          set(path, defaultState, {});
        }

        recursiveExtractDefsFromModel(value, path);
      } else {
        // State
        var initialParentRef = get(parentPath, initialState);

        if (!isRebind && initialParentRef && key in initialParentRef) {
          set(path, defaultState, initialParentRef[key]);
        } else {
          set(path, defaultState, value);
        }
      }
    });
  };

  recursiveExtractDefsFromModel(model, []);
  selectorReducers.forEach(function (selector) {
    selector[selectImpSymbol] = function (state) {
      return wrapFnWithMemoize(selector(state));
    };
  });
  listenDefinitions.forEach(function (def) {
    def.listeners = def.listeners || {};

    var on = function on(target, handler) {
      if (typeof handler !== 'function') {
        return;
      }

      var meta = def[metaSymbol];
      handler[metaSymbol] = meta;

      if (!handler[actionSymbol] && !handler[thunkSymbol]) {
        if (false) {}

        return;
      }

      var targetActionName;

      if (typeof target === 'function' && target[actionNameSymbol] && actionCreatorDict[target[actionNameSymbol]]) {
        if (target[thunkSymbol]) {
          targetActionName = thunkCompleteName(target);
        } else {
          targetActionName = target[actionNameSymbol];
        }
      } else if (typeof target === 'string') {
        targetActionName = target;
      }

      if (targetActionName) {
        if (handler[thunkSymbol]) {
          thunkListenersDict[targetActionName] = thunkListenersDict[targetActionName] || [];
          thunkListenersDict[targetActionName].push(handler);
        } else {
          actionListenersDict[targetActionName] = actionListenersDict[targetActionName] || [];
          actionListenersDict[targetActionName].push({
            path: meta.parent,
            handler: handler
          });
        }

        def.listeners[targetActionName] = def.listeners[targetActionName] || [];
        def.listeners[targetActionName].push(handler);
      }
    };

    def(on);
  });

  var runSelectorReducer = function runSelectorReducer(state, selector) {
    var _selector$selectState = selector[selectStateSymbol],
        parentPath = _selector$selectState.parentPath,
        key = _selector$selectState.key,
        executed = _selector$selectState.executed;

    if (executed) {
      return state;
    }

    var dependencies = selector[selectDependenciesSymbol];
    var stateAfterDependencies = dependencies ? dependencies.reduce(runSelectorReducer, state) : state;
    var newState = stateAfterDependencies;

    if (parentPath.length > 0) {
      var target = get(parentPath, stateAfterDependencies);

      if (target) {
        if (!selector.prevState || selector.prevState !== get(parentPath, state)) {
          var newValue = selector[selectImpSymbol](target);
          newState = Object(immer_module["a" /* default */])(state, function (draft) {
            var updateTarget = get(parentPath, draft);
            updateTarget[key] = newValue;
          });
          selector.prevState = get(parentPath, newState);
        }
      }
    } else if (!selector.prevState || selector.prevState !== state) {
      var _newValue = selector[selectImpSymbol](stateAfterDependencies);

      newState = Object(immer_module["a" /* default */])(state, function (draft) {
        draft[key] = _newValue;
      });
      selector.prevState = newState;
    }

    selector[selectStateSymbol].executed = true;
    return newState;
  };

  var runSelectors = function runSelectors(state) {
    return selectorReducers.reduce(runSelectorReducer, state);
  };

  var createReducer = function createReducer() {
    var runActionReducerAtPath = function runActionReducerAtPath(state, action, actionReducer, path) {
      var current = get(path, state);

      if (path.length === 0) {
        return Object(immer_module["a" /* default */])(state, function (_draft) {
          return actionReducer(_draft, action.payload);
        });
      }

      return Object(immer_module["a" /* default */])(state, function (draft) {
        set(actionReducer[metaSymbol].parent, draft, Object(immer_module["a" /* default */])(current, function (_draft) {
          return actionReducer(_draft, action.payload);
        }));
      });
    };

    var reducerForActions = function reducerForActions(state, action) {
      var actionReducer = actionReducersDict[action.type];

      if (actionReducer) {
        return runActionReducerAtPath(state, action, actionReducer, actionReducer[metaSymbol].parent);
      }

      return state;
    };

    var reducerForListeners = function reducerForListeners(state, action) {
      var target = action.type === '@@EP/LISTENER' ? action.actionName : action.type;
      var actionListeners = actionListenersDict[target];

      if (actionListeners) {
        var targetAction = action.type === '@@EP/LISTENER' ? {
          type: target,
          payload: action.payload
        } : action;
        return actionListeners.reduce(function (newState, _ref2) {
          var path = _ref2.path,
              handler = _ref2.handler;
          return runActionReducerAtPath(newState, targetAction, handler, path);
        }, state);
      }

      return state;
    };

    var reducerForCustomReducers = function reducerForCustomReducers(state, action) {
      return Object(immer_module["a" /* default */])(state, function (draft) {
        customReducers.forEach(function (_ref3) {
          var p = _ref3.path,
              red = _ref3.reducer;
          var current = get(p, draft);
          set(p, draft, red(current, action));
        });
      });
    };

    var isInitial = true;

    var selectorsReducer = function selectorsReducer(state) {
      var stateAfterSelectors = runSelectors(state);
      isInitial = false;
      selectorReducers.forEach(function (selector) {
        selector[selectStateSymbol].executed = false;
      });
      return stateAfterSelectors;
    };

    var rootReducer = function rootReducer(state, action) {
      var stateAfterActions = reducerForActions(state, action);
      var stateAfterListeners = reducerForListeners(stateAfterActions, action);
      var stateAfterCustomReducers = reducerForCustomReducers(stateAfterListeners, action);

      if (state !== stateAfterCustomReducers || isInitial) {
        return selectorsReducer(stateAfterCustomReducers);
      }

      return stateAfterCustomReducers;
    };

    return rootReducer;
  };

  return {
    actionCreators: actionCreators,
    actionListenersDict: actionListenersDict,
    defaultState: defaultState,
    listenDefinitions: listenDefinitions,
    reducer: reducerEnhancer(createReducer()),
    thunkListenersDict: thunkListenersDict
  };
}

function easy_peasy_esm_createStore(model, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      compose$1 = _options.compose,
      _options$devTools = _options.devTools,
      devTools = _options$devTools === void 0 ? true : _options$devTools,
      _options$disableInter = _options.disableInternalSelectFnMemoize,
      disableInternalSelectFnMemoize = _options$disableInter === void 0 ? false : _options$disableInter,
      _options$initialState = _options.initialState,
      initialState = _options$initialState === void 0 ? {} : _options$initialState,
      injections = _options.injections,
      _options$mockActions = _options.mockActions,
      mockActions = _options$mockActions === void 0 ? false : _options$mockActions,
      _options$middleware = _options.middleware,
      middleware = _options$middleware === void 0 ? [] : _options$middleware,
      _options$reducerEnhan = _options.reducerEnhancer,
      reducerEnhancer = _options$reducerEnhan === void 0 ? function (rootReducer) {
    return rootReducer;
  } : _options$reducerEnhan,
      _options$enhancers = _options.enhancers,
      enhancers = _options$enhancers === void 0 ? [] : _options$enhancers;

  var modelDefinition = _extends({}, model, {
    logFullState: easy_peasy_esm_thunk(function (actions, payload, _ref) {
      var getState = _ref.getState; // eslint-disable-next-line no-console

      console.log(JSON.stringify(getState(), null, 2));
    }),
    replaceState: easy_peasy_esm_action(function (state, payload) {
      return payload;
    })
  });

  var references = {};
  var mockedActions = [];

  var dispatchThunk = function dispatchThunk(thunk, payload) {
    return thunk(get(thunk[metaSymbol].parent, references.internals.actionCreators), payload, {
      dispatch: references.dispatch,
      getState: function getState() {
        return get(thunk[metaSymbol].parent, references.getState());
      },
      getStoreState: references.getState,
      injections: injections,
      meta: thunk[metaSymbol]
    });
  };

  var dispatchThunkListeners = function dispatchThunkListeners(name, payload) {
    var listensForAction = references.internals.thunkListenersDict[name];
    return listensForAction && listensForAction.length > 0 ? Promise.all(listensForAction.map(function (listenForAction) {
      return dispatchThunk(listenForAction, payload);
    })) : Promise.resolve();
  };

  var dispatchActionStringListeners = function dispatchActionStringListeners() {
    return function (next) {
      return function (action) {
        var result = next(action);

        if (references.internals.thunkListenersDict[action.type]) {
          dispatchThunkListeners(action.type, action.payload);
        }

        return result;
      };
    };
  };

  var composeEnhancers = compose$1 || (devTools && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose);

  var bindStoreInternals = function bindStoreInternals(state, isRebind) {
    if (isRebind === void 0) {
      isRebind = false;
    }

    references.internals = createStoreInternals({
      disableInternalSelectFnMemoize: disableInternalSelectFnMemoize,
      initialState: state,
      injections: injections,
      model: modelDefinition,
      reducerEnhancer: reducerEnhancer,
      references: references,
      isRebind: isRebind
    });
  };

  bindStoreInternals(initialState);

  var mockActionsMiddleware = function mockActionsMiddleware() {
    return function (next) {
      return function (action) {
        if (mockActions) {
          if (action == null || typeof action === 'object' && action.type === '@@EP/LISTENER') ;else {
            mockedActions.push(action);
          }
          return undefined;
        }

        return next(action);
      };
    };
  };

  var store = createStore(references.internals.reducer, references.internals.defaultState, composeEnhancers.apply(void 0, [applyMiddleware.apply(void 0, [redux_thunk_es, dispatchActionStringListeners].concat(middleware, [mockActionsMiddleware]))].concat(enhancers)));

  store.getMockedActions = function () {
    return [].concat(mockedActions);
  };

  store.clearMockedActions = function () {
    mockedActions = [];
  };

  references.dispatch = store.dispatch;
  references.getState = store.getState; // attach the action creators to dispatch

  var bindActionCreators = function bindActionCreators(actionCreators) {
    Object.keys(store.dispatch).forEach(function (actionsKey) {
      delete store.dispatch[actionsKey];
    });
    Object.keys(actionCreators).forEach(function (key) {
      store.dispatch[key] = actionCreators[key];
    });
  };

  bindActionCreators(references.internals.actionCreators);

  var rebindStore = function rebindStore() {
    bindStoreInternals(store.getState(), true);
    store.replaceReducer(references.internals.reducer);
    store.dispatch.replaceState(references.internals.defaultState);
    bindActionCreators(references.internals.actionCreators);
  };

  store.addModel = function (key, modelForKey) {
    if (modelDefinition[key] && "production" !== 'production') {
      // eslint-disable-next-line no-console
      console.warn("The store model already contains a model definition for \"" + key + "\"");
      store.removeModel(key);
    }

    modelDefinition[key] = modelForKey;
    rebindStore();
  };

  store.removeModel = function (key) {
    if (!modelDefinition[key]) {
      if (false) {}

      return;
    }

    delete modelDefinition[key];
    rebindStore();
  };

  var dispatchActionListener = function dispatchActionListener(actionName, payload) {
    return store.dispatch({
      type: '@@EP/LISTENER',
      payload: payload,
      actionName: actionName
    });
  };

  var resolveActionName = function resolveActionName(action) {
    return typeof action === 'function' ? action[actionSymbol] ? actionName(action) : action[thunkSymbol] ? thunkCompleteName(action) : undefined : typeof action === 'string' ? action : undefined;
  };

  var dispatchHandler = function dispatchHandler(handler, actionName, payload) {
    if (handler[thunkSymbol]) {
      return dispatchThunk(handler, payload);
    }
  };

  store.triggerListener = function (listener, action, payload) {
    var actionName = resolveActionName(action);

    if (listener.listeners[actionName] && listener.listeners[actionName].length > 0) {
      if (listener.listeners[actionName].some(function (handler) {
        return handler[actionSymbol];
      })) {
        dispatchActionListener(actionName, payload);
      }

      var thunkHandlers = listener.listeners[actionName].filter(function (handler) {
        return handler[thunkSymbol];
      });
      return thunkHandlers.length > 0 ? Promise.all(thunkHandlers.map(function (handler) {
        return dispatchHandler(handler, actionName, payload);
      })).then(function () {
        return undefined;
      }) : Promise.resolve();
    }

    return Promise.resolve();
  };

  store.triggerListeners = function (action, payload) {
    var actionName = resolveActionName(action);

    if (actionName) {
      var actionListenerHandlers = references.internals.actionListenersDict[actionName];

      if (actionListenerHandlers && actionListenerHandlers.length > 0) {
        dispatchActionListener(actionName, payload);
      }

      var thunkListenerHandlers = references.internals.thunkListenersDict[actionName];
      return thunkListenerHandlers && thunkListenerHandlers.length > 0 ? Promise.all(thunkListenerHandlers.map(function (handler) {
        return dispatchThunk(handler, payload);
      })).then(function () {
        return undefined;
      }) : Promise.resolve();
    }

    return Promise.resolve();
  };

  return store;
}

var easy_peasy_esm_StoreProvider = function StoreProvider(_ref) {
  var children = _ref.children,
      store = _ref.store;
  return react_default.a.createElement(StoreContext.Provider, {
    value: store
  }, children);
};
/**
 * immer is an implementation detail, so we are not going to use its auto freeze
 * behaviour, which throws errors if trying to mutate state. It's also risky
 * for production builds as has a perf overhead.
 *
 * @see https://github.com/mweststrate/immer#auto-freezing
 */


Object(immer_module["b" /* setAutoFreeze */])(false);

// CONCATENATED MODULE: ./src/components/utils/state-manager.js
// Creates a new redux store for storing the state of a widget tree
function generateStoreForWidgetTree(){var store=easy_peasy_esm_createStore({widgets:{},setWidgetState:easy_peasy_esm_action(function(state,payload){var widgetId=payload.widget;var widgetState=payload.state;state.widgets[widgetId]=widgetState;}),restoreState:easy_peasy_esm_action(function(state,payload){return payload;})});return store;}// Custom hook that creates bound state and and setState functions.
// State is managed by an `easy-peasy` store. An individual state is created
// for every unique widgetId passed in.
function useWidgetState(widgetId,defaultState){var state=useStore(function(state){return state.widgets[widgetId];});var setWidgetState=useActions(function(actions){return actions.setWidgetState;});var customizedSetter=function customizedSetter(state){setWidgetState({widget:widgetId,state:state});};if(typeof state==="undefined"){return[defaultState,customizedSetter];}return[state,customizedSetter];}// HOC. Wrap `Widget` so tht it receives a `state` and `setState` function
// in its props. `easy-peasy` will manage the state of this widget automatically.
function makeWidgetStateful(Widget,defaultStateGenerator){return function StatefulWidget(props){var widgetId=props.id;var _useWidgetState=useWidgetState(widgetId,defaultStateGenerator(props)),_useWidgetState2=Object(slicedToArray["a" /* default */])(_useWidgetState,2),state=_useWidgetState2[0],setState=_useWidgetState2[1];return react_default.a.createElement(Widget,Object.assign({},props,{state:state,setState:setState}));};}
// CONCATENATED MODULE: ./src/components/inline-markdown-renderer.js
// Like Renderer, but only handles markdown
// and the markdown is assumed to be `inline`
function InlineMarkdownRenderer(props){var children=props.children;// PerseusMarkdown doesn't like rendering empty strings
if(!children){return react_default.a.createElement(react_default.a.Fragment,null);}var parsed=perseus_markdown.parseInline(children);var markdownRenderer=perseus_markdown.ruleOverrideOutput({});return react_default.a.createElement(react_default.a.Fragment,null,markdownRenderer(parsed));}
// EXTERNAL MODULE: ./src/css/widgets/radio.css
var widgets_radio = __webpack_require__(30);

// CONCATENATED MODULE: ./src/components/widgets/radio.js
function filledArray(length,val){return Array.from({length:length},function(){return val;});}function checkAnswer(props){var state=arguments.length>1&&arguments[1]!==undefined?arguments[1]:props.state;var options=props.options,id=props.id;var choices=options.choices;var selected=state.selected;// prepare formatted versions of the answers
function choicesToString(choices){var ret=[];choices.forEach(function(c,i){if(c!=null&&(typeof c==="boolean"&&c||c.correct)){ret.push(String.fromCharCode(65+i));}});return ret;}var formattedAnswer=choicesToString(choices).join(", ");var formattedSelected=choicesToString(selected).join(", ");var ret={formatted:{answer:{str:formattedAnswer,tex:formattedAnswer},contents:{str:formattedSelected,tex:formattedSelected}}};// for single-select, we must select one of the options
if(!options.multipleSelect&&selected.every(function(x){return!x;})){return _objectSpread({},ret,{status:"incomplete",message:"You must select at least one options for ".concat(id)});}// we must match the choices exactly
if(selected.every(function(x,i){// cast everything to a boolean first, otherwise a missing `correct`
// attribute will cause this test to fail
return!!x===!!choices[i].correct;})){return _objectSpread({},ret,{status:"correct"});}return _objectSpread({},ret,{status:"incorrect",message:"You have not selected the correct choice(s) for ".concat(id)});}function generateDefaultState(props){return{selected:filledArray(props.options.choices.length,false)};}function RadioWidget(props){var options=props.options,id=props.id,state=props.state,setState=props.setState;// if the same radio group is duplicated multiple times, we want each
// to act "independently" from the persepctive of the browser (otherwise,
// they won't mirror each other's behavior)
var randId=react_default.a.useState(("-"+Math.random()).replace(".",""))[0];var selected=state.selected;// on first run, make sure we have access to the formatted answer
react_default.a.useEffect(function(){setSelected(selected);},[]);// eslint-disable-line
var setSelected=function setSelected(selected){// don't mutate `state`. Return a new copy instead
var newState=_objectSpread({},state,{selected:selected});var status=checkAnswer(props,newState);setState(_objectSpread({},newState,{status:status}));};var inputType=options.multipleSelect?"checkbox":"radio";var handleChange=function handleChange(e){var newSelected;if(options.multipleSelect){newSelected=_toConsumableArray(selected);}else{newSelected=filledArray(options.choices.length,false);}newSelected[e.target.value]=e.target.checked;setSelected(newSelected);};var choices=options.choices.map(function(choice,i){var optionId=("radio-option"+id+" "+i).replace(" ","-");return react_default.a.createElement(react_default.a.Fragment,{key:optionId},react_default.a.createElement("input",{type:inputType,id:optionId,name:id+randId,value:i,checked:selected[i],onChange:handleChange}),react_default.a.createElement("label",{htmlFor:optionId},react_default.a.createElement(InlineMarkdownRenderer,null,choice.content||choice.isNoneOfTheAbove&&"None of the above")));});return react_default.a.createElement("div",{className:"perseus-widget-radio"},react_default.a.createElement("h4",null,options.multipleSelect?"Select all that apply:":"Select one:"),choices);}// Wrapping this widget means `state` and `setState` will get passed in as props
var Radio=makeWidgetStateful(RadioWidget,generateDefaultState);
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
// EXTERNAL MODULE: ./src/libs/kas.js
var kas = __webpack_require__(3);
var kas_default = /*#__PURE__*/__webpack_require__.n(kas);

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(16);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ./src/css/widgets/matrix.css
var widgets_matrix = __webpack_require__(31);

// CONCATENATED MODULE: ./src/components/widgets/matrix.js
var NORMAL_DIMENSIONS={INPUT_MARGIN:3,INPUT_HEIGHT:30,INPUT_WIDTH:40};// are two matrices the same?
function matrixEqual(mat1,mat2){return JSON.stringify(mat1)===JSON.stringify(mat2);}// strip whitespace from all the matrix entries
function stripMatrixWhitespace(matrix){return matrix.map(function(row){return row.map(function(v){return v.replace(/\s+/g,"");});});}// find the smallest size that will hold non-empty/non-whitespace
// values in `matrix`. The smallest possible is 1x1
function findEnclosingDimensions(matrix){function isEmpty(v){return!v.trim();}var rowMax=0,colMax=0;matrix.forEach(function(row,i){row.forEach(function(v,j){if(!isEmpty(v)){rowMax=Math.max(rowMax,i);colMax=Math.max(colMax,j);}});});return[rowMax+1,colMax+1];}var matrix_MatrixExpression=/*#__PURE__*/function(){function MatrixExpression(matrix){var _this=this;_classCallCheck(this,MatrixExpression);this._mat=matrix||[[]];this.rows=this._mat.length;this.cols=(this._mat||[[]])[0].length;this._emptyExpression=kas_default.a.parse("0").expr;// parse the matrix
this._parsedMat=Array.from({length:this.rows},function(){return Array.from({length:_this.cols},function(){return _this._emptyExpression;});});this._unparsedEntries={};this._mat.forEach(function(row,i){row.forEach(function(v,j){// empty matrix entries should be parsed as whatever `_emptyExpression`
// is.
if(v!=null&&v.trim&&v.trim()===""){_this._parsedMat[i][j]=_this._emptyExpression;}else{var parsed=kas_default.a.parse(""+v);if(parsed.parsed){_this._parsedMat[i][j]=parsed.expr;}else{_this._unparsedEntries[[i,j]]=parsed.error;}}});});this.didParse=Object.keys(this._unparsedEntries).length===0;// because we substitute "" with `0` when parsing the matrix,
// we need to refer to the original `_mat` to check if it's empty
this.isEmpty=this.didParse&&this._mat.every(function(row){return row.every(function(v){return v!=null&&v.trim&&v.trim()==="";});});this.flattened=[];this._parsedMat.forEach(function(row){row.forEach(function(v){_this.flattened.push(v);});});}_createClass(MatrixExpression,[{key:"elm",value:function elm(i,j){return this._parsedMat[i][j]||this._emptyExpression;}},{key:"format",value:function format(){return{str:"[["+this._parsedMat.map(function(row){return row.map(function(val){return val.print();}).join(", ");}).join("], [")+"]]",tex:"\\begin{bmatrix}"+this._parsedMat.map(function(row){return row.map(function(val){return val.asTex();}).join(" & ");}).join("\\\\\n")+"\\end{bmatrix}"};}}]);return MatrixExpression;}();function matrix_checkAnswer(props){var state=arguments.length>1&&arguments[1]!==undefined?arguments[1]:props.state;var options=props.options,id=props.id;var answers=options.answers;var contents=state.contents;var parsedContents=new matrix_MatrixExpression(contents);var parsedAnswer=new matrix_MatrixExpression(answers);// prepare formatted versions of the answers
var ret={formatted:{contents:parsedContents.format(),answer:parsedAnswer.format()}};// if the user input didn't parse, it's incomplete
if(!parsedContents.didParse){// convert the unparsedEntries to matrix-index convention. I.e.,
// start with a 1-index instead of a 0-index
var unparsedEntries=Object.keys(parsedContents._unparsedEntries).map(function(e){return e.split(",").map(function(v){return+v+1;});});return _objectSpread({},ret,{status:"incomplete",message:"The entry(s) (".concat(unparsedEntries.map(function(e){return e.join(",");}).join("), ("),") in ").concat(id," couldn't be parsed")});}if(parsedContents.isEmpty){return _objectSpread({},ret,{status:"incomplete",message:"Type a math expression into ".concat(id)});}// check each value to see if it matches the answer
for(var i=0;i<parsedContents.flattened.length;i++){var expr1=parsedContents.flattened[i];var expr2=parsedAnswer.flattened[i];if(!expr1||!expr2){// if either of the expressions are empty, there is some kind
// kind of error
console.warn("Trying to compare a size-mismatched or improperly parsed matrices",parsedContents,parsedAnswer);continue;}var result=kas_default.a.compare(expr1,expr2);if(!result.equal){return _objectSpread({},ret,{status:"incorrect",message:"You have not entered the correct value for ".concat(id)});}}return _objectSpread({},ret,{status:"correct",message:""});}function matrix_generateDefaultState(props){var _ref=(props.options||{}).matrixBoardSize||[1,1],_ref2=Object(slicedToArray["a" /* default */])(_ref,2),rows=_ref2[0],cols=_ref2[1];return{contents:Array.from({length:rows},function(){return Array.from({length:cols},function(){return"";});})};}function MatrixWidget(props){var options=props.options,id=props.id,state=props.state,setState=props.setState;var _options$matrixBoardS=Object(slicedToArray["a" /* default */])(options.matrixBoardSize,2),rows=_options$matrixBoardS[0],cols=_options$matrixBoardS[1];var dimensions=NORMAL_DIMENSIONS;var INPUT_MARGIN=dimensions.INPUT_MARGIN,INPUT_HEIGHT=dimensions.INPUT_HEIGHT,INPUT_WIDTH=dimensions.INPUT_WIDTH;// set up some state
var _React$useState=react_default.a.useState([0,0]),_React$useState2=Object(slicedToArray["a" /* default */])(_React$useState,2),cursorPos=_React$useState2[0],setCursorPos=_React$useState2[1];var contents=state.contents;// on first run, make sure we have access to the formatted answer
react_default.a.useEffect(function(){setContents(contents);},[]);// eslint-disable-line
var setContents=function setContents(c){var newState=_objectSpread({},state,{contents:c});var status=matrix_checkAnswer(props,newState);setState(_objectSpread({},newState,{status:status}));};//const [contents, setContents] = React.useState();
var _findEnclosingDimensi=findEnclosingDimensions(contents),_findEnclosingDimensi2=Object(slicedToArray["a" /* default */])(_findEnclosingDimensi,2),enclosingRow=_findEnclosingDimensi2[0],enclosingCol=_findEnclosingDimensi2[1];enclosingRow=Math.max(enclosingRow,cursorPos[0]+1);enclosingCol=Math.max(enclosingCol,cursorPos[1]+1);var bracketHeight=enclosingRow*(INPUT_HEIGHT+2*INPUT_MARGIN);var bracketOffset=enclosingCol*(INPUT_WIDTH+2*INPUT_MARGIN);function cellChanger(row,col){return function(e){var val=e.target.value;var newContents=contents.map(function(r,i){return r.map(function(v,j){return row===i&&col===j?val:v;});});setContents(newContents);};}function cellFocuser(row,col){return function(e){setCursorPos([row,col]);};}function cellBur(){var newContents=stripMatrixWhitespace(contents);if(!matrixEqual(contents,newContents)){setContents(newContents);}setCursorPos([0,0]);}var cells=contents.map(function(row,i){var rowId=(id+"-"+i).replace(" ","");return react_default.a.createElement("div",{key:rowId,className:"matrix-row"},row.map(function(val,j){var cellId=(id+"-"+i+"-"+j).replace(" ","");var inside=i<enclosingRow&&j<enclosingCol;var outside=!inside;return react_default.a.createElement("span",{key:cellId,className:"matrix-input-field"},react_default.a.createElement("input",{className:classnames_default()({inside:inside,outside:outside}),type:"text",style:{height:INPUT_HEIGHT,width:INPUT_WIDTH,margin:INPUT_MARGIN},value:val,onChange:cellChanger(i,j),onFocus:cellFocuser(i,j),onBlur:cellBur}));}));});return react_default.a.createElement("div",{className:"perseus-matrix"},react_default.a.createElement("div",{className:"matrix-prefix"},react_default.a.createElement(InlineMarkdownRenderer,null,options.prefix)),react_default.a.createElement("div",{className:"matrix-input",style:{verticalAlign:-(rows>1?(rows-1)/2*INPUT_HEIGHT+2*INPUT_MARGIN:0)}},react_default.a.createElement("div",{className:"matrix-bracket bracket-left",style:{height:bracketHeight}}),react_default.a.createElement("div",{className:"matrix-bracket bracket-right",style:{height:bracketHeight,left:bracketOffset}}),cells),react_default.a.createElement("div",{className:"matrix-suffix"},react_default.a.createElement(InlineMarkdownRenderer,null,options.suffix)));}var Matrix=makeWidgetStateful(MatrixWidget,matrix_generateDefaultState);
// EXTERNAL MODULE: ./node_modules/react-mathquill/index.js
var react_mathquill = __webpack_require__(7);
var react_mathquill_default = /*#__PURE__*/__webpack_require__.n(react_mathquill);

// EXTERNAL MODULE: ./src/css/widgets/expression.css
var expression = __webpack_require__(33);

// CONCATENATED MODULE: ./src/components/widgets/expression.js
var insertBraces=function insertBraces(value){// HACK(alex): Make sure that all LaTeX super/subscripts are wrapped
// in curly braces to avoid the mismatch between KAS and LaTeX sup/sub
// parsing.
//
// What exactly is this mismatch? Due to its heritage of parsing plain
// text math from <OldExpression />, KAS parses "x^12" as x^(12).
// This is both generally what the user expects to happen, and is
// consistent with other computer algebra systems. It is NOT
// consistent with LaTeX however, where x^12 is equivalent to x^{1}2.
//
// Since the only LaTeX we parse comes from MathQuill, this wouldn't
// be a problem if MathQuill just always gave us the latter version
// (with explicit braces). However, instead it always gives the former.
// This behavior is baked in pretty deep; my naive attempts at changing
// it triggered all sorts of confusing errors. So instead we just make
// sure to add in any missing braces before grading MathQuill input.
//
// TODO(alex): Properly hack MathQuill to always use explicit braces.
return value.replace(/([_^])([^{])/g,"$1{$2}");};/* Content creators input a list of answers which are matched from top to
 * bottom. The intent is that they can include spcific solutions which should
 * be graded as correct or incorrect (or ungraded!) first, then get more
 * general.
 *
 * We iterate through each answer, trying to match it with the user's input
 * using the following angorithm:
 * - Try to parse the user's input. If it doesn't parse then return "not
 *   graded".
 * - For each answer:
 *   ~ Try to validate the user's input against the answer. The answer is
 *     expected to parse.
 *   ~ If the user's input validates (the validator judges it "correct"), we've
 *     matched and can stop considering answers.
 * - If there were no matches or the matching answer is considered incorrect
 */function expression_checkAnswer(props){var state=arguments.length>1&&arguments[1]!==undefined?arguments[1]:props.state;var options=props.options,id=props.id;var answerForms=options.answerForms;var contents=state.contents;var parsedUserInput=kas_default.a.parse(insertBraces(contents));// prepare formatted versions of the answers
var firstValidAnswerForm=answerForms.filter(function(v){return v.considered==="correct";})[0]||{};var parsedAnswer=kas_default.a.parse(""+firstValidAnswerForm.value||"").expr;var ret={formatted:{answer:{str:parsedAnswer.print(),tex:parsedAnswer.asTex()},contents:{str:parsedUserInput.parsed?parsedUserInput.expr.print():"-",tex:parsedUserInput.parsed?parsedUserInput.expr.asTex():"\\space"}}};// if the user input didn't parse, it's incomplete
if(!parsedUserInput.parsed){return _objectSpread({},ret,{status:"incomplete",message:"The math expression you typed in ".concat(id," couldn't be parsed")});}if(parsedUserInput.expr.print()===""){return _objectSpread({},ret,{status:"incomplete",message:"Type a math expression into ".concat(id)});}// we must match one of the choices
var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=answerForms[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var form=_step.value;// assume answer forms will parse correctly
var result=kas_default.a.compare(parsedUserInput.expr,kas_default.a.parse(""+form.value).expr,form);if(result.equal&&form.considered==="correct"){return _objectSpread({},ret,{status:"correct"});}else if(result.equal&&form.considered==="incorrect"){return _objectSpread({},ret,{status:"incorrect",message:"You have not entered the correct value for ".concat(id)});}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return _objectSpread({},ret,{status:"incorrect",message:"You have not entered the correct value for ".concat(id)});}function expression_generateDefaultState(props){return{contents:""};}function ExpressionWidget(props){var options=props.options,id=props.id,state=props.state,setState=props.setState;var contents=state.contents;// on first run, make sure we have access to the formatted answer
react_default.a.useEffect(function(){setContents(contents);},[]);// eslint-disable-line
var setContents=function setContents(c){// don't mutate `state`. Return a new copy instead
var newState=_objectSpread({},state,{contents:c});var status=expression_checkAnswer(props,newState);setState(_objectSpread({},newState,{status:status}));};return react_default.a.createElement(react_mathquill_default.a,{className:"perseus-widget-expression",latex:contents,onChange:function onChange(latex){return setContents(latex);}});}// Wrapping this widget means `state` and `setState` will get passed in as props
var Expression=makeWidgetStateful(ExpressionWidget,expression_generateDefaultState);
// EXTERNAL MODULE: ./src/css/widgets/dropdown.css
var dropdown = __webpack_require__(34);

// CONCATENATED MODULE: ./src/components/widgets/dropdown.js
function dropdown_checkAnswer(props){var state=arguments.length>1&&arguments[1]!==undefined?arguments[1]:props.state;var options=props.options,id=props.id;var choices=options.choices;var selected=state.selected;// prepare formatted versions of the answers
var formattedAnswer=(choices.filter(function(c){return c.correct;})[0]||{content:"ERROR"}).content;var ret={formatted:{contents:{str:choices[selected].content,tex:"\\text{".concat(choices[selected].content,"}")},answer:{str:formattedAnswer,tex:"\\text{".concat(formattedAnswer,"}")}}};// selected is a string, so !selected will be true
// if the string is non-empty
if(!selected){return _objectSpread({},ret,{status:"incomplete",message:"You must select an option for ".concat(id)});}// we must match the choices exactly
if(choices[selected].correct){return _objectSpread({},ret,{status:"correct"});}return _objectSpread({},ret,{status:"incorrect",message:"You have not selected the correct choice for ".concat(id)});}function dropdown_generateDefaultState(props){return{selected:""};}function DropdownWidget(props){var options=props.options,id=props.id,state=props.state,setState=props.setState;var selected=state.selected;// on first run, make sure we have access to the formatted answer
react_default.a.useEffect(function(){setSelected(selected);},[]);// eslint-disable-line
var setSelected=function setSelected(c){// don't mutate `state`. Return a new copy instead
var newState=_objectSpread({},state,{selected:c});var status=dropdown_checkAnswer(props,newState);setState(_objectSpread({},newState,{status:status}));};return react_default.a.createElement("select",{className:"perseus-widget-dropdown",value:selected,onChange:function onChange(e){return setSelected(e.target.value);}},react_default.a.createElement("option",{value:"",disabled:true},options.placeholder),options.choices.map(function(_ref,i){var content=_ref.content;return react_default.a.createElement("option",{key:i,value:i},content);}));}// Wrapping this widget means `state` and `setState` will get passed in as props
var Dropdown=makeWidgetStateful(DropdownWidget,dropdown_generateDefaultState);
// CONCATENATED MODULE: ./src/components/renderer.js
function missingWidgetFactory(type){return function MissingWidget(props){var id=props.id;return react_default.a.createElement("em",null,"[[missing widget type: '",type,"' id: '",id,"']]");};}var availableWidgets={radio:Radio,matrix:Matrix,expression:Expression,dropdown:Dropdown};function getWidget(type){return availableWidgets[type]||missingWidgetFactory(type);}// Render a question and all subwidgets. State is tracked via
// a redux store created by `QuestionRenderer`.
function QuestionRenderer(props){var children=props.children,question=props.question,onChange=props.onChange,rest=_objectWithoutProperties(props,["children","question","onChange"]);var content=question.content,widgets=question.widgets;// get a persistent redux store for managing all the states of
// inlculded widgets
var _store=react_default.a.useState(generateStoreForWidgetTree)[0];// we might have passed in a store. If so, use that store instead.
// however, because hooks cannot be called conditionally, we must
// get `_store` even if we aren't using it.
var store=rest.store||_store;var parsed=perseus_markdown.parse(content);// Set up an onChange callback by subscribing to the store.
// By doing this, we get notified of every single "change" (even if the change is empty);
store.subscribe(function(){if(onChange){onChange(store.getState());}});// here is where we render the individual widgets in the parsed
// markdown tree.
var rules={widget:{react:function react(node,output,state){var widgetProps=widgets[node.id];if(!widgetProps){console.warn("Cannot find properties for ",node);}var Widget=getWidget(node.widgetType);return react_default.a.createElement(Widget,Object.assign({key:state.key},node,widgetProps));}}};// PerseusMarkdown has a bunch of default rendering rules. Override
// some of them and create a new renderer that will turn an ast
// into react components.
var markdownRenderer=perseus_markdown.ruleOverrideOutput(rules);return react_default.a.createElement(easy_peasy_esm_StoreProvider,{store:store},markdownRenderer(parsed));}/* harmony default export */ var renderer = (QuestionRenderer);
// CONCATENATED MODULE: ./src/perseus-redux.js
react_mathquill_default.a.addMathquillStyles=react_mathquill["addStyles"];//MathQuill.addMathquillStyles()
//PerseusRedux.ReactDOM.render(
//    PerseusRedux.React.createElement(PerseusRedux.QuestionRenderer, {
//        question: qq.question
//    }),
//    document.getElementById("xxx")
//);
var perseus_redux_createStore=generateStoreForWidgetTree;// Some helper functions
function initializeStore(store,state){// the `type` is determined by the easy-peasy library
store.dispatch({type:"@action.restoreState",payload:state});}// Look at the state of all the widgets and return
// a collective status
function statusFromState(state){var question=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{widgets:{}};var statuses={correct:[],incorrect:[],incomplete:[]};var messages={correct:[],incorrect:[],incomplete:[]};// store the formatted versions of the question and the answer
var formatted={contents:{str:[],tex:[]},answer:{str:[],tex:[]}};try{// collect the statuses of the widgets from the state
// The state for each widget looks like { status: {status: "xxx", ...}, message: ..., ...}
for(var id in state.widgets){var widgetStatus=state.widgets[id].status||{status:"incomplete",message:"Incomplete answer for ".concat(id)};messages[widgetStatus.status].push(widgetStatus.message);statuses[widgetStatus.status].push(id);// collect any formatted answers
if(widgetStatus.formatted){formatted.contents.str.push(widgetStatus.formatted.contents.str);formatted.contents.tex.push(widgetStatus.formatted.contents.tex);formatted.answer.str.push(widgetStatus.formatted.answer.str);formatted.answer.tex.push(widgetStatus.formatted.answer.tex);}}// there may have been widgets whose state was not in the state object.
// check the quesiton object to make sure we haven't missed any
for(var _id in question.widgets){if(!state.widgets[_id]){messages["incomplete"].push("Incomplete answer for ".concat(_id));statuses["incomplete"].push(_id);}}}catch(e){console.log("Error when reading state",e);}// make `formatted` into strings
formatted.contents.str=formatted.contents.str.join("; ");formatted.contents.tex=formatted.contents.tex.join("; ");formatted.answer.str=formatted.answer.str.join("; ");formatted.answer.tex=formatted.answer.tex.join("; ");if(statuses.incomplete.length>0){return{status:"incomplete",message:messages.incomplete.join("; "),formatted:formatted};}if(statuses.incorrect.length>0){return{status:"incorrect",message:messages.incorrect.join("; "),formatted:formatted};}return{status:"correct",message:"",formatted:formatted};}if(typeof PerseusRedux==="undefined"){console.log("perseus-redux loading...");window.PerseusRedux={React:react_default.a,ReactDOM:react_dom_default.a,QuestionRenderer:renderer,MathQuill:react_mathquill_default.a,generateStoreForWidgetTree:generateStoreForWidgetTree,createStore:perseus_redux_createStore,// A friendlier-named version
initializeStore:initializeStore,statusFromState:statusFromState,KAS:kas_default.a,Base64:base64["Base64"]};}else{console.log("perseus-redux already loaded");}/* harmony default export */ var perseus_redux = __webpack_exports__["default"] = (window.PerseusRedux);

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.8.6
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var k = __webpack_require__(10),
    n = "function" === typeof Symbol && Symbol.for,
    p = n ? Symbol.for("react.element") : 60103,
    q = n ? Symbol.for("react.portal") : 60106,
    r = n ? Symbol.for("react.fragment") : 60107,
    t = n ? Symbol.for("react.strict_mode") : 60108,
    u = n ? Symbol.for("react.profiler") : 60114,
    v = n ? Symbol.for("react.provider") : 60109,
    w = n ? Symbol.for("react.context") : 60110,
    x = n ? Symbol.for("react.concurrent_mode") : 60111,
    y = n ? Symbol.for("react.forward_ref") : 60112,
    z = n ? Symbol.for("react.suspense") : 60113,
    aa = n ? Symbol.for("react.memo") : 60115,
    ba = n ? Symbol.for("react.lazy") : 60116,
    A = "function" === typeof Symbol && Symbol.iterator;

function ca(a, b, d, c, e, g, h, f) {
  if (!a) {
    a = void 0;
    if (void 0 === b) a = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {
      var l = [d, c, e, g, h, f],
          m = 0;
      a = Error(b.replace(/%s/g, function () {
        return l[m++];
      }));
      a.name = "Invariant Violation";
    }
    a.framesToPop = 1;
    throw a;
  }
}

function B(a) {
  for (var b = arguments.length - 1, d = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 0; c < b; c++) {
    d += "&args[]=" + encodeURIComponent(arguments[c + 1]);
  }

  ca(!1, "Minified React error #" + a + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", d);
}

var C = {
  isMounted: function isMounted() {
    return !1;
  },
  enqueueForceUpdate: function enqueueForceUpdate() {},
  enqueueReplaceState: function enqueueReplaceState() {},
  enqueueSetState: function enqueueSetState() {}
},
    D = {};

function E(a, b, d) {
  this.props = a;
  this.context = b;
  this.refs = D;
  this.updater = d || C;
}

E.prototype.isReactComponent = {};

E.prototype.setState = function (a, b) {
  "object" !== typeof a && "function" !== typeof a && null != a ? B("85") : void 0;
  this.updater.enqueueSetState(this, a, b, "setState");
};

E.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};

function F() {}

F.prototype = E.prototype;

function G(a, b, d) {
  this.props = a;
  this.context = b;
  this.refs = D;
  this.updater = d || C;
}

var H = G.prototype = new F();
H.constructor = G;
k(H, E.prototype);
H.isPureReactComponent = !0;
var I = {
  current: null
},
    J = {
  current: null
},
    K = Object.prototype.hasOwnProperty,
    L = {
  key: !0,
  ref: !0,
  __self: !0,
  __source: !0
};

function M(a, b, d) {
  var c = void 0,
      e = {},
      g = null,
      h = null;
  if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = "" + b.key), b) {
    K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = b[c]);
  }
  var f = arguments.length - 2;
  if (1 === f) e.children = d;else if (1 < f) {
    for (var l = Array(f), m = 0; m < f; m++) {
      l[m] = arguments[m + 2];
    }

    e.children = l;
  }
  if (a && a.defaultProps) for (c in f = a.defaultProps, f) {
    void 0 === e[c] && (e[c] = f[c]);
  }
  return {
    $$typeof: p,
    type: a,
    key: g,
    ref: h,
    props: e,
    _owner: J.current
  };
}

function da(a, b) {
  return {
    $$typeof: p,
    type: a.type,
    key: b,
    ref: a.ref,
    props: a.props,
    _owner: a._owner
  };
}

function N(a) {
  return "object" === typeof a && null !== a && a.$$typeof === p;
}

function escape(a) {
  var b = {
    "=": "=0",
    ":": "=2"
  };
  return "$" + ("" + a).replace(/[=:]/g, function (a) {
    return b[a];
  });
}

var O = /\/+/g,
    P = [];

function Q(a, b, d, c) {
  if (P.length) {
    var e = P.pop();
    e.result = a;
    e.keyPrefix = b;
    e.func = d;
    e.context = c;
    e.count = 0;
    return e;
  }

  return {
    result: a,
    keyPrefix: b,
    func: d,
    context: c,
    count: 0
  };
}

function R(a) {
  a.result = null;
  a.keyPrefix = null;
  a.func = null;
  a.context = null;
  a.count = 0;
  10 > P.length && P.push(a);
}

function S(a, b, d, c) {
  var e = typeof a;
  if ("undefined" === e || "boolean" === e) a = null;
  var g = !1;
  if (null === a) g = !0;else switch (e) {
    case "string":
    case "number":
      g = !0;
      break;

    case "object":
      switch (a.$$typeof) {
        case p:
        case q:
          g = !0;
      }

  }
  if (g) return d(c, a, "" === b ? "." + T(a, 0) : b), 1;
  g = 0;
  b = "" === b ? "." : b + ":";
  if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {
    e = a[h];
    var f = b + T(e, h);
    g += S(e, f, d, c);
  } else if (null === a || "object" !== typeof a ? f = null : (f = A && a[A] || a["@@iterator"], f = "function" === typeof f ? f : null), "function" === typeof f) for (a = f.call(a), h = 0; !(e = a.next()).done;) {
    e = e.value, f = b + T(e, h++), g += S(e, f, d, c);
  } else "object" === e && (d = "" + a, B("31", "[object Object]" === d ? "object with keys {" + Object.keys(a).join(", ") + "}" : d, ""));
  return g;
}

function U(a, b, d) {
  return null == a ? 0 : S(a, "", b, d);
}

function T(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);
}

function ea(a, b) {
  a.func.call(a.context, b, a.count++);
}

function fa(a, b, d) {
  var c = a.result,
      e = a.keyPrefix;
  a = a.func.call(a.context, b, a.count++);
  Array.isArray(a) ? V(a, c, d, function (a) {
    return a;
  }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(O, "$&/") + "/") + d)), c.push(a));
}

function V(a, b, d, c, e) {
  var g = "";
  null != d && (g = ("" + d).replace(O, "$&/") + "/");
  b = Q(b, g, c, e);
  U(a, fa, b);
  R(b);
}

function W() {
  var a = I.current;
  null === a ? B("321") : void 0;
  return a;
}

var X = {
  Children: {
    map: function map(a, b, d) {
      if (null == a) return a;
      var c = [];
      V(a, c, null, b, d);
      return c;
    },
    forEach: function forEach(a, b, d) {
      if (null == a) return a;
      b = Q(null, null, b, d);
      U(a, ea, b);
      R(b);
    },
    count: function count(a) {
      return U(a, function () {
        return null;
      }, null);
    },
    toArray: function toArray(a) {
      var b = [];
      V(a, b, null, function (a) {
        return a;
      });
      return b;
    },
    only: function only(a) {
      N(a) ? void 0 : B("143");
      return a;
    }
  },
  createRef: function createRef() {
    return {
      current: null
    };
  },
  Component: E,
  PureComponent: G,
  createContext: function createContext(a, b) {
    void 0 === b && (b = null);
    a = {
      $$typeof: w,
      _calculateChangedBits: b,
      _currentValue: a,
      _currentValue2: a,
      _threadCount: 0,
      Provider: null,
      Consumer: null
    };
    a.Provider = {
      $$typeof: v,
      _context: a
    };
    return a.Consumer = a;
  },
  forwardRef: function forwardRef(a) {
    return {
      $$typeof: y,
      render: a
    };
  },
  lazy: function lazy(a) {
    return {
      $$typeof: ba,
      _ctor: a,
      _status: -1,
      _result: null
    };
  },
  memo: function memo(a, b) {
    return {
      $$typeof: aa,
      type: a,
      compare: void 0 === b ? null : b
    };
  },
  useCallback: function useCallback(a, b) {
    return W().useCallback(a, b);
  },
  useContext: function useContext(a, b) {
    return W().useContext(a, b);
  },
  useEffect: function useEffect(a, b) {
    return W().useEffect(a, b);
  },
  useImperativeHandle: function useImperativeHandle(a, b, d) {
    return W().useImperativeHandle(a, b, d);
  },
  useDebugValue: function useDebugValue() {},
  useLayoutEffect: function useLayoutEffect(a, b) {
    return W().useLayoutEffect(a, b);
  },
  useMemo: function useMemo(a, b) {
    return W().useMemo(a, b);
  },
  useReducer: function useReducer(a, b, d) {
    return W().useReducer(a, b, d);
  },
  useRef: function useRef(a) {
    return W().useRef(a);
  },
  useState: function useState(a) {
    return W().useState(a);
  },
  Fragment: r,
  StrictMode: t,
  Suspense: z,
  createElement: M,
  cloneElement: function cloneElement(a, b, d) {
    null === a || void 0 === a ? B("267", a) : void 0;
    var c = void 0,
        e = k({}, a.props),
        g = a.key,
        h = a.ref,
        f = a._owner;

    if (null != b) {
      void 0 !== b.ref && (h = b.ref, f = J.current);
      void 0 !== b.key && (g = "" + b.key);
      var l = void 0;
      a.type && a.type.defaultProps && (l = a.type.defaultProps);

      for (c in b) {
        K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);
      }
    }

    c = arguments.length - 2;
    if (1 === c) e.children = d;else if (1 < c) {
      l = Array(c);

      for (var m = 0; m < c; m++) {
        l[m] = arguments[m + 2];
      }

      e.children = l;
    }
    return {
      $$typeof: p,
      type: a.type,
      key: g,
      ref: h,
      props: e,
      _owner: f
    };
  },
  createFactory: function createFactory(a) {
    var b = M.bind(null, a);
    b.type = a;
    return b;
  },
  isValidElement: N,
  version: "16.8.6",
  unstable_ConcurrentMode: x,
  unstable_Profiler: u,
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    ReactCurrentDispatcher: I,
    ReactCurrentOwner: J,
    assign: k
  }
},
    Y = {
  default: X
},
    Z = Y && X || Y;
module.exports = Z.default || Z;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.8.6
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/


var aa = __webpack_require__(0),
    n = __webpack_require__(10),
    r = __webpack_require__(20);

function ba(a, b, c, d, e, f, g, h) {
  if (!a) {
    a = void 0;
    if (void 0 === b) a = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {
      var l = [c, d, e, f, g, h],
          k = 0;
      a = Error(b.replace(/%s/g, function () {
        return l[k++];
      }));
      a.name = "Invariant Violation";
    }
    a.framesToPop = 1;
    throw a;
  }
}

function x(a) {
  for (var b = arguments.length - 1, c = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, d = 0; d < b; d++) {
    c += "&args[]=" + encodeURIComponent(arguments[d + 1]);
  }

  ba(!1, "Minified React error #" + a + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", c);
}

aa ? void 0 : x("227");

function ca(a, b, c, d, e, f, g, h, l) {
  var k = Array.prototype.slice.call(arguments, 3);

  try {
    b.apply(c, k);
  } catch (m) {
    this.onError(m);
  }
}

var da = !1,
    ea = null,
    fa = !1,
    ha = null,
    ia = {
  onError: function onError(a) {
    da = !0;
    ea = a;
  }
};

function ja(a, b, c, d, e, f, g, h, l) {
  da = !1;
  ea = null;
  ca.apply(ia, arguments);
}

function ka(a, b, c, d, e, f, g, h, l) {
  ja.apply(this, arguments);

  if (da) {
    if (da) {
      var k = ea;
      da = !1;
      ea = null;
    } else x("198"), k = void 0;

    fa || (fa = !0, ha = k);
  }
}

var la = null,
    ma = {};

function na() {
  if (la) for (var a in ma) {
    var b = ma[a],
        c = la.indexOf(a);
    -1 < c ? void 0 : x("96", a);

    if (!oa[c]) {
      b.extractEvents ? void 0 : x("97", a);
      oa[c] = b;
      c = b.eventTypes;

      for (var d in c) {
        var e = void 0;
        var f = c[d],
            g = b,
            h = d;
        pa.hasOwnProperty(h) ? x("99", h) : void 0;
        pa[h] = f;
        var l = f.phasedRegistrationNames;

        if (l) {
          for (e in l) {
            l.hasOwnProperty(e) && qa(l[e], g, h);
          }

          e = !0;
        } else f.registrationName ? (qa(f.registrationName, g, h), e = !0) : e = !1;

        e ? void 0 : x("98", d, a);
      }
    }
  }
}

function qa(a, b, c) {
  ra[a] ? x("100", a) : void 0;
  ra[a] = b;
  sa[a] = b.eventTypes[c].dependencies;
}

var oa = [],
    pa = {},
    ra = {},
    sa = {},
    ta = null,
    ua = null,
    va = null;

function wa(a, b, c) {
  var d = a.type || "unknown-event";
  a.currentTarget = va(c);
  ka(d, b, void 0, a);
  a.currentTarget = null;
}

function xa(a, b) {
  null == b ? x("30") : void 0;
  if (null == a) return b;

  if (Array.isArray(a)) {
    if (Array.isArray(b)) return a.push.apply(a, b), a;
    a.push(b);
    return a;
  }

  return Array.isArray(b) ? [a].concat(b) : [a, b];
}

function ya(a, b, c) {
  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);
}

var za = null;

function Aa(a) {
  if (a) {
    var b = a._dispatchListeners,
        c = a._dispatchInstances;
    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {
      wa(a, b[d], c[d]);
    } else b && wa(a, b, c);
    a._dispatchListeners = null;
    a._dispatchInstances = null;
    a.isPersistent() || a.constructor.release(a);
  }
}

var Ba = {
  injectEventPluginOrder: function injectEventPluginOrder(a) {
    la ? x("101") : void 0;
    la = Array.prototype.slice.call(a);
    na();
  },
  injectEventPluginsByName: function injectEventPluginsByName(a) {
    var b = !1,
        c;

    for (c in a) {
      if (a.hasOwnProperty(c)) {
        var d = a[c];
        ma.hasOwnProperty(c) && ma[c] === d || (ma[c] ? x("102", c) : void 0, ma[c] = d, b = !0);
      }
    }

    b && na();
  }
};

function Ca(a, b) {
  var c = a.stateNode;
  if (!c) return null;
  var d = ta(c);
  if (!d) return null;
  c = d[b];

  a: switch (b) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
      (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
      a = !d;
      break a;

    default:
      a = !1;
  }

  if (a) return null;
  c && "function" !== typeof c ? x("231", b, typeof c) : void 0;
  return c;
}

function Da(a) {
  null !== a && (za = xa(za, a));
  a = za;
  za = null;
  if (a && (ya(a, Aa), za ? x("95") : void 0, fa)) throw a = ha, fa = !1, ha = null, a;
}

var Ea = Math.random().toString(36).slice(2),
    Fa = "__reactInternalInstance$" + Ea,
    Ga = "__reactEventHandlers$" + Ea;

function Ha(a) {
  if (a[Fa]) return a[Fa];

  for (; !a[Fa];) {
    if (a.parentNode) a = a.parentNode;else return null;
  }

  a = a[Fa];
  return 5 === a.tag || 6 === a.tag ? a : null;
}

function Ia(a) {
  a = a[Fa];
  return !a || 5 !== a.tag && 6 !== a.tag ? null : a;
}

function Ja(a) {
  if (5 === a.tag || 6 === a.tag) return a.stateNode;
  x("33");
}

function Ka(a) {
  return a[Ga] || null;
}

function La(a) {
  do {
    a = a.return;
  } while (a && 5 !== a.tag);

  return a ? a : null;
}

function Ma(a, b, c) {
  if (b = Ca(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a);
}

function Na(a) {
  if (a && a.dispatchConfig.phasedRegistrationNames) {
    for (var b = a._targetInst, c = []; b;) {
      c.push(b), b = La(b);
    }

    for (b = c.length; 0 < b--;) {
      Ma(c[b], "captured", a);
    }

    for (b = 0; b < c.length; b++) {
      Ma(c[b], "bubbled", a);
    }
  }
}

function Oa(a, b, c) {
  a && c && c.dispatchConfig.registrationName && (b = Ca(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a));
}

function Pa(a) {
  a && a.dispatchConfig.registrationName && Oa(a._targetInst, null, a);
}

function Qa(a) {
  ya(a, Na);
}

var Ra = !("undefined" === typeof window || !window.document || !window.document.createElement);

function Sa(a, b) {
  var c = {};
  c[a.toLowerCase()] = b.toLowerCase();
  c["Webkit" + a] = "webkit" + b;
  c["Moz" + a] = "moz" + b;
  return c;
}

var Ta = {
  animationend: Sa("Animation", "AnimationEnd"),
  animationiteration: Sa("Animation", "AnimationIteration"),
  animationstart: Sa("Animation", "AnimationStart"),
  transitionend: Sa("Transition", "TransitionEnd")
},
    Ua = {},
    Va = {};
Ra && (Va = document.createElement("div").style, "AnimationEvent" in window || (delete Ta.animationend.animation, delete Ta.animationiteration.animation, delete Ta.animationstart.animation), "TransitionEvent" in window || delete Ta.transitionend.transition);

function Wa(a) {
  if (Ua[a]) return Ua[a];
  if (!Ta[a]) return a;
  var b = Ta[a],
      c;

  for (c in b) {
    if (b.hasOwnProperty(c) && c in Va) return Ua[a] = b[c];
  }

  return a;
}

var Xa = Wa("animationend"),
    Ya = Wa("animationiteration"),
    Za = Wa("animationstart"),
    $a = Wa("transitionend"),
    ab = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
    bb = null,
    cb = null,
    db = null;

function eb() {
  if (db) return db;
  var a,
      b = cb,
      c = b.length,
      d,
      e = "value" in bb ? bb.value : bb.textContent,
      f = e.length;

  for (a = 0; a < c && b[a] === e[a]; a++) {
    ;
  }

  var g = c - a;

  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {
    ;
  }

  return db = e.slice(a, 1 < d ? 1 - d : void 0);
}

function fb() {
  return !0;
}

function gb() {
  return !1;
}

function y(a, b, c, d) {
  this.dispatchConfig = a;
  this._targetInst = b;
  this.nativeEvent = c;
  a = this.constructor.Interface;

  for (var e in a) {
    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : "target" === e ? this.target = d : this[e] = c[e]);
  }

  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? fb : gb;
  this.isPropagationStopped = gb;
  return this;
}

n(y.prototype, {
  preventDefault: function preventDefault() {
    this.defaultPrevented = !0;
    var a = this.nativeEvent;
    a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = fb);
  },
  stopPropagation: function stopPropagation() {
    var a = this.nativeEvent;
    a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = fb);
  },
  persist: function persist() {
    this.isPersistent = fb;
  },
  isPersistent: gb,
  destructor: function destructor() {
    var a = this.constructor.Interface,
        b;

    for (b in a) {
      this[b] = null;
    }

    this.nativeEvent = this._targetInst = this.dispatchConfig = null;
    this.isPropagationStopped = this.isDefaultPrevented = gb;
    this._dispatchInstances = this._dispatchListeners = null;
  }
});
y.Interface = {
  type: null,
  target: null,
  currentTarget: function currentTarget() {
    return null;
  },
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function timeStamp(a) {
    return a.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

y.extend = function (a) {
  function b() {}

  function c() {
    return d.apply(this, arguments);
  }

  var d = this;
  b.prototype = d.prototype;
  var e = new b();
  n(e, c.prototype);
  c.prototype = e;
  c.prototype.constructor = c;
  c.Interface = n({}, d.Interface, a);
  c.extend = d.extend;
  hb(c);
  return c;
};

hb(y);

function ib(a, b, c, d) {
  if (this.eventPool.length) {
    var e = this.eventPool.pop();
    this.call(e, a, b, c, d);
    return e;
  }

  return new this(a, b, c, d);
}

function jb(a) {
  a instanceof this ? void 0 : x("279");
  a.destructor();
  10 > this.eventPool.length && this.eventPool.push(a);
}

function hb(a) {
  a.eventPool = [];
  a.getPooled = ib;
  a.release = jb;
}

var kb = y.extend({
  data: null
}),
    lb = y.extend({
  data: null
}),
    mb = [9, 13, 27, 32],
    nb = Ra && "CompositionEvent" in window,
    ob = null;
Ra && "documentMode" in document && (ob = document.documentMode);
var pb = Ra && "TextEvent" in window && !ob,
    qb = Ra && (!nb || ob && 8 < ob && 11 >= ob),
    rb = String.fromCharCode(32),
    sb = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: "onBeforeInput",
      captured: "onBeforeInputCapture"
    },
    dependencies: ["compositionend", "keypress", "textInput", "paste"]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: "onCompositionEnd",
      captured: "onCompositionEndCapture"
    },
    dependencies: "blur compositionend keydown keypress keyup mousedown".split(" ")
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: "onCompositionStart",
      captured: "onCompositionStartCapture"
    },
    dependencies: "blur compositionstart keydown keypress keyup mousedown".split(" ")
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: "onCompositionUpdate",
      captured: "onCompositionUpdateCapture"
    },
    dependencies: "blur compositionupdate keydown keypress keyup mousedown".split(" ")
  }
},
    tb = !1;

function ub(a, b) {
  switch (a) {
    case "keyup":
      return -1 !== mb.indexOf(b.keyCode);

    case "keydown":
      return 229 !== b.keyCode;

    case "keypress":
    case "mousedown":
    case "blur":
      return !0;

    default:
      return !1;
  }
}

function vb(a) {
  a = a.detail;
  return "object" === typeof a && "data" in a ? a.data : null;
}

var wb = !1;

function xb(a, b) {
  switch (a) {
    case "compositionend":
      return vb(b);

    case "keypress":
      if (32 !== b.which) return null;
      tb = !0;
      return rb;

    case "textInput":
      return a = b.data, a === rb && tb ? null : a;

    default:
      return null;
  }
}

function yb(a, b) {
  if (wb) return "compositionend" === a || !nb && ub(a, b) ? (a = eb(), db = cb = bb = null, wb = !1, a) : null;

  switch (a) {
    case "paste":
      return null;

    case "keypress":
      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
        if (b.char && 1 < b.char.length) return b.char;
        if (b.which) return String.fromCharCode(b.which);
      }

      return null;

    case "compositionend":
      return qb && "ko" !== b.locale ? null : b.data;

    default:
      return null;
  }
}

var zb = {
  eventTypes: sb,
  extractEvents: function extractEvents(a, b, c, d) {
    var e = void 0;
    var f = void 0;
    if (nb) b: {
      switch (a) {
        case "compositionstart":
          e = sb.compositionStart;
          break b;

        case "compositionend":
          e = sb.compositionEnd;
          break b;

        case "compositionupdate":
          e = sb.compositionUpdate;
          break b;
      }

      e = void 0;
    } else wb ? ub(a, c) && (e = sb.compositionEnd) : "keydown" === a && 229 === c.keyCode && (e = sb.compositionStart);
    e ? (qb && "ko" !== c.locale && (wb || e !== sb.compositionStart ? e === sb.compositionEnd && wb && (f = eb()) : (bb = d, cb = "value" in bb ? bb.value : bb.textContent, wb = !0)), e = kb.getPooled(e, b, c, d), f ? e.data = f : (f = vb(c), null !== f && (e.data = f)), Qa(e), f = e) : f = null;
    (a = pb ? xb(a, c) : yb(a, c)) ? (b = lb.getPooled(sb.beforeInput, b, c, d), b.data = a, Qa(b)) : b = null;
    return null === f ? b : null === b ? f : [f, b];
  }
},
    Ab = null,
    Bb = null,
    Cb = null;

function Db(a) {
  if (a = ua(a)) {
    "function" !== typeof Ab ? x("280") : void 0;
    var b = ta(a.stateNode);
    Ab(a.stateNode, a.type, b);
  }
}

function Eb(a) {
  Bb ? Cb ? Cb.push(a) : Cb = [a] : Bb = a;
}

function Fb() {
  if (Bb) {
    var a = Bb,
        b = Cb;
    Cb = Bb = null;
    Db(a);
    if (b) for (a = 0; a < b.length; a++) {
      Db(b[a]);
    }
  }
}

function Gb(a, b) {
  return a(b);
}

function Hb(a, b, c) {
  return a(b, c);
}

function Ib() {}

var Jb = !1;

function Kb(a, b) {
  if (Jb) return a(b);
  Jb = !0;

  try {
    return Gb(a, b);
  } finally {
    if (Jb = !1, null !== Bb || null !== Cb) Ib(), Fb();
  }
}

var Lb = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0
};

function Mb(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return "input" === b ? !!Lb[a.type] : "textarea" === b ? !0 : !1;
}

function Nb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return 3 === a.nodeType ? a.parentNode : a;
}

function Ob(a) {
  if (!Ra) return !1;
  a = "on" + a;
  var b = a in document;
  b || (b = document.createElement("div"), b.setAttribute(a, "return;"), b = "function" === typeof b[a]);
  return b;
}

function Pb(a) {
  var b = a.type;
  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
}

function Qb(a) {
  var b = Pb(a) ? "checked" : "value",
      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
      d = "" + a[b];

  if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
    var e = c.get,
        f = c.set;
    Object.defineProperty(a, b, {
      configurable: !0,
      get: function get() {
        return e.call(this);
      },
      set: function set(a) {
        d = "" + a;
        f.call(this, a);
      }
    });
    Object.defineProperty(a, b, {
      enumerable: c.enumerable
    });
    return {
      getValue: function getValue() {
        return d;
      },
      setValue: function setValue(a) {
        d = "" + a;
      },
      stopTracking: function stopTracking() {
        a._valueTracker = null;
        delete a[b];
      }
    };
  }
}

function Rb(a) {
  a._valueTracker || (a._valueTracker = Qb(a));
}

function Sb(a) {
  if (!a) return !1;
  var b = a._valueTracker;
  if (!b) return !0;
  var c = b.getValue();
  var d = "";
  a && (d = Pb(a) ? a.checked ? "true" : "false" : a.value);
  a = d;
  return a !== c ? (b.setValue(a), !0) : !1;
}

var Tb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
Tb.hasOwnProperty("ReactCurrentDispatcher") || (Tb.ReactCurrentDispatcher = {
  current: null
});
var Ub = /^(.*)[\\\/]/,
    z = "function" === typeof Symbol && Symbol.for,
    Vb = z ? Symbol.for("react.element") : 60103,
    Wb = z ? Symbol.for("react.portal") : 60106,
    Xb = z ? Symbol.for("react.fragment") : 60107,
    Yb = z ? Symbol.for("react.strict_mode") : 60108,
    Zb = z ? Symbol.for("react.profiler") : 60114,
    $b = z ? Symbol.for("react.provider") : 60109,
    ac = z ? Symbol.for("react.context") : 60110,
    bc = z ? Symbol.for("react.concurrent_mode") : 60111,
    cc = z ? Symbol.for("react.forward_ref") : 60112,
    dc = z ? Symbol.for("react.suspense") : 60113,
    ec = z ? Symbol.for("react.memo") : 60115,
    fc = z ? Symbol.for("react.lazy") : 60116,
    gc = "function" === typeof Symbol && Symbol.iterator;

function hc(a) {
  if (null === a || "object" !== typeof a) return null;
  a = gc && a[gc] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}

function ic(a) {
  if (null == a) return null;
  if ("function" === typeof a) return a.displayName || a.name || null;
  if ("string" === typeof a) return a;

  switch (a) {
    case bc:
      return "ConcurrentMode";

    case Xb:
      return "Fragment";

    case Wb:
      return "Portal";

    case Zb:
      return "Profiler";

    case Yb:
      return "StrictMode";

    case dc:
      return "Suspense";
  }

  if ("object" === typeof a) switch (a.$$typeof) {
    case ac:
      return "Context.Consumer";

    case $b:
      return "Context.Provider";

    case cc:
      var b = a.render;
      b = b.displayName || b.name || "";
      return a.displayName || ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");

    case ec:
      return ic(a.type);

    case fc:
      if (a = 1 === a._status ? a._result : null) return ic(a);
  }
  return null;
}

function jc(a) {
  var b = "";

  do {
    a: switch (a.tag) {
      case 3:
      case 4:
      case 6:
      case 7:
      case 10:
      case 9:
        var c = "";
        break a;

      default:
        var d = a._debugOwner,
            e = a._debugSource,
            f = ic(a.type);
        c = null;
        d && (c = ic(d.type));
        d = f;
        f = "";
        e ? f = " (at " + e.fileName.replace(Ub, "") + ":" + e.lineNumber + ")" : c && (f = " (created by " + c + ")");
        c = "\n    in " + (d || "Unknown") + f;
    }

    b += c;
    a = a.return;
  } while (a);

  return b;
}

var kc = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
    lc = Object.prototype.hasOwnProperty,
    mc = {},
    nc = {};

function oc(a) {
  if (lc.call(nc, a)) return !0;
  if (lc.call(mc, a)) return !1;
  if (kc.test(a)) return nc[a] = !0;
  mc[a] = !0;
  return !1;
}

function pc(a, b, c, d) {
  if (null !== c && 0 === c.type) return !1;

  switch (typeof b) {
    case "function":
    case "symbol":
      return !0;

    case "boolean":
      if (d) return !1;
      if (null !== c) return !c.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return "data-" !== a && "aria-" !== a;

    default:
      return !1;
  }
}

function qc(a, b, c, d) {
  if (null === b || "undefined" === typeof b || pc(a, b, c, d)) return !0;
  if (d) return !1;
  if (null !== c) switch (c.type) {
    case 3:
      return !b;

    case 4:
      return !1 === b;

    case 5:
      return isNaN(b);

    case 6:
      return isNaN(b) || 1 > b;
  }
  return !1;
}

function C(a, b, c, d, e) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = e;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
}

var D = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) {
  D[a] = new C(a, 0, !1, a, null);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function (a) {
  var b = a[0];
  D[b] = new C(b, 1, !1, a[1], null);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {
  D[a] = new C(a, 2, !1, a.toLowerCase(), null);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) {
  D[a] = new C(a, 2, !1, a, null);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function (a) {
  D[a] = new C(a, 3, !1, a.toLowerCase(), null);
});
["checked", "multiple", "muted", "selected"].forEach(function (a) {
  D[a] = new C(a, 3, !0, a, null);
});
["capture", "download"].forEach(function (a) {
  D[a] = new C(a, 4, !1, a, null);
});
["cols", "rows", "size", "span"].forEach(function (a) {
  D[a] = new C(a, 6, !1, a, null);
});
["rowSpan", "start"].forEach(function (a) {
  D[a] = new C(a, 5, !1, a.toLowerCase(), null);
});
var rc = /[\-:]([a-z])/g;

function sc(a) {
  return a[1].toUpperCase();
}

"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function (a) {
  var b = a.replace(rc, sc);
  D[b] = new C(b, 1, !1, a, null);
});
"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) {
  var b = a.replace(rc, sc);
  D[b] = new C(b, 1, !1, a, "http://www.w3.org/1999/xlink");
});
["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
  var b = a.replace(rc, sc);
  D[b] = new C(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace");
});
["tabIndex", "crossOrigin"].forEach(function (a) {
  D[a] = new C(a, 1, !1, a.toLowerCase(), null);
});

function tc(a, b, c, d) {
  var e = D.hasOwnProperty(b) ? D[b] : null;
  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1] ? !1 : !0;
  f || (qc(b, c, e, d) && (c = null), d || null === e ? oc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
}

function uc(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "object":
    case "string":
    case "undefined":
      return a;

    default:
      return "";
  }
}

function vc(a, b) {
  var c = b.checked;
  return n({}, b, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: null != c ? c : a._wrapperState.initialChecked
  });
}

function wc(a, b) {
  var c = null == b.defaultValue ? "" : b.defaultValue,
      d = null != b.checked ? b.checked : b.defaultChecked;
  c = uc(null != b.value ? b.value : c);
  a._wrapperState = {
    initialChecked: d,
    initialValue: c,
    controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
  };
}

function xc(a, b) {
  b = b.checked;
  null != b && tc(a, "checked", b, !1);
}

function yc(a, b) {
  xc(a, b);
  var c = uc(b.value),
      d = b.type;
  if (null != c) {
    if ("number" === d) {
      if (0 === c && "" === a.value || a.value != c) a.value = "" + c;
    } else a.value !== "" + c && (a.value = "" + c);
  } else if ("submit" === d || "reset" === d) {
    a.removeAttribute("value");
    return;
  }
  b.hasOwnProperty("value") ? zc(a, b.type, c) : b.hasOwnProperty("defaultValue") && zc(a, b.type, uc(b.defaultValue));
  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
}

function Ac(a, b, c) {
  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
    var d = b.type;
    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;
    b = "" + a._wrapperState.initialValue;
    c || b === a.value || (a.value = b);
    a.defaultValue = b;
  }

  c = a.name;
  "" !== c && (a.name = "");
  a.defaultChecked = !a.defaultChecked;
  a.defaultChecked = !!a._wrapperState.initialChecked;
  "" !== c && (a.name = c);
}

function zc(a, b, c) {
  if ("number" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}

var Bc = {
  change: {
    phasedRegistrationNames: {
      bubbled: "onChange",
      captured: "onChangeCapture"
    },
    dependencies: "blur change click focus input keydown keyup selectionchange".split(" ")
  }
};

function Cc(a, b, c) {
  a = y.getPooled(Bc.change, a, b, c);
  a.type = "change";
  Eb(c);
  Qa(a);
  return a;
}

var Dc = null,
    Ec = null;

function Fc(a) {
  Da(a);
}

function Gc(a) {
  var b = Ja(a);
  if (Sb(b)) return a;
}

function Hc(a, b) {
  if ("change" === a) return b;
}

var Ic = !1;
Ra && (Ic = Ob("input") && (!document.documentMode || 9 < document.documentMode));

function Jc() {
  Dc && (Dc.detachEvent("onpropertychange", Kc), Ec = Dc = null);
}

function Kc(a) {
  "value" === a.propertyName && Gc(Ec) && (a = Cc(Ec, a, Nb(a)), Kb(Fc, a));
}

function Lc(a, b, c) {
  "focus" === a ? (Jc(), Dc = b, Ec = c, Dc.attachEvent("onpropertychange", Kc)) : "blur" === a && Jc();
}

function Mc(a) {
  if ("selectionchange" === a || "keyup" === a || "keydown" === a) return Gc(Ec);
}

function Nc(a, b) {
  if ("click" === a) return Gc(b);
}

function Oc(a, b) {
  if ("input" === a || "change" === a) return Gc(b);
}

var Pc = {
  eventTypes: Bc,
  _isInputEventSupported: Ic,
  extractEvents: function extractEvents(a, b, c, d) {
    var e = b ? Ja(b) : window,
        f = void 0,
        g = void 0,
        h = e.nodeName && e.nodeName.toLowerCase();
    "select" === h || "input" === h && "file" === e.type ? f = Hc : Mb(e) ? Ic ? f = Oc : (f = Mc, g = Lc) : (h = e.nodeName) && "input" === h.toLowerCase() && ("checkbox" === e.type || "radio" === e.type) && (f = Nc);
    if (f && (f = f(a, b))) return Cc(f, c, d);
    g && g(a, e, b);
    "blur" === a && (a = e._wrapperState) && a.controlled && "number" === e.type && zc(e, "number", e.value);
  }
},
    Qc = y.extend({
  view: null,
  detail: null
}),
    Rc = {
  Alt: "altKey",
  Control: "ctrlKey",
  Meta: "metaKey",
  Shift: "shiftKey"
};

function Sc(a) {
  var b = this.nativeEvent;
  return b.getModifierState ? b.getModifierState(a) : (a = Rc[a]) ? !!b[a] : !1;
}

function Tc() {
  return Sc;
}

var Uc = 0,
    Vc = 0,
    Wc = !1,
    Xc = !1,
    Yc = Qc.extend({
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  pageX: null,
  pageY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: Tc,
  button: null,
  buttons: null,
  relatedTarget: function relatedTarget(a) {
    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);
  },
  movementX: function movementX(a) {
    if ("movementX" in a) return a.movementX;
    var b = Uc;
    Uc = a.screenX;
    return Wc ? "mousemove" === a.type ? a.screenX - b : 0 : (Wc = !0, 0);
  },
  movementY: function movementY(a) {
    if ("movementY" in a) return a.movementY;
    var b = Vc;
    Vc = a.screenY;
    return Xc ? "mousemove" === a.type ? a.screenY - b : 0 : (Xc = !0, 0);
  }
}),
    Zc = Yc.extend({
  pointerId: null,
  width: null,
  height: null,
  pressure: null,
  tangentialPressure: null,
  tiltX: null,
  tiltY: null,
  twist: null,
  pointerType: null,
  isPrimary: null
}),
    $c = {
  mouseEnter: {
    registrationName: "onMouseEnter",
    dependencies: ["mouseout", "mouseover"]
  },
  mouseLeave: {
    registrationName: "onMouseLeave",
    dependencies: ["mouseout", "mouseover"]
  },
  pointerEnter: {
    registrationName: "onPointerEnter",
    dependencies: ["pointerout", "pointerover"]
  },
  pointerLeave: {
    registrationName: "onPointerLeave",
    dependencies: ["pointerout", "pointerover"]
  }
},
    ad = {
  eventTypes: $c,
  extractEvents: function extractEvents(a, b, c, d) {
    var e = "mouseover" === a || "pointerover" === a,
        f = "mouseout" === a || "pointerout" === a;
    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;
    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;
    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ha(b) : null) : f = null;
    if (f === b) return null;
    var g = void 0,
        h = void 0,
        l = void 0,
        k = void 0;
    if ("mouseout" === a || "mouseover" === a) g = Yc, h = $c.mouseLeave, l = $c.mouseEnter, k = "mouse";else if ("pointerout" === a || "pointerover" === a) g = Zc, h = $c.pointerLeave, l = $c.pointerEnter, k = "pointer";
    var m = null == f ? e : Ja(f);
    e = null == b ? e : Ja(b);
    a = g.getPooled(h, f, c, d);
    a.type = k + "leave";
    a.target = m;
    a.relatedTarget = e;
    c = g.getPooled(l, b, c, d);
    c.type = k + "enter";
    c.target = e;
    c.relatedTarget = m;
    d = b;
    if (f && d) a: {
      b = f;
      e = d;
      k = 0;

      for (g = b; g; g = La(g)) {
        k++;
      }

      g = 0;

      for (l = e; l; l = La(l)) {
        g++;
      }

      for (; 0 < k - g;) {
        b = La(b), k--;
      }

      for (; 0 < g - k;) {
        e = La(e), g--;
      }

      for (; k--;) {
        if (b === e || b === e.alternate) break a;
        b = La(b);
        e = La(e);
      }

      b = null;
    } else b = null;
    e = b;

    for (b = []; f && f !== e;) {
      k = f.alternate;
      if (null !== k && k === e) break;
      b.push(f);
      f = La(f);
    }

    for (f = []; d && d !== e;) {
      k = d.alternate;
      if (null !== k && k === e) break;
      f.push(d);
      d = La(d);
    }

    for (d = 0; d < b.length; d++) {
      Oa(b[d], "bubbled", a);
    }

    for (d = f.length; 0 < d--;) {
      Oa(f[d], "captured", c);
    }

    return [a, c];
  }
};

function bd(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}

var cd = Object.prototype.hasOwnProperty;

function dd(a, b) {
  if (bd(a, b)) return !0;
  if ("object" !== typeof a || null === a || "object" !== typeof b || null === b) return !1;
  var c = Object.keys(a),
      d = Object.keys(b);
  if (c.length !== d.length) return !1;

  for (d = 0; d < c.length; d++) {
    if (!cd.call(b, c[d]) || !bd(a[c[d]], b[c[d]])) return !1;
  }

  return !0;
}

function ed(a) {
  var b = a;
  if (a.alternate) for (; b.return;) {
    b = b.return;
  } else {
    if (0 !== (b.effectTag & 2)) return 1;

    for (; b.return;) {
      if (b = b.return, 0 !== (b.effectTag & 2)) return 1;
    }
  }
  return 3 === b.tag ? 2 : 3;
}

function fd(a) {
  2 !== ed(a) ? x("188") : void 0;
}

function gd(a) {
  var b = a.alternate;
  if (!b) return b = ed(a), 3 === b ? x("188") : void 0, 1 === b ? null : a;

  for (var c = a, d = b;;) {
    var e = c.return,
        f = e ? e.alternate : null;
    if (!e || !f) break;

    if (e.child === f.child) {
      for (var g = e.child; g;) {
        if (g === c) return fd(e), a;
        if (g === d) return fd(e), b;
        g = g.sibling;
      }

      x("188");
    }

    if (c.return !== d.return) c = e, d = f;else {
      g = !1;

      for (var h = e.child; h;) {
        if (h === c) {
          g = !0;
          c = e;
          d = f;
          break;
        }

        if (h === d) {
          g = !0;
          d = e;
          c = f;
          break;
        }

        h = h.sibling;
      }

      if (!g) {
        for (h = f.child; h;) {
          if (h === c) {
            g = !0;
            c = f;
            d = e;
            break;
          }

          if (h === d) {
            g = !0;
            d = f;
            c = e;
            break;
          }

          h = h.sibling;
        }

        g ? void 0 : x("189");
      }
    }
    c.alternate !== d ? x("190") : void 0;
  }

  3 !== c.tag ? x("188") : void 0;
  return c.stateNode.current === c ? a : b;
}

function hd(a) {
  a = gd(a);
  if (!a) return null;

  for (var b = a;;) {
    if (5 === b.tag || 6 === b.tag) return b;
    if (b.child) b.child.return = b, b = b.child;else {
      if (b === a) break;

      for (; !b.sibling;) {
        if (!b.return || b.return === a) return null;
        b = b.return;
      }

      b.sibling.return = b.return;
      b = b.sibling;
    }
  }

  return null;
}

var id = y.extend({
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
}),
    jd = y.extend({
  clipboardData: function clipboardData(a) {
    return "clipboardData" in a ? a.clipboardData : window.clipboardData;
  }
}),
    kd = Qc.extend({
  relatedTarget: null
});

function ld(a) {
  var b = a.keyCode;
  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
  10 === a && (a = 13);
  return 32 <= a || 13 === a ? a : 0;
}

var md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
},
    nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
},
    od = Qc.extend({
  key: function key(a) {
    if (a.key) {
      var b = md[a.key] || a.key;
      if ("Unidentified" !== b) return b;
    }

    return "keypress" === a.type ? (a = ld(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? nd[a.keyCode] || "Unidentified" : "";
  },
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: Tc,
  charCode: function charCode(a) {
    return "keypress" === a.type ? ld(a) : 0;
  },
  keyCode: function keyCode(a) {
    return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
  },
  which: function which(a) {
    return "keypress" === a.type ? ld(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
  }
}),
    pd = Yc.extend({
  dataTransfer: null
}),
    qd = Qc.extend({
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: Tc
}),
    rd = y.extend({
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
}),
    sd = Yc.extend({
  deltaX: function deltaX(a) {
    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
  },
  deltaY: function deltaY(a) {
    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
  },
  deltaZ: null,
  deltaMode: null
}),
    td = [["abort", "abort"], [Xa, "animationEnd"], [Ya, "animationIteration"], [Za, "animationStart"], ["canplay", "canPlay"], ["canplaythrough", "canPlayThrough"], ["drag", "drag"], ["dragenter", "dragEnter"], ["dragexit", "dragExit"], ["dragleave", "dragLeave"], ["dragover", "dragOver"], ["durationchange", "durationChange"], ["emptied", "emptied"], ["encrypted", "encrypted"], ["ended", "ended"], ["error", "error"], ["gotpointercapture", "gotPointerCapture"], ["load", "load"], ["loadeddata", "loadedData"], ["loadedmetadata", "loadedMetadata"], ["loadstart", "loadStart"], ["lostpointercapture", "lostPointerCapture"], ["mousemove", "mouseMove"], ["mouseout", "mouseOut"], ["mouseover", "mouseOver"], ["playing", "playing"], ["pointermove", "pointerMove"], ["pointerout", "pointerOut"], ["pointerover", "pointerOver"], ["progress", "progress"], ["scroll", "scroll"], ["seeking", "seeking"], ["stalled", "stalled"], ["suspend", "suspend"], ["timeupdate", "timeUpdate"], ["toggle", "toggle"], ["touchmove", "touchMove"], [$a, "transitionEnd"], ["waiting", "waiting"], ["wheel", "wheel"]],
    ud = {},
    vd = {};

function wd(a, b) {
  var c = a[0];
  a = a[1];
  var d = "on" + (a[0].toUpperCase() + a.slice(1));
  b = {
    phasedRegistrationNames: {
      bubbled: d,
      captured: d + "Capture"
    },
    dependencies: [c],
    isInteractive: b
  };
  ud[a] = b;
  vd[c] = b;
}

[["blur", "blur"], ["cancel", "cancel"], ["click", "click"], ["close", "close"], ["contextmenu", "contextMenu"], ["copy", "copy"], ["cut", "cut"], ["auxclick", "auxClick"], ["dblclick", "doubleClick"], ["dragend", "dragEnd"], ["dragstart", "dragStart"], ["drop", "drop"], ["focus", "focus"], ["input", "input"], ["invalid", "invalid"], ["keydown", "keyDown"], ["keypress", "keyPress"], ["keyup", "keyUp"], ["mousedown", "mouseDown"], ["mouseup", "mouseUp"], ["paste", "paste"], ["pause", "pause"], ["play", "play"], ["pointercancel", "pointerCancel"], ["pointerdown", "pointerDown"], ["pointerup", "pointerUp"], ["ratechange", "rateChange"], ["reset", "reset"], ["seeked", "seeked"], ["submit", "submit"], ["touchcancel", "touchCancel"], ["touchend", "touchEnd"], ["touchstart", "touchStart"], ["volumechange", "volumeChange"]].forEach(function (a) {
  wd(a, !0);
});
td.forEach(function (a) {
  wd(a, !1);
});
var xd = {
  eventTypes: ud,
  isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {
    a = vd[a];
    return void 0 !== a && !0 === a.isInteractive;
  },
  extractEvents: function extractEvents(a, b, c, d) {
    var e = vd[a];
    if (!e) return null;

    switch (a) {
      case "keypress":
        if (0 === ld(c)) return null;

      case "keydown":
      case "keyup":
        a = od;
        break;

      case "blur":
      case "focus":
        a = kd;
        break;

      case "click":
        if (2 === c.button) return null;

      case "auxclick":
      case "dblclick":
      case "mousedown":
      case "mousemove":
      case "mouseup":
      case "mouseout":
      case "mouseover":
      case "contextmenu":
        a = Yc;
        break;

      case "drag":
      case "dragend":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "dragstart":
      case "drop":
        a = pd;
        break;

      case "touchcancel":
      case "touchend":
      case "touchmove":
      case "touchstart":
        a = qd;
        break;

      case Xa:
      case Ya:
      case Za:
        a = id;
        break;

      case $a:
        a = rd;
        break;

      case "scroll":
        a = Qc;
        break;

      case "wheel":
        a = sd;
        break;

      case "copy":
      case "cut":
      case "paste":
        a = jd;
        break;

      case "gotpointercapture":
      case "lostpointercapture":
      case "pointercancel":
      case "pointerdown":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "pointerup":
        a = Zc;
        break;

      default:
        a = y;
    }

    b = a.getPooled(e, b, c, d);
    Qa(b);
    return b;
  }
},
    yd = xd.isInteractiveTopLevelEventType,
    zd = [];

function Ad(a) {
  var b = a.targetInst,
      c = b;

  do {
    if (!c) {
      a.ancestors.push(c);
      break;
    }

    var d;

    for (d = c; d.return;) {
      d = d.return;
    }

    d = 3 !== d.tag ? null : d.stateNode.containerInfo;
    if (!d) break;
    a.ancestors.push(c);
    c = Ha(d);
  } while (c);

  for (c = 0; c < a.ancestors.length; c++) {
    b = a.ancestors[c];
    var e = Nb(a.nativeEvent);
    d = a.topLevelType;

    for (var f = a.nativeEvent, g = null, h = 0; h < oa.length; h++) {
      var l = oa[h];
      l && (l = l.extractEvents(d, b, f, e)) && (g = xa(g, l));
    }

    Da(g);
  }
}

var Bd = !0;

function E(a, b) {
  if (!b) return null;
  var c = (yd(a) ? Cd : Dd).bind(null, a);
  b.addEventListener(a, c, !1);
}

function Ed(a, b) {
  if (!b) return null;
  var c = (yd(a) ? Cd : Dd).bind(null, a);
  b.addEventListener(a, c, !0);
}

function Cd(a, b) {
  Hb(Dd, a, b);
}

function Dd(a, b) {
  if (Bd) {
    var c = Nb(b);
    c = Ha(c);
    null === c || "number" !== typeof c.tag || 2 === ed(c) || (c = null);

    if (zd.length) {
      var d = zd.pop();
      d.topLevelType = a;
      d.nativeEvent = b;
      d.targetInst = c;
      a = d;
    } else a = {
      topLevelType: a,
      nativeEvent: b,
      targetInst: c,
      ancestors: []
    };

    try {
      Kb(Ad, a);
    } finally {
      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > zd.length && zd.push(a);
    }
  }
}

var Fd = {},
    Gd = 0,
    Hd = "_reactListenersID" + ("" + Math.random()).slice(2);

function Id(a) {
  Object.prototype.hasOwnProperty.call(a, Hd) || (a[Hd] = Gd++, Fd[a[Hd]] = {});
  return Fd[a[Hd]];
}

function Jd(a) {
  a = a || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a) return null;

  try {
    return a.activeElement || a.body;
  } catch (b) {
    return a.body;
  }
}

function Kd(a) {
  for (; a && a.firstChild;) {
    a = a.firstChild;
  }

  return a;
}

function Ld(a, b) {
  var c = Kd(a);
  a = 0;

  for (var d; c;) {
    if (3 === c.nodeType) {
      d = a + c.textContent.length;
      if (a <= b && d >= b) return {
        node: c,
        offset: b - a
      };
      a = d;
    }

    a: {
      for (; c;) {
        if (c.nextSibling) {
          c = c.nextSibling;
          break a;
        }

        c = c.parentNode;
      }

      c = void 0;
    }

    c = Kd(c);
  }
}

function Md(a, b) {
  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Md(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;
}

function Nd() {
  for (var a = window, b = Jd(); b instanceof a.HTMLIFrameElement;) {
    try {
      var c = "string" === typeof b.contentWindow.location.href;
    } catch (d) {
      c = !1;
    }

    if (c) a = b.contentWindow;else break;
    b = Jd(a.document);
  }

  return b;
}

function Od(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
}

function Pd() {
  var a = Nd();

  if (Od(a)) {
    if ("selectionStart" in a) var b = {
      start: a.selectionStart,
      end: a.selectionEnd
    };else a: {
      b = (b = a.ownerDocument) && b.defaultView || window;
      var c = b.getSelection && b.getSelection();

      if (c && 0 !== c.rangeCount) {
        b = c.anchorNode;
        var d = c.anchorOffset,
            e = c.focusNode;
        c = c.focusOffset;

        try {
          b.nodeType, e.nodeType;
        } catch (A) {
          b = null;
          break a;
        }

        var f = 0,
            g = -1,
            h = -1,
            l = 0,
            k = 0,
            m = a,
            p = null;

        b: for (;;) {
          for (var t;;) {
            m !== b || 0 !== d && 3 !== m.nodeType || (g = f + d);
            m !== e || 0 !== c && 3 !== m.nodeType || (h = f + c);
            3 === m.nodeType && (f += m.nodeValue.length);
            if (null === (t = m.firstChild)) break;
            p = m;
            m = t;
          }

          for (;;) {
            if (m === a) break b;
            p === b && ++l === d && (g = f);
            p === e && ++k === c && (h = f);
            if (null !== (t = m.nextSibling)) break;
            m = p;
            p = m.parentNode;
          }

          m = t;
        }

        b = -1 === g || -1 === h ? null : {
          start: g,
          end: h
        };
      } else b = null;
    }
    b = b || {
      start: 0,
      end: 0
    };
  } else b = null;

  return {
    focusedElem: a,
    selectionRange: b
  };
}

function Qd(a) {
  var b = Nd(),
      c = a.focusedElem,
      d = a.selectionRange;

  if (b !== c && c && c.ownerDocument && Md(c.ownerDocument.documentElement, c)) {
    if (null !== d && Od(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), "selectionStart" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {
      a = a.getSelection();
      var e = c.textContent.length,
          f = Math.min(d.start, e);
      d = void 0 === d.end ? f : Math.min(d.end, e);
      !a.extend && f > d && (e = d, d = f, f = e);
      e = Ld(c, f);
      var g = Ld(c, d);
      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));
    }
    b = [];

    for (a = c; a = a.parentNode;) {
      1 === a.nodeType && b.push({
        element: a,
        left: a.scrollLeft,
        top: a.scrollTop
      });
    }

    "function" === typeof c.focus && c.focus();

    for (c = 0; c < b.length; c++) {
      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
    }
  }
}

var Rd = Ra && "documentMode" in document && 11 >= document.documentMode,
    Sd = {
  select: {
    phasedRegistrationNames: {
      bubbled: "onSelect",
      captured: "onSelectCapture"
    },
    dependencies: "blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")
  }
},
    Td = null,
    Ud = null,
    Vd = null,
    Wd = !1;

function Xd(a, b) {
  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;
  if (Wd || null == Td || Td !== Jd(c)) return null;
  c = Td;
  "selectionStart" in c && Od(c) ? c = {
    start: c.selectionStart,
    end: c.selectionEnd
  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {
    anchorNode: c.anchorNode,
    anchorOffset: c.anchorOffset,
    focusNode: c.focusNode,
    focusOffset: c.focusOffset
  });
  return Vd && dd(Vd, c) ? null : (Vd = c, a = y.getPooled(Sd.select, Ud, a, b), a.type = "select", a.target = Td, Qa(a), a);
}

var Yd = {
  eventTypes: Sd,
  extractEvents: function extractEvents(a, b, c, d) {
    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,
        f;

    if (!(f = !e)) {
      a: {
        e = Id(e);
        f = sa.onSelect;

        for (var g = 0; g < f.length; g++) {
          var h = f[g];

          if (!e.hasOwnProperty(h) || !e[h]) {
            e = !1;
            break a;
          }
        }

        e = !0;
      }

      f = !e;
    }

    if (f) return null;
    e = b ? Ja(b) : window;

    switch (a) {
      case "focus":
        if (Mb(e) || "true" === e.contentEditable) Td = e, Ud = b, Vd = null;
        break;

      case "blur":
        Vd = Ud = Td = null;
        break;

      case "mousedown":
        Wd = !0;
        break;

      case "contextmenu":
      case "mouseup":
      case "dragend":
        return Wd = !1, Xd(c, d);

      case "selectionchange":
        if (Rd) break;

      case "keydown":
      case "keyup":
        return Xd(c, d);
    }

    return null;
  }
};
Ba.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));
ta = Ka;
ua = Ia;
va = Ja;
Ba.injectEventPluginsByName({
  SimpleEventPlugin: xd,
  EnterLeaveEventPlugin: ad,
  ChangeEventPlugin: Pc,
  SelectEventPlugin: Yd,
  BeforeInputEventPlugin: zb
});

function Zd(a) {
  var b = "";
  aa.Children.forEach(a, function (a) {
    null != a && (b += a);
  });
  return b;
}

function $d(a, b) {
  a = n({
    children: void 0
  }, b);
  if (b = Zd(b.children)) a.children = b;
  return a;
}

function ae(a, b, c, d) {
  a = a.options;

  if (b) {
    b = {};

    for (var e = 0; e < c.length; e++) {
      b["$" + c[e]] = !0;
    }

    for (c = 0; c < a.length; c++) {
      e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);
    }
  } else {
    c = "" + uc(c);
    b = null;

    for (e = 0; e < a.length; e++) {
      if (a[e].value === c) {
        a[e].selected = !0;
        d && (a[e].defaultSelected = !0);
        return;
      }

      null !== b || a[e].disabled || (b = a[e]);
    }

    null !== b && (b.selected = !0);
  }
}

function be(a, b) {
  null != b.dangerouslySetInnerHTML ? x("91") : void 0;
  return n({}, b, {
    value: void 0,
    defaultValue: void 0,
    children: "" + a._wrapperState.initialValue
  });
}

function ce(a, b) {
  var c = b.value;
  null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? x("92") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : x("93"), b = b[0]), c = b), null == c && (c = ""));
  a._wrapperState = {
    initialValue: uc(c)
  };
}

function de(a, b) {
  var c = uc(b.value),
      d = uc(b.defaultValue);
  null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
  null != d && (a.defaultValue = "" + d);
}

function ee(a) {
  var b = a.textContent;
  b === a._wrapperState.initialValue && (a.value = b);
}

var fe = {
  html: "http://www.w3.org/1999/xhtml",
  mathml: "http://www.w3.org/1998/Math/MathML",
  svg: "http://www.w3.org/2000/svg"
};

function ge(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";

    case "math":
      return "http://www.w3.org/1998/Math/MathML";

    default:
      return "http://www.w3.org/1999/xhtml";
  }
}

function he(a, b) {
  return null == a || "http://www.w3.org/1999/xhtml" === a ? ge(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
}

var ie = void 0,
    je = function (a) {
  return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {
    MSApp.execUnsafeLocalFunction(function () {
      return a(b, c, d, e);
    });
  } : a;
}(function (a, b) {
  if (a.namespaceURI !== fe.svg || "innerHTML" in a) a.innerHTML = b;else {
    ie = ie || document.createElement("div");
    ie.innerHTML = "<svg>" + b + "</svg>";

    for (b = ie.firstChild; a.firstChild;) {
      a.removeChild(a.firstChild);
    }

    for (; b.firstChild;) {
      a.appendChild(b.firstChild);
    }
  }
});

function ke(a, b) {
  if (b) {
    var c = a.firstChild;

    if (c && c === a.lastChild && 3 === c.nodeType) {
      c.nodeValue = b;
      return;
    }
  }

  a.textContent = b;
}

var le = {
  animationIterationCount: !0,
  borderImageOutset: !0,
  borderImageSlice: !0,
  borderImageWidth: !0,
  boxFlex: !0,
  boxFlexGroup: !0,
  boxOrdinalGroup: !0,
  columnCount: !0,
  columns: !0,
  flex: !0,
  flexGrow: !0,
  flexPositive: !0,
  flexShrink: !0,
  flexNegative: !0,
  flexOrder: !0,
  gridArea: !0,
  gridRow: !0,
  gridRowEnd: !0,
  gridRowSpan: !0,
  gridRowStart: !0,
  gridColumn: !0,
  gridColumnEnd: !0,
  gridColumnSpan: !0,
  gridColumnStart: !0,
  fontWeight: !0,
  lineClamp: !0,
  lineHeight: !0,
  opacity: !0,
  order: !0,
  orphans: !0,
  tabSize: !0,
  widows: !0,
  zIndex: !0,
  zoom: !0,
  fillOpacity: !0,
  floodOpacity: !0,
  stopOpacity: !0,
  strokeDasharray: !0,
  strokeDashoffset: !0,
  strokeMiterlimit: !0,
  strokeOpacity: !0,
  strokeWidth: !0
},
    me = ["Webkit", "ms", "Moz", "O"];
Object.keys(le).forEach(function (a) {
  me.forEach(function (b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    le[b] = le[a];
  });
});

function ne(a, b, c) {
  return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || le.hasOwnProperty(a) && le[a] ? ("" + b).trim() : b + "px";
}

function oe(a, b) {
  a = a.style;

  for (var c in b) {
    if (b.hasOwnProperty(c)) {
      var d = 0 === c.indexOf("--"),
          e = ne(c, b[c], d);
      "float" === c && (c = "cssFloat");
      d ? a.setProperty(c, e) : a[c] = e;
    }
  }
}

var pe = n({
  menuitem: !0
}, {
  area: !0,
  base: !0,
  br: !0,
  col: !0,
  embed: !0,
  hr: !0,
  img: !0,
  input: !0,
  keygen: !0,
  link: !0,
  meta: !0,
  param: !0,
  source: !0,
  track: !0,
  wbr: !0
});

function qe(a, b) {
  b && (pe[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? x("137", a, "") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? x("60") : void 0, "object" === typeof b.dangerouslySetInnerHTML && "__html" in b.dangerouslySetInnerHTML ? void 0 : x("61")), null != b.style && "object" !== typeof b.style ? x("62", "") : void 0);
}

function re(a, b) {
  if (-1 === a.indexOf("-")) return "string" === typeof b.is;

  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;

    default:
      return !0;
  }
}

function se(a, b) {
  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;
  var c = Id(a);
  b = sa[b];

  for (var d = 0; d < b.length; d++) {
    var e = b[d];

    if (!c.hasOwnProperty(e) || !c[e]) {
      switch (e) {
        case "scroll":
          Ed("scroll", a);
          break;

        case "focus":
        case "blur":
          Ed("focus", a);
          Ed("blur", a);
          c.blur = !0;
          c.focus = !0;
          break;

        case "cancel":
        case "close":
          Ob(e) && Ed(e, a);
          break;

        case "invalid":
        case "submit":
        case "reset":
          break;

        default:
          -1 === ab.indexOf(e) && E(e, a);
      }

      c[e] = !0;
    }
  }
}

function te() {}

var ue = null,
    ve = null;

function we(a, b) {
  switch (a) {
    case "button":
    case "input":
    case "select":
    case "textarea":
      return !!b.autoFocus;
  }

  return !1;
}

function xe(a, b) {
  return "textarea" === a || "option" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}

var ye = "function" === typeof setTimeout ? setTimeout : void 0,
    ze = "function" === typeof clearTimeout ? clearTimeout : void 0,
    Ae = r.unstable_scheduleCallback,
    Be = r.unstable_cancelCallback;

function Ce(a, b, c, d, e) {
  a[Ga] = e;
  "input" === c && "radio" === e.type && null != e.name && xc(a, e);
  re(c, d);
  d = re(c, e);

  for (var f = 0; f < b.length; f += 2) {
    var g = b[f],
        h = b[f + 1];
    "style" === g ? oe(a, h) : "dangerouslySetInnerHTML" === g ? je(a, h) : "children" === g ? ke(a, h) : tc(a, g, h, d);
  }

  switch (c) {
    case "input":
      yc(a, e);
      break;

    case "textarea":
      de(a, e);
      break;

    case "select":
      b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ae(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? ae(a, !!e.multiple, e.defaultValue, !0) : ae(a, !!e.multiple, e.multiple ? [] : "", !1));
  }
}

function De(a) {
  for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {
    a = a.nextSibling;
  }

  return a;
}

function Ee(a) {
  for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {
    a = a.nextSibling;
  }

  return a;
}

new Set();
var Fe = [],
    Ge = -1;

function F(a) {
  0 > Ge || (a.current = Fe[Ge], Fe[Ge] = null, Ge--);
}

function G(a, b) {
  Ge++;
  Fe[Ge] = a.current;
  a.current = b;
}

var He = {},
    H = {
  current: He
},
    I = {
  current: !1
},
    Ie = He;

function Je(a, b) {
  var c = a.type.contextTypes;
  if (!c) return He;
  var d = a.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
  var e = {},
      f;

  for (f in c) {
    e[f] = b[f];
  }

  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
  return e;
}

function J(a) {
  a = a.childContextTypes;
  return null !== a && void 0 !== a;
}

function Ke(a) {
  F(I, a);
  F(H, a);
}

function Le(a) {
  F(I, a);
  F(H, a);
}

function Me(a, b, c) {
  H.current !== He ? x("168") : void 0;
  G(H, b, a);
  G(I, c, a);
}

function Ne(a, b, c) {
  var d = a.stateNode;
  a = b.childContextTypes;
  if ("function" !== typeof d.getChildContext) return c;
  d = d.getChildContext();

  for (var e in d) {
    e in a ? void 0 : x("108", ic(b) || "Unknown", e);
  }

  return n({}, c, d);
}

function Oe(a) {
  var b = a.stateNode;
  b = b && b.__reactInternalMemoizedMergedChildContext || He;
  Ie = H.current;
  G(H, b, a);
  G(I, I.current, a);
  return !0;
}

function Pe(a, b, c) {
  var d = a.stateNode;
  d ? void 0 : x("169");
  c ? (b = Ne(a, b, Ie), d.__reactInternalMemoizedMergedChildContext = b, F(I, a), F(H, a), G(H, b, a)) : F(I, a);
  G(I, c, a);
}

var Qe = null,
    Re = null;

function Se(a) {
  return function (b) {
    try {
      return a(b);
    } catch (c) {}
  };
}

function Te(a) {
  if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (b.isDisabled || !b.supportsFiber) return !0;

  try {
    var c = b.inject(a);
    Qe = Se(function (a) {
      return b.onCommitFiberRoot(c, a);
    });
    Re = Se(function (a) {
      return b.onCommitFiberUnmount(c, a);
    });
  } catch (d) {}

  return !0;
}

function Ue(a, b, c, d) {
  this.tag = a;
  this.key = c;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b;
  this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d;
  this.effectTag = 0;
  this.lastEffect = this.firstEffect = this.nextEffect = null;
  this.childExpirationTime = this.expirationTime = 0;
  this.alternate = null;
}

function K(a, b, c, d) {
  return new Ue(a, b, c, d);
}

function Ve(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}

function We(a) {
  if ("function" === typeof a) return Ve(a) ? 1 : 0;

  if (void 0 !== a && null !== a) {
    a = a.$$typeof;
    if (a === cc) return 11;
    if (a === ec) return 14;
  }

  return 2;
}

function Xe(a, b) {
  var c = a.alternate;
  null === c ? (c = K(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);
  c.childExpirationTime = a.childExpirationTime;
  c.expirationTime = a.expirationTime;
  c.child = a.child;
  c.memoizedProps = a.memoizedProps;
  c.memoizedState = a.memoizedState;
  c.updateQueue = a.updateQueue;
  c.contextDependencies = a.contextDependencies;
  c.sibling = a.sibling;
  c.index = a.index;
  c.ref = a.ref;
  return c;
}

function Ye(a, b, c, d, e, f) {
  var g = 2;
  d = a;
  if ("function" === typeof a) Ve(a) && (g = 1);else if ("string" === typeof a) g = 5;else a: switch (a) {
    case Xb:
      return Ze(c.children, e, f, b);

    case bc:
      return $e(c, e | 3, f, b);

    case Yb:
      return $e(c, e | 2, f, b);

    case Zb:
      return a = K(12, c, b, e | 4), a.elementType = Zb, a.type = Zb, a.expirationTime = f, a;

    case dc:
      return a = K(13, c, b, e), a.elementType = dc, a.type = dc, a.expirationTime = f, a;

    default:
      if ("object" === typeof a && null !== a) switch (a.$$typeof) {
        case $b:
          g = 10;
          break a;

        case ac:
          g = 9;
          break a;

        case cc:
          g = 11;
          break a;

        case ec:
          g = 14;
          break a;

        case fc:
          g = 16;
          d = null;
          break a;
      }
      x("130", null == a ? a : typeof a, "");
  }
  b = K(g, c, b, e);
  b.elementType = a;
  b.type = d;
  b.expirationTime = f;
  return b;
}

function Ze(a, b, c, d) {
  a = K(7, a, d, b);
  a.expirationTime = c;
  return a;
}

function $e(a, b, c, d) {
  a = K(8, a, d, b);
  b = 0 === (b & 1) ? Yb : bc;
  a.elementType = b;
  a.type = b;
  a.expirationTime = c;
  return a;
}

function af(a, b, c) {
  a = K(6, a, null, b);
  a.expirationTime = c;
  return a;
}

function bf(a, b, c) {
  b = K(4, null !== a.children ? a.children : [], a.key, b);
  b.expirationTime = c;
  b.stateNode = {
    containerInfo: a.containerInfo,
    pendingChildren: null,
    implementation: a.implementation
  };
  return b;
}

function cf(a, b) {
  a.didError = !1;
  var c = a.earliestPendingTime;
  0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);
  df(b, a);
}

function ef(a, b) {
  a.didError = !1;
  if (0 === b) a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0;else {
    b < a.latestPingedTime && (a.latestPingedTime = 0);
    var c = a.latestPendingTime;
    0 !== c && (c > b ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > b && (a.earliestPendingTime = a.latestPendingTime));
    c = a.earliestSuspendedTime;
    0 === c ? cf(a, b) : b < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, cf(a, b)) : b > c && cf(a, b);
  }
  df(0, a);
}

function ff(a, b) {
  a.didError = !1;
  a.latestPingedTime >= b && (a.latestPingedTime = 0);
  var c = a.earliestPendingTime,
      d = a.latestPendingTime;
  c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);
  c = a.earliestSuspendedTime;
  d = a.latestSuspendedTime;
  0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);
  df(b, a);
}

function gf(a, b) {
  var c = a.earliestPendingTime;
  a = a.earliestSuspendedTime;
  c > b && (b = c);
  a > b && (b = a);
  return b;
}

function df(a, b) {
  var c = b.earliestSuspendedTime,
      d = b.latestSuspendedTime,
      e = b.earliestPendingTime,
      f = b.latestPingedTime;
  e = 0 !== e ? e : f;
  0 === e && (0 === a || d < a) && (e = d);
  a = e;
  0 !== a && c > a && (a = c);
  b.nextExpirationTimeToWorkOn = e;
  b.expirationTime = a;
}

function L(a, b) {
  if (a && a.defaultProps) {
    b = n({}, b);
    a = a.defaultProps;

    for (var c in a) {
      void 0 === b[c] && (b[c] = a[c]);
    }
  }

  return b;
}

function hf(a) {
  var b = a._result;

  switch (a._status) {
    case 1:
      return b;

    case 2:
      throw b;

    case 0:
      throw b;

    default:
      a._status = 0;
      b = a._ctor;
      b = b();
      b.then(function (b) {
        0 === a._status && (b = b.default, a._status = 1, a._result = b);
      }, function (b) {
        0 === a._status && (a._status = 2, a._result = b);
      });

      switch (a._status) {
        case 1:
          return a._result;

        case 2:
          throw a._result;
      }

      a._result = b;
      throw b;
  }
}

var jf = new aa.Component().refs;

function kf(a, b, c, d) {
  b = a.memoizedState;
  c = c(d, b);
  c = null === c || void 0 === c ? b : n({}, b, c);
  a.memoizedState = c;
  d = a.updateQueue;
  null !== d && 0 === a.expirationTime && (d.baseState = c);
}

var tf = {
  isMounted: function isMounted(a) {
    return (a = a._reactInternalFiber) ? 2 === ed(a) : !1;
  },
  enqueueSetState: function enqueueSetState(a, b, c) {
    a = a._reactInternalFiber;
    var d = lf();
    d = mf(d, a);
    var e = nf(d);
    e.payload = b;
    void 0 !== c && null !== c && (e.callback = c);
    of();
    pf(a, e);
    qf(a, d);
  },
  enqueueReplaceState: function enqueueReplaceState(a, b, c) {
    a = a._reactInternalFiber;
    var d = lf();
    d = mf(d, a);
    var e = nf(d);
    e.tag = rf;
    e.payload = b;
    void 0 !== c && null !== c && (e.callback = c);
    of();
    pf(a, e);
    qf(a, d);
  },
  enqueueForceUpdate: function enqueueForceUpdate(a, b) {
    a = a._reactInternalFiber;
    var c = lf();
    c = mf(c, a);
    var d = nf(c);
    d.tag = sf;
    void 0 !== b && null !== b && (d.callback = b);
    of();
    pf(a, d);
    qf(a, c);
  }
};

function uf(a, b, c, d, e, f, g) {
  a = a.stateNode;
  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !dd(c, d) || !dd(e, f) : !0;
}

function vf(a, b, c) {
  var d = !1,
      e = He;
  var f = b.contextType;
  "object" === typeof f && null !== f ? f = M(f) : (e = J(b) ? Ie : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Je(a, e) : He);
  b = new b(c, f);
  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
  b.updater = tf;
  a.stateNode = b;
  b._reactInternalFiber = a;
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);
  return b;
}

function wf(a, b, c, d) {
  a = b.state;
  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
  b.state !== a && tf.enqueueReplaceState(b, b.state, null);
}

function xf(a, b, c, d) {
  var e = a.stateNode;
  e.props = c;
  e.state = a.memoizedState;
  e.refs = jf;
  var f = b.contextType;
  "object" === typeof f && null !== f ? e.context = M(f) : (f = J(b) ? Ie : H.current, e.context = Je(a, f));
  f = a.updateQueue;
  null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState);
  f = b.getDerivedStateFromProps;
  "function" === typeof f && (kf(a, b, f, c), e.state = a.memoizedState);
  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && tf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState));
  "function" === typeof e.componentDidMount && (a.effectTag |= 4);
}

var zf = Array.isArray;

function Af(a, b, c) {
  a = c.ref;

  if (null !== a && "function" !== typeof a && "object" !== typeof a) {
    if (c._owner) {
      c = c._owner;
      var d = void 0;
      c && (1 !== c.tag ? x("309") : void 0, d = c.stateNode);
      d ? void 0 : x("147", a);
      var e = "" + a;
      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === e) return b.ref;

      b = function b(a) {
        var b = d.refs;
        b === jf && (b = d.refs = {});
        null === a ? delete b[e] : b[e] = a;
      };

      b._stringRef = e;
      return b;
    }

    "string" !== typeof a ? x("284") : void 0;
    c._owner ? void 0 : x("290", a);
  }

  return a;
}

function Bf(a, b) {
  "textarea" !== a.type && x("31", "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b, "");
}

function Cf(a) {
  function b(b, c) {
    if (a) {
      var d = b.lastEffect;
      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;
      c.nextEffect = null;
      c.effectTag = 8;
    }
  }

  function c(c, d) {
    if (!a) return null;

    for (; null !== d;) {
      b(c, d), d = d.sibling;
    }

    return null;
  }

  function d(a, b) {
    for (a = new Map(); null !== b;) {
      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;
    }

    return a;
  }

  function e(a, b, c) {
    a = Xe(a, b, c);
    a.index = 0;
    a.sibling = null;
    return a;
  }

  function f(b, c, d) {
    b.index = d;
    if (!a) return c;
    d = b.alternate;
    if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;
    b.effectTag = 2;
    return c;
  }

  function g(b) {
    a && null === b.alternate && (b.effectTag = 2);
    return b;
  }

  function h(a, b, c, d) {
    if (null === b || 6 !== b.tag) return b = af(c, a.mode, d), b.return = a, b;
    b = e(b, c, d);
    b.return = a;
    return b;
  }

  function l(a, b, c, d) {
    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = Af(a, b, c), d.return = a, d;
    d = Ye(c.type, c.key, c.props, null, a.mode, d);
    d.ref = Af(a, b, c);
    d.return = a;
    return d;
  }

  function k(a, b, c, d) {
    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = bf(c, a.mode, d), b.return = a, b;
    b = e(b, c.children || [], d);
    b.return = a;
    return b;
  }

  function m(a, b, c, d, f) {
    if (null === b || 7 !== b.tag) return b = Ze(c, a.mode, d, f), b.return = a, b;
    b = e(b, c, d);
    b.return = a;
    return b;
  }

  function p(a, b, c) {
    if ("string" === typeof b || "number" === typeof b) return b = af("" + b, a.mode, c), b.return = a, b;

    if ("object" === typeof b && null !== b) {
      switch (b.$$typeof) {
        case Vb:
          return c = Ye(b.type, b.key, b.props, null, a.mode, c), c.ref = Af(a, null, b), c.return = a, c;

        case Wb:
          return b = bf(b, a.mode, c), b.return = a, b;
      }

      if (zf(b) || hc(b)) return b = Ze(b, a.mode, c, null), b.return = a, b;
      Bf(a, b);
    }

    return null;
  }

  function t(a, b, c, d) {
    var e = null !== b ? b.key : null;
    if ("string" === typeof c || "number" === typeof c) return null !== e ? null : h(a, b, "" + c, d);

    if ("object" === typeof c && null !== c) {
      switch (c.$$typeof) {
        case Vb:
          return c.key === e ? c.type === Xb ? m(a, b, c.props.children, d, e) : l(a, b, c, d) : null;

        case Wb:
          return c.key === e ? k(a, b, c, d) : null;
      }

      if (zf(c) || hc(c)) return null !== e ? null : m(a, b, c, d, null);
      Bf(a, c);
    }

    return null;
  }

  function A(a, b, c, d, e) {
    if ("string" === typeof d || "number" === typeof d) return a = a.get(c) || null, h(b, a, "" + d, e);

    if ("object" === typeof d && null !== d) {
      switch (d.$$typeof) {
        case Vb:
          return a = a.get(null === d.key ? c : d.key) || null, d.type === Xb ? m(b, a, d.props.children, e, d.key) : l(b, a, d, e);

        case Wb:
          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);
      }

      if (zf(d) || hc(d)) return a = a.get(c) || null, m(b, a, d, e, null);
      Bf(b, d);
    }

    return null;
  }

  function v(e, g, h, k) {
    for (var l = null, m = null, q = g, u = g = 0, B = null; null !== q && u < h.length; u++) {
      q.index > u ? (B = q, q = null) : B = q.sibling;
      var w = t(e, q, h[u], k);

      if (null === w) {
        null === q && (q = B);
        break;
      }

      a && q && null === w.alternate && b(e, q);
      g = f(w, g, u);
      null === m ? l = w : m.sibling = w;
      m = w;
      q = B;
    }

    if (u === h.length) return c(e, q), l;

    if (null === q) {
      for (; u < h.length; u++) {
        if (q = p(e, h[u], k)) g = f(q, g, u), null === m ? l = q : m.sibling = q, m = q;
      }

      return l;
    }

    for (q = d(e, q); u < h.length; u++) {
      if (B = A(q, e, u, h[u], k)) a && null !== B.alternate && q.delete(null === B.key ? u : B.key), g = f(B, g, u), null === m ? l = B : m.sibling = B, m = B;
    }

    a && q.forEach(function (a) {
      return b(e, a);
    });
    return l;
  }

  function R(e, g, h, k) {
    var l = hc(h);
    "function" !== typeof l ? x("150") : void 0;
    h = l.call(h);
    null == h ? x("151") : void 0;

    for (var m = l = null, q = g, u = g = 0, B = null, w = h.next(); null !== q && !w.done; u++, w = h.next()) {
      q.index > u ? (B = q, q = null) : B = q.sibling;
      var v = t(e, q, w.value, k);

      if (null === v) {
        q || (q = B);
        break;
      }

      a && q && null === v.alternate && b(e, q);
      g = f(v, g, u);
      null === m ? l = v : m.sibling = v;
      m = v;
      q = B;
    }

    if (w.done) return c(e, q), l;

    if (null === q) {
      for (; !w.done; u++, w = h.next()) {
        w = p(e, w.value, k), null !== w && (g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);
      }

      return l;
    }

    for (q = d(e, q); !w.done; u++, w = h.next()) {
      w = A(q, e, u, w.value, k), null !== w && (a && null !== w.alternate && q.delete(null === w.key ? u : w.key), g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);
    }

    a && q.forEach(function (a) {
      return b(e, a);
    });
    return l;
  }

  return function (a, d, f, h) {
    var k = "object" === typeof f && null !== f && f.type === Xb && null === f.key;
    k && (f = f.props.children);
    var l = "object" === typeof f && null !== f;
    if (l) switch (f.$$typeof) {
      case Vb:
        a: {
          l = f.key;

          for (k = d; null !== k;) {
            if (k.key === l) {
              if (7 === k.tag ? f.type === Xb : k.elementType === f.type) {
                c(a, k.sibling);
                d = e(k, f.type === Xb ? f.props.children : f.props, h);
                d.ref = Af(a, k, f);
                d.return = a;
                a = d;
                break a;
              } else {
                c(a, k);
                break;
              }
            } else b(a, k);
            k = k.sibling;
          }

          f.type === Xb ? (d = Ze(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = Ye(f.type, f.key, f.props, null, a.mode, h), h.ref = Af(a, d, f), h.return = a, a = h);
        }

        return g(a);

      case Wb:
        a: {
          for (k = f.key; null !== d;) {
            if (d.key === k) {
              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                c(a, d.sibling);
                d = e(d, f.children || [], h);
                d.return = a;
                a = d;
                break a;
              } else {
                c(a, d);
                break;
              }
            } else b(a, d);
            d = d.sibling;
          }

          d = bf(f, a.mode, h);
          d.return = a;
          a = d;
        }

        return g(a);
    }
    if ("string" === typeof f || "number" === typeof f) return f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = af(f, a.mode, h), d.return = a, a = d), g(a);
    if (zf(f)) return v(a, d, f, h);
    if (hc(f)) return R(a, d, f, h);
    l && Bf(a, f);
    if ("undefined" === typeof f && !k) switch (a.tag) {
      case 1:
      case 0:
        h = a.type, x("152", h.displayName || h.name || "Component");
    }
    return c(a, d);
  };
}

var Df = Cf(!0),
    Ef = Cf(!1),
    Ff = {},
    N = {
  current: Ff
},
    Gf = {
  current: Ff
},
    Hf = {
  current: Ff
};

function If(a) {
  a === Ff ? x("174") : void 0;
  return a;
}

function Jf(a, b) {
  G(Hf, b, a);
  G(Gf, a, a);
  G(N, Ff, a);
  var c = b.nodeType;

  switch (c) {
    case 9:
    case 11:
      b = (b = b.documentElement) ? b.namespaceURI : he(null, "");
      break;

    default:
      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = he(b, c);
  }

  F(N, a);
  G(N, b, a);
}

function Kf(a) {
  F(N, a);
  F(Gf, a);
  F(Hf, a);
}

function Lf(a) {
  If(Hf.current);
  var b = If(N.current);
  var c = he(b, a.type);
  b !== c && (G(Gf, a, a), G(N, c, a));
}

function Mf(a) {
  Gf.current === a && (F(N, a), F(Gf, a));
}

var Nf = 0,
    Of = 2,
    Pf = 4,
    Qf = 8,
    Rf = 16,
    Sf = 32,
    Tf = 64,
    Uf = 128,
    Vf = Tb.ReactCurrentDispatcher,
    Wf = 0,
    Xf = null,
    O = null,
    P = null,
    Yf = null,
    Q = null,
    Zf = null,
    $f = 0,
    ag = null,
    bg = 0,
    cg = !1,
    dg = null,
    eg = 0;

function fg() {
  x("321");
}

function gg(a, b) {
  if (null === b) return !1;

  for (var c = 0; c < b.length && c < a.length; c++) {
    if (!bd(a[c], b[c])) return !1;
  }

  return !0;
}

function hg(a, b, c, d, e, f) {
  Wf = f;
  Xf = b;
  P = null !== a ? a.memoizedState : null;
  Vf.current = null === P ? ig : jg;
  b = c(d, e);

  if (cg) {
    do {
      cg = !1, eg += 1, P = null !== a ? a.memoizedState : null, Zf = Yf, ag = Q = O = null, Vf.current = jg, b = c(d, e);
    } while (cg);

    dg = null;
    eg = 0;
  }

  Vf.current = kg;
  a = Xf;
  a.memoizedState = Yf;
  a.expirationTime = $f;
  a.updateQueue = ag;
  a.effectTag |= bg;
  a = null !== O && null !== O.next;
  Wf = 0;
  Zf = Q = Yf = P = O = Xf = null;
  $f = 0;
  ag = null;
  bg = 0;
  a ? x("300") : void 0;
  return b;
}

function lg() {
  Vf.current = kg;
  Wf = 0;
  Zf = Q = Yf = P = O = Xf = null;
  $f = 0;
  ag = null;
  bg = 0;
  cg = !1;
  dg = null;
  eg = 0;
}

function mg() {
  var a = {
    memoizedState: null,
    baseState: null,
    queue: null,
    baseUpdate: null,
    next: null
  };
  null === Q ? Yf = Q = a : Q = Q.next = a;
  return Q;
}

function ng() {
  if (null !== Zf) Q = Zf, Zf = Q.next, O = P, P = null !== O ? O.next : null;else {
    null === P ? x("310") : void 0;
    O = P;
    var a = {
      memoizedState: O.memoizedState,
      baseState: O.baseState,
      queue: O.queue,
      baseUpdate: O.baseUpdate,
      next: null
    };
    Q = null === Q ? Yf = a : Q.next = a;
    P = O.next;
  }
  return Q;
}

function og(a, b) {
  return "function" === typeof b ? b(a) : b;
}

function pg(a) {
  var b = ng(),
      c = b.queue;
  null === c ? x("311") : void 0;
  c.lastRenderedReducer = a;

  if (0 < eg) {
    var d = c.dispatch;

    if (null !== dg) {
      var e = dg.get(c);

      if (void 0 !== e) {
        dg.delete(c);
        var f = b.memoizedState;

        do {
          f = a(f, e.action), e = e.next;
        } while (null !== e);

        bd(f, b.memoizedState) || (qg = !0);
        b.memoizedState = f;
        b.baseUpdate === c.last && (b.baseState = f);
        c.lastRenderedState = f;
        return [f, d];
      }
    }

    return [b.memoizedState, d];
  }

  d = c.last;
  var g = b.baseUpdate;
  f = b.baseState;
  null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;

  if (null !== d) {
    var h = e = null,
        l = d,
        k = !1;

    do {
      var m = l.expirationTime;
      m < Wf ? (k || (k = !0, h = g, e = f), m > $f && ($f = m)) : f = l.eagerReducer === a ? l.eagerState : a(f, l.action);
      g = l;
      l = l.next;
    } while (null !== l && l !== d);

    k || (h = g, e = f);
    bd(f, b.memoizedState) || (qg = !0);
    b.memoizedState = f;
    b.baseUpdate = h;
    b.baseState = e;
    c.lastRenderedState = f;
  }

  return [b.memoizedState, c.dispatch];
}

function rg(a, b, c, d) {
  a = {
    tag: a,
    create: b,
    destroy: c,
    deps: d,
    next: null
  };
  null === ag ? (ag = {
    lastEffect: null
  }, ag.lastEffect = a.next = a) : (b = ag.lastEffect, null === b ? ag.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, ag.lastEffect = a));
  return a;
}

function sg(a, b, c, d) {
  var e = mg();
  bg |= a;
  e.memoizedState = rg(b, c, void 0, void 0 === d ? null : d);
}

function tg(a, b, c, d) {
  var e = ng();
  d = void 0 === d ? null : d;
  var f = void 0;

  if (null !== O) {
    var g = O.memoizedState;
    f = g.destroy;

    if (null !== d && gg(d, g.deps)) {
      rg(Nf, c, f, d);
      return;
    }
  }

  bg |= a;
  e.memoizedState = rg(b, c, f, d);
}

function ug(a, b) {
  if ("function" === typeof b) return a = a(), b(a), function () {
    b(null);
  };
  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {
    b.current = null;
  };
}

function vg() {}

function wg(a, b, c) {
  25 > eg ? void 0 : x("301");
  var d = a.alternate;
  if (a === Xf || null !== d && d === Xf) {
    if (cg = !0, a = {
      expirationTime: Wf,
      action: c,
      eagerReducer: null,
      eagerState: null,
      next: null
    }, null === dg && (dg = new Map()), c = dg.get(b), void 0 === c) dg.set(b, a);else {
      for (b = c; null !== b.next;) {
        b = b.next;
      }

      b.next = a;
    }
  } else {
    of();
    var e = lf();
    e = mf(e, a);
    var f = {
      expirationTime: e,
      action: c,
      eagerReducer: null,
      eagerState: null,
      next: null
    },
        g = b.last;
    if (null === g) f.next = f;else {
      var h = g.next;
      null !== h && (f.next = h);
      g.next = f;
    }
    b.last = f;
    if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.lastRenderedReducer, null !== d)) try {
      var l = b.lastRenderedState,
          k = d(l, c);
      f.eagerReducer = d;
      f.eagerState = k;
      if (bd(k, l)) return;
    } catch (m) {} finally {}
    qf(a, e);
  }
}

var kg = {
  readContext: M,
  useCallback: fg,
  useContext: fg,
  useEffect: fg,
  useImperativeHandle: fg,
  useLayoutEffect: fg,
  useMemo: fg,
  useReducer: fg,
  useRef: fg,
  useState: fg,
  useDebugValue: fg
},
    ig = {
  readContext: M,
  useCallback: function useCallback(a, b) {
    mg().memoizedState = [a, void 0 === b ? null : b];
    return a;
  },
  useContext: M,
  useEffect: function useEffect(a, b) {
    return sg(516, Uf | Tf, a, b);
  },
  useImperativeHandle: function useImperativeHandle(a, b, c) {
    c = null !== c && void 0 !== c ? c.concat([a]) : null;
    return sg(4, Pf | Sf, ug.bind(null, b, a), c);
  },
  useLayoutEffect: function useLayoutEffect(a, b) {
    return sg(4, Pf | Sf, a, b);
  },
  useMemo: function useMemo(a, b) {
    var c = mg();
    b = void 0 === b ? null : b;
    a = a();
    c.memoizedState = [a, b];
    return a;
  },
  useReducer: function useReducer(a, b, c) {
    var d = mg();
    b = void 0 !== c ? c(b) : b;
    d.memoizedState = d.baseState = b;
    a = d.queue = {
      last: null,
      dispatch: null,
      lastRenderedReducer: a,
      lastRenderedState: b
    };
    a = a.dispatch = wg.bind(null, Xf, a);
    return [d.memoizedState, a];
  },
  useRef: function useRef(a) {
    var b = mg();
    a = {
      current: a
    };
    return b.memoizedState = a;
  },
  useState: function useState(a) {
    var b = mg();
    "function" === typeof a && (a = a());
    b.memoizedState = b.baseState = a;
    a = b.queue = {
      last: null,
      dispatch: null,
      lastRenderedReducer: og,
      lastRenderedState: a
    };
    a = a.dispatch = wg.bind(null, Xf, a);
    return [b.memoizedState, a];
  },
  useDebugValue: vg
},
    jg = {
  readContext: M,
  useCallback: function useCallback(a, b) {
    var c = ng();
    b = void 0 === b ? null : b;
    var d = c.memoizedState;
    if (null !== d && null !== b && gg(b, d[1])) return d[0];
    c.memoizedState = [a, b];
    return a;
  },
  useContext: M,
  useEffect: function useEffect(a, b) {
    return tg(516, Uf | Tf, a, b);
  },
  useImperativeHandle: function useImperativeHandle(a, b, c) {
    c = null !== c && void 0 !== c ? c.concat([a]) : null;
    return tg(4, Pf | Sf, ug.bind(null, b, a), c);
  },
  useLayoutEffect: function useLayoutEffect(a, b) {
    return tg(4, Pf | Sf, a, b);
  },
  useMemo: function useMemo(a, b) {
    var c = ng();
    b = void 0 === b ? null : b;
    var d = c.memoizedState;
    if (null !== d && null !== b && gg(b, d[1])) return d[0];
    a = a();
    c.memoizedState = [a, b];
    return a;
  },
  useReducer: pg,
  useRef: function useRef() {
    return ng().memoizedState;
  },
  useState: function useState(a) {
    return pg(og, a);
  },
  useDebugValue: vg
},
    xg = null,
    yg = null,
    zg = !1;

function Ag(a, b) {
  var c = K(5, null, null, 0);
  c.elementType = "DELETED";
  c.type = "DELETED";
  c.stateNode = b;
  c.return = a;
  c.effectTag = 8;
  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;
}

function Bg(a, b) {
  switch (a.tag) {
    case 5:
      var c = a.type;
      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
      return null !== b ? (a.stateNode = b, !0) : !1;

    case 6:
      return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;

    case 13:
      return !1;

    default:
      return !1;
  }
}

function Cg(a) {
  if (zg) {
    var b = yg;

    if (b) {
      var c = b;

      if (!Bg(a, b)) {
        b = De(c);

        if (!b || !Bg(a, b)) {
          a.effectTag |= 2;
          zg = !1;
          xg = a;
          return;
        }

        Ag(xg, c);
      }

      xg = a;
      yg = Ee(b);
    } else a.effectTag |= 2, zg = !1, xg = a;
  }
}

function Dg(a) {
  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 18 !== a.tag;) {
    a = a.return;
  }

  xg = a;
}

function Eg(a) {
  if (a !== xg) return !1;
  if (!zg) return Dg(a), zg = !0, !1;
  var b = a.type;
  if (5 !== a.tag || "head" !== b && "body" !== b && !xe(b, a.memoizedProps)) for (b = yg; b;) {
    Ag(a, b), b = De(b);
  }
  Dg(a);
  yg = xg ? De(a.stateNode) : null;
  return !0;
}

function Fg() {
  yg = xg = null;
  zg = !1;
}

var Gg = Tb.ReactCurrentOwner,
    qg = !1;

function S(a, b, c, d) {
  b.child = null === a ? Ef(b, null, c, d) : Df(b, a.child, c, d);
}

function Hg(a, b, c, d, e) {
  c = c.render;
  var f = b.ref;
  Ig(b, e);
  d = hg(a, b, c, d, f, e);
  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);
  b.effectTag |= 1;
  S(a, b, d, e);
  return b.child;
}

function Kg(a, b, c, d, e, f) {
  if (null === a) {
    var g = c.type;
    if ("function" === typeof g && !Ve(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, Lg(a, b, g, d, e, f);
    a = Ye(c.type, null, d, null, b.mode, f);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
  }

  g = a.child;
  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : dd, c(e, d) && a.ref === b.ref)) return Jg(a, b, f);
  b.effectTag |= 1;
  a = Xe(g, d, f);
  a.ref = b.ref;
  a.return = b;
  return b.child = a;
}

function Lg(a, b, c, d, e, f) {
  return null !== a && dd(a.memoizedProps, d) && a.ref === b.ref && (qg = !1, e < f) ? Jg(a, b, f) : Mg(a, b, c, d, f);
}

function Ng(a, b) {
  var c = b.ref;
  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;
}

function Mg(a, b, c, d, e) {
  var f = J(c) ? Ie : H.current;
  f = Je(b, f);
  Ig(b, e);
  c = hg(a, b, c, d, f, e);
  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);
  b.effectTag |= 1;
  S(a, b, c, e);
  return b.child;
}

function Og(a, b, c, d, e) {
  if (J(c)) {
    var f = !0;
    Oe(b);
  } else f = !1;

  Ig(b, e);
  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), vf(b, c, d, e), xf(b, c, d, e), d = !0;else if (null === a) {
    var g = b.stateNode,
        h = b.memoizedProps;
    g.props = h;
    var l = g.context,
        k = c.contextType;
    "object" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k));
    var m = c.getDerivedStateFromProps,
        p = "function" === typeof m || "function" === typeof g.getSnapshotBeforeUpdate;
    p || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k);
    Pg = !1;
    var t = b.memoizedState;
    l = g.state = t;
    var A = b.updateQueue;
    null !== A && (yf(b, A, d, g, e), l = b.memoizedState);
    h !== d || t !== l || I.current || Pg ? ("function" === typeof m && (kf(b, c, m, d), l = b.memoizedState), (h = Pg || uf(b, c, h, d, t, l, k)) ? (p || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.effectTag |= 4)) : ("function" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = l), g.props = d, g.state = l, g.context = k, d = h) : ("function" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);
  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : L(b.type, h), l = g.context, k = c.contextType, "object" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k)), m = c.getDerivedStateFromProps, (p = "function" === typeof m || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k), Pg = !1, l = b.memoizedState, t = g.state = l, A = b.updateQueue, null !== A && (yf(b, A, d, g, e), t = b.memoizedState), h !== d || l !== t || I.current || Pg ? ("function" === typeof m && (kf(b, c, m, d), t = b.memoizedState), (m = Pg || uf(b, c, h, d, l, t, k)) ? (p || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, t, k), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, t, k)), "function" === typeof g.componentDidUpdate && (b.effectTag |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = t), g.props = d, g.state = t, g.context = k, d = m) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), d = !1);
  return Qg(a, b, c, d, f, e);
}

function Qg(a, b, c, d, e, f) {
  Ng(a, b);
  var g = 0 !== (b.effectTag & 64);
  if (!d && !g) return e && Pe(b, c, !1), Jg(a, b, f);
  d = b.stateNode;
  Gg.current = b;
  var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
  b.effectTag |= 1;
  null !== a && g ? (b.child = Df(b, a.child, null, f), b.child = Df(b, null, h, f)) : S(a, b, h, f);
  b.memoizedState = d.state;
  e && Pe(b, c, !0);
  return b.child;
}

function Rg(a) {
  var b = a.stateNode;
  b.pendingContext ? Me(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Me(a, b.context, !1);
  Jf(a, b.containerInfo);
}

function Sg(a, b, c) {
  var d = b.mode,
      e = b.pendingProps,
      f = b.memoizedState;

  if (0 === (b.effectTag & 64)) {
    f = null;
    var g = !1;
  } else f = {
    timedOutAt: null !== f ? f.timedOutAt : 0
  }, g = !0, b.effectTag &= -65;

  if (null === a) {
    if (g) {
      var h = e.fallback;
      a = Ze(null, d, 0, null);
      0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);
      d = Ze(h, d, c, null);
      a.sibling = d;
      c = a;
      c.return = d.return = b;
    } else c = d = Ef(b, null, e.children, c);
  } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = Xe(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = Xe(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = Df(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = Ze(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = Ze(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = Df(b, h, e.children, c)), b.stateNode = a.stateNode;
  b.memoizedState = f;
  b.child = c;
  return d;
}

function Jg(a, b, c) {
  null !== a && (b.contextDependencies = a.contextDependencies);
  if (b.childExpirationTime < c) return null;
  null !== a && b.child !== a.child ? x("153") : void 0;

  if (null !== b.child) {
    a = b.child;
    c = Xe(a, a.pendingProps, a.expirationTime);
    b.child = c;

    for (c.return = b; null !== a.sibling;) {
      a = a.sibling, c = c.sibling = Xe(a, a.pendingProps, a.expirationTime), c.return = b;
    }

    c.sibling = null;
  }

  return b.child;
}

function Tg(a, b, c) {
  var d = b.expirationTime;
  if (null !== a) {
    if (a.memoizedProps !== b.pendingProps || I.current) qg = !0;else {
      if (d < c) {
        qg = !1;

        switch (b.tag) {
          case 3:
            Rg(b);
            Fg();
            break;

          case 5:
            Lf(b);
            break;

          case 1:
            J(b.type) && Oe(b);
            break;

          case 4:
            Jf(b, b.stateNode.containerInfo);
            break;

          case 10:
            Ug(b, b.memoizedProps.value);
            break;

          case 13:
            if (null !== b.memoizedState) {
              d = b.child.childExpirationTime;
              if (0 !== d && d >= c) return Sg(a, b, c);
              b = Jg(a, b, c);
              return null !== b ? b.sibling : null;
            }

        }

        return Jg(a, b, c);
      }
    }
  } else qg = !1;
  b.expirationTime = 0;

  switch (b.tag) {
    case 2:
      d = b.elementType;
      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);
      a = b.pendingProps;
      var e = Je(b, H.current);
      Ig(b, c);
      e = hg(null, b, d, a, e, c);
      b.effectTag |= 1;

      if ("object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof) {
        b.tag = 1;
        lg();

        if (J(d)) {
          var f = !0;
          Oe(b);
        } else f = !1;

        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;
        var g = d.getDerivedStateFromProps;
        "function" === typeof g && kf(b, d, g, a);
        e.updater = tf;
        b.stateNode = e;
        e._reactInternalFiber = b;
        xf(b, d, a, c);
        b = Qg(null, b, d, !0, f, c);
      } else b.tag = 0, S(null, b, e, c), b = b.child;

      return b;

    case 16:
      e = b.elementType;
      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);
      f = b.pendingProps;
      a = hf(e);
      b.type = a;
      e = b.tag = We(a);
      f = L(a, f);
      g = void 0;

      switch (e) {
        case 0:
          g = Mg(null, b, a, f, c);
          break;

        case 1:
          g = Og(null, b, a, f, c);
          break;

        case 11:
          g = Hg(null, b, a, f, c);
          break;

        case 14:
          g = Kg(null, b, a, L(a.type, f), d, c);
          break;

        default:
          x("306", a, "");
      }

      return g;

    case 0:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Mg(a, b, d, e, c);

    case 1:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Og(a, b, d, e, c);

    case 3:
      Rg(b);
      d = b.updateQueue;
      null === d ? x("282") : void 0;
      e = b.memoizedState;
      e = null !== e ? e.element : null;
      yf(b, d, b.pendingProps, null, c);
      d = b.memoizedState.element;
      if (d === e) Fg(), b = Jg(a, b, c);else {
        e = b.stateNode;
        if (e = (null === a || null === a.child) && e.hydrate) yg = Ee(b.stateNode.containerInfo), xg = b, e = zg = !0;
        e ? (b.effectTag |= 2, b.child = Ef(b, null, d, c)) : (S(a, b, d, c), Fg());
        b = b.child;
      }
      return b;

    case 5:
      return Lf(b), null === a && Cg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, xe(d, e) ? g = null : null !== f && xe(d, f) && (b.effectTag |= 16), Ng(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (S(a, b, g, c), b = b.child), b;

    case 6:
      return null === a && Cg(b), null;

    case 13:
      return Sg(a, b, c);

    case 4:
      return Jf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Df(b, null, d, c) : S(a, b, d, c), b.child;

    case 11:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Hg(a, b, d, e, c);

    case 7:
      return S(a, b, b.pendingProps, c), b.child;

    case 8:
      return S(a, b, b.pendingProps.children, c), b.child;

    case 12:
      return S(a, b, b.pendingProps.children, c), b.child;

    case 10:
      a: {
        d = b.type._context;
        e = b.pendingProps;
        g = b.memoizedProps;
        f = e.value;
        Ug(b, f);

        if (null !== g) {
          var h = g.value;
          f = bd(h, f) ? 0 : ("function" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;

          if (0 === f) {
            if (g.children === e.children && !I.current) {
              b = Jg(a, b, c);
              break a;
            }
          } else for (h = b.child, null !== h && (h.return = b); null !== h;) {
            var l = h.contextDependencies;

            if (null !== l) {
              g = h.child;

              for (var k = l.first; null !== k;) {
                if (k.context === d && 0 !== (k.observedBits & f)) {
                  1 === h.tag && (k = nf(c), k.tag = sf, pf(h, k));
                  h.expirationTime < c && (h.expirationTime = c);
                  k = h.alternate;
                  null !== k && k.expirationTime < c && (k.expirationTime = c);
                  k = c;

                  for (var m = h.return; null !== m;) {
                    var p = m.alternate;
                    if (m.childExpirationTime < k) m.childExpirationTime = k, null !== p && p.childExpirationTime < k && (p.childExpirationTime = k);else if (null !== p && p.childExpirationTime < k) p.childExpirationTime = k;else break;
                    m = m.return;
                  }

                  l.expirationTime < c && (l.expirationTime = c);
                  break;
                }

                k = k.next;
              }
            } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;

            if (null !== g) g.return = h;else for (g = h; null !== g;) {
              if (g === b) {
                g = null;
                break;
              }

              h = g.sibling;

              if (null !== h) {
                h.return = g.return;
                g = h;
                break;
              }

              g = g.return;
            }
            h = g;
          }
        }

        S(a, b, e.children, c);
        b = b.child;
      }

      return b;

    case 9:
      return e = b.type, f = b.pendingProps, d = f.children, Ig(b, c), e = M(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, S(a, b, d, c), b.child;

    case 14:
      return e = b.type, f = L(e, b.pendingProps), f = L(e.type, f), Kg(a, b, e, f, d, c);

    case 15:
      return Lg(a, b, b.type, b.pendingProps, d, c);

    case 17:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, J(d) ? (a = !0, Oe(b)) : a = !1, Ig(b, c), vf(b, d, e, c), xf(b, d, e, c), Qg(null, b, d, !0, a, c);
  }

  x("156");
}

var Vg = {
  current: null
},
    Wg = null,
    Xg = null,
    Yg = null;

function Ug(a, b) {
  var c = a.type._context;
  G(Vg, c._currentValue, a);
  c._currentValue = b;
}

function Zg(a) {
  var b = Vg.current;
  F(Vg, a);
  a.type._context._currentValue = b;
}

function Ig(a, b) {
  Wg = a;
  Yg = Xg = null;
  var c = a.contextDependencies;
  null !== c && c.expirationTime >= b && (qg = !0);
  a.contextDependencies = null;
}

function M(a, b) {
  if (Yg !== a && !1 !== b && 0 !== b) {
    if ("number" !== typeof b || 1073741823 === b) Yg = a, b = 1073741823;
    b = {
      context: a,
      observedBits: b,
      next: null
    };
    null === Xg ? (null === Wg ? x("308") : void 0, Xg = b, Wg.contextDependencies = {
      first: b,
      expirationTime: 0
    }) : Xg = Xg.next = b;
  }

  return a._currentValue;
}

var $g = 0,
    rf = 1,
    sf = 2,
    ah = 3,
    Pg = !1;

function bh(a) {
  return {
    baseState: a,
    firstUpdate: null,
    lastUpdate: null,
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,
    firstEffect: null,
    lastEffect: null,
    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
}

function ch(a) {
  return {
    baseState: a.baseState,
    firstUpdate: a.firstUpdate,
    lastUpdate: a.lastUpdate,
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,
    firstEffect: null,
    lastEffect: null,
    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
}

function nf(a) {
  return {
    expirationTime: a,
    tag: $g,
    payload: null,
    callback: null,
    next: null,
    nextEffect: null
  };
}

function dh(a, b) {
  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);
}

function pf(a, b) {
  var c = a.alternate;

  if (null === c) {
    var d = a.updateQueue;
    var e = null;
    null === d && (d = a.updateQueue = bh(a.memoizedState));
  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = bh(a.memoizedState), e = c.updateQueue = bh(c.memoizedState)) : d = a.updateQueue = ch(e) : null === e && (e = c.updateQueue = ch(d));

  null === e || d === e ? dh(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (dh(d, b), dh(e, b)) : (dh(d, b), e.lastUpdate = b);
}

function eh(a, b) {
  var c = a.updateQueue;
  c = null === c ? a.updateQueue = bh(a.memoizedState) : fh(a, c);
  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);
}

function fh(a, b) {
  var c = a.alternate;
  null !== c && b === c.updateQueue && (b = a.updateQueue = ch(b));
  return b;
}

function gh(a, b, c, d, e, f) {
  switch (c.tag) {
    case rf:
      return a = c.payload, "function" === typeof a ? a.call(f, d, e) : a;

    case ah:
      a.effectTag = a.effectTag & -2049 | 64;

    case $g:
      a = c.payload;
      e = "function" === typeof a ? a.call(f, d, e) : a;
      if (null === e || void 0 === e) break;
      return n({}, d, e);

    case sf:
      Pg = !0;
  }

  return d;
}

function yf(a, b, c, d, e) {
  Pg = !1;
  b = fh(a, b);

  for (var f = b.baseState, g = null, h = 0, l = b.firstUpdate, k = f; null !== l;) {
    var m = l.expirationTime;
    m < e ? (null === g && (g = l, f = k), h < m && (h = m)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = l : (b.lastEffect.nextEffect = l, b.lastEffect = l)));
    l = l.next;
  }

  m = null;

  for (l = b.firstCapturedUpdate; null !== l;) {
    var p = l.expirationTime;
    p < e ? (null === m && (m = l, null === g && (f = k)), h < p && (h = p)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = l : (b.lastCapturedEffect.nextEffect = l, b.lastCapturedEffect = l)));
    l = l.next;
  }

  null === g && (b.lastUpdate = null);
  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;
  null === g && null === m && (f = k);
  b.baseState = f;
  b.firstUpdate = g;
  b.firstCapturedUpdate = m;
  a.expirationTime = h;
  a.memoizedState = k;
}

function hh(a, b, c) {
  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);
  ih(b.firstEffect, c);
  b.firstEffect = b.lastEffect = null;
  ih(b.firstCapturedEffect, c);
  b.firstCapturedEffect = b.lastCapturedEffect = null;
}

function ih(a, b) {
  for (; null !== a;) {
    var c = a.callback;

    if (null !== c) {
      a.callback = null;
      var d = b;
      "function" !== typeof c ? x("191", c) : void 0;
      c.call(d);
    }

    a = a.nextEffect;
  }
}

function jh(a, b) {
  return {
    value: a,
    source: b,
    stack: jc(b)
  };
}

function kh(a) {
  a.effectTag |= 4;
}

var lh = void 0,
    mh = void 0,
    nh = void 0,
    oh = void 0;

lh = function lh(a, b) {
  for (var c = b.child; null !== c;) {
    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b) break;

    for (; null === c.sibling;) {
      if (null === c.return || c.return === b) return;
      c = c.return;
    }

    c.sibling.return = c.return;
    c = c.sibling;
  }
};

mh = function mh() {};

nh = function nh(a, b, c, d, e) {
  var f = a.memoizedProps;

  if (f !== d) {
    var g = b.stateNode;
    If(N.current);
    a = null;

    switch (c) {
      case "input":
        f = vc(g, f);
        d = vc(g, d);
        a = [];
        break;

      case "option":
        f = $d(g, f);
        d = $d(g, d);
        a = [];
        break;

      case "select":
        f = n({}, f, {
          value: void 0
        });
        d = n({}, d, {
          value: void 0
        });
        a = [];
        break;

      case "textarea":
        f = be(g, f);
        d = be(g, d);
        a = [];
        break;

      default:
        "function" !== typeof f.onClick && "function" === typeof d.onClick && (g.onclick = te);
    }

    qe(c, d);
    g = c = void 0;
    var h = null;

    for (c in f) {
      if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if ("style" === c) {
        var l = f[c];

        for (g in l) {
          l.hasOwnProperty(g) && (h || (h = {}), h[g] = "");
        }
      } else "dangerouslySetInnerHTML" !== c && "children" !== c && "suppressContentEditableWarning" !== c && "suppressHydrationWarning" !== c && "autoFocus" !== c && (ra.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));
    }

    for (c in d) {
      var k = d[c];
      l = null != f ? f[c] : void 0;
      if (d.hasOwnProperty(c) && k !== l && (null != k || null != l)) if ("style" === c) {
        if (l) {
          for (g in l) {
            !l.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (h || (h = {}), h[g] = "");
          }

          for (g in k) {
            k.hasOwnProperty(g) && l[g] !== k[g] && (h || (h = {}), h[g] = k[g]);
          }
        } else h || (a || (a = []), a.push(c, h)), h = k;
      } else "dangerouslySetInnerHTML" === c ? (k = k ? k.__html : void 0, l = l ? l.__html : void 0, null != k && l !== k && (a = a || []).push(c, "" + k)) : "children" === c ? l === k || "string" !== typeof k && "number" !== typeof k || (a = a || []).push(c, "" + k) : "suppressContentEditableWarning" !== c && "suppressHydrationWarning" !== c && (ra.hasOwnProperty(c) ? (null != k && se(e, c), a || l === k || (a = [])) : (a = a || []).push(c, k));
    }

    h && (a = a || []).push("style", h);
    e = a;
    (b.updateQueue = e) && kh(b);
  }
};

oh = function oh(a, b, c, d) {
  c !== d && kh(b);
};

var ph = "function" === typeof WeakSet ? WeakSet : Set;

function qh(a, b) {
  var c = b.source,
      d = b.stack;
  null === d && null !== c && (d = jc(c));
  null !== c && ic(c.type);
  b = b.value;
  null !== a && 1 === a.tag && ic(a.type);

  try {
    console.error(b);
  } catch (e) {
    setTimeout(function () {
      throw e;
    });
  }
}

function rh(a) {
  var b = a.ref;
  if (null !== b) if ("function" === typeof b) try {
    b(null);
  } catch (c) {
    sh(a, c);
  } else b.current = null;
}

function th(a, b, c) {
  c = c.updateQueue;
  c = null !== c ? c.lastEffect : null;

  if (null !== c) {
    var d = c = c.next;

    do {
      if ((d.tag & a) !== Nf) {
        var e = d.destroy;
        d.destroy = void 0;
        void 0 !== e && e();
      }

      (d.tag & b) !== Nf && (e = d.create, d.destroy = e());
      d = d.next;
    } while (d !== c);
  }
}

function uh(a, b) {
  for (var c = a;;) {
    if (5 === c.tag) {
      var d = c.stateNode;
      if (b) d.style.display = "none";else {
        d = c.stateNode;
        var e = c.memoizedProps.style;
        e = void 0 !== e && null !== e && e.hasOwnProperty("display") ? e.display : null;
        d.style.display = ne("display", e);
      }
    } else if (6 === c.tag) c.stateNode.nodeValue = b ? "" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {
      d = c.child.sibling;
      d.return = c;
      c = d;
      continue;
    } else if (null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }

    if (c === a) break;

    for (; null === c.sibling;) {
      if (null === c.return || c.return === a) return;
      c = c.return;
    }

    c.sibling.return = c.return;
    c = c.sibling;
  }
}

function vh(a) {
  "function" === typeof Re && Re(a);

  switch (a.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      var b = a.updateQueue;

      if (null !== b && (b = b.lastEffect, null !== b)) {
        var c = b = b.next;

        do {
          var d = c.destroy;

          if (void 0 !== d) {
            var e = a;

            try {
              d();
            } catch (f) {
              sh(e, f);
            }
          }

          c = c.next;
        } while (c !== b);
      }

      break;

    case 1:
      rh(a);
      b = a.stateNode;
      if ("function" === typeof b.componentWillUnmount) try {
        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();
      } catch (f) {
        sh(a, f);
      }
      break;

    case 5:
      rh(a);
      break;

    case 4:
      wh(a);
  }
}

function xh(a) {
  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}

function yh(a) {
  a: {
    for (var b = a.return; null !== b;) {
      if (xh(b)) {
        var c = b;
        break a;
      }

      b = b.return;
    }

    x("160");
    c = void 0;
  }

  var d = b = void 0;

  switch (c.tag) {
    case 5:
      b = c.stateNode;
      d = !1;
      break;

    case 3:
      b = c.stateNode.containerInfo;
      d = !0;
      break;

    case 4:
      b = c.stateNode.containerInfo;
      d = !0;
      break;

    default:
      x("161");
  }

  c.effectTag & 16 && (ke(b, ""), c.effectTag &= -17);

  a: b: for (c = a;;) {
    for (; null === c.sibling;) {
      if (null === c.return || xh(c.return)) {
        c = null;
        break a;
      }

      c = c.return;
    }

    c.sibling.return = c.return;

    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {
      if (c.effectTag & 2) continue b;
      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;
    }

    if (!(c.effectTag & 2)) {
      c = c.stateNode;
      break a;
    }
  }

  for (var e = a;;) {
    if (5 === e.tag || 6 === e.tag) {
      if (c) {
        if (d) {
          var f = b,
              g = e.stateNode,
              h = c;
          8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);
        } else b.insertBefore(e.stateNode, c);
      } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = te)) : b.appendChild(e.stateNode);
    } else if (4 !== e.tag && null !== e.child) {
      e.child.return = e;
      e = e.child;
      continue;
    }
    if (e === a) break;

    for (; null === e.sibling;) {
      if (null === e.return || e.return === a) return;
      e = e.return;
    }

    e.sibling.return = e.return;
    e = e.sibling;
  }
}

function wh(a) {
  for (var b = a, c = !1, d = void 0, e = void 0;;) {
    if (!c) {
      c = b.return;

      a: for (;;) {
        null === c ? x("160") : void 0;

        switch (c.tag) {
          case 5:
            d = c.stateNode;
            e = !1;
            break a;

          case 3:
            d = c.stateNode.containerInfo;
            e = !0;
            break a;

          case 4:
            d = c.stateNode.containerInfo;
            e = !0;
            break a;
        }

        c = c.return;
      }

      c = !0;
    }

    if (5 === b.tag || 6 === b.tag) {
      a: for (var f = b, g = f;;) {
        if (vh(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {
          if (g === f) break;

          for (; null === g.sibling;) {
            if (null === g.return || g.return === f) break a;
            g = g.return;
          }

          g.sibling.return = g.return;
          g = g.sibling;
        }
      }

      e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);
    } else if (4 === b.tag) {
      if (null !== b.child) {
        d = b.stateNode.containerInfo;
        e = !0;
        b.child.return = b;
        b = b.child;
        continue;
      }
    } else if (vh(b), null !== b.child) {
      b.child.return = b;
      b = b.child;
      continue;
    }

    if (b === a) break;

    for (; null === b.sibling;) {
      if (null === b.return || b.return === a) return;
      b = b.return;
      4 === b.tag && (c = !1);
    }

    b.sibling.return = b.return;
    b = b.sibling;
  }
}

function zh(a, b) {
  switch (b.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      th(Pf, Qf, b);
      break;

    case 1:
      break;

    case 5:
      var c = b.stateNode;

      if (null != c) {
        var d = b.memoizedProps;
        a = null !== a ? a.memoizedProps : d;
        var e = b.type,
            f = b.updateQueue;
        b.updateQueue = null;
        null !== f && Ce(c, f, e, a, d, b);
      }

      break;

    case 6:
      null === b.stateNode ? x("162") : void 0;
      b.stateNode.nodeValue = b.memoizedProps;
      break;

    case 3:
      break;

    case 12:
      break;

    case 13:
      c = b.memoizedState;
      d = void 0;
      a = b;
      null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = lf()));
      null !== a && uh(a, d);
      c = b.updateQueue;

      if (null !== c) {
        b.updateQueue = null;
        var g = b.stateNode;
        null === g && (g = b.stateNode = new ph());
        c.forEach(function (a) {
          var c = Ah.bind(null, b, a);
          g.has(a) || (g.add(a), a.then(c, c));
        });
      }

      break;

    case 17:
      break;

    default:
      x("163");
  }
}

var Bh = "function" === typeof WeakMap ? WeakMap : Map;

function Ch(a, b, c) {
  c = nf(c);
  c.tag = ah;
  c.payload = {
    element: null
  };
  var d = b.value;

  c.callback = function () {
    Dh(d);
    qh(a, b);
  };

  return c;
}

function Eh(a, b, c) {
  c = nf(c);
  c.tag = ah;
  var d = a.type.getDerivedStateFromError;

  if ("function" === typeof d) {
    var e = b.value;

    c.payload = function () {
      return d(e);
    };
  }

  var f = a.stateNode;
  null !== f && "function" === typeof f.componentDidCatch && (c.callback = function () {
    "function" !== typeof d && (null === Fh ? Fh = new Set([this]) : Fh.add(this));
    var c = b.value,
        e = b.stack;
    qh(a, b);
    this.componentDidCatch(c, {
      componentStack: null !== e ? e : ""
    });
  });
  return c;
}

function Gh(a) {
  switch (a.tag) {
    case 1:
      J(a.type) && Ke(a);
      var b = a.effectTag;
      return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;

    case 3:
      return Kf(a), Le(a), b = a.effectTag, 0 !== (b & 64) ? x("285") : void 0, a.effectTag = b & -2049 | 64, a;

    case 5:
      return Mf(a), null;

    case 13:
      return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;

    case 18:
      return null;

    case 4:
      return Kf(a), null;

    case 10:
      return Zg(a), null;

    default:
      return null;
  }
}

var Hh = Tb.ReactCurrentDispatcher,
    Ih = Tb.ReactCurrentOwner,
    Jh = 1073741822,
    Kh = !1,
    T = null,
    Lh = null,
    U = 0,
    Mh = -1,
    Nh = !1,
    V = null,
    Oh = !1,
    Ph = null,
    Qh = null,
    Rh = null,
    Fh = null;

function Sh() {
  if (null !== T) for (var a = T.return; null !== a;) {
    var b = a;

    switch (b.tag) {
      case 1:
        var c = b.type.childContextTypes;
        null !== c && void 0 !== c && Ke(b);
        break;

      case 3:
        Kf(b);
        Le(b);
        break;

      case 5:
        Mf(b);
        break;

      case 4:
        Kf(b);
        break;

      case 10:
        Zg(b);
    }

    a = a.return;
  }
  Lh = null;
  U = 0;
  Mh = -1;
  Nh = !1;
  T = null;
}

function Th() {
  for (; null !== V;) {
    var a = V.effectTag;
    a & 16 && ke(V.stateNode, "");

    if (a & 128) {
      var b = V.alternate;
      null !== b && (b = b.ref, null !== b && ("function" === typeof b ? b(null) : b.current = null));
    }

    switch (a & 14) {
      case 2:
        yh(V);
        V.effectTag &= -3;
        break;

      case 6:
        yh(V);
        V.effectTag &= -3;
        zh(V.alternate, V);
        break;

      case 4:
        zh(V.alternate, V);
        break;

      case 8:
        a = V, wh(a), a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null, a = a.alternate, null !== a && (a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null);
    }

    V = V.nextEffect;
  }
}

function Uh() {
  for (; null !== V;) {
    if (V.effectTag & 256) a: {
      var a = V.alternate,
          b = V;

      switch (b.tag) {
        case 0:
        case 11:
        case 15:
          th(Of, Nf, b);
          break a;

        case 1:
          if (b.effectTag & 256 && null !== a) {
            var c = a.memoizedProps,
                d = a.memoizedState;
            a = b.stateNode;
            b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : L(b.type, c), d);
            a.__reactInternalSnapshotBeforeUpdate = b;
          }

          break a;

        case 3:
        case 5:
        case 6:
        case 4:
        case 17:
          break a;

        default:
          x("163");
      }
    }
    V = V.nextEffect;
  }
}

function Vh(a, b) {
  for (; null !== V;) {
    var c = V.effectTag;

    if (c & 36) {
      var d = V.alternate,
          e = V,
          f = b;

      switch (e.tag) {
        case 0:
        case 11:
        case 15:
          th(Rf, Sf, e);
          break;

        case 1:
          var g = e.stateNode;
          if (e.effectTag & 4) if (null === d) g.componentDidMount();else {
            var h = e.elementType === e.type ? d.memoizedProps : L(e.type, d.memoizedProps);
            g.componentDidUpdate(h, d.memoizedState, g.__reactInternalSnapshotBeforeUpdate);
          }
          d = e.updateQueue;
          null !== d && hh(e, d, g, f);
          break;

        case 3:
          d = e.updateQueue;

          if (null !== d) {
            g = null;
            if (null !== e.child) switch (e.child.tag) {
              case 5:
                g = e.child.stateNode;
                break;

              case 1:
                g = e.child.stateNode;
            }
            hh(e, d, g, f);
          }

          break;

        case 5:
          f = e.stateNode;
          null === d && e.effectTag & 4 && we(e.type, e.memoizedProps) && f.focus();
          break;

        case 6:
          break;

        case 4:
          break;

        case 12:
          break;

        case 13:
          break;

        case 17:
          break;

        default:
          x("163");
      }
    }

    c & 128 && (e = V.ref, null !== e && (f = V.stateNode, "function" === typeof e ? e(f) : e.current = f));
    c & 512 && (Ph = a);
    V = V.nextEffect;
  }
}

function Wh(a, b) {
  Rh = Qh = Ph = null;
  var c = W;
  W = !0;

  do {
    if (b.effectTag & 512) {
      var d = !1,
          e = void 0;

      try {
        var f = b;
        th(Uf, Nf, f);
        th(Nf, Tf, f);
      } catch (g) {
        d = !0, e = g;
      }

      d && sh(b, e);
    }

    b = b.nextEffect;
  } while (null !== b);

  W = c;
  c = a.expirationTime;
  0 !== c && Xh(a, c);
  X || W || Yh(1073741823, !1);
}

function of() {
  null !== Qh && Be(Qh);
  null !== Rh && Rh();
}

function Zh(a, b) {
  Oh = Kh = !0;
  a.current === b ? x("177") : void 0;
  var c = a.pendingCommitExpirationTime;
  0 === c ? x("261") : void 0;
  a.pendingCommitExpirationTime = 0;
  var d = b.expirationTime,
      e = b.childExpirationTime;
  ef(a, e > d ? e : d);
  Ih.current = null;
  d = void 0;
  1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;
  ue = Bd;
  ve = Pd();
  Bd = !1;

  for (V = d; null !== V;) {
    e = !1;
    var f = void 0;

    try {
      Uh();
    } catch (h) {
      e = !0, f = h;
    }

    e && (null === V ? x("178") : void 0, sh(V, f), null !== V && (V = V.nextEffect));
  }

  for (V = d; null !== V;) {
    e = !1;
    f = void 0;

    try {
      Th();
    } catch (h) {
      e = !0, f = h;
    }

    e && (null === V ? x("178") : void 0, sh(V, f), null !== V && (V = V.nextEffect));
  }

  Qd(ve);
  ve = null;
  Bd = !!ue;
  ue = null;
  a.current = b;

  for (V = d; null !== V;) {
    e = !1;
    f = void 0;

    try {
      Vh(a, c);
    } catch (h) {
      e = !0, f = h;
    }

    e && (null === V ? x("178") : void 0, sh(V, f), null !== V && (V = V.nextEffect));
  }

  if (null !== d && null !== Ph) {
    var g = Wh.bind(null, a, d);
    Qh = r.unstable_runWithPriority(r.unstable_NormalPriority, function () {
      return Ae(g);
    });
    Rh = g;
  }

  Kh = Oh = !1;
  "function" === typeof Qe && Qe(b.stateNode);
  c = b.expirationTime;
  b = b.childExpirationTime;
  b = b > c ? b : c;
  0 === b && (Fh = null);
  $h(a, b);
}

function ai(a) {
  for (;;) {
    var b = a.alternate,
        c = a.return,
        d = a.sibling;

    if (0 === (a.effectTag & 1024)) {
      T = a;

      a: {
        var e = b;
        b = a;
        var f = U;
        var g = b.pendingProps;

        switch (b.tag) {
          case 2:
            break;

          case 16:
            break;

          case 15:
          case 0:
            break;

          case 1:
            J(b.type) && Ke(b);
            break;

          case 3:
            Kf(b);
            Le(b);
            g = b.stateNode;
            g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);
            if (null === e || null === e.child) Eg(b), b.effectTag &= -3;
            mh(b);
            break;

          case 5:
            Mf(b);
            var h = If(Hf.current);
            f = b.type;
            if (null !== e && null != b.stateNode) nh(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {
              var l = If(N.current);

              if (Eg(b)) {
                g = b;
                e = g.stateNode;
                var k = g.type,
                    m = g.memoizedProps,
                    p = h;
                e[Fa] = g;
                e[Ga] = m;
                f = void 0;
                h = k;

                switch (h) {
                  case "iframe":
                  case "object":
                    E("load", e);
                    break;

                  case "video":
                  case "audio":
                    for (k = 0; k < ab.length; k++) {
                      E(ab[k], e);
                    }

                    break;

                  case "source":
                    E("error", e);
                    break;

                  case "img":
                  case "image":
                  case "link":
                    E("error", e);
                    E("load", e);
                    break;

                  case "form":
                    E("reset", e);
                    E("submit", e);
                    break;

                  case "details":
                    E("toggle", e);
                    break;

                  case "input":
                    wc(e, m);
                    E("invalid", e);
                    se(p, "onChange");
                    break;

                  case "select":
                    e._wrapperState = {
                      wasMultiple: !!m.multiple
                    };
                    E("invalid", e);
                    se(p, "onChange");
                    break;

                  case "textarea":
                    ce(e, m), E("invalid", e), se(p, "onChange");
                }

                qe(h, m);
                k = null;

                for (f in m) {
                  m.hasOwnProperty(f) && (l = m[f], "children" === f ? "string" === typeof l ? e.textContent !== l && (k = ["children", l]) : "number" === typeof l && e.textContent !== "" + l && (k = ["children", "" + l]) : ra.hasOwnProperty(f) && null != l && se(p, f));
                }

                switch (h) {
                  case "input":
                    Rb(e);
                    Ac(e, m, !0);
                    break;

                  case "textarea":
                    Rb(e);
                    ee(e, m);
                    break;

                  case "select":
                  case "option":
                    break;

                  default:
                    "function" === typeof m.onClick && (e.onclick = te);
                }

                f = k;
                g.updateQueue = f;
                g = null !== f ? !0 : !1;
                g && kh(b);
              } else {
                m = b;
                p = f;
                e = g;
                k = 9 === h.nodeType ? h : h.ownerDocument;
                l === fe.html && (l = ge(p));
                l === fe.html ? "script" === p ? (e = k.createElement("div"), e.innerHTML = "<script>\x3c/script>", k = e.removeChild(e.firstChild)) : "string" === typeof e.is ? k = k.createElement(p, {
                  is: e.is
                }) : (k = k.createElement(p), "select" === p && (p = k, e.multiple ? p.multiple = !0 : e.size && (p.size = e.size))) : k = k.createElementNS(l, p);
                e = k;
                e[Fa] = m;
                e[Ga] = g;
                lh(e, b, !1, !1);
                p = e;
                k = f;
                m = g;
                var t = h,
                    A = re(k, m);

                switch (k) {
                  case "iframe":
                  case "object":
                    E("load", p);
                    h = m;
                    break;

                  case "video":
                  case "audio":
                    for (h = 0; h < ab.length; h++) {
                      E(ab[h], p);
                    }

                    h = m;
                    break;

                  case "source":
                    E("error", p);
                    h = m;
                    break;

                  case "img":
                  case "image":
                  case "link":
                    E("error", p);
                    E("load", p);
                    h = m;
                    break;

                  case "form":
                    E("reset", p);
                    E("submit", p);
                    h = m;
                    break;

                  case "details":
                    E("toggle", p);
                    h = m;
                    break;

                  case "input":
                    wc(p, m);
                    h = vc(p, m);
                    E("invalid", p);
                    se(t, "onChange");
                    break;

                  case "option":
                    h = $d(p, m);
                    break;

                  case "select":
                    p._wrapperState = {
                      wasMultiple: !!m.multiple
                    };
                    h = n({}, m, {
                      value: void 0
                    });
                    E("invalid", p);
                    se(t, "onChange");
                    break;

                  case "textarea":
                    ce(p, m);
                    h = be(p, m);
                    E("invalid", p);
                    se(t, "onChange");
                    break;

                  default:
                    h = m;
                }

                qe(k, h);
                l = void 0;
                var v = k,
                    R = p,
                    u = h;

                for (l in u) {
                  if (u.hasOwnProperty(l)) {
                    var q = u[l];
                    "style" === l ? oe(R, q) : "dangerouslySetInnerHTML" === l ? (q = q ? q.__html : void 0, null != q && je(R, q)) : "children" === l ? "string" === typeof q ? ("textarea" !== v || "" !== q) && ke(R, q) : "number" === typeof q && ke(R, "" + q) : "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && "autoFocus" !== l && (ra.hasOwnProperty(l) ? null != q && se(t, l) : null != q && tc(R, l, q, A));
                  }
                }

                switch (k) {
                  case "input":
                    Rb(p);
                    Ac(p, m, !1);
                    break;

                  case "textarea":
                    Rb(p);
                    ee(p, m);
                    break;

                  case "option":
                    null != m.value && p.setAttribute("value", "" + uc(m.value));
                    break;

                  case "select":
                    h = p;
                    h.multiple = !!m.multiple;
                    p = m.value;
                    null != p ? ae(h, !!m.multiple, p, !1) : null != m.defaultValue && ae(h, !!m.multiple, m.defaultValue, !0);
                    break;

                  default:
                    "function" === typeof h.onClick && (p.onclick = te);
                }

                (g = we(f, g)) && kh(b);
                b.stateNode = e;
              }

              null !== b.ref && (b.effectTag |= 128);
            } else null === b.stateNode ? x("166") : void 0;
            break;

          case 6:
            e && null != b.stateNode ? oh(e, b, e.memoizedProps, g) : ("string" !== typeof g && (null === b.stateNode ? x("166") : void 0), e = If(Hf.current), If(N.current), Eg(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Fa] = g, (g = f.nodeValue !== e) && kh(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Fa] = b, f.stateNode = g));
            break;

          case 11:
            break;

          case 13:
            g = b.memoizedState;

            if (0 !== (b.effectTag & 64)) {
              b.expirationTime = f;
              T = b;
              break a;
            }

            g = null !== g;
            f = null !== e && null !== e.memoizedState;
            null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));
            if (g || f) b.effectTag |= 4;
            break;

          case 7:
            break;

          case 8:
            break;

          case 12:
            break;

          case 4:
            Kf(b);
            mh(b);
            break;

          case 10:
            Zg(b);
            break;

          case 9:
            break;

          case 14:
            break;

          case 17:
            J(b.type) && Ke(b);
            break;

          case 18:
            break;

          default:
            x("156");
        }

        T = null;
      }

      b = a;

      if (1 === U || 1 !== b.childExpirationTime) {
        g = 0;

        for (f = b.child; null !== f;) {
          e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;
        }

        b.childExpirationTime = g;
      }

      if (null !== T) return T;
      null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));
    } else {
      a = Gh(a, U);
      if (null !== a) return a.effectTag &= 1023, a;
      null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);
    }

    if (null !== d) return d;
    if (null !== c) a = c;else break;
  }

  return null;
}

function bi(a) {
  var b = Tg(a.alternate, a, U);
  a.memoizedProps = a.pendingProps;
  null === b && (b = ai(a));
  Ih.current = null;
  return b;
}

function ci(a, b) {
  Kh ? x("243") : void 0;
  of();
  Kh = !0;
  var c = Hh.current;
  Hh.current = kg;
  var d = a.nextExpirationTimeToWorkOn;
  if (d !== U || a !== Lh || null === T) Sh(), Lh = a, U = d, T = Xe(Lh.current, null, U), a.pendingCommitExpirationTime = 0;
  var e = !1;

  do {
    try {
      if (b) for (; null !== T && !di();) {
        T = bi(T);
      } else for (; null !== T;) {
        T = bi(T);
      }
    } catch (u) {
      if (Yg = Xg = Wg = null, lg(), null === T) e = !0, Dh(u);else {
        null === T ? x("271") : void 0;
        var f = T,
            g = f.return;
        if (null === g) e = !0, Dh(u);else {
          a: {
            var h = a,
                l = g,
                k = f,
                m = u;
            g = U;
            k.effectTag |= 1024;
            k.firstEffect = k.lastEffect = null;

            if (null !== m && "object" === typeof m && "function" === typeof m.then) {
              var p = m;
              m = l;
              var t = -1,
                  A = -1;

              do {
                if (13 === m.tag) {
                  var v = m.alternate;

                  if (null !== v && (v = v.memoizedState, null !== v)) {
                    A = 10 * (1073741822 - v.timedOutAt);
                    break;
                  }

                  v = m.pendingProps.maxDuration;
                  if ("number" === typeof v) if (0 >= v) t = 0;else if (-1 === t || v < t) t = v;
                }

                m = m.return;
              } while (null !== m);

              m = l;

              do {
                if (v = 13 === m.tag) v = void 0 === m.memoizedProps.fallback ? !1 : null === m.memoizedState;

                if (v) {
                  l = m.updateQueue;
                  null === l ? (l = new Set(), l.add(p), m.updateQueue = l) : l.add(p);

                  if (0 === (m.mode & 1)) {
                    m.effectTag |= 64;
                    k.effectTag &= -1957;
                    1 === k.tag && (null === k.alternate ? k.tag = 17 : (g = nf(1073741823), g.tag = sf, pf(k, g)));
                    k.expirationTime = 1073741823;
                    break a;
                  }

                  k = h;
                  l = g;
                  var R = k.pingCache;
                  null === R ? (R = k.pingCache = new Bh(), v = new Set(), R.set(p, v)) : (v = R.get(p), void 0 === v && (v = new Set(), R.set(p, v)));
                  v.has(l) || (v.add(l), k = ei.bind(null, k, p, l), p.then(k, k));
                  -1 === t ? h = 1073741823 : (-1 === A && (A = 10 * (1073741822 - gf(h, g)) - 5E3), h = A + t);
                  0 <= h && Mh < h && (Mh = h);
                  m.effectTag |= 2048;
                  m.expirationTime = g;
                  break a;
                }

                m = m.return;
              } while (null !== m);

              m = Error((ic(k.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + jc(k));
            }

            Nh = !0;
            m = jh(m, k);
            h = l;

            do {
              switch (h.tag) {
                case 3:
                  h.effectTag |= 2048;
                  h.expirationTime = g;
                  g = Ch(h, m, g);
                  eh(h, g);
                  break a;

                case 1:
                  if (t = m, A = h.type, k = h.stateNode, 0 === (h.effectTag & 64) && ("function" === typeof A.getDerivedStateFromError || null !== k && "function" === typeof k.componentDidCatch && (null === Fh || !Fh.has(k)))) {
                    h.effectTag |= 2048;
                    h.expirationTime = g;
                    g = Eh(h, t, g);
                    eh(h, g);
                    break a;
                  }

              }

              h = h.return;
            } while (null !== h);
          }

          T = ai(f);
          continue;
        }
      }
    }

    break;
  } while (1);

  Kh = !1;
  Hh.current = c;
  Yg = Xg = Wg = null;
  lg();
  if (e) Lh = null, a.finishedWork = null;else if (null !== T) a.finishedWork = null;else {
    c = a.current.alternate;
    null === c ? x("281") : void 0;
    Lh = null;

    if (Nh) {
      e = a.latestPendingTime;
      f = a.latestSuspendedTime;
      g = a.latestPingedTime;

      if (0 !== e && e < d || 0 !== f && f < d || 0 !== g && g < d) {
        ff(a, d);
        fi(a, c, d, a.expirationTime, -1);
        return;
      }

      if (!a.didError && b) {
        a.didError = !0;
        d = a.nextExpirationTimeToWorkOn = d;
        b = a.expirationTime = 1073741823;
        fi(a, c, d, b, -1);
        return;
      }
    }

    b && -1 !== Mh ? (ff(a, d), b = 10 * (1073741822 - gf(a, d)), b < Mh && (Mh = b), b = 10 * (1073741822 - lf()), b = Mh - b, fi(a, c, d, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = d, a.finishedWork = c);
  }
}

function sh(a, b) {
  for (var c = a.return; null !== c;) {
    switch (c.tag) {
      case 1:
        var d = c.stateNode;

        if ("function" === typeof c.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Fh || !Fh.has(d))) {
          a = jh(b, a);
          a = Eh(c, a, 1073741823);
          pf(c, a);
          qf(c, 1073741823);
          return;
        }

        break;

      case 3:
        a = jh(b, a);
        a = Ch(c, a, 1073741823);
        pf(c, a);
        qf(c, 1073741823);
        return;
    }

    c = c.return;
  }

  3 === a.tag && (c = jh(b, a), c = Ch(a, c, 1073741823), pf(a, c), qf(a, 1073741823));
}

function mf(a, b) {
  var c = r.unstable_getCurrentPriorityLevel(),
      d = void 0;
  if (0 === (b.mode & 1)) d = 1073741823;else if (Kh && !Oh) d = U;else {
    switch (c) {
      case r.unstable_ImmediatePriority:
        d = 1073741823;
        break;

      case r.unstable_UserBlockingPriority:
        d = 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1);
        break;

      case r.unstable_NormalPriority:
        d = 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1);
        break;

      case r.unstable_LowPriority:
      case r.unstable_IdlePriority:
        d = 1;
        break;

      default:
        x("313");
    }

    null !== Lh && d === U && --d;
  }
  c === r.unstable_UserBlockingPriority && (0 === gi || d < gi) && (gi = d);
  return d;
}

function ei(a, b, c) {
  var d = a.pingCache;
  null !== d && d.delete(b);
  if (null !== Lh && U === c) Lh = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {
    a.didError = !1;
    b = a.latestPingedTime;
    if (0 === b || b > c) a.latestPingedTime = c;
    df(c, a);
    c = a.expirationTime;
    0 !== c && Xh(a, c);
  }
}

function Ah(a, b) {
  var c = a.stateNode;
  null !== c && c.delete(b);
  b = lf();
  b = mf(b, a);
  a = hi(a, b);
  null !== a && (cf(a, b), b = a.expirationTime, 0 !== b && Xh(a, b));
}

function hi(a, b) {
  a.expirationTime < b && (a.expirationTime = b);
  var c = a.alternate;
  null !== c && c.expirationTime < b && (c.expirationTime = b);
  var d = a.return,
      e = null;
  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {
    c = d.alternate;
    d.childExpirationTime < b && (d.childExpirationTime = b);
    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);

    if (null === d.return && 3 === d.tag) {
      e = d.stateNode;
      break;
    }

    d = d.return;
  }
  return e;
}

function qf(a, b) {
  a = hi(a, b);
  null !== a && (!Kh && 0 !== U && b > U && Sh(), cf(a, b), Kh && !Oh && Lh === a || Xh(a, a.expirationTime), ii > ji && (ii = 0, x("185")));
}

function ki(a, b, c, d, e) {
  return r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {
    return a(b, c, d, e);
  });
}

var li = null,
    Y = null,
    mi = 0,
    ni = void 0,
    W = !1,
    oi = null,
    Z = 0,
    gi = 0,
    pi = !1,
    qi = null,
    X = !1,
    ri = !1,
    si = null,
    ti = r.unstable_now(),
    ui = 1073741822 - (ti / 10 | 0),
    vi = ui,
    ji = 50,
    ii = 0,
    wi = null;

function xi() {
  ui = 1073741822 - ((r.unstable_now() - ti) / 10 | 0);
}

function yi(a, b) {
  if (0 !== mi) {
    if (b < mi) return;
    null !== ni && r.unstable_cancelCallback(ni);
  }

  mi = b;
  a = r.unstable_now() - ti;
  ni = r.unstable_scheduleCallback(zi, {
    timeout: 10 * (1073741822 - b) - a
  });
}

function fi(a, b, c, d, e) {
  a.expirationTime = d;
  0 !== e || di() ? 0 < e && (a.timeoutHandle = ye(Ai.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);
}

function Ai(a, b, c) {
  a.pendingCommitExpirationTime = c;
  a.finishedWork = b;
  xi();
  vi = ui;
  Bi(a, c);
}

function $h(a, b) {
  a.expirationTime = b;
  a.finishedWork = null;
}

function lf() {
  if (W) return vi;
  Ci();
  if (0 === Z || 1 === Z) xi(), vi = ui;
  return vi;
}

function Xh(a, b) {
  null === a.nextScheduledRoot ? (a.expirationTime = b, null === Y ? (li = Y = a, a.nextScheduledRoot = a) : (Y = Y.nextScheduledRoot = a, Y.nextScheduledRoot = li)) : b > a.expirationTime && (a.expirationTime = b);
  W || (X ? ri && (oi = a, Z = 1073741823, Di(a, 1073741823, !1)) : 1073741823 === b ? Yh(1073741823, !1) : yi(a, b));
}

function Ci() {
  var a = 0,
      b = null;
  if (null !== Y) for (var c = Y, d = li; null !== d;) {
    var e = d.expirationTime;

    if (0 === e) {
      null === c || null === Y ? x("244") : void 0;

      if (d === d.nextScheduledRoot) {
        li = Y = d.nextScheduledRoot = null;
        break;
      } else if (d === li) li = e = d.nextScheduledRoot, Y.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === Y) {
        Y = c;
        Y.nextScheduledRoot = li;
        d.nextScheduledRoot = null;
        break;
      } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;

      d = c.nextScheduledRoot;
    } else {
      e > a && (a = e, b = d);
      if (d === Y) break;
      if (1073741823 === a) break;
      c = d;
      d = d.nextScheduledRoot;
    }
  }
  oi = b;
  Z = a;
}

var Ei = !1;

function di() {
  return Ei ? !0 : r.unstable_shouldYield() ? Ei = !0 : !1;
}

function zi() {
  try {
    if (!di() && null !== li) {
      xi();
      var a = li;

      do {
        var b = a.expirationTime;
        0 !== b && ui <= b && (a.nextExpirationTimeToWorkOn = ui);
        a = a.nextScheduledRoot;
      } while (a !== li);
    }

    Yh(0, !0);
  } finally {
    Ei = !1;
  }
}

function Yh(a, b) {
  Ci();
  if (b) for (xi(), vi = ui; null !== oi && 0 !== Z && a <= Z && !(Ei && ui > Z);) {
    Di(oi, Z, ui > Z), Ci(), xi(), vi = ui;
  } else for (; null !== oi && 0 !== Z && a <= Z;) {
    Di(oi, Z, !1), Ci();
  }
  b && (mi = 0, ni = null);
  0 !== Z && yi(oi, Z);
  ii = 0;
  wi = null;
  if (null !== si) for (a = si, si = null, b = 0; b < a.length; b++) {
    var c = a[b];

    try {
      c._onComplete();
    } catch (d) {
      pi || (pi = !0, qi = d);
    }
  }
  if (pi) throw a = qi, qi = null, pi = !1, a;
}

function Bi(a, b) {
  W ? x("253") : void 0;
  oi = a;
  Z = b;
  Di(a, b, !1);
  Yh(1073741823, !1);
}

function Di(a, b, c) {
  W ? x("245") : void 0;
  W = !0;

  if (c) {
    var d = a.finishedWork;
    null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && (di() ? a.finishedWork = d : Fi(a, d, b)));
  } else d = a.finishedWork, null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && Fi(a, d, b));

  W = !1;
}

function Fi(a, b, c) {
  var d = a.firstBatch;

  if (null !== d && d._expirationTime >= c && (null === si ? si = [d] : si.push(d), d._defer)) {
    a.finishedWork = b;
    a.expirationTime = 0;
    return;
  }

  a.finishedWork = null;
  a === wi ? ii++ : (wi = a, ii = 0);
  r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {
    Zh(a, b);
  });
}

function Dh(a) {
  null === oi ? x("246") : void 0;
  oi.expirationTime = 0;
  pi || (pi = !0, qi = a);
}

function Gi(a, b) {
  var c = X;
  X = !0;

  try {
    return a(b);
  } finally {
    (X = c) || W || Yh(1073741823, !1);
  }
}

function Hi(a, b) {
  if (X && !ri) {
    ri = !0;

    try {
      return a(b);
    } finally {
      ri = !1;
    }
  }

  return a(b);
}

function Ii(a, b, c) {
  X || W || 0 === gi || (Yh(gi, !1), gi = 0);
  var d = X;
  X = !0;

  try {
    return r.unstable_runWithPriority(r.unstable_UserBlockingPriority, function () {
      return a(b, c);
    });
  } finally {
    (X = d) || W || Yh(1073741823, !1);
  }
}

function Ji(a, b, c, d, e) {
  var f = b.current;

  a: if (c) {
    c = c._reactInternalFiber;

    b: {
      2 === ed(c) && 1 === c.tag ? void 0 : x("170");
      var g = c;

      do {
        switch (g.tag) {
          case 3:
            g = g.stateNode.context;
            break b;

          case 1:
            if (J(g.type)) {
              g = g.stateNode.__reactInternalMemoizedMergedChildContext;
              break b;
            }

        }

        g = g.return;
      } while (null !== g);

      x("171");
      g = void 0;
    }

    if (1 === c.tag) {
      var h = c.type;

      if (J(h)) {
        c = Ne(c, h, g);
        break a;
      }
    }

    c = g;
  } else c = He;

  null === b.context ? b.context = c : b.pendingContext = c;
  b = e;
  e = nf(d);
  e.payload = {
    element: a
  };
  b = void 0 === b ? null : b;
  null !== b && (e.callback = b);
  of();
  pf(f, e);
  qf(f, d);
  return d;
}

function Ki(a, b, c, d) {
  var e = b.current,
      f = lf();
  e = mf(f, e);
  return Ji(a, b, c, e, d);
}

function Li(a) {
  a = a.current;
  if (!a.child) return null;

  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;

    default:
      return a.child.stateNode;
  }
}

function Mi(a, b, c) {
  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return {
    $$typeof: Wb,
    key: null == d ? null : "" + d,
    children: a,
    containerInfo: b,
    implementation: c
  };
}

Ab = function Ab(a, b, c) {
  switch (b) {
    case "input":
      yc(a, c);
      b = c.name;

      if ("radio" === c.type && null != b) {
        for (c = a; c.parentNode;) {
          c = c.parentNode;
        }

        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');

        for (b = 0; b < c.length; b++) {
          var d = c[b];

          if (d !== a && d.form === a.form) {
            var e = Ka(d);
            e ? void 0 : x("90");
            Sb(d);
            yc(d, e);
          }
        }
      }

      break;

    case "textarea":
      de(a, c);
      break;

    case "select":
      b = c.value, null != b && ae(a, !!c.multiple, b, !1);
  }
};

function Ni(a) {
  var b = 1073741822 - 25 * (((1073741822 - lf() + 500) / 25 | 0) + 1);
  b >= Jh && (b = Jh - 1);
  this._expirationTime = Jh = b;
  this._root = a;
  this._callbacks = this._next = null;
  this._hasChildren = this._didComplete = !1;
  this._children = null;
  this._defer = !0;
}

Ni.prototype.render = function (a) {
  this._defer ? void 0 : x("250");
  this._hasChildren = !0;
  this._children = a;
  var b = this._root._internalRoot,
      c = this._expirationTime,
      d = new Oi();
  Ji(a, b, null, c, d._onCommit);
  return d;
};

Ni.prototype.then = function (a) {
  if (this._didComplete) a();else {
    var b = this._callbacks;
    null === b && (b = this._callbacks = []);
    b.push(a);
  }
};

Ni.prototype.commit = function () {
  var a = this._root._internalRoot,
      b = a.firstBatch;
  this._defer && null !== b ? void 0 : x("251");

  if (this._hasChildren) {
    var c = this._expirationTime;

    if (b !== this) {
      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));

      for (var d = null, e = b; e !== this;) {
        d = e, e = e._next;
      }

      null === d ? x("251") : void 0;
      d._next = e._next;
      this._next = b;
      a.firstBatch = this;
    }

    this._defer = !1;
    Bi(a, c);
    b = this._next;
    this._next = null;
    b = a.firstBatch = b;
    null !== b && b._hasChildren && b.render(b._children);
  } else this._next = null, this._defer = !1;
};

Ni.prototype._onComplete = function () {
  if (!this._didComplete) {
    this._didComplete = !0;
    var a = this._callbacks;
    if (null !== a) for (var b = 0; b < a.length; b++) {
      (0, a[b])();
    }
  }
};

function Oi() {
  this._callbacks = null;
  this._didCommit = !1;
  this._onCommit = this._onCommit.bind(this);
}

Oi.prototype.then = function (a) {
  if (this._didCommit) a();else {
    var b = this._callbacks;
    null === b && (b = this._callbacks = []);
    b.push(a);
  }
};

Oi.prototype._onCommit = function () {
  if (!this._didCommit) {
    this._didCommit = !0;
    var a = this._callbacks;
    if (null !== a) for (var b = 0; b < a.length; b++) {
      var c = a[b];
      "function" !== typeof c ? x("191", c) : void 0;
      c();
    }
  }
};

function Pi(a, b, c) {
  b = K(3, null, null, b ? 3 : 0);
  a = {
    current: b,
    containerInfo: a,
    pendingChildren: null,
    pingCache: null,
    earliestPendingTime: 0,
    latestPendingTime: 0,
    earliestSuspendedTime: 0,
    latestSuspendedTime: 0,
    latestPingedTime: 0,
    didError: !1,
    pendingCommitExpirationTime: 0,
    finishedWork: null,
    timeoutHandle: -1,
    context: null,
    pendingContext: null,
    hydrate: c,
    nextExpirationTimeToWorkOn: 0,
    expirationTime: 0,
    firstBatch: null,
    nextScheduledRoot: null
  };
  this._internalRoot = b.stateNode = a;
}

Pi.prototype.render = function (a, b) {
  var c = this._internalRoot,
      d = new Oi();
  b = void 0 === b ? null : b;
  null !== b && d.then(b);
  Ki(a, c, null, d._onCommit);
  return d;
};

Pi.prototype.unmount = function (a) {
  var b = this._internalRoot,
      c = new Oi();
  a = void 0 === a ? null : a;
  null !== a && c.then(a);
  Ki(null, b, null, c._onCommit);
  return c;
};

Pi.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {
  var d = this._internalRoot,
      e = new Oi();
  c = void 0 === c ? null : c;
  null !== c && e.then(c);
  Ki(b, d, a, e._onCommit);
  return e;
};

Pi.prototype.createBatch = function () {
  var a = new Ni(this),
      b = a._expirationTime,
      c = this._internalRoot,
      d = c.firstBatch;
  if (null === d) c.firstBatch = a, a._next = null;else {
    for (c = null; null !== d && d._expirationTime >= b;) {
      c = d, d = d._next;
    }

    a._next = d;
    null !== c && (c._next = a);
  }
  return a;
};

function Qi(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}

Gb = Gi;
Hb = Ii;

Ib = function Ib() {
  W || 0 === gi || (Yh(gi, !1), gi = 0);
};

function Ri(a, b) {
  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute("data-reactroot")));
  if (!b) for (var c; c = a.lastChild;) {
    a.removeChild(c);
  }
  return new Pi(a, !1, b);
}

function Si(a, b, c, d, e) {
  var f = c._reactRootContainer;

  if (f) {
    if ("function" === typeof e) {
      var g = e;

      e = function e() {
        var a = Li(f._internalRoot);
        g.call(a);
      };
    }

    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);
  } else {
    f = c._reactRootContainer = Ri(c, d);

    if ("function" === typeof e) {
      var h = e;

      e = function e() {
        var a = Li(f._internalRoot);
        h.call(a);
      };
    }

    Hi(function () {
      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);
    });
  }

  return Li(f._internalRoot);
}

function Ti(a, b) {
  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  Qi(b) ? void 0 : x("200");
  return Mi(a, b, null, c);
}

var Vi = {
  createPortal: Ti,
  findDOMNode: function findDOMNode(a) {
    if (null == a) return null;
    if (1 === a.nodeType) return a;
    var b = a._reactInternalFiber;
    void 0 === b && ("function" === typeof a.render ? x("188") : x("268", Object.keys(a)));
    a = hd(b);
    a = null === a ? null : a.stateNode;
    return a;
  },
  hydrate: function hydrate(a, b, c) {
    Qi(b) ? void 0 : x("200");
    return Si(null, a, b, !0, c);
  },
  render: function render(a, b, c) {
    Qi(b) ? void 0 : x("200");
    return Si(null, a, b, !1, c);
  },
  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {
    Qi(c) ? void 0 : x("200");
    null == a || void 0 === a._reactInternalFiber ? x("38") : void 0;
    return Si(a, b, c, !1, d);
  },
  unmountComponentAtNode: function unmountComponentAtNode(a) {
    Qi(a) ? void 0 : x("40");
    return a._reactRootContainer ? (Hi(function () {
      Si(null, null, a, !1, function () {
        a._reactRootContainer = null;
      });
    }), !0) : !1;
  },
  unstable_createPortal: function unstable_createPortal() {
    return Ti.apply(void 0, arguments);
  },
  unstable_batchedUpdates: Gi,
  unstable_interactiveUpdates: Ii,
  flushSync: function flushSync(a, b) {
    W ? x("187") : void 0;
    var c = X;
    X = !0;

    try {
      return ki(a, b);
    } finally {
      X = c, Yh(1073741823, !1);
    }
  },
  unstable_createRoot: Ui,
  unstable_flushControlled: function unstable_flushControlled(a) {
    var b = X;
    X = !0;

    try {
      ki(a);
    } finally {
      (X = b) || W || Yh(1073741823, !1);
    }
  },
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    Events: [Ia, Ja, Ka, Ba.injectEventPluginsByName, pa, Qa, function (a) {
      ya(a, Pa);
    }, Eb, Fb, Dd, Da]
  }
};

function Ui(a, b) {
  Qi(a) ? void 0 : x("299", "unstable_createRoot");
  return new Pi(a, !0, null != b && !0 === b.hydrate);
}

(function (a) {
  var b = a.findFiberByHostInstance;
  return Te(n({}, a, {
    overrideProps: null,
    currentDispatcherRef: Tb.ReactCurrentDispatcher,
    findHostInstanceByFiber: function findHostInstanceByFiber(a) {
      a = hd(a);
      return null === a ? null : a.stateNode;
    },
    findFiberByHostInstance: function findFiberByHostInstance(a) {
      return b ? b(a) : null;
    }
  }));
})({
  findFiberByHostInstance: Ha,
  bundleType: 0,
  version: "16.8.6",
  rendererPackageName: "react-dom"
});

var Wi = {
  default: Vi
},
    Xi = Wi && Vi || Wi;
module.exports = Xi.default || Xi;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(21);
} else {}

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/** @license React v0.13.6
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", {
  value: !0
});
var d = null,
    e = !1,
    g = 3,
    k = -1,
    l = -1,
    m = !1,
    n = !1;

function p() {
  if (!m) {
    var a = d.expirationTime;
    n ? q() : n = !0;

    _r(t, a);
  }
}

function u() {
  var a = d,
      b = d.next;
  if (d === b) d = null;else {
    var c = d.previous;
    d = c.next = b;
    b.previous = c;
  }
  a.next = a.previous = null;
  c = a.callback;
  b = a.expirationTime;
  a = a.priorityLevel;
  var f = g,
      Q = l;
  g = a;
  l = b;

  try {
    var h = c();
  } finally {
    g = f, l = Q;
  }

  if ("function" === typeof h) if (h = {
    callback: h,
    priorityLevel: a,
    expirationTime: b,
    next: null,
    previous: null
  }, null === d) d = h.next = h.previous = h;else {
    c = null;
    a = d;

    do {
      if (a.expirationTime >= b) {
        c = a;
        break;
      }

      a = a.next;
    } while (a !== d);

    null === c ? c = d : c === d && (d = h, p());
    b = c.previous;
    b.next = c.previous = h;
    h.next = c;
    h.previous = b;
  }
}

function v() {
  if (-1 === k && null !== d && 1 === d.priorityLevel) {
    m = !0;

    try {
      do {
        u();
      } while (null !== d && 1 === d.priorityLevel);
    } finally {
      m = !1, null !== d ? p() : n = !1;
    }
  }
}

function t(a) {
  m = !0;
  var b = e;
  e = a;

  try {
    if (a) for (; null !== d;) {
      var c = exports.unstable_now();

      if (d.expirationTime <= c) {
        do {
          u();
        } while (null !== d && d.expirationTime <= c);
      } else break;
    } else if (null !== d) {
      do {
        u();
      } while (null !== d && !w());
    }
  } finally {
    m = !1, e = b, null !== d ? p() : n = !1, v();
  }
}

var x = Date,
    y = "function" === typeof setTimeout ? setTimeout : void 0,
    z = "function" === typeof clearTimeout ? clearTimeout : void 0,
    A = "function" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,
    B = "function" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,
    C,
    D;

function E(a) {
  C = A(function (b) {
    z(D);
    a(b);
  });
  D = y(function () {
    B(C);
    a(exports.unstable_now());
  }, 100);
}

if ("object" === typeof performance && "function" === typeof performance.now) {
  var F = performance;

  exports.unstable_now = function () {
    return F.now();
  };
} else exports.unstable_now = function () {
  return x.now();
};

var _r,
    q,
    w,
    G = null;

"undefined" !== typeof window ? G = window : "undefined" !== typeof global && (G = global);

if (G && G._schedMock) {
  var H = G._schedMock;
  _r = H[0];
  q = H[1];
  w = H[2];
  exports.unstable_now = H[3];
} else if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
  var I = null,
      J = function J(a) {
    if (null !== I) try {
      I(a);
    } finally {
      I = null;
    }
  };

  _r = function r(a) {
    null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, !1));
  };

  q = function q() {
    I = null;
  };

  w = function w() {
    return !1;
  };
} else {
  "undefined" !== typeof console && ("function" !== typeof A && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"), "function" !== typeof B && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));
  var K = null,
      L = !1,
      M = -1,
      N = !1,
      O = !1,
      P = 0,
      R = 33,
      S = 33;

  w = function w() {
    return P <= exports.unstable_now();
  };

  var T = new MessageChannel(),
      U = T.port2;

  T.port1.onmessage = function () {
    L = !1;
    var a = K,
        b = M;
    K = null;
    M = -1;
    var c = exports.unstable_now(),
        f = !1;
    if (0 >= P - c) if (-1 !== b && b <= c) f = !0;else {
      N || (N = !0, E(V));
      K = a;
      M = b;
      return;
    }

    if (null !== a) {
      O = !0;

      try {
        a(f);
      } finally {
        O = !1;
      }
    }
  };

  var V = function V(a) {
    if (null !== K) {
      E(V);
      var b = a - P + S;
      b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;
      P = a + S;
      L || (L = !0, U.postMessage(void 0));
    } else N = !1;
  };

  _r = function _r(a, b) {
    K = a;
    M = b;
    O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));
  };

  q = function q() {
    K = null;
    L = !1;
    M = -1;
  };
}

exports.unstable_ImmediatePriority = 1;
exports.unstable_UserBlockingPriority = 2;
exports.unstable_NormalPriority = 3;
exports.unstable_IdlePriority = 5;
exports.unstable_LowPriority = 4;

exports.unstable_runWithPriority = function (a, b) {
  switch (a) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      break;

    default:
      a = 3;
  }

  var c = g,
      f = k;
  g = a;
  k = exports.unstable_now();

  try {
    return b();
  } finally {
    g = c, k = f, v();
  }
};

exports.unstable_next = function (a) {
  switch (g) {
    case 1:
    case 2:
    case 3:
      var b = 3;
      break;

    default:
      b = g;
  }

  var c = g,
      f = k;
  g = b;
  k = exports.unstable_now();

  try {
    return a();
  } finally {
    g = c, k = f, v();
  }
};

exports.unstable_scheduleCallback = function (a, b) {
  var c = -1 !== k ? k : exports.unstable_now();
  if ("object" === typeof b && null !== b && "number" === typeof b.timeout) b = c + b.timeout;else switch (g) {
    case 1:
      b = c + -1;
      break;

    case 2:
      b = c + 250;
      break;

    case 5:
      b = c + 1073741823;
      break;

    case 4:
      b = c + 1E4;
      break;

    default:
      b = c + 5E3;
  }
  a = {
    callback: a,
    priorityLevel: g,
    expirationTime: b,
    next: null,
    previous: null
  };
  if (null === d) d = a.next = a.previous = a, p();else {
    c = null;
    var f = d;

    do {
      if (f.expirationTime > b) {
        c = f;
        break;
      }

      f = f.next;
    } while (f !== d);

    null === c ? c = d : c === d && (d = a, p());
    b = c.previous;
    b.next = c.previous = a;
    a.next = c;
    a.previous = b;
  }
  return a;
};

exports.unstable_cancelCallback = function (a) {
  var b = a.next;

  if (null !== b) {
    if (b === a) d = null;else {
      a === d && (d = b);
      var c = a.previous;
      c.next = b;
      b.previous = c;
    }
    a.next = a.previous = null;
  }
};

exports.unstable_wrapCallback = function (a) {
  var b = g;
  return function () {
    var c = g,
        f = k;
    g = b;
    k = exports.unstable_now();

    try {
      return a.apply(this, arguments);
    } finally {
      g = c, k = f, v();
    }
  };
};

exports.unstable_getCurrentPriorityLevel = function () {
  return g;
};

exports.unstable_shouldYield = function () {
  return !e && (null !== d && d.expirationTime < l || w());
};

exports.unstable_continueExecution = function () {
  null !== d && p();
};

exports.unstable_pauseExecution = function () {};

exports.unstable_getFirstCallbackNode = function () {
  return d;
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6)))

/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
if (false) { var throwOnDirectAccess, ReactIs; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(25)();
}

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var ReactPropTypesSecret = __webpack_require__(26);

function emptyFunction() {}

function emptyFunctionWithReset() {}

emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }

    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
    err.name = 'Invariant Violation';
    throw err;
  }

  ;
  shim.isRequired = shim;

  function getShim() {
    return shim;
  }

  ; // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
  if (true) module.exports = factory();else {}
})(this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 63);
      /******/
    }(
    /************************************************************************/

    /******/
    [
    /* 0 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__ = __webpack_require__(57);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_get_iterator__ = __webpack_require__(18);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_get_iterator__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__domTree__ = __webpack_require__(12);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__fontMetrics__ = __webpack_require__(30);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__symbols__ = __webpack_require__(28);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__utils__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__stretchy__ = __webpack_require__(13);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__units__ = __webpack_require__(19);
      /* eslint no-console:0 */

      /**
       * This module contains general functions that can be used for building
       * different kinds of domTree nodes in a consistent manner.
       */
      // The following have to be loaded from Main-Italic font, using class mainit


      var mainitLetters = ["\\imath", "ı", // dotless i
      "\\jmath", "ȷ", // dotless j
      "\\pounds", "\\mathsterling", "\\textsterling", "£"];
      /**
       * Looks up the given symbol in fontMetrics, after applying any symbol
       * replacements defined in symbol.js
       */

      var lookupSymbol = function lookupSymbol(value, // TODO(#963): Use a union type for this.
      fontFamily, mode) {
        // Replace the value with its replaced value from symbol.js
        if (__WEBPACK_IMPORTED_MODULE_4__symbols__["a"
        /* default */
        ][mode][value] && __WEBPACK_IMPORTED_MODULE_4__symbols__["a"
        /* default */
        ][mode][value].replace) {
          value = __WEBPACK_IMPORTED_MODULE_4__symbols__["a"
          /* default */
          ][mode][value].replace;
        }

        return {
          value: value,
          metrics: __WEBPACK_IMPORTED_MODULE_3__fontMetrics__["a"
          /* default */
          ].getCharacterMetrics(value, fontFamily, mode)
        };
      };
      /**
       * Makes a symbolNode after translation via the list of symbols in symbols.js.
       * Correctly pulls out metrics for the character, and optionally takes a list of
       * classes to be attached to the node.
       *
       * TODO: make argument order closer to makeSpan
       * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which
       * should if present come first in `classes`.
       * TODO(#953): Make `options` mandatory and always pass it in.
       */


      var makeSymbol = function makeSymbol(value, fontFamily, mode, options, classes) {
        var lookup = lookupSymbol(value, fontFamily, mode);
        var metrics = lookup.metrics;
        value = lookup.value;
        var symbolNode = void 0;

        if (metrics) {
          var italic = metrics.italic;

          if (mode === "text") {
            italic = 0;
          }

          symbolNode = new __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
          /* default */
          ].symbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);
        } else {
          // TODO(emily): Figure out a good way to only print this in development
          typeof console !== "undefined" && console.warn("No character metrics for '" + value + "' in style '" + fontFamily + "'");
          symbolNode = new __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
          /* default */
          ].symbolNode(value, 0, 0, 0, 0, 0, classes);
        }

        if (options) {
          symbolNode.maxFontSize = options.sizeMultiplier;

          if (options.style.isTight()) {
            symbolNode.classes.push("mtight");
          }

          var color = options.getColor();

          if (color) {
            symbolNode.style.color = color;
          }
        }

        return symbolNode;
      };
      /**
       * Makes a symbol in Main-Regular or AMS-Regular.
       * Used for rel, bin, open, close, inner, and punct.
       *
       * TODO(#953): Make `options` mandatory and always pass it in.
       */


      var mathsym = function mathsym(value, mode, options) {
        var classes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : []; // Decide what font to render the symbol in by its entry in the symbols
        // table.
        // Have a special case for when the value = \ because the \ is used as a
        // textord in unsupported command errors but cannot be parsed as a regular
        // text ordinal and is therefore not present as a symbol in the symbols
        // table for text, as well as a special case for boldsymbol because it
        // can be used for bold + and -

        if (options && options.fontFamily && options.fontFamily === "boldsymbol" && lookupSymbol(value, "Main-Bold", mode).metrics) {
          return makeSymbol(value, "Main-Bold", mode, options, classes.concat(["mathbf"]));
        } else if (value === "\\" || __WEBPACK_IMPORTED_MODULE_4__symbols__["a"
        /* default */
        ][mode][value].font === "main") {
          return makeSymbol(value, "Main-Regular", mode, options, classes);
        } else {
          return makeSymbol(value, "AMS-Regular", mode, options, classes.concat(["amsrm"]));
        }
      };
      /**
       * Makes a symbol in the default font for mathords and textords.
       */


      var mathDefault = function mathDefault(value, mode, options, classes, type) {
        if (type === "mathord") {
          var fontLookup = mathit(value, mode, options, classes);
          return makeSymbol(value, fontLookup.fontName, mode, options, classes.concat([fontLookup.fontClass]));
        } else if (type === "textord") {
          var font = __WEBPACK_IMPORTED_MODULE_4__symbols__["a"
          /* default */
          ][mode][value] && __WEBPACK_IMPORTED_MODULE_4__symbols__["a"
          /* default */
          ][mode][value].font;

          if (font === "ams") {
            var _fontName = retrieveTextFontName("amsrm", options.fontWeight, options.fontShape);

            return makeSymbol(value, _fontName, mode, options, classes.concat("amsrm", options.fontWeight, options.fontShape));
          } else {
            // if (font === "main") {
            var _fontName2 = retrieveTextFontName("textrm", options.fontWeight, options.fontShape);

            return makeSymbol(value, _fontName2, mode, options, classes.concat(options.fontWeight, options.fontShape));
          }
        } else {
          throw new Error("unexpected type: " + type + " in mathDefault");
        }
      };
      /**
       * Determines which of the two font names (Main-Italic and Math-Italic) and
       * corresponding style tags (mainit or mathit) to use for font "mathit",
       * depending on the symbol.  Use this function instead of fontMap for font
       * "mathit".
       */


      var mathit = function mathit(value, mode, options, classes) {
        if (/[0-9]/.test(value.charAt(0)) || // glyphs for \imath and \jmath do not exist in Math-Italic so we
        // need to use Main-Italic instead
        __WEBPACK_IMPORTED_MODULE_5__utils__["a"
        /* default */
        ].contains(mainitLetters, value)) {
          return {
            fontName: "Main-Italic",
            fontClass: "mainit"
          };
        } else {
          return {
            fontName: "Math-Italic",
            fontClass: "mathit"
          };
        }
      };
      /**
       * Determines which of the two font names (Main-Bold and Math-BoldItalic) and
       * corresponding style tags (mathbf or boldsymbol) to use for font "boldsymbol",
       * depending on the symbol.  Use this function instead of fontMap for font
       * "boldsymbol".
       */


      var boldsymbol = function boldsymbol(value, mode, options, classes) {
        if (lookupSymbol(value, "Math-BoldItalic", mode).metrics) {
          return {
            fontName: "Math-BoldItalic",
            fontClass: "boldsymbol"
          };
        } else {
          // Some glyphs do not exist in Math-BoldItalic so we need to use
          // Main-Bold instead.
          return {
            fontName: "Main-Bold",
            fontClass: "mathbf"
          };
        }
      };
      /**
       * Makes either a mathord or textord in the correct font and color.
       */


      var makeOrd = function makeOrd(group, options, type) {
        var mode = group.mode;
        var value = group.value;
        var classes = ["mord"];
        var fontFamily = options.fontFamily;

        if (fontFamily) {
          var _fontName3 = void 0;

          var fontClasses = void 0;

          if (fontFamily === "boldsymbol") {
            var fontData = boldsymbol(value, mode, options, classes);
            _fontName3 = fontData.fontName;
            fontClasses = [fontData.fontClass];
          } else if (fontFamily === "mathit" || __WEBPACK_IMPORTED_MODULE_5__utils__["a"
          /* default */
          ].contains(mainitLetters, value)) {
            var _fontData = mathit(value, mode, options, classes);

            _fontName3 = _fontData.fontName;
            fontClasses = [_fontData.fontClass];
          } else if (fontFamily.indexOf("math") !== -1 || mode === "math") {
            // To support old font functions (i.e. \rm \sf etc.) or math mode.
            _fontName3 = fontMap[fontFamily].fontName;
            fontClasses = [fontFamily];
          } else {
            _fontName3 = retrieveTextFontName(fontFamily, options.fontWeight, options.fontShape);
            fontClasses = [fontFamily, options.fontWeight, options.fontShape];
          }

          if (lookupSymbol(value, _fontName3, mode).metrics) {
            return makeSymbol(value, _fontName3, mode, options, classes.concat(fontClasses));
          } else {
            return mathDefault(value, mode, options, classes, type);
          }
        } else {
          return mathDefault(value, mode, options, classes, type);
        }
      };
      /**
       * Combine as many characters as possible in the given array of characters
       * via their tryCombine method.
       */


      var tryCombineChars = function tryCombineChars(chars) {
        for (var i = 0; i < chars.length - 1; i++) {
          if (chars[i].tryCombine(chars[i + 1])) {
            chars.splice(i + 1, 1);
            i--;
          }
        }

        return chars;
      };
      /**
       * Calculate the height, depth, and maxFontSize of an element based on its
       * children.
       */


      var sizeElementFromChildren = function sizeElementFromChildren(elem) {
        var height = 0;
        var depth = 0;
        var maxFontSize = 0;
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_get_iterator___default()(elem.children), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var child = _step.value;

            if (child.height > height) {
              height = child.height;
            }

            if (child.depth > depth) {
              depth = child.depth;
            }

            if (child.maxFontSize > maxFontSize) {
              maxFontSize = child.maxFontSize;
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }

        elem.height = height;
        elem.depth = depth;
        elem.maxFontSize = maxFontSize;
      };
      /**
       * Makes a span with the given list of classes, list of children, and options.
       *
       * TODO(#953): Ensure that `options` is always provided (currently some call
       * sites don't pass it) and make the type below mandatory.
       * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which
       * should if present come first in `classes`.
       */


      var makeSpan = function makeSpan(classes, children, options, style) {
        var span = new __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
        /* default */
        ].span(classes, children, options, style);
        sizeElementFromChildren(span);
        return span;
      };

      var makeLineSpan = function makeLineSpan(className, options) {
        // Return a span with an SVG image of a horizontal line. The SVG path
        // fills the middle fifth of the span. We want an extra tall span
        // because Chrome will sometimes not display a span that is 0.04em tall.
        var lineHeight = options.fontMetrics().defaultRuleThickness;

        var line = __WEBPACK_IMPORTED_MODULE_6__stretchy__["a"
        /* default */
        ].ruleSpan(className, lineHeight, options);

        line.height = lineHeight;
        line.style.height = 5 * line.height + "em";
        line.maxFontSize = 1.0;
        return line;
      };
      /**
       * Makes an anchor with the given href, list of classes, list of children,
       * and options.
       */


      var makeAnchor = function makeAnchor(href, classes, children, options) {
        var anchor = new __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
        /* default */
        ].anchor(href, classes, children, options);
        sizeElementFromChildren(anchor);
        return anchor;
      };
      /**
       * Makes a document fragment with the given list of children.
       */


      var makeFragment = function makeFragment(children) {
        var fragment = new __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
        /* default */
        ].documentFragment(children);
        sizeElementFromChildren(fragment);
        return fragment;
      }; // These are exact object types to catch typos in the names of the optional fields.
      // A list of child or kern nodes to be stacked on top of each other (i.e. the
      // first element will be at the bottom, and the last at the top).
      // Computes the updated `children` list and the overall depth.
      //
      // This helper function for makeVList makes it easier to enforce type safety by
      // allowing early exits (returns) in the logic.


      var getVListChildrenAndDepth = function getVListChildrenAndDepth(params) {
        if (params.positionType === "individualShift") {
          var oldChildren = params.children;
          var _children = [oldChildren[0]]; // Add in kerns to the list of params.children to get each element to be
          // shifted to the correct specified shift

          var _depth = -oldChildren[0].shift - oldChildren[0].elem.depth;

          var currPos = _depth;

          for (var i = 1; i < oldChildren.length; i++) {
            var diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;

            var _size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);

            currPos = currPos + diff;

            _children.push({
              type: "kern",
              size: _size
            });

            _children.push(oldChildren[i]);
          }

          return {
            children: _children,
            depth: _depth
          };
        }

        var depth = void 0;

        if (params.positionType === "top") {
          // We always start at the bottom, so calculate the bottom by adding up
          // all the sizes
          var bottom = params.positionData;
          var _iteratorNormalCompletion2 = true;
          var _didIteratorError2 = false;
          var _iteratorError2 = undefined;

          try {
            for (var _iterator2 = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_get_iterator___default()(params.children), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var child = _step2.value;
              bottom -= child.type === "kern" ? child.size : child.elem.height + child.elem.depth;
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }

          depth = bottom;
        } else if (params.positionType === "bottom") {
          depth = -params.positionData;
        } else {
          var firstChild = params.children[0];

          if (firstChild.type !== "elem") {
            throw new Error('First child must have type "elem".');
          }

          if (params.positionType === "shift") {
            depth = -firstChild.elem.depth - params.positionData;
          } else if (params.positionType === "firstBaseline") {
            depth = -firstChild.elem.depth;
          } else {
            throw new Error("Invalid positionType " + params.positionType + ".");
          }
        }

        return {
          children: params.children,
          depth: depth
        };
      };
      /**
       * Makes a vertical list by stacking elements and kerns on top of each other.
       * Allows for many different ways of specifying the positioning method.
       *
       * See VListParam documentation above.
       */


      var makeVList = function makeVList(params, options) {
        var _getVListChildrenAndD = getVListChildrenAndDepth(params),
            children = _getVListChildrenAndD.children,
            depth = _getVListChildrenAndD.depth; // Create a strut that is taller than any list item. The strut is added to
        // each item, where it will determine the item's baseline. Since it has
        // `overflow:hidden`, the strut's top edge will sit on the item's line box's
        // top edge and the strut's bottom edge will sit on the item's baseline,
        // with no additional line-height spacing. This allows the item baseline to
        // be positioned precisely without worrying about font ascent and
        // line-height.


        var pstrutSize = 0;
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
          for (var _iterator3 = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_get_iterator___default()(children), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var child = _step3.value;

            if (child.type === "elem") {
              var _elem = child.elem;
              pstrutSize = Math.max(pstrutSize, _elem.maxFontSize, _elem.height);
            }
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3.return) {
              _iterator3.return();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }

        pstrutSize += 2;
        var pstrut = makeSpan(["pstrut"], []);
        pstrut.style.height = pstrutSize + "em"; // Create a new list of actual children at the correct offsets

        var realChildren = [];
        var minPos = depth;
        var maxPos = depth;
        var currPos = depth;
        var _iteratorNormalCompletion4 = true;
        var _didIteratorError4 = false;
        var _iteratorError4 = undefined;

        try {
          for (var _iterator4 = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_get_iterator___default()(children), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
            var _child = _step4.value;

            if (_child.type === "kern") {
              currPos += _child.size;
            } else {
              var _elem2 = _child.elem;
              var classes = _child.wrapperClasses || [];
              var style = _child.wrapperStyle || {};
              var childWrap = makeSpan(classes, [pstrut, _elem2], undefined, style);
              childWrap.style.top = -pstrutSize - currPos - _elem2.depth + "em";

              if (_child.marginLeft) {
                childWrap.style.marginLeft = _child.marginLeft;
              }

              if (_child.marginRight) {
                childWrap.style.marginRight = _child.marginRight;
              }

              realChildren.push(childWrap);
              currPos += _elem2.height + _elem2.depth;
            }

            minPos = Math.min(minPos, currPos);
            maxPos = Math.max(maxPos, currPos);
          } // The vlist contents go in a table-cell with `vertical-align:bottom`.
          // This cell's bottom edge will determine the containing table's baseline
          // without overly expanding the containing line-box.

        } catch (err) {
          _didIteratorError4 = true;
          _iteratorError4 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion4 && _iterator4.return) {
              _iterator4.return();
            }
          } finally {
            if (_didIteratorError4) {
              throw _iteratorError4;
            }
          }
        }

        var vlist = makeSpan(["vlist"], realChildren);
        vlist.style.height = maxPos + "em"; // A second row is used if necessary to represent the vlist's depth.

        var rows = void 0;

        if (minPos < 0) {
          var depthStrut = makeSpan(["vlist"], []);
          depthStrut.style.height = -minPos + "em"; // Safari wants the first row to have inline content; otherwise it
          // puts the bottom of the *second* row on the baseline.

          var topStrut = makeSpan(["vlist-s"], [new __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
          /* default */
          ].symbolNode("\u200B")]);
          rows = [makeSpan(["vlist-r"], [vlist, topStrut]), makeSpan(["vlist-r"], [depthStrut])];
        } else {
          rows = [makeSpan(["vlist-r"], [vlist])];
        }

        var vtable = makeSpan(["vlist-t"], rows);

        if (rows.length === 2) {
          vtable.classes.push("vlist-t2");
        }

        vtable.height = maxPos;
        vtable.depth = -minPos;
        return vtable;
      }; // Converts verb group into body string, dealing with \verb* form


      var makeVerb = function makeVerb(group, options) {
        // TODO(#892): Make ParseNode type-safe and confirm `group.type` to guarantee
        // that `group.value.body` is of type string.
        var text = group.value.body;

        if (group.value.star) {
          text = text.replace(/ /g, "\u2423"); // Open Box
        } else {
          text = text.replace(/ /g, '\xA0'); // No-Break Space
          // (so that, in particular, spaces don't coalesce)
        }

        return text;
      }; // Glue is a concept from TeX which is a flexible space between elements in
      // either a vertical or horizontal list.  In KaTeX, at least for now, it's
      // static space between elements in a horizontal layout.


      var makeGlue = function makeGlue(measurement, options) {
        // Make an empty span for the rule
        var rule = makeSpan(["mord", "rule"], [], options);
        var size = Object(__WEBPACK_IMPORTED_MODULE_7__units__["a"
        /* calculateSize */
        ])(measurement, options);
        rule.style.marginRight = size + "em";
        return rule;
      }; // Takes an Options object, and returns the appropriate fontLookup


      var retrieveTextFontName = function retrieveTextFontName(fontFamily, fontWeight, fontShape) {
        var baseFontName = retrieveBaseFontName(fontFamily);
        var fontStylesName = retrieveFontStylesName(fontWeight, fontShape);
        return baseFontName + "-" + fontStylesName;
      };

      var retrieveBaseFontName = function retrieveBaseFontName(font) {
        var baseFontName = "";

        switch (font) {
          case "amsrm":
            baseFontName = "AMS";
            break;

          case "textrm":
            baseFontName = "Main";
            break;

          case "textsf":
            baseFontName = "SansSerif";
            break;

          case "texttt":
            baseFontName = "Typewriter";
            break;

          default:
            throw new Error("Invalid font provided: " + font);
        }

        return baseFontName;
      };

      var retrieveFontStylesName = function retrieveFontStylesName(fontWeight, fontShape) {
        var fontStylesName = '';

        if (fontWeight === "textbf") {
          fontStylesName += "Bold";
        }

        if (fontShape === "textit") {
          fontStylesName += "Italic";
        }

        return fontStylesName || "Regular";
      }; // A map of spacing functions to their attributes, like size and corresponding
      // CSS class


      var spacingFunctions = {
        "\\qquad": {
          size: "2em",
          className: "qquad"
        },
        "\\quad": {
          size: "1em",
          className: "quad"
        },
        "\\enspace": {
          size: "0.5em",
          className: "enspace"
        },
        "\\;": {
          size: "0.277778em",
          className: "thickspace"
        },
        "\\:": {
          size: "0.22222em",
          className: "mediumspace"
        },
        "\\,": {
          size: "0.16667em",
          className: "thinspace"
        },
        "\\!": {
          size: "-0.16667em",
          className: "negativethinspace"
        }
      };
      /**
       * Maps TeX font commands to objects containing:
       * - variant: string used for "mathvariant" attribute in buildMathML.js
       * - fontName: the "style" parameter to fontMetrics.getCharacterMetrics
       */
      // A map between tex font commands an MathML mathvariant attribute values

      var fontMap = {
        // styles
        "mathbf": {
          variant: "bold",
          fontName: "Main-Bold"
        },
        "mathrm": {
          variant: "normal",
          fontName: "Main-Regular"
        },
        "textit": {
          variant: "italic",
          fontName: "Main-Italic"
        },
        // "mathit" and "boldsymbol" are missing because they require the use of two
        // fonts: Main-Italic and Math-Italic for "mathit", and Math-BoldItalic and
        // Main-Bold for "boldsymbol".  This is handled by a special case in makeOrd
        // which ends up calling mathit and boldsymbol.
        // families
        "mathbb": {
          variant: "double-struck",
          fontName: "AMS-Regular"
        },
        "mathcal": {
          variant: "script",
          fontName: "Caligraphic-Regular"
        },
        "mathfrak": {
          variant: "fraktur",
          fontName: "Fraktur-Regular"
        },
        "mathscr": {
          variant: "script",
          fontName: "Script-Regular"
        },
        "mathsf": {
          variant: "sans-serif",
          fontName: "SansSerif-Regular"
        },
        "mathtt": {
          variant: "monospace",
          fontName: "Typewriter-Regular"
        }
      };
      var svgData = {
        //   path, width, height
        vec: ["vec", 0.471, 0.714] // values from the font glyph

      };

      var staticSvg = function staticSvg(value, options) {
        // Create a span with inline SVG for the element.
        var _svgData$value = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default()(svgData[value], 3),
            pathName = _svgData$value[0],
            width = _svgData$value[1],
            height = _svgData$value[2];

        var path = new __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
        /* default */
        ].pathNode(pathName);
        var svgNode = new __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
        /* default */
        ].svgNode([path], {
          "width": width + "em",
          "height": height + "em",
          // Override CSS rule `.katex svg { width: 100% }`
          "style": "width:" + width + "em",
          "viewBox": "0 0 " + 1000 * width + " " + 1000 * height,
          "preserveAspectRatio": "xMinYMin"
        });
        var span = makeSpan(["overlay"], [svgNode], options);
        span.height = height;
        span.style.height = height + "em";
        span.style.width = width + "em";
        return span;
      };
      /* harmony default export */


      __webpack_exports__["a"] = {
        fontMap: fontMap,
        makeSymbol: makeSymbol,
        mathsym: mathsym,
        makeSpan: makeSpan,
        makeLineSpan: makeLineSpan,
        makeAnchor: makeAnchor,
        makeFragment: makeFragment,
        makeVList: makeVList,
        makeOrd: makeOrd,
        makeVerb: makeVerb,
        makeGlue: makeGlue,
        staticSvg: staticSvg,
        svgData: svgData,
        tryCombineChars: tryCombineChars,
        spacingFunctions: spacingFunctions
      };
      /***/
    },
    /* 1 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(18);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__utils__ = __webpack_require__(5);
      /**
       * These objects store data about MathML nodes. This is the MathML equivalent
       * of the types in domTree.js. Since MathML handles its own rendering, and
       * since we're mainly using MathML to improve accessibility, we don't manage
       * any of the styling state that the plain DOM nodes do.
       *
       * The `toNode` and `toMarkup` functions work simlarly to how they do in
       * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.
       */

      /**
       * MathML node types used in KaTeX. For a complete list of MathML nodes, see
       * https://developer.mozilla.org/en-US/docs/Web/MathML/Element.
       */

      /**
       * This node represents a general purpose MathML node of any type. The
       * constructor requires the type of node to create (for example, `"mo"` or
       * `"mspace"`, corresponding to `<mo>` and `<mspace>` tags).
       */


      var MathNode = function () {
        function MathNode(type, children) {
          __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, MathNode);

          this.type = type;
          this.attributes = {};
          this.children = children || [];
        }
        /**
         * Sets an attribute on a MathML node. MathML depends on attributes to convey a
         * semantic content, so this is used heavily.
         */


        __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(MathNode, [{
          key: "setAttribute",
          value: function setAttribute(name, value) {
            this.attributes[name] = value;
          }
          /**
           * Converts the math node into a MathML-namespaced DOM element.
           */

        }, {
          key: "toNode",
          value: function toNode() {
            var node = document.createElementNS("http://www.w3.org/1998/Math/MathML", this.type);

            for (var attr in this.attributes) {
              if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
                node.setAttribute(attr, this.attributes[attr]);
              }
            }

            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
              for (var _iterator = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(this.children), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var child = _step.value;
                node.appendChild(child.toNode());
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }

            return node;
          }
          /**
           * Converts the math node into an HTML markup string.
           */

        }, {
          key: "toMarkup",
          value: function toMarkup() {
            var markup = "<" + this.type; // Add the attributes

            for (var attr in this.attributes) {
              if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
                markup += " " + attr + "=\"";
                markup += __WEBPACK_IMPORTED_MODULE_3__utils__["a"
                /* default */
                ].escape(this.attributes[attr]);
                markup += "\"";
              }
            }

            markup += ">";

            for (var i = 0; i < this.children.length; i++) {
              markup += this.children[i].toMarkup();
            }

            markup += "</" + this.type + ">";
            return markup;
          }
          /**
           * Converts the math node into a string, similar to innerText.
           */

        }, {
          key: "toText",
          value: function toText() {
            if (this.type === "mspace") {
              if (this.attributes.width === "0.16667em") {
                return "\u2006";
              } else {
                // TODO: Use other space characters for different widths.
                // https://github.com/Khan/KaTeX/issues/1036
                return " ";
              }
            }

            return this.children.map(function (child) {
              return child.toText();
            }).join("");
          }
        }]);

        return MathNode;
      }();
      /**
       * This node represents a piece of text.
       */


      var TextNode = function () {
        function TextNode(text) {
          __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, TextNode);

          this.text = text;
        }
        /**
         * Converts the text node into a DOM text node.
         */


        __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(TextNode, [{
          key: "toNode",
          value: function toNode() {
            return document.createTextNode(this.text);
          }
          /**
           * Converts the text node into HTML markup (which is just the text itself).
           */

        }, {
          key: "toMarkup",
          value: function toMarkup() {
            return __WEBPACK_IMPORTED_MODULE_3__utils__["a"
            /* default */
            ].escape(this.text);
          }
          /**
           * Converts the text node into a string (which is just the text iteself).
           */

        }, {
          key: "toText",
          value: function toText() {
            return this.text;
          }
        }]);

        return TextNode;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = {
        MathNode: MathNode,
        TextNode: TextNode
      };
      /***/
    },
    /* 2 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "e", function () {
        return makeText;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "d", function () {
        return groupTypes;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return buildExpression;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return buildGroup;
      });
      /* harmony export (immutable) */


      __webpack_exports__["c"] = buildMathML;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__fontMetrics__ = __webpack_require__(30);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__ParseError__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__Style__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__symbols__ = __webpack_require__(28);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__utils__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__stretchy__ = __webpack_require__(13);
      /**
       * WARNING: New methods on groupTypes should be added to src/functions.
       *
       * This file converts a parse tree into a cooresponding MathML tree. The main
       * entry point is the `buildMathML` function, which takes a parse tree from the
       * parser.
       */

      /**
       * Takes a symbol and converts it into a MathML text node after performing
       * optional replacement from symbols.js.
       */


      var makeText = function makeText(text, mode) {
        if (__WEBPACK_IMPORTED_MODULE_5__symbols__["a"
        /* default */
        ][mode][text] && __WEBPACK_IMPORTED_MODULE_5__symbols__["a"
        /* default */
        ][mode][text].replace) {
          text = __WEBPACK_IMPORTED_MODULE_5__symbols__["a"
          /* default */
          ][mode][text].replace;
        }

        return new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].TextNode(text);
      };
      /**
       * Returns the math variant as a string or null if none is required.
       */


      var getVariant = function getVariant(group, options) {
        var font = options.fontFamily;

        if (!font) {
          return null;
        }

        var mode = group.mode;

        if (font === "mathit") {
          return "italic";
        } else if (font === "boldsymbol") {
          return "bold-italic";
        }

        var value = group.value;

        if (__WEBPACK_IMPORTED_MODULE_6__utils__["a"
        /* default */
        ].contains(["\\imath", "\\jmath"], value)) {
          return null;
        }

        if (__WEBPACK_IMPORTED_MODULE_5__symbols__["a"
        /* default */
        ][mode][value] && __WEBPACK_IMPORTED_MODULE_5__symbols__["a"
        /* default */
        ][mode][value].replace) {
          value = __WEBPACK_IMPORTED_MODULE_5__symbols__["a"
          /* default */
          ][mode][value].replace;
        }

        var fontName = __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
        /* default */
        ].fontMap[font].fontName;

        if (__WEBPACK_IMPORTED_MODULE_1__fontMetrics__["a"
        /* default */
        ].getCharacterMetrics(value, fontName, mode)) {
          return __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
          /* default */
          ].fontMap[font].variant;
        }

        return null;
      };
      /**
       * Functions for handling the different types of groups found in the parse
       * tree. Each function should take a parse group and return a MathML node.
       */


      var groupTypes = {};
      var defaultVariant = {
        "mi": "italic",
        "mn": "normal",
        "mtext": "normal"
      };

      groupTypes.mathord = function (group, options) {
        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mi", [makeText(group.value, group.mode)]);
        var variant = getVariant(group, options) || "italic";

        if (variant !== defaultVariant[node.type]) {
          node.setAttribute("mathvariant", variant);
        }

        return node;
      };

      groupTypes.textord = function (group, options) {
        var text = makeText(group.value, group.mode);
        var variant = getVariant(group, options) || "normal";
        var node = void 0;

        if (group.mode === 'text') {
          node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mtext", [text]);
        } else if (/[0-9]/.test(group.value)) {
          // TODO(kevinb) merge adjacent <mn> nodes
          // do it as a post processing step
          node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mn", [text]);
        } else if (group.value === "\\prime") {
          node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mo", [text]);
        } else {
          node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mi", [text]);
        }

        if (variant !== defaultVariant[node.type]) {
          node.setAttribute("mathvariant", variant);
        }

        return node;
      };

      groupTypes.bin = function (group, options) {
        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mo", [makeText(group.value, group.mode)]);
        var variant = getVariant(group, options);

        if (variant === "bold-italic") {
          node.setAttribute("mathvariant", variant);
        }

        return node;
      };

      groupTypes.rel = function (group) {
        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mo", [makeText(group.value, group.mode)]);
        return node;
      };

      groupTypes.open = function (group) {
        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mo", [makeText(group.value, group.mode)]);
        return node;
      };

      groupTypes.close = function (group) {
        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mo", [makeText(group.value, group.mode)]);
        return node;
      };

      groupTypes.inner = function (group) {
        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mo", [makeText(group.value, group.mode)]);
        return node;
      };

      groupTypes.punct = function (group) {
        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mo", [makeText(group.value, group.mode)]);
        node.setAttribute("separator", "true");
        return node;
      };

      groupTypes.ordgroup = function (group, options) {
        var inner = buildExpression(group.value, options);
        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mrow", inner);
        return node;
      };

      groupTypes.supsub = function (group, options) {
        // Is the inner group a relevant horizonal brace?
        var isBrace = false;
        var isOver = void 0;
        var isSup = void 0;

        if (group.value.base) {
          if (group.value.base.value.type === "horizBrace") {
            isSup = group.value.sup ? true : false;

            if (isSup === group.value.base.value.isOver) {
              isBrace = true;
              isOver = group.value.base.value.isOver;
            }
          }
        }

        var removeUnnecessaryRow = true;
        var children = [buildGroup(group.value.base, options, removeUnnecessaryRow)];

        if (group.value.sub) {
          children.push(buildGroup(group.value.sub, options, removeUnnecessaryRow));
        }

        if (group.value.sup) {
          children.push(buildGroup(group.value.sup, options, removeUnnecessaryRow));
        }

        var nodeType = void 0;

        if (isBrace) {
          nodeType = isOver ? "mover" : "munder";
        } else if (!group.value.sub) {
          var base = group.value.base;

          if (base && base.value.limits && options.style === __WEBPACK_IMPORTED_MODULE_4__Style__["a"
          /* default */
          ].DISPLAY) {
            nodeType = "mover";
          } else {
            nodeType = "msup";
          }
        } else if (!group.value.sup) {
          var _base = group.value.base;

          if (_base && _base.value.limits && options.style === __WEBPACK_IMPORTED_MODULE_4__Style__["a"
          /* default */
          ].DISPLAY) {
            nodeType = "munder";
          } else {
            nodeType = "msub";
          }
        } else {
          var _base2 = group.value.base;

          if (_base2 && _base2.value.limits && options.style === __WEBPACK_IMPORTED_MODULE_4__Style__["a"
          /* default */
          ].DISPLAY) {
            nodeType = "munderover";
          } else {
            nodeType = "msubsup";
          }
        }

        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode(nodeType, children);
        return node;
      };

      groupTypes.spacing = function (group) {
        var node = void 0;

        if (group.value === "\\ " || group.value === "\\space" || group.value === " " || group.value === "~") {
          node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mtext", [new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].TextNode("\xA0")]);
        } else {
          node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mspace");
          node.setAttribute("width", __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
          /* default */
          ].spacingFunctions[group.value].size);
        }

        return node;
      };

      groupTypes.horizBrace = function (group, options) {
        var accentNode = __WEBPACK_IMPORTED_MODULE_7__stretchy__["a"
        /* default */
        ].mathMLnode(group.value.label);

        return new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode(group.value.isOver ? "mover" : "munder", [buildGroup(group.value.base, options), accentNode]);
      };

      groupTypes.xArrow = function (group, options) {
        var arrowNode = __WEBPACK_IMPORTED_MODULE_7__stretchy__["a"
        /* default */
        ].mathMLnode(group.value.label);

        var node = void 0;
        var lowerNode = void 0;

        if (group.value.body) {
          var upperNode = buildGroup(group.value.body, options);

          if (group.value.below) {
            lowerNode = buildGroup(group.value.below, options);
            node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
            /* default */
            ].MathNode("munderover", [arrowNode, lowerNode, upperNode]);
          } else {
            node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
            /* default */
            ].MathNode("mover", [arrowNode, upperNode]);
          }
        } else if (group.value.below) {
          lowerNode = buildGroup(group.value.below, options);
          node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("munder", [arrowNode, lowerNode]);
        } else {
          node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mover", [arrowNode]);
        }

        return node;
      };

      groupTypes.mclass = function (group, options) {
        var inner = buildExpression(group.value.value, options);
        return new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mstyle", inner);
      };

      groupTypes.raisebox = function (group, options) {
        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mpadded", [buildGroup(group.value.body, options)]);
        var dy = group.value.dy.value.number + group.value.dy.value.unit;
        node.setAttribute("voffset", dy);
        return node;
      };
      /**
       * Takes a list of nodes, builds them, and returns a list of the generated
       * MathML nodes. A little simpler than the HTML version because we don't do any
       * previous-node handling.
       */


      var buildExpression = function buildExpression(expression, options) {
        var groups = [];

        for (var i = 0; i < expression.length; i++) {
          var group = expression[i];
          groups.push(buildGroup(group, options));
        } // TODO(kevinb): combine \\not with mrels and mords


        return groups;
      };
      /**
       * Takes a group from the parser and calls the appropriate groupTypes function
       * on it to produce a MathML node.
       */


      var buildGroup = function buildGroup(group, options) {
        var removeUnnecessaryRow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        if (!group) {
          return new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mrow");
        }

        if (groupTypes[group.type]) {
          // Call the groupTypes function
          var result = groupTypes[group.type](group, options);

          if (removeUnnecessaryRow) {
            if (result.type === "mrow" && result.children.length === 1) {
              return result.children[0];
            }
          }

          return result;
        } else {
          throw new __WEBPACK_IMPORTED_MODULE_3__ParseError__["a"
          /* default */
          ]("Got group of unknown type: '" + group.type + "'");
        }
      };
      /**
       * Takes a full parse tree and settings and builds a MathML representation of
       * it. In particular, we put the elements from building the parse tree into a
       * <semantics> tag so we can also include that TeX source as an annotation.
       *
       * Note that we actually return a domTree element with a `<math>` inside it so
       * we can do appropriate styling.
       */


      function buildMathML(tree, texExpression, options) {
        var expression = buildExpression(tree, options); // Wrap up the expression in an mrow so it is presented in the semantics
        // tag correctly.

        var wrapper = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mrow", expression); // Build a TeX annotation of the source

        var annotation = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("annotation", [new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].TextNode(texExpression)]);
        annotation.setAttribute("encoding", "application/x-tex");
        var semantics = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("semantics", [wrapper, annotation]);
        var math = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("math", [semantics]); // You can't style <math> nodes, so we wrap the node in a span.

        return __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
        /* default */
        ].makeSpan(["katex-mathml"], [math]);
      }
      /***/

    },
    /* 3 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return _functions;
      });
      /* harmony export (immutable) */


      __webpack_exports__["b"] = defineFunction;
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "c", function () {
        return ordargument;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildMathML__ = __webpack_require__(2);
      /** Context provided to function handlers for error messages. */
      // TODO: Enumerate all allowed output types.

      /**
       * Final function spec for use at parse time.
       * This is almost identical to `FunctionPropSpec`, except it
       * 1. includes the function handler, and
       * 2. requires all arguments except argTypes.
       * It is generated by `defineFunction()` below.
       */

      /**
       * All registered functions.
       * `functions.js` just exports this same dictionary again and makes it public.
       * `Parser.js` requires this dictionary.
       */


      var _functions = {};

      function defineFunction(_ref) {
        var type = _ref.type,
            names = _ref.names,
            props = _ref.props,
            handler = _ref.handler,
            htmlBuilder = _ref.htmlBuilder,
            mathmlBuilder = _ref.mathmlBuilder; // Set default values of functions

        var data = {
          numArgs: props.numArgs,
          argTypes: props.argTypes,
          greediness: props.greediness === undefined ? 1 : props.greediness,
          allowedInText: !!props.allowedInText,
          allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,
          numOptionalArgs: props.numOptionalArgs || 0,
          infix: !!props.infix,
          handler: handler
        };

        for (var i = 0; i < names.length; ++i) {
          _functions[names[i]] = data;
        }

        if (type) {
          if (htmlBuilder) {
            __WEBPACK_IMPORTED_MODULE_0__buildHTML__["d"
            /* groupTypes */
            ][type] = htmlBuilder;
          }

          if (mathmlBuilder) {
            __WEBPACK_IMPORTED_MODULE_1__buildMathML__["d"
            /* groupTypes */
            ][type] = mathmlBuilder;
          }
        }
      } // Since the corresponding buildHTML/buildMathML function expects a
      // list of elements, we normalize for different kinds of arguments


      var ordargument = function ordargument(arg) {
        if (arg.type === "ordgroup") {
          return arg.value;
        } else {
          return [arg];
        }
      };
      /***/

    },
    /* 4 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return buildExpression;
      });
      /* unused harmony export getTypeOfDomTree */

      /* unused harmony export isLeftTight */

      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "e", function () {
        return makeNullDelimiter;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "d", function () {
        return groupTypes;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return buildGroup;
      });
      /* harmony export (immutable) */


      __webpack_exports__["c"] = buildHTML;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(77);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(35);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__ParseError__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__Style__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__domTree__ = __webpack_require__(12);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__units__ = __webpack_require__(19);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__utils__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_8__stretchy__ = __webpack_require__(13);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_9__spacingData__ = __webpack_require__(112);
      /**
       * WARNING: New methods on groupTypes should be added to src/functions.
       *
       * This file does the main work of building a domTree structure from a parse
       * tree. The entry point is the `buildHTML` function, which takes a parse tree.
       * Then, the buildExpression, buildGroup, and various groupTypes functions are
       * called, to produce a final HTML tree.
       */


      var makeSpan = __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
      /* default */
      ].makeSpan; // Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)
      // depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,
      // and the text before Rule 19.

      var isBinLeftCanceller = function isBinLeftCanceller(node, isRealGroup) {
        // TODO: This code assumes that a node's math class is the first element
        // of its `classes` array. A later cleanup should ensure this, for
        // instance by changing the signature of `makeSpan`.
        if (node) {
          return __WEBPACK_IMPORTED_MODULE_7__utils__["a"
          /* default */
          ].contains(["mbin", "mopen", "mrel", "mop", "mpunct"], getTypeOfDomTree(node, "right"));
        } else {
          return isRealGroup;
        }
      };

      var isBinRightCanceller = function isBinRightCanceller(node, isRealGroup) {
        if (node) {
          return __WEBPACK_IMPORTED_MODULE_7__utils__["a"
          /* default */
          ].contains(["mrel", "mclose", "mpunct"], getTypeOfDomTree(node, "left"));
        } else {
          return isRealGroup;
        }
      };

      var styleMap = {
        "display": __WEBPACK_IMPORTED_MODULE_3__Style__["a"
        /* default */
        ].DISPLAY,
        "text": __WEBPACK_IMPORTED_MODULE_3__Style__["a"
        /* default */
        ].TEXT,
        "script": __WEBPACK_IMPORTED_MODULE_3__Style__["a"
        /* default */
        ].SCRIPT,
        "scriptscript": __WEBPACK_IMPORTED_MODULE_3__Style__["a"
        /* default */
        ].SCRIPTSCRIPT
      };
      /**
       * Take a list of nodes, build them in order, and return a list of the built
       * nodes. documentFragments are flattened into their contents, so the
       * returned list contains no fragments. `isRealGroup` is true if `expression`
       * is a real group (no atoms will be added on either side), as opposed to
       * a partial group (e.g. one created by \color). `surrounding` is an array
       * consisting type of nodes that will be added to the left and right.
       */

      var buildExpression = function buildExpression(expression, options, isRealGroup) {
        var surrounding = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [null, null]; // Parse expressions into `groups`.

        var rawGroups = [];

        for (var i = 0; i < expression.length; i++) {
          var group = expression[i];
          var output = buildGroup(group, options);

          if (output instanceof __WEBPACK_IMPORTED_MODULE_5__domTree__["a"
          /* default */
          ].documentFragment) {
            rawGroups.push.apply(rawGroups, __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(output.children));
          } else {
            rawGroups.push(output);
          }
        } // At this point `rawGroups` consists entirely of `symbolNode`s and `span`s.
        // Ignore explicit spaces (e.g., \;, \,) when determining what implicit
        // spacing should go between atoms of different classes, and add dummy
        // spans for determining spacings between surrounding atoms


        var nonSpaces = [surrounding[0] && makeSpan([surrounding[0]], [], options)].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(rawGroups.filter(function (group) {
          return group && group.classes[0] !== "mspace";
        })), [surrounding[1] && makeSpan([surrounding[1]], [], options)]); // Before determining what spaces to insert, perform bin cancellation.
        // Binary operators change to ordinary symbols in some contexts.

        for (var _i = 1; _i < nonSpaces.length - 1; _i++) {
          var left = getOutermostNode(nonSpaces[_i], "left");

          if (left.classes[0] === "mbin" && isBinLeftCanceller(nonSpaces[_i - 1], isRealGroup)) {
            left.classes[0] = "mord";
          }

          var right = getOutermostNode(nonSpaces[_i], "right");

          if (right.classes[0] === "mbin" && isBinRightCanceller(nonSpaces[_i + 1], isRealGroup)) {
            right.classes[0] = "mord";
          }
        }

        var groups = [];
        var j = 0;

        for (var _i2 = 0; _i2 < rawGroups.length; _i2++) {
          groups.push(rawGroups[_i2]); // For any group that is not a space, get the next non-space.  Then
          // lookup what implicit space should be placed between those atoms and
          // add it to groups.

          if (rawGroups[_i2].classes[0] !== "mspace" && j < nonSpaces.length - 1) {
            // if current non-space node is left dummy span, add a glue before
            // first real non-space node
            if (j === 0) {
              groups.pop();
              _i2--;
            } // Get the type of the current non-space node.  If it's a document
            // fragment, get the type of the rightmost node in the fragment.


            var _left = getTypeOfDomTree(nonSpaces[j], "right"); // Get the type of the next non-space node.  If it's a document
            // fragment, get the type of the leftmost node in the fragment.


            var _right = getTypeOfDomTree(nonSpaces[j + 1], "left"); // We use buildExpression inside of sizingGroup, but it returns a
            // document fragment of elements.  sizingGroup sets `isRealGroup`
            // to false to avoid processing spans multiple times.


            if (_left && _right && isRealGroup) {
              var space = isLeftTight(nonSpaces[j + 1]) ? __WEBPACK_IMPORTED_MODULE_9__spacingData__["b"
              /* tightSpacings */
              ][_left][_right] : __WEBPACK_IMPORTED_MODULE_9__spacingData__["a"
              /* spacings */
              ][_left][_right];

              if (space) {
                var glueOptions = options;

                if (expression.length === 1) {
                  if (expression[0].type === "sizing") {
                    glueOptions = options.havingSize(expression[0].value.size);
                  } else if (expression[0].type === "styling") {
                    glueOptions = options.havingStyle(styleMap[expression[0].value.style]);
                  }
                }

                groups.push(__WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
                /* default */
                ].makeGlue(space, glueOptions));
              }
            }

            j++;
          }
        } // Process \\not commands within the group.


        for (var _i3 = 0; _i3 < groups.length; _i3++) {
          if (groups[_i3].value === "\u0338") {
            groups[_i3].style.position = "absolute"; // TODO(kevinb) fix this for Safari by switching to a non-combining
            // character for \not.
            // This value was determined empirically.
            // TODO(kevinb) figure out the real math for this value.

            groups[_i3].style.paddingLeft = "0.8em";
          }
        }

        return groups;
      }; // Return the outermost node of a domTree.


      var getOutermostNode = function getOutermostNode(node) {
        var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "right";

        if (node instanceof __WEBPACK_IMPORTED_MODULE_5__domTree__["a"
        /* default */
        ].documentFragment || node instanceof __WEBPACK_IMPORTED_MODULE_5__domTree__["a"
        /* default */
        ].anchor) {
          if (node.children.length) {
            if (side === "right") {
              return getOutermostNode(node.children[node.children.length - 1]);
            } else if (side === "left") {
              return getOutermostNode(node.children[0]);
            }
          }
        }

        return node;
      }; // Return math atom class (mclass) of a domTree.


      var getTypeOfDomTree = function getTypeOfDomTree(node) {
        var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "right";

        if (!node) {
          return null;
        }

        node = getOutermostNode(node, side); // This makes a lot of assumptions as to where the type of atom
        // appears.  We should do a better job of enforcing this.

        if (__WEBPACK_IMPORTED_MODULE_7__utils__["a"
        /* default */
        ].contains(["mord", "mop", "mbin", "mrel", "mopen", "mclose", "mpunct", "minner"], node.classes[0])) {
          return node.classes[0];
        }

        return null;
      }; // If `node` is an atom return whether it's been assigned the mtight class.
      // If `node` is a document fragment, return the value of isLeftTight() for the
      // leftmost node in the fragment.
      // 'mtight' indicates that the node is script or scriptscript style.


      var isLeftTight = function isLeftTight(node) {
        node = getOutermostNode(node, "left");
        return __WEBPACK_IMPORTED_MODULE_7__utils__["a"
        /* default */
        ].contains(node.classes, "mtight");
      };
      /**
       * Sometimes, groups perform special rules when they have superscripts or
       * subscripts attached to them. This function lets the `supsub` group know that
       * its inner element should handle the superscripts and subscripts instead of
       * handling them itself.
       */


      var shouldHandleSupSub = function shouldHandleSupSub(group, options) {
        if (!group.value.base) {
          return false;
        } else {
          var base = group.value.base;

          if (base.type === "op") {
            // Operators handle supsubs differently when they have limits
            // (e.g. `\displaystyle\sum_2^3`)
            return base.value.limits && (options.style.size === __WEBPACK_IMPORTED_MODULE_3__Style__["a"
            /* default */
            ].DISPLAY.size || base.value.alwaysHandleSupSub);
          } else if (base.type === "accent") {
            return __WEBPACK_IMPORTED_MODULE_7__utils__["a"
            /* default */
            ].isCharacterBox(base.value.base);
          } else if (base.type === "horizBrace") {
            var isSup = group.value.sub ? false : true;
            return isSup === base.value.isOver;
          } else {
            return null;
          }
        }
      };

      var makeNullDelimiter = function makeNullDelimiter(options, classes) {
        var moreClasses = ["nulldelimiter"].concat(options.baseSizingClasses());
        return makeSpan(classes.concat(moreClasses));
      };
      /**
       * This is a map of group types to the function used to handle that type.
       * Simpler types come at the beginning, while complicated types come afterwards.
       */


      var groupTypes = {};

      groupTypes.mathord = function (group, options) {
        return __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
        /* default */
        ].makeOrd(group, options, "mathord");
      };

      groupTypes.textord = function (group, options) {
        return __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
        /* default */
        ].makeOrd(group, options, "textord");
      };

      groupTypes.bin = function (group, options) {
        return __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
        /* default */
        ].mathsym(group.value, group.mode, options, ["mbin"]);
      };

      groupTypes.rel = function (group, options) {
        return __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
        /* default */
        ].mathsym(group.value, group.mode, options, ["mrel"]);
      };

      groupTypes.open = function (group, options) {
        return __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
        /* default */
        ].mathsym(group.value, group.mode, options, ["mopen"]);
      };

      groupTypes.close = function (group, options) {
        return __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
        /* default */
        ].mathsym(group.value, group.mode, options, ["mclose"]);
      };

      groupTypes.inner = function (group, options) {
        return __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
        /* default */
        ].mathsym(group.value, group.mode, options, ["minner"]);
      };

      groupTypes.punct = function (group, options) {
        return __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
        /* default */
        ].mathsym(group.value, group.mode, options, ["mpunct"]);
      };

      groupTypes.ordgroup = function (group, options) {
        return makeSpan(["mord"], buildExpression(group.value, options, true), options);
      };

      groupTypes.supsub = function (group, options) {
        // Superscript and subscripts are handled in the TeXbook on page
        // 445-446, rules 18(a-f).
        // Here is where we defer to the inner group if it should handle
        // superscripts and subscripts itself.
        if (shouldHandleSupSub(group, options)) {
          return groupTypes[group.value.base.type](group, options);
        }

        var base = buildGroup(group.value.base, options);
        var supm = void 0;
        var subm = void 0;
        var metrics = options.fontMetrics();
        var newOptions = void 0; // Rule 18a

        var supShift = 0;
        var subShift = 0;

        if (group.value.sup) {
          newOptions = options.havingStyle(options.style.sup());
          supm = buildGroup(group.value.sup, newOptions, options);

          if (!__WEBPACK_IMPORTED_MODULE_7__utils__["a"
          /* default */
          ].isCharacterBox(group.value.base)) {
            supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;
          }
        }

        if (group.value.sub) {
          newOptions = options.havingStyle(options.style.sub());
          subm = buildGroup(group.value.sub, newOptions, options);

          if (!__WEBPACK_IMPORTED_MODULE_7__utils__["a"
          /* default */
          ].isCharacterBox(group.value.base)) {
            subShift = base.depth + newOptions.fontMetrics().subDrop * newOptions.sizeMultiplier / options.sizeMultiplier;
          }
        } // Rule 18c


        var minSupShift = void 0;

        if (options.style === __WEBPACK_IMPORTED_MODULE_3__Style__["a"
        /* default */
        ].DISPLAY) {
          minSupShift = metrics.sup1;
        } else if (options.style.cramped) {
          minSupShift = metrics.sup3;
        } else {
          minSupShift = metrics.sup2;
        } // scriptspace is a font-size-independent size, so scale it
        // appropriately


        var multiplier = options.sizeMultiplier;
        var scriptspace = 0.5 / metrics.ptPerEm / multiplier + "em";
        var supsub = void 0;

        if (!group.value.sup) {
          // Rule 18b
          subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);
          var vlistElem = [{
            type: "elem",
            elem: subm,
            marginRight: scriptspace
          }]; // Subscripts shouldn't be shifted by the base's italic correction.
          // Account for that by shifting the subscript back the appropriate
          // amount. Note we only do this when the base is a single symbol.

          if (base instanceof __WEBPACK_IMPORTED_MODULE_5__domTree__["a"
          /* default */
          ].symbolNode) {
            vlistElem[0].marginLeft = -base.italic + "em";
          }

          supsub = __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "shift",
            positionData: subShift,
            children: vlistElem
          }, options);
        } else if (!group.value.sub) {
          // Rule 18c, d
          supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);
          supsub = __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "shift",
            positionData: -supShift,
            children: [{
              type: "elem",
              elem: supm,
              marginRight: scriptspace
            }]
          }, options);
        } else {
          supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);
          subShift = Math.max(subShift, metrics.sub2);
          var ruleWidth = metrics.defaultRuleThickness; // Rule 18e

          if (supShift - supm.depth - (subm.height - subShift) < 4 * ruleWidth) {
            subShift = 4 * ruleWidth - (supShift - supm.depth) + subm.height;
            var psi = 0.8 * metrics.xHeight - (supShift - supm.depth);

            if (psi > 0) {
              supShift += psi;
              subShift -= psi;
            }
          }

          var _vlistElem = [{
            type: "elem",
            elem: subm,
            shift: subShift,
            marginRight: scriptspace
          }, {
            type: "elem",
            elem: supm,
            shift: -supShift,
            marginRight: scriptspace
          }]; // See comment above about subscripts not being shifted

          if (base instanceof __WEBPACK_IMPORTED_MODULE_5__domTree__["a"
          /* default */
          ].symbolNode) {
            _vlistElem[0].marginLeft = -base.italic + "em";
          }

          supsub = __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "individualShift",
            children: _vlistElem
          }, options);
        } // We ensure to wrap the supsub vlist in a span.msupsub to reset text-align


        var mclass = getTypeOfDomTree(base) || "mord";
        return makeSpan([mclass], [base, makeSpan(["msupsub"], [supsub])], options);
      };

      groupTypes.spacing = function (group, options) {
        if (group.value === "\\ " || group.value === "\\space" || group.value === " " || group.value === "~") {
          // Spaces are generated by adding an actual space. Each of these
          // things has an entry in the symbols table, so these will be turned
          // into appropriate outputs.
          if (group.mode === "text") {
            return __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
            /* default */
            ].makeOrd(group, options, "textord");
          } else {
            return makeSpan(["mspace"], [__WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
            /* default */
            ].mathsym(group.value, group.mode, options)], options);
          }
        } else {
          // Other kinds of spaces are of arbitrary width. We use CSS to
          // generate these.
          return makeSpan(["mspace", __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
          /* default */
          ].spacingFunctions[group.value].className], [], options);
        }
      };

      groupTypes.horizBrace = function (group, options) {
        var style = options.style;
        var hasSupSub = group.type === "supsub";
        var supSubGroup = void 0;
        var newOptions = void 0;

        if (hasSupSub) {
          // Ref: LaTeX source2e: }}}}\limits}
          // i.e. LaTeX treats the brace similar to an op and passes it
          // with \limits, so we need to assign supsub style.
          if (group.value.sup) {
            newOptions = options.havingStyle(style.sup());
            supSubGroup = buildGroup(group.value.sup, newOptions, options);
          } else {
            newOptions = options.havingStyle(style.sub());
            supSubGroup = buildGroup(group.value.sub, newOptions, options);
          }

          group = group.value.base;
        } // Build the base group


        var body = buildGroup(group.value.base, options.havingBaseStyle(__WEBPACK_IMPORTED_MODULE_3__Style__["a"
        /* default */
        ].DISPLAY)); // Create the stretchy element

        var braceBody = __WEBPACK_IMPORTED_MODULE_8__stretchy__["a"
        /* default */
        ].svgSpan(group, options); // Generate the vlist, with the appropriate kerns               ┏━━━━━━━━┓
        // This first vlist contains the subject matter and the brace:   equation


        var vlist = void 0;

        if (group.value.isOver) {
          vlist = __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "firstBaseline",
            children: [{
              type: "elem",
              elem: body
            }, {
              type: "kern",
              size: 0.1
            }, {
              type: "elem",
              elem: braceBody
            }]
          }, options);
          vlist.children[0].children[0].children[1].classes.push("svg-align");
        } else {
          vlist = __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "bottom",
            positionData: body.depth + 0.1 + braceBody.height,
            children: [{
              type: "elem",
              elem: braceBody
            }, {
              type: "kern",
              size: 0.1
            }, {
              type: "elem",
              elem: body
            }]
          }, options);
          vlist.children[0].children[0].children[0].classes.push("svg-align");
        }

        if (hasSupSub) {
          // In order to write the supsub, wrap the first vlist in another vlist:
          // They can't all go in the same vlist, because the note might be wider
          // than the equation. We want the equation to control the brace width.
          //      note          long note           long note
          //   ┏━━━━━━━━┓   or    ┏━━━┓     not    ┏━━━━━━━━━┓
          //    equation           eqn                 eqn
          var vSpan = makeSpan(["mord", group.value.isOver ? "mover" : "munder"], [vlist], options);

          if (group.value.isOver) {
            vlist = __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
            /* default */
            ].makeVList({
              positionType: "firstBaseline",
              children: [{
                type: "elem",
                elem: vSpan
              }, {
                type: "kern",
                size: 0.2
              }, {
                type: "elem",
                elem: supSubGroup
              }]
            }, options);
          } else {
            vlist = __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
            /* default */
            ].makeVList({
              positionType: "bottom",
              positionData: vSpan.depth + 0.2 + supSubGroup.height,
              children: [{
                type: "elem",
                elem: supSubGroup
              }, {
                type: "kern",
                size: 0.2
              }, {
                type: "elem",
                elem: vSpan
              }]
            }, options);
          }
        }

        return makeSpan(["mord", group.value.isOver ? "mover" : "munder"], [vlist], options);
      };

      groupTypes.xArrow = function (group, options) {
        var style = options.style; // Build the argument groups in the appropriate style.
        // Ref: amsmath.dtx:   \hbox{$\scriptstyle\mkern#3mu{#6}\mkern#4mu$}%

        var newOptions = options.havingStyle(style.sup());
        var upperGroup = buildGroup(group.value.body, newOptions, options);
        upperGroup.classes.push("x-arrow-pad");
        var lowerGroup = void 0;

        if (group.value.below) {
          // Build the lower group
          newOptions = options.havingStyle(style.sub());
          lowerGroup = buildGroup(group.value.below, newOptions, options);
          lowerGroup.classes.push("x-arrow-pad");
        }

        var arrowBody = __WEBPACK_IMPORTED_MODULE_8__stretchy__["a"
        /* default */
        ].svgSpan(group, options); // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.
        // The point we want on the math axis is at 0.5 * arrowBody.height.


        var arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height; // 2 mu kern. Ref: amsmath.dtx: #7\if0#2\else\mkern#2mu\fi

        var upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111;

        if (group.value.label === "\\xleftequilibrium") {
          upperShift -= upperGroup.depth;
        } // Generate the vlist


        var vlist = void 0;

        if (group.value.below) {
          var lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;
          vlist = __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "individualShift",
            children: [{
              type: "elem",
              elem: upperGroup,
              shift: upperShift
            }, {
              type: "elem",
              elem: arrowBody,
              shift: arrowShift
            }, {
              type: "elem",
              elem: lowerGroup,
              shift: lowerShift
            }]
          }, options);
        } else {
          vlist = __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "individualShift",
            children: [{
              type: "elem",
              elem: upperGroup,
              shift: upperShift
            }, {
              type: "elem",
              elem: arrowBody,
              shift: arrowShift
            }]
          }, options);
        }

        vlist.children[0].children[0].children[1].classes.push("svg-align");
        return makeSpan(["mrel", "x-arrow"], [vlist], options);
      };

      groupTypes.mclass = function (group, options) {
        var elements = buildExpression(group.value.value, options, true);
        return makeSpan([group.value.mclass], elements, options);
      };

      groupTypes.raisebox = function (group, options) {
        var body = groupTypes.sizing({
          value: {
            value: [{
              type: "text",
              value: {
                body: group.value.value,
                font: "mathrm" // simulate \textrm

              }
            }],
            size: 6 // simulate \normalsize

          }
        }, options);
        var dy = Object(__WEBPACK_IMPORTED_MODULE_6__units__["a"
        /* calculateSize */
        ])(group.value.dy.value, options);
        return __WEBPACK_IMPORTED_MODULE_4__buildCommon__["a"
        /* default */
        ].makeVList({
          positionType: "shift",
          positionData: -dy,
          children: [{
            type: "elem",
            elem: body
          }]
        }, options);
      };
      /**
       * buildGroup is the function that takes a group and calls the correct groupType
       * function for it. It also handles the interaction of size and style changes
       * between parents and children.
       */


      var buildGroup = function buildGroup(group, options, baseOptions) {
        if (!group) {
          return makeSpan();
        }

        if (groupTypes[group.type]) {
          // Call the groupTypes function
          var groupNode = groupTypes[group.type](group, options); // If the size changed between the parent and the current group, account
          // for that size difference.

          if (baseOptions && options.size !== baseOptions.size) {
            groupNode = makeSpan(options.sizingClasses(baseOptions), [groupNode], options);
            var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;
            groupNode.height *= multiplier;
            groupNode.depth *= multiplier;
          }

          return groupNode;
        } else {
          throw new __WEBPACK_IMPORTED_MODULE_2__ParseError__["a"
          /* default */
          ]("Got group of unknown type: '" + group.type + "'");
        }
      };
      /**
       * Take an entire parse tree, and build it into an appropriate set of HTML
       * nodes.
       */


      function buildHTML(tree, options) {
        // buildExpression is destructive, so we need to make a clone
        // of the incoming tree so that it isn't accidentally changed
        tree = JSON.parse(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(tree)); // Build the expression contained in the tree

        var expression = buildExpression(tree, options, true);
        var body = makeSpan(["base"], expression, options); // Add struts, which ensure that the top of the HTML element falls at the
        // height of the expression, and the bottom of the HTML element falls at the
        // depth of the expression.

        var topStrut = makeSpan(["strut"]);
        var bottomStrut = makeSpan(["strut", "bottom"]);
        topStrut.style.height = body.height + "em";
        bottomStrut.style.height = body.height + body.depth + "em"; // We'd like to use `vertical-align: top` but in IE 9 this lowers the
        // baseline of the box to the bottom of this strut (instead staying in the
        // normal place) so we use an absolute value for vertical-align instead

        bottomStrut.style.verticalAlign = -body.depth + "em"; // Wrap the struts and body together

        var htmlNode = makeSpan(["katex-html"], [topStrut, bottomStrut, body]);
        htmlNode.setAttribute("aria-hidden", "true");
        return htmlNode;
      }
      /***/

    },
    /* 5 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /**
       * This file contains a list of utility functions which are useful in other
       * files.
       */

      /**
       * Provide an `indexOf` function which works in IE8, but defers to native if
       * possible.
       */

      var nativeIndexOf = Array.prototype.indexOf;

      var indexOf = function indexOf(list, elem) {
        if (list == null) {
          return -1;
        }

        if (nativeIndexOf && list.indexOf === nativeIndexOf) {
          return list.indexOf(elem);
        }

        var l = list.length;

        for (var i = 0; i < l; i++) {
          if (list[i] === elem) {
            return i;
          }
        }

        return -1;
      };
      /**
       * Return whether an element is contained in a list
       */


      var contains = function contains(list, elem) {
        return indexOf(list, elem) !== -1;
      };
      /**
       * Provide a default value if a setting is undefined
       * NOTE: Couldn't use `T` as the output type due to facebook/flow#5022.
       */


      var deflt = function deflt(setting, defaultIfUndefined) {
        return setting === undefined ? defaultIfUndefined : setting;
      }; // hyphenate and escape adapted from Facebook's React under Apache 2 license


      var uppercase = /([A-Z])/g;

      var hyphenate = function hyphenate(str) {
        return str.replace(uppercase, "-$1").toLowerCase();
      };

      var ESCAPE_LOOKUP = {
        "&": "&amp;",
        ">": "&gt;",
        "<": "&lt;",
        "\"": "&quot;",
        "'": "&#x27;"
      };
      var ESCAPE_REGEX = /[&><"']/g;
      /**
       * Escapes text to prevent scripting attacks.
       */

      function escape(text) {
        return String(text).replace(ESCAPE_REGEX, function (match) {
          return ESCAPE_LOOKUP[match];
        });
      }
      /**
       * A function to set the text content of a DOM element in all supported
       * browsers. Note that we don't define this if there is no document.
       */


      var setTextContent = void 0;

      if (typeof document !== "undefined") {
        var testNode = document.createElement("span");

        if ("textContent" in testNode) {
          setTextContent = function setTextContent(node, text) {
            node.textContent = text;
          };
        } else {
          setTextContent = function setTextContent(node, text) {
            node.innerText = text;
          };
        }
      }
      /**
       * A function to clear a node.
       */


      function clearNode(node) {
        setTextContent(node, "");
      }
      /**
       * Sometimes we want to pull out the innermost element of a group. In most
       * cases, this will just be the group itself, but when ordgroups and colors have
       * a single element, we want to pull that out.
       */


      var getBaseElem = function getBaseElem(group) {
        if (!group) {
          return false;
        } else if (group.type === "ordgroup") {
          if (group.value.length === 1) {
            return getBaseElem(group.value[0]);
          } else {
            return group;
          }
        } else if (group.type === "color") {
          if (group.value.value.length === 1) {
            return getBaseElem(group.value.value[0]);
          } else {
            return group;
          }
        } else if (group.type === "font") {
          return getBaseElem(group.value.body);
        } else {
          return group;
        }
      };
      /**
       * TeXbook algorithms often reference "character boxes", which are simply groups
       * with a single character in them. To decide if something is a character box,
       * we find its innermost group, and see if it is a single character.
       */


      var isCharacterBox = function isCharacterBox(group) {
        var baseElem = getBaseElem(group); // These are all they types of groups which hold single characters

        return baseElem.type === "mathord" || baseElem.type === "textord" || baseElem.type === "bin" || baseElem.type === "rel" || baseElem.type === "inner" || baseElem.type === "open" || baseElem.type === "close" || baseElem.type === "punct";
      };
      /* harmony default export */


      __webpack_exports__["a"] = {
        contains: contains,
        deflt: deflt,
        escape: escape,
        hyphenate: hyphenate,
        indexOf: indexOf,
        setTextContent: setTextContent,
        clearNode: clearNode,
        getBaseElem: getBaseElem,
        isCharacterBox: isCharacterBox
      };
      /***/
    },
    /* 6 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__ParseNode__ = __webpack_require__(14);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__Token__ = __webpack_require__(27);
      /**
       * This is the ParseError class, which is the main error thrown by KaTeX
       * functions when something has gone wrong. This is used to distinguish internal
       * errors from errors in the expression that the user provided.
       *
       * If possible, a caller should provide a Token or ParseNode with information
       * about where in the source string the problem occurred.
       */


      var ParseError = // Error position based on passed-in Token or ParseNode.
      function ParseError(message, // The error message
      token) // An object providing position information
      {
        __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, ParseError);

        var error = "KaTeX parse error: " + message;
        var start = void 0;
        var loc = token && token.loc;

        if (loc && loc.start <= loc.end) {
          // If we have the input and a position, make the error a bit fancier
          // Get the input
          var input = loc.lexer.input; // Prepend some information

          start = loc.start;
          var end = loc.end;

          if (start === input.length) {
            error += " at end of input: ";
          } else {
            error += " at position " + (start + 1) + ": ";
          } // Underline token in question using combining underscores


          var underlined = input.slice(start, end).replace(/[^]/g, "$&\u0332"); // Extract some context from the input and add it to the error

          var left = void 0;

          if (start > 15) {
            left = "…" + input.slice(start - 15, start);
          } else {
            left = input.slice(0, start);
          }

          var right = void 0;

          if (end + 15 < input.length) {
            right = input.slice(end, end + 15) + "…";
          } else {
            right = input.slice(end);
          }

          error += left + underlined + right;
        } // Some hackery to make ParseError a prototype of Error
        // See http://stackoverflow.com/a/8460753


        var self = new Error(error);
        self.name = "ParseError"; // $FlowFixMe

        self.__proto__ = ParseError.prototype; // $FlowFixMe

        self.position = start;
        return self;
      }; // $FlowFixMe More hackery


      ParseError.prototype.__proto__ = Error.prototype;
      /* harmony default export */

      __webpack_exports__["a"] = ParseError;
      /***/
    },
    /* 7 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      exports.default = function (instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      };
      /***/

    },
    /* 8 */

    /***/
    function (module, exports) {
      var core = module.exports = {
        version: '2.4.0'
      };
      if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

      /***/
    },
    /* 9 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);
      /**
       * This file contains information and classes for the various kinds of styles
       * used in TeX. It provides a generic `Style` class, which holds information
       * about a specific style. It then provides instances of all the different kinds
       * of styles possible, and provides functions to move between them and get
       * information about them.
       */

      /**
       * The main style class. Contains a unique id for the style, a size (which is
       * the same for cramped and uncramped version of a style), and a cramped flag.
       */


      var Style = function () {
        function Style(id, size, cramped) {
          __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, Style);

          this.id = id;
          this.size = size;
          this.cramped = cramped;
        }
        /**
         * Get the style of a superscript given a base in the current style.
         */


        __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(Style, [{
          key: "sup",
          value: function sup() {
            return styles[_sup[this.id]];
          }
          /**
           * Get the style of a subscript given a base in the current style.
           */

        }, {
          key: "sub",
          value: function sub() {
            return styles[_sub[this.id]];
          }
          /**
           * Get the style of a fraction numerator given the fraction in the current
           * style.
           */

        }, {
          key: "fracNum",
          value: function fracNum() {
            return styles[_fracNum[this.id]];
          }
          /**
           * Get the style of a fraction denominator given the fraction in the current
           * style.
           */

        }, {
          key: "fracDen",
          value: function fracDen() {
            return styles[_fracDen[this.id]];
          }
          /**
           * Get the cramped version of a style (in particular, cramping a cramped style
           * doesn't change the style).
           */

        }, {
          key: "cramp",
          value: function cramp() {
            return styles[_cramp[this.id]];
          }
          /**
           * Get a text or display version of this style.
           */

        }, {
          key: "text",
          value: function text() {
            return styles[_text[this.id]];
          }
          /**
           * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)
           */

        }, {
          key: "isTight",
          value: function isTight() {
            return this.size >= 2;
          }
        }]);

        return Style;
      }(); // Export an interface for type checking, but don't expose the implementation.
      // This way, no more styles can be generated.
      // IDs of the different styles


      var D = 0;
      var Dc = 1;
      var T = 2;
      var Tc = 3;
      var S = 4;
      var Sc = 5;
      var SS = 6;
      var SSc = 7; // Instances of the different styles

      var styles = [new Style(D, 0, false), new Style(Dc, 0, true), new Style(T, 1, false), new Style(Tc, 1, true), new Style(S, 2, false), new Style(Sc, 2, true), new Style(SS, 3, false), new Style(SSc, 3, true)]; // Lookup tables for switching from one style to another

      var _sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];
      var _sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];
      var _fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];
      var _fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];
      var _cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];
      var _text = [D, Dc, T, Tc, T, Tc, T, Tc]; // We only export some of the styles.

      /* harmony default export */

      __webpack_exports__["a"] = {
        DISPLAY: styles[D],
        TEXT: styles[T],
        SCRIPT: styles[S],
        SCRIPTSCRIPT: styles[SS]
      };
      /***/
    },
    /* 10 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _defineProperty = __webpack_require__(73);

      var _defineProperty2 = _interopRequireDefault(_defineProperty);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            (0, _defineProperty2.default)(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();
      /***/

    },
    /* 11 */

    /***/
    function (module, exports, __webpack_require__) {
      var store = __webpack_require__(52)('wks'),
          uid = __webpack_require__(32),
          Symbol = __webpack_require__(16).Symbol,
          USE_SYMBOL = typeof Symbol == 'function';

      var $exports = module.exports = function (name) {
        return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
      };

      $exports.store = store;
      /***/
    },
    /* 12 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(18);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign__ = __webpack_require__(105);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__unicodeScripts__ = __webpack_require__(42);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__utils__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__svgGeometry__ = __webpack_require__(111);
      /**
       * These objects store the data about the DOM nodes we create, as well as some
       * extra data. They can then be transformed into real DOM nodes with the
       * `toNode` function or HTML markup using `toMarkup`. They are useful for both
       * storing extra properties on the nodes, as well as providing a way to easily
       * work with the DOM.
       *
       * Similar functions for working with MathML nodes exist in mathMLTree.js.
       */

      /**
       * Create an HTML className based on a list of classes. In addition to joining
       * with spaces, we also remove null or empty classes.
       */


      var createClass = function createClass(classes) {
        classes = classes.slice();

        for (var i = classes.length - 1; i >= 0; i--) {
          if (!classes[i]) {
            classes.splice(i, 1);
          }
        }

        return classes.join(" ");
      }; // To ensure that all nodes have compatible signatures for these methods.

      /**
       * All `DomChildNode`s MUST have `height`, `depth`, and `maxFontSize` numeric
       * fields.
       *
       * `DomChildNode` is not defined as an interface since `documentFragment` also
       * has these fields but should not be considered a `DomChildNode`.
       */

      /**
       * This node represents a span node, with a className, a list of children, and
       * an inline style. It also contains information about its height, depth, and
       * maxFontSize.
       */


      var span = function () {
        function span(classes, children, options, style) {
          __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default()(this, span);

          this.classes = classes || [];
          this.children = children || [];
          this.height = 0;
          this.depth = 0;
          this.maxFontSize = 0;
          this.style = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default()({}, style);
          this.attributes = {};

          if (options) {
            if (options.style.isTight()) {
              this.classes.push("mtight");
            }

            var color = options.getColor();

            if (color) {
              this.style.color = color;
            }
          }
        }
        /**
         * Sets an arbitrary attribute on the span. Warning: use this wisely. Not all
         * browsers support attributes the same, and having too many custom attributes
         * is probably bad.
         */


        __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default()(span, [{
          key: "setAttribute",
          value: function setAttribute(attribute, value) {
            this.attributes[attribute] = value;
          }
        }, {
          key: "tryCombine",
          value: function tryCombine(sibling) {
            return false;
          }
          /**
           * Convert the span into an HTML node
           */

        }, {
          key: "toNode",
          value: function toNode() {
            var span = document.createElement("span"); // Apply the class

            span.className = createClass(this.classes); // Apply inline styles

            for (var style in this.style) {
              if (Object.prototype.hasOwnProperty.call(this.style, style)) {
                // $FlowFixMe Flow doesn't seem to understand span.style's type.
                span.style[style] = this.style[style];
              }
            } // Apply attributes


            for (var attr in this.attributes) {
              if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
                span.setAttribute(attr, this.attributes[attr]);
              }
            } // Append the children, also as HTML nodes


            for (var i = 0; i < this.children.length; i++) {
              span.appendChild(this.children[i].toNode());
            }

            return span;
          }
          /**
           * Convert the span into an HTML markup string
           */

        }, {
          key: "toMarkup",
          value: function toMarkup() {
            var markup = "<span"; // Add the class

            if (this.classes.length) {
              markup += " class=\"";
              markup += __WEBPACK_IMPORTED_MODULE_5__utils__["a"
              /* default */
              ].escape(createClass(this.classes));
              markup += "\"";
            }

            var styles = ""; // Add the styles, after hyphenation

            for (var style in this.style) {
              if (this.style.hasOwnProperty(style)) {
                styles += __WEBPACK_IMPORTED_MODULE_5__utils__["a"
                /* default */
                ].hyphenate(style) + ":" + this.style[style] + ";";
              }
            }

            if (styles) {
              markup += " style=\"" + __WEBPACK_IMPORTED_MODULE_5__utils__["a"
              /* default */
              ].escape(styles) + "\"";
            } // Add the attributes


            for (var attr in this.attributes) {
              if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
                markup += " " + attr + "=\"";
                markup += __WEBPACK_IMPORTED_MODULE_5__utils__["a"
                /* default */
                ].escape(this.attributes[attr]);
                markup += "\"";
              }
            }

            markup += ">"; // Add the markup of the children, also as markup

            for (var i = 0; i < this.children.length; i++) {
              markup += this.children[i].toMarkup();
            }

            markup += "</span>";
            return markup;
          }
        }]);

        return span;
      }();
      /**
       * This node represents an anchor (<a>) element with a hyperlink, a list of classes,
       * a list of children, and an inline style. It also contains information about its
       * height, depth, and maxFontSize.
       */


      var anchor = function () {
        function anchor(href, classes, children, options) {
          __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default()(this, anchor);

          this.href = href;
          this.classes = classes;
          this.children = children;
          this.height = 0;
          this.depth = 0;
          this.maxFontSize = 0;
          this.style = {};
          this.attributes = {};

          if (options.style.isTight()) {
            this.classes.push("mtight");
          }

          var color = options.getColor();

          if (color) {
            this.style.color = color;
          }
        }
        /**
         * Sets an arbitrary attribute on the anchor. Warning: use this wisely. Not all
         * browsers support attributes the same, and having too many custom attributes
         * is probably bad.
         */


        __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default()(anchor, [{
          key: "setAttribute",
          value: function setAttribute(attribute, value) {
            this.attributes[attribute] = value;
          }
        }, {
          key: "tryCombine",
          value: function tryCombine(sibling) {
            return false;
          }
          /**
           * Convert the anchor into an HTML node
           */

        }, {
          key: "toNode",
          value: function toNode() {
            var a = document.createElement("a"); // Apply the href

            a.setAttribute('href', this.href); // Apply the class

            if (this.classes.length) {
              a.className = createClass(this.classes);
            } // Apply inline styles


            for (var style in this.style) {
              if (Object.prototype.hasOwnProperty.call(this.style, style)) {
                // $FlowFixMe Flow doesn't seem to understand a.style's type.
                a.style[style] = this.style[style];
              }
            } // Apply attributes


            for (var attr in this.attributes) {
              if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
                a.setAttribute(attr, this.attributes[attr]);
              }
            } // Append the children, also as HTML nodes


            for (var i = 0; i < this.children.length; i++) {
              a.appendChild(this.children[i].toNode());
            }

            return a;
          }
          /**
           * Convert the a into an HTML markup string
           */

        }, {
          key: "toMarkup",
          value: function toMarkup() {
            var markup = "<a"; // Add the href

            markup += "href=\"" + (markup += __WEBPACK_IMPORTED_MODULE_5__utils__["a"
            /* default */
            ].escape(this.href)) + "\""; // Add the class

            if (this.classes.length) {
              markup += " class=\"" + __WEBPACK_IMPORTED_MODULE_5__utils__["a"
              /* default */
              ].escape(createClass(this.classes)) + "\"";
            }

            var styles = ""; // Add the styles, after hyphenation

            for (var style in this.style) {
              if (this.style.hasOwnProperty(style)) {
                styles += __WEBPACK_IMPORTED_MODULE_5__utils__["a"
                /* default */
                ].hyphenate(style) + ":" + this.style[style] + ";";
              }
            }

            if (styles) {
              markup += " style=\"" + __WEBPACK_IMPORTED_MODULE_5__utils__["a"
              /* default */
              ].escape(styles) + "\"";
            } // Add the attributes


            for (var attr in this.attributes) {
              if (attr !== "href" && Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
                markup += " " + attr + "=\"" + __WEBPACK_IMPORTED_MODULE_5__utils__["a"
                /* default */
                ].escape(this.attributes[attr]) + "\"";
              }
            }

            markup += ">"; // Add the markup of the children, also as markup

            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
              for (var _iterator = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(this.children), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var child = _step.value;
                markup += child.toMarkup();
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }

            markup += "</a>";
            return markup;
          }
        }]);

        return anchor;
      }();
      /**
       * This node represents a document fragment, which contains elements, but when
       * placed into the DOM doesn't have any representation itself. Thus, it only
       * contains children and doesn't have any HTML properties. It also keeps track
       * of a height, depth, and maxFontSize.
       */


      var documentFragment = function () {
        function documentFragment(children) {
          __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default()(this, documentFragment);

          this.children = children || [];
          this.height = 0;
          this.depth = 0;
          this.maxFontSize = 0;
        }
        /**
         * Convert the fragment into a node
         */


        __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default()(documentFragment, [{
          key: "toNode",
          value: function toNode() {
            // Create a fragment
            var frag = document.createDocumentFragment(); // Append the children

            for (var i = 0; i < this.children.length; i++) {
              frag.appendChild(this.children[i].toNode());
            }

            return frag;
          }
          /**
           * Convert the fragment into HTML markup
           */

        }, {
          key: "toMarkup",
          value: function toMarkup() {
            var markup = ""; // Simply concatenate the markup for the children together

            for (var i = 0; i < this.children.length; i++) {
              markup += this.children[i].toMarkup();
            }

            return markup;
          }
        }]);

        return documentFragment;
      }();

      var iCombinations = {
        'î': "\u0131\u0302",
        'ï': "\u0131\u0308",
        'í': "\u0131\u0301",
        // 'ī': '\u0131\u0304', // enable when we add Extended Latin
        'ì': "\u0131\u0300"
      };
      /**
       * A symbol node contains information about a single symbol. It either renders
       * to a single text node, or a span with a single text node in it, depending on
       * whether it has CSS classes, styles, or needs italic correction.
       */

      var symbolNode = function () {
        function symbolNode(value, height, depth, italic, skew, width, classes, style) {
          __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default()(this, symbolNode);

          this.value = value;
          this.height = height || 0;
          this.depth = depth || 0;
          this.italic = italic || 0;
          this.skew = skew || 0;
          this.width = width || 0;
          this.classes = classes || [];
          this.style = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default()({}, style);
          this.maxFontSize = 0; // Mark text from non-Latin scripts with specific classes so that we
          // can specify which fonts to use.  This allows us to render these
          // characters with a serif font in situations where the browser would
          // either default to a sans serif or render a placeholder character.
          // We use CSS class names like cjk_fallback, hangul_fallback and
          // brahmic_fallback. See ./unicodeScripts.js for the set of possible
          // script names

          var script = Object(__WEBPACK_IMPORTED_MODULE_4__unicodeScripts__["a"
          /* scriptFromCodepoint */
          ])(this.value.charCodeAt(0));

          if (script) {
            this.classes.push(script + "_fallback");
          }

          if (/[îïíì]/.test(this.value)) {
            // add ī when we add Extended Latin
            this.value = iCombinations[this.value];
          }
        }

        __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default()(symbolNode, [{
          key: "tryCombine",
          value: function tryCombine(sibling) {
            if (!sibling || !(sibling instanceof symbolNode) || this.italic > 0 || createClass(this.classes) !== createClass(sibling.classes) || this.skew !== sibling.skew || this.maxFontSize !== sibling.maxFontSize) {
              return false;
            }

            for (var style in this.style) {
              if (this.style.hasOwnProperty(style) && this.style[style] !== sibling.style[style]) {
                return false;
              }
            }

            for (var _style in sibling.style) {
              if (sibling.style.hasOwnProperty(_style) && this.style[_style] !== sibling.style[_style]) {
                return false;
              }
            }

            this.value += sibling.value;
            this.height = Math.max(this.height, sibling.height);
            this.depth = Math.max(this.depth, sibling.depth);
            this.italic = sibling.italic;
            return true;
          }
          /**
           * Creates a text node or span from a symbol node. Note that a span is only
           * created if it is needed.
           */

        }, {
          key: "toNode",
          value: function toNode() {
            var node = document.createTextNode(this.value);
            var span = null;

            if (this.italic > 0) {
              span = document.createElement("span");
              span.style.marginRight = this.italic + "em";
            }

            if (this.classes.length > 0) {
              span = span || document.createElement("span");
              span.className = createClass(this.classes);
            }

            for (var style in this.style) {
              if (this.style.hasOwnProperty(style)) {
                span = span || document.createElement("span"); // $FlowFixMe Flow doesn't seem to understand span.style's type.

                span.style[style] = this.style[style];
              }
            }

            if (span) {
              span.appendChild(node);
              return span;
            } else {
              return node;
            }
          }
          /**
           * Creates markup for a symbol node.
           */

        }, {
          key: "toMarkup",
          value: function toMarkup() {
            // TODO(alpert): More duplication than I'd like from
            // span.prototype.toMarkup and symbolNode.prototype.toNode...
            var needsSpan = false;
            var markup = "<span";

            if (this.classes.length) {
              needsSpan = true;
              markup += " class=\"";
              markup += __WEBPACK_IMPORTED_MODULE_5__utils__["a"
              /* default */
              ].escape(createClass(this.classes));
              markup += "\"";
            }

            var styles = "";

            if (this.italic > 0) {
              styles += "margin-right:" + this.italic + "em;";
            }

            for (var style in this.style) {
              if (this.style.hasOwnProperty(style)) {
                styles += __WEBPACK_IMPORTED_MODULE_5__utils__["a"
                /* default */
                ].hyphenate(style) + ":" + this.style[style] + ";";
              }
            }

            if (styles) {
              needsSpan = true;
              markup += " style=\"" + __WEBPACK_IMPORTED_MODULE_5__utils__["a"
              /* default */
              ].escape(styles) + "\"";
            }

            var escaped = __WEBPACK_IMPORTED_MODULE_5__utils__["a"
            /* default */
            ].escape(this.value);

            if (needsSpan) {
              markup += ">";
              markup += escaped;
              markup += "</span>";
              return markup;
            } else {
              return escaped;
            }
          }
        }]);

        return symbolNode;
      }();
      /**
       * SVG nodes are used to render stretchy wide elements.
       */


      var svgNode = function () {
        function svgNode(children, attributes) {
          __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default()(this, svgNode);

          this.children = children || [];
          this.attributes = attributes || {};
          this.height = 0;
          this.depth = 0;
          this.maxFontSize = 0;
        } // Required for all `DomChildNode`s. Are always 0 for svgNode.


        __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default()(svgNode, [{
          key: "toNode",
          value: function toNode() {
            var svgNS = "http://www.w3.org/2000/svg";
            var node = document.createElementNS(svgNS, "svg"); // Apply attributes

            for (var attr in this.attributes) {
              if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
                node.setAttribute(attr, this.attributes[attr]);
              }
            }

            for (var i = 0; i < this.children.length; i++) {
              node.appendChild(this.children[i].toNode());
            }

            return node;
          }
        }, {
          key: "toMarkup",
          value: function toMarkup() {
            var markup = "<svg"; // Apply attributes

            for (var attr in this.attributes) {
              if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
                markup += " " + attr + "='" + this.attributes[attr] + "'";
              }
            }

            markup += ">";

            for (var i = 0; i < this.children.length; i++) {
              markup += this.children[i].toMarkup();
            }

            markup += "</svg>";
            return markup;
          }
        }]);

        return svgNode;
      }();

      var pathNode = function () {
        function pathNode(pathName, alternate) {
          __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default()(this, pathNode);

          this.pathName = pathName;
          this.alternate = alternate; // Used only for tall \sqrt
        }

        __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default()(pathNode, [{
          key: "toNode",
          value: function toNode() {
            var svgNS = "http://www.w3.org/2000/svg";
            var node = document.createElementNS(svgNS, "path");

            if (this.alternate) {
              node.setAttribute("d", this.alternate);
            } else {
              node.setAttribute("d", __WEBPACK_IMPORTED_MODULE_6__svgGeometry__["a"
              /* default */
              ].path[this.pathName]);
            }

            return node;
          }
        }, {
          key: "toMarkup",
          value: function toMarkup() {
            if (this.alternate) {
              return "<path d='" + this.alternate + "'/>";
            } else {
              return "<path d='" + __WEBPACK_IMPORTED_MODULE_6__svgGeometry__["a"
              /* default */
              ].path[this.pathName] + "'/>";
            }
          }
        }]);

        return pathNode;
      }();

      var lineNode = function () {
        function lineNode(attributes) {
          __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default()(this, lineNode);

          this.attributes = attributes || {};
        }

        __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default()(lineNode, [{
          key: "toNode",
          value: function toNode() {
            var svgNS = "http://www.w3.org/2000/svg";
            var node = document.createElementNS(svgNS, "line"); // Apply attributes

            for (var attr in this.attributes) {
              if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
                node.setAttribute(attr, this.attributes[attr]);
              }
            }

            return node;
          }
        }, {
          key: "toMarkup",
          value: function toMarkup() {
            var markup = "<line";

            for (var attr in this.attributes) {
              if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
                markup += " " + attr + "='" + this.attributes[attr] + "'";
              }
            }

            markup += "/>";
            return markup;
          }
        }]);

        return lineNode;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = {
        span: span,
        anchor: anchor,
        documentFragment: documentFragment,
        symbolNode: symbolNode,
        svgNode: svgNode,
        pathNode: pathNode,
        lineNode: lineNode
      };
      /***/
    },
    /* 13 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__ = __webpack_require__(57);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__domTree__ = __webpack_require__(12);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__utils__ = __webpack_require__(5);
      /**
       * This file provides support to buildMathML.js and buildHTML.js
       * for stretchy wide elements rendered from SVG files
       * and other CSS trickery.
       */


      var stretchyCodePoint = {
        widehat: "^",
        widetilde: "~",
        utilde: "~",
        overleftarrow: "\u2190",
        underleftarrow: "\u2190",
        xleftarrow: "\u2190",
        overrightarrow: "\u2192",
        underrightarrow: "\u2192",
        xrightarrow: "\u2192",
        underbrace: "\u23B5",
        overbrace: "\u23DE",
        overleftrightarrow: "\u2194",
        underleftrightarrow: "\u2194",
        xleftrightarrow: "\u2194",
        Overrightarrow: "\u21D2",
        xRightarrow: "\u21D2",
        overleftharpoon: "\u21BC",
        xleftharpoonup: "\u21BC",
        overrightharpoon: "\u21C0",
        xrightharpoonup: "\u21C0",
        xLeftarrow: "\u21D0",
        xLeftrightarrow: "\u21D4",
        xhookleftarrow: "\u21A9",
        xhookrightarrow: "\u21AA",
        xmapsto: "\u21A6",
        xrightharpoondown: "\u21C1",
        xleftharpoondown: "\u21BD",
        xrightleftharpoons: "\u21CC",
        xleftrightharpoons: "\u21CB",
        xtwoheadleftarrow: "\u219E",
        xtwoheadrightarrow: "\u21A0",
        xlongequal: "=",
        xtofrom: "\u21C4",
        xrightleftarrows: "\u21C4",
        xrightequilibrium: "\u21CC",
        // Not a perfect match.
        xleftequilibrium: "\u21CB" // None better available.

      };

      var mathMLnode = function mathMLnode(label) {
        var node = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
        /* default */
        ].MathNode("mo", [new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
        /* default */
        ].TextNode(stretchyCodePoint[label.substr(1)])]);
        node.setAttribute("stretchy", "true");
        return node;
      }; // Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.
      // Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)
      // Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)
      // Licensed under the SIL Open Font License, Version 1.1.
      // See \nhttp://scripts.sil.org/OFL
      // Very Long SVGs
      //    Many of the KaTeX stretchy wide elements use a long SVG image and an
      //    overflow: hidden tactic to achieve a stretchy image while avoiding
      //    distortion of arrowheads or brace corners.
      //    The SVG typically contains a very long (400 em) arrow.
      //    The SVG is in a container span that has overflow: hidden, so the span
      //    acts like a window that exposes only part of the  SVG.
      //    The SVG always has a longer, thinner aspect ratio than the container span.
      //    After the SVG fills 100% of the height of the container span,
      //    there is a long arrow shaft left over. That left-over shaft is not shown.
      //    Instead, it is sliced off because the span's CSS has overflow: hidden.
      //    Thus, the reader sees an arrow that matches the subject matter width
      //    without distortion.
      //    Some functions, such as \cancel, need to vary their aspect ratio. These
      //    functions do not get the overflow SVG treatment.
      // Second Brush Stroke
      //    Low resolution monitors struggle to display images in fine detail.
      //    So browsers apply anti-aliasing. A long straight arrow shaft therefore
      //    will sometimes appear as if it has a blurred edge.
      //    To mitigate this, these SVG files contain a second "brush-stroke" on the
      //    arrow shafts. That is, a second long thin rectangular SVG path has been
      //    written directly on top of each arrow shaft. This reinforcement causes
      //    some of the screen pixels to display as black instead of the anti-aliased
      //    gray pixel that a  single path would generate. So we get arrow shafts
      //    whose edges appear to be sharper.
      // In the katexImagesData object just below, the dimensions all
      // correspond to path geometry inside the relevant SVG.
      // For example, \overrightarrow uses the same arrowhead as glyph U+2192
      // from the KaTeX Main font. The scaling factor is 1000.
      // That is, inside the font, that arrowhead is 522 units tall, which
      // corresponds to 0.522 em inside the document.


      var katexImagesData = {
        //   path(s), minWidth, height, align
        overrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"],
        overleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"],
        underrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"],
        underleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"],
        xrightarrow: [["rightarrow"], 1.469, 522, "xMaxYMin"],
        xleftarrow: [["leftarrow"], 1.469, 522, "xMinYMin"],
        Overrightarrow: [["doublerightarrow"], 0.888, 560, "xMaxYMin"],
        xRightarrow: [["doublerightarrow"], 1.526, 560, "xMaxYMin"],
        xLeftarrow: [["doubleleftarrow"], 1.526, 560, "xMinYMin"],
        overleftharpoon: [["leftharpoon"], 0.888, 522, "xMinYMin"],
        xleftharpoonup: [["leftharpoon"], 0.888, 522, "xMinYMin"],
        xleftharpoondown: [["leftharpoondown"], 0.888, 522, "xMinYMin"],
        overrightharpoon: [["rightharpoon"], 0.888, 522, "xMaxYMin"],
        xrightharpoonup: [["rightharpoon"], 0.888, 522, "xMaxYMin"],
        xrightharpoondown: [["rightharpoondown"], 0.888, 522, "xMaxYMin"],
        xlongequal: [["longequal"], 0.888, 334, "xMinYMin"],
        xtwoheadleftarrow: [["twoheadleftarrow"], 0.888, 334, "xMinYMin"],
        xtwoheadrightarrow: [["twoheadrightarrow"], 0.888, 334, "xMaxYMin"],
        overleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522],
        overbrace: [["leftbrace", "midbrace", "rightbrace"], 1.6, 548],
        underbrace: [["leftbraceunder", "midbraceunder", "rightbraceunder"], 1.6, 548],
        underleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522],
        xleftrightarrow: [["leftarrow", "rightarrow"], 1.75, 522],
        xLeftrightarrow: [["doubleleftarrow", "doublerightarrow"], 1.75, 560],
        xrightleftharpoons: [["leftharpoondownplus", "rightharpoonplus"], 1.75, 716],
        xleftrightharpoons: [["leftharpoonplus", "rightharpoondownplus"], 1.75, 716],
        xhookleftarrow: [["leftarrow", "righthook"], 1.08, 522],
        xhookrightarrow: [["lefthook", "rightarrow"], 1.08, 522],
        overlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522],
        underlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522],
        overgroup: [["leftgroup", "rightgroup"], 0.888, 342],
        undergroup: [["leftgroupunder", "rightgroupunder"], 0.888, 342],
        xmapsto: [["leftmapsto", "rightarrow"], 1.5, 522],
        xtofrom: [["leftToFrom", "rightToFrom"], 1.75, 528],
        // The next three arrows are from the mhchem package.
        // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the
        // document as \xrightarrow or \xrightleftharpoons. Those have
        // min-length = 1.75em, so we set min-length on these next three to match.
        xrightleftarrows: [["baraboveleftarrow", "rightarrowabovebar"], 1.75, 667],
        xrightequilibrium: [["baraboveshortleftharpoon", "rightharpoonaboveshortbar"], 1.75, 716],
        xleftequilibrium: [["shortbaraboveleftharpoon", "shortrightharpoonabovebar"], 1.75, 716]
      };

      var groupLength = function groupLength(arg) {
        if (arg.type === "ordgroup") {
          return arg.value.length;
        } else {
          return 1;
        }
      };

      var svgSpan = function svgSpan(group, options) {
        // Create a span with inline SVG for the element.
        function buildSvgSpan_() {
          var viewBoxWidth = 400000; // default

          var label = group.value.label.substr(1);

          if (__WEBPACK_IMPORTED_MODULE_4__utils__["a"
          /* default */
          ].contains(["widehat", "widetilde", "utilde"], label)) {
            // There are four SVG images available for each function.
            // Choose a taller image when there are more characters.
            var numChars = groupLength(group.value.base);
            var viewBoxHeight = void 0;
            var pathName = void 0;

            var _height = void 0;

            if (numChars > 5) {
              viewBoxHeight = label === "widehat" ? 420 : 312;
              viewBoxWidth = label === "widehat" ? 2364 : 2340; // Next get the span height, in 1000 ems

              _height = label === "widehat" ? 0.42 : 0.34;
              pathName = (label === "widehat" ? "widehat" : "tilde") + "4";
            } else {
              var imgIndex = [1, 1, 2, 2, 3, 3][numChars];

              if (label === "widehat") {
                viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];
                viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];
                _height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];
                pathName = "widehat" + imgIndex;
              } else {
                viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];
                viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];
                _height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];
                pathName = "tilde" + imgIndex;
              }
            }

            var path = new __WEBPACK_IMPORTED_MODULE_1__domTree__["a"
            /* default */
            ].pathNode(pathName);
            var svgNode = new __WEBPACK_IMPORTED_MODULE_1__domTree__["a"
            /* default */
            ].svgNode([path], {
              "width": "100%",
              "height": _height + "em",
              "viewBox": "0 0 " + viewBoxWidth + " " + viewBoxHeight,
              "preserveAspectRatio": "none"
            });
            return {
              span: __WEBPACK_IMPORTED_MODULE_2__buildCommon__["a"
              /* default */
              ].makeSpan([], [svgNode], options),
              minWidth: 0,
              height: _height
            };
          } else {
            var spans = [];

            var _katexImagesData$labe = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default()(katexImagesData[label], 4),
                paths = _katexImagesData$labe[0],
                _minWidth = _katexImagesData$labe[1],
                _viewBoxHeight = _katexImagesData$labe[2],
                align1 = _katexImagesData$labe[3];

            var _height2 = _viewBoxHeight / 1000;

            var numSvgChildren = paths.length;
            var widthClasses = void 0;
            var aligns = void 0;

            if (numSvgChildren === 1) {
              widthClasses = ["hide-tail"];
              aligns = [align1];
            } else if (numSvgChildren === 2) {
              widthClasses = ["halfarrow-left", "halfarrow-right"];
              aligns = ["xMinYMin", "xMaxYMin"];
            } else if (numSvgChildren === 3) {
              widthClasses = ["brace-left", "brace-center", "brace-right"];
              aligns = ["xMinYMin", "xMidYMin", "xMaxYMin"];
            } else {
              throw new Error("Correct katexImagesData or update code here to support\n                    " + numSvgChildren + " children.");
            }

            for (var i = 0; i < numSvgChildren; i++) {
              var _path = new __WEBPACK_IMPORTED_MODULE_1__domTree__["a"
              /* default */
              ].pathNode(paths[i]);

              var _svgNode = new __WEBPACK_IMPORTED_MODULE_1__domTree__["a"
              /* default */
              ].svgNode([_path], {
                "width": "400em",
                "height": _height2 + "em",
                "viewBox": "0 0 " + viewBoxWidth + " " + _viewBoxHeight,
                "preserveAspectRatio": aligns[i] + " slice"
              });

              var _span = __WEBPACK_IMPORTED_MODULE_2__buildCommon__["a"
              /* default */
              ].makeSpan([widthClasses[i]], [_svgNode], options);

              if (numSvgChildren === 1) {
                return {
                  span: _span,
                  minWidth: _minWidth,
                  height: _height2
                };
              } else {
                _span.style.height = _height2 + "em";
                spans.push(_span);
              }
            }

            return {
              span: __WEBPACK_IMPORTED_MODULE_2__buildCommon__["a"
              /* default */
              ].makeSpan(["stretchy"], spans, options),
              minWidth: _minWidth,
              height: _height2
            };
          }
        } // buildSvgSpan_()


        var _buildSvgSpan_ = buildSvgSpan_(),
            span = _buildSvgSpan_.span,
            minWidth = _buildSvgSpan_.minWidth,
            height = _buildSvgSpan_.height; // Note that we are returning span.depth = 0.
        // Any adjustments relative to the baseline must be done in buildHTML.


        span.height = height;
        span.style.height = height + "em";

        if (minWidth > 0) {
          span.style.minWidth = minWidth + "em";
        }

        return span;
      };

      var encloseSpan = function encloseSpan(inner, label, pad, options) {
        // Return an image span for \cancel, \bcancel, \xcancel, or \fbox
        var img = void 0;
        var totalHeight = inner.height + inner.depth + 2 * pad;

        if (/fbox|color/.test(label)) {
          img = __WEBPACK_IMPORTED_MODULE_2__buildCommon__["a"
          /* default */
          ].makeSpan(["stretchy", label], [], options);

          if (label === "fbox") {
            var color = options.color && options.getColor();

            if (color) {
              img.style.borderColor = color;
            }
          }
        } else {
          // \cancel, \bcancel, or \xcancel
          // Since \cancel's SVG is inline and it omits the viewBox attribute,
          // its stroke-width will not vary with span area.
          var lines = [];

          if (/^[bx]cancel$/.test(label)) {
            lines.push(new __WEBPACK_IMPORTED_MODULE_1__domTree__["a"
            /* default */
            ].lineNode({
              "x1": "0",
              "y1": "0",
              "x2": "100%",
              "y2": "100%",
              "stroke-width": "0.046em"
            }));
          }

          if (/^x?cancel$/.test(label)) {
            lines.push(new __WEBPACK_IMPORTED_MODULE_1__domTree__["a"
            /* default */
            ].lineNode({
              "x1": "0",
              "y1": "100%",
              "x2": "100%",
              "y2": "0",
              "stroke-width": "0.046em"
            }));
          }

          var svgNode = new __WEBPACK_IMPORTED_MODULE_1__domTree__["a"
          /* default */
          ].svgNode(lines, {
            "width": "100%",
            "height": totalHeight + "em"
          });
          img = __WEBPACK_IMPORTED_MODULE_2__buildCommon__["a"
          /* default */
          ].makeSpan([], [svgNode], options);
        }

        img.height = totalHeight;
        img.style.height = totalHeight + "em";
        return img;
      };

      var ruleSpan = function ruleSpan(className, lineThickness, options) {
        // Get a span with an SVG path that fills the middle fifth of the span.
        // We're using an extra wide span so Chrome won't round it down to zero.
        var path = void 0;
        var svgNode = void 0;
        var parentClass = "stretchy"; // default

        if (className === "vertical-separator") {
          path = new __WEBPACK_IMPORTED_MODULE_1__domTree__["a"
          /* default */
          ].pathNode("vertSeparator");
          svgNode = new __WEBPACK_IMPORTED_MODULE_1__domTree__["a"
          /* default */
          ].svgNode([path], {
            "width": "0.25em",
            // contains a path that is 0.05 ems wide.
            "height": "400em",
            "viewBox": "0 0 250 400000",
            "preserveAspectRatio": "xMinYMin slice"
          });
          parentClass = "vertical-separator";
        } else {
          // The next two lines are the only place in KaTeX where SVG paths are
          // put into a viewBox that is not always exactly a 1000:1 scale to the
          // document em size. Instead, the path is a horizontal line set to
          // take up the middle fifth of the viewBox and span. If the context is
          // normalsize/textstyle then the line will be 0.04em and the usual
          // 1000:1 ratio holds. But if the context is scriptstyle, then
          // lineThickness > 0.04em and we have a ratio somewhat different than
          // 1000:1.
          path = new __WEBPACK_IMPORTED_MODULE_1__domTree__["a"
          /* default */
          ].pathNode("stdHorizRule");
          svgNode = new __WEBPACK_IMPORTED_MODULE_1__domTree__["a"
          /* default */
          ].svgNode([path], {
            "width": "400em",
            "height": 5 * lineThickness + "em",
            "viewBox": "0 0 400000 200",
            "preserveAspectRatio": "xMinYMin slice"
          });
        }

        return __WEBPACK_IMPORTED_MODULE_2__buildCommon__["a"
        /* default */
        ].makeSpan([parentClass], [svgNode], options);
      };
      /* harmony default export */


      __webpack_exports__["a"] = {
        encloseSpan: encloseSpan,
        mathMLnode: mathMLnode,
        ruleSpan: ruleSpan,
        svgSpan: svgSpan
      };
      /***/
    },
    /* 14 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__SourceLocation__ = __webpack_require__(31);
      /**
       * The resulting parse tree nodes of the parse tree.
       *
       * It is possible to provide position information, so that a `ParseNode` can
       * fulfill a role similar to a `Token` in error reporting.
       * For details on the corresponding properties see `Token` constructor.
       * Providing such information can lead to better error reporting.
       */


      var ParseNode = function ParseNode(type, // type of node, like e.g. "ordgroup"
      value, // type-specific representation of the node
      mode, // parse mode in action for this node, "math" or "text"
      first, // first token or node of the input for
      last) // last token or node of the input for this
      // node, will default to firstToken if unset
      {
        __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, ParseNode);

        this.type = type;
        this.value = value;
        this.mode = mode;
        this.loc = __WEBPACK_IMPORTED_MODULE_1__SourceLocation__["a"
        /* default */
        ].range(first, last);
      };
      /* harmony default export */


      __webpack_exports__["a"] = ParseNode;
      /***/
    },
    /* 15 */

    /***/
    function (module, exports, __webpack_require__) {
      var anObject = __webpack_require__(22),
          IE8_DOM_DEFINE = __webpack_require__(70),
          toPrimitive = __webpack_require__(71),
          dP = Object.defineProperty;

      exports.f = __webpack_require__(23) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
        anObject(O);
        P = toPrimitive(P, true);
        anObject(Attributes);
        if (IE8_DOM_DEFINE) try {
          return dP(O, P, Attributes);
        } catch (e) {
          /* empty */
        }
        if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
        if ('value' in Attributes) O[P] = Attributes.value;
        return O;
      };
      /***/
    },
    /* 16 */

    /***/
    function (module, exports) {
      // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
      var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
      if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

      /***/
    },
    /* 17 */

    /***/
    function (module, exports) {
      module.exports = {};
      /***/
    },
    /* 18 */

    /***/
    function (module, exports, __webpack_require__) {
      module.exports = {
        "default": __webpack_require__(103),
        __esModule: true
      };
      /***/
    },
    /* 19 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return validUnit;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return calculateSize;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__ParseError__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__Options__ = __webpack_require__(43);
      /**
       * This file does conversion between units.  In particular, it provides
       * calculateSize to convert other units into ems.
       */
      // This table gives the number of TeX pts in one of each *absolute* TeX unit.
      // Thus, multiplying a length by this number converts the length from units
      // into pts.  Dividing the result by ptPerEm gives the number of ems
      // *assuming* a font size of ptPerEm (normal size, normal style).


      var ptPerUnit = {
        // https://en.wikibooks.org/wiki/LaTeX/Lengths and
        // https://tex.stackexchange.com/a/8263
        "pt": 1,
        // TeX point
        "mm": 7227 / 2540,
        // millimeter
        "cm": 7227 / 254,
        // centimeter
        "in": 72.27,
        // inch
        "bp": 803 / 800,
        // big (PostScript) points
        "pc": 12,
        // pica
        "dd": 1238 / 1157,
        // didot
        "cc": 14856 / 1157,
        // cicero (12 didot)
        "nd": 685 / 642,
        // new didot
        "nc": 1370 / 107,
        // new cicero (12 new didot)
        "sp": 1 / 65536,
        // scaled point (TeX's internal smallest unit)
        // https://tex.stackexchange.com/a/41371
        "px": 803 / 800 // \pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX

      }; // Dictionary of relative units, for fast validity testing.

      var relativeUnit = {
        "ex": true,
        "em": true,
        "mu": true
      };
      /**
       * Determine whether the specified unit (either a string defining the unit
       * or a "size" parse node containing a unit field) is valid.
       */

      var validUnit = function validUnit(unit) {
        if (typeof unit !== "string") {
          unit = unit.unit;
        }

        return unit in ptPerUnit || unit in relativeUnit || unit === "ex";
      };
      /*
       * Convert a "size" parse node (with numeric "number" and string "unit" fields,
       * as parsed by functions.js argType "size") into a CSS em value for the
       * current style/scale.  `options` gives the current options.
       */


      var calculateSize = function calculateSize(sizeValue, options) {
        var scale = void 0;

        if (sizeValue.unit in ptPerUnit) {
          // Absolute units
          scale = ptPerUnit[sizeValue.unit] // Convert unit to pt
          / options.fontMetrics().ptPerEm // Convert pt to CSS em
          / options.sizeMultiplier; // Unscale to make absolute units
        } else if (sizeValue.unit === "mu") {
          // `mu` units scale with scriptstyle/scriptscriptstyle.
          scale = options.fontMetrics().cssEmPerMu;
        } else {
          // Other relative units always refer to the *textstyle* font
          // in the current size.
          var unitOptions = void 0;

          if (options.style.isTight()) {
            // isTight() means current style is script/scriptscript.
            unitOptions = options.havingStyle(options.style.text());
          } else {
            unitOptions = options;
          } // TODO: In TeX these units are relative to the quad of the current
          // *text* font, e.g. cmr10. KaTeX instead uses values from the
          // comparably-sized *Computer Modern symbol* font. At 10pt, these
          // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;
          // cmr5=1.361133, cmsy5=1.472241. Consider $\scriptsize a\kern1emb$.
          // TeX \showlists shows a kern of 1.13889 * fontsize;
          // KaTeX shows a kern of 1.171 * fontsize.


          if (sizeValue.unit === "ex") {
            scale = unitOptions.fontMetrics().xHeight;
          } else if (sizeValue.unit === "em") {
            scale = unitOptions.fontMetrics().quad;
          } else {
            throw new __WEBPACK_IMPORTED_MODULE_0__ParseError__["a"
            /* default */
            ]("Invalid unit: '" + sizeValue.unit + "'");
          }

          if (unitOptions !== options) {
            scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;
          }
        }

        return Math.min(sizeValue.number * scale, options.maxSize);
      };
      /***/

    },
    /* 20 */

    /***/
    function (module, exports) {
      module.exports = function (it) {
        return typeof it === 'object' ? it !== null : typeof it === 'function';
      };
      /***/

    },
    /* 21 */

    /***/
    function (module, exports) {
      var hasOwnProperty = {}.hasOwnProperty;

      module.exports = function (it, key) {
        return hasOwnProperty.call(it, key);
      };
      /***/

    },
    /* 22 */

    /***/
    function (module, exports, __webpack_require__) {
      var isObject = __webpack_require__(20);

      module.exports = function (it) {
        if (!isObject(it)) throw TypeError(it + ' is not an object!');
        return it;
      };
      /***/

    },
    /* 23 */

    /***/
    function (module, exports, __webpack_require__) {
      // Thank's IE8 for his funny defineProperty
      module.exports = !__webpack_require__(24)(function () {
        return Object.defineProperty({}, 'a', {
          get: function get() {
            return 7;
          }
        }).a != 7;
      });
      /***/
    },
    /* 24 */

    /***/
    function (module, exports) {
      module.exports = function (exec) {
        try {
          return !!exec();
        } catch (e) {
          return true;
        }
      };
      /***/

    },
    /* 25 */

    /***/
    function (module, exports, __webpack_require__) {
      var global = __webpack_require__(16),
          core = __webpack_require__(8),
          ctx = __webpack_require__(47),
          hide = __webpack_require__(26),
          PROTOTYPE = 'prototype';

      var $export = function $export(type, name, source) {
        var IS_FORCED = type & $export.F,
            IS_GLOBAL = type & $export.G,
            IS_STATIC = type & $export.S,
            IS_PROTO = type & $export.P,
            IS_BIND = type & $export.B,
            IS_WRAP = type & $export.W,
            exports = IS_GLOBAL ? core : core[name] || (core[name] = {}),
            expProto = exports[PROTOTYPE],
            target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE],
            key,
            own,
            out;
        if (IS_GLOBAL) source = name;

        for (key in source) {
          // contains in native
          own = !IS_FORCED && target && target[key] !== undefined;
          if (own && key in exports) continue; // export native or passed

          out = own ? target[key] : source[key]; // prevent global pollution for namespaces

          exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key] // bind timers to global for call from export context
          : IS_BIND && own ? ctx(out, global) // wrap global constructors for prevent change them in library
          : IS_WRAP && target[key] == out ? function (C) {
            var F = function F(a, b, c) {
              if (this instanceof C) {
                switch (arguments.length) {
                  case 0:
                    return new C();

                  case 1:
                    return new C(a);

                  case 2:
                    return new C(a, b);
                }

                return new C(a, b, c);
              }

              return C.apply(this, arguments);
            };

            F[PROTOTYPE] = C[PROTOTYPE];
            return F; // make static versions for prototype methods
          }(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out; // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%

          if (IS_PROTO) {
            (exports.virtual || (exports.virtual = {}))[key] = out; // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%

            if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
          }
        }
      }; // type bitmap


      $export.F = 1; // forced

      $export.G = 2; // global

      $export.S = 4; // static

      $export.P = 8; // proto

      $export.B = 16; // bind

      $export.W = 32; // wrap

      $export.U = 64; // safe

      $export.R = 128; // real proto method for `library` 

      module.exports = $export;
      /***/
    },
    /* 26 */

    /***/
    function (module, exports, __webpack_require__) {
      var dP = __webpack_require__(15),
          createDesc = __webpack_require__(33);

      module.exports = __webpack_require__(23) ? function (object, key, value) {
        return dP.f(object, key, createDesc(1, value));
      } : function (object, key, value) {
        object[key] = value;
        return object;
      };
      /***/
    },
    /* 27 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return Token;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__SourceLocation__ = __webpack_require__(31);
      /**
       * Interface required to break circular dependency between Token, Lexer, and
       * ParseError.
       */

      /**
       * The resulting token returned from `lex`.
       *
       * It consists of the token text plus some position information.
       * The position information is essentially a range in an input string,
       * but instead of referencing the bare input string, we refer to the lexer.
       * That way it is possible to attach extra metadata to the input string,
       * like for example a file name or similar.
       *
       * The position information is optional, so it is OK to construct synthetic
       * tokens if appropriate. Not providing available position information may
       * lead to degraded error reporting, though.
       */


      var Token = function () {
        function Token(text, // the text of this token
        loc) {
          __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, Token);

          this.text = text;
          this.loc = loc;
        }
        /**
         * Given a pair of tokens (this and endToken), compute a `Token` encompassing
         * the whole input range enclosed by these two.
         */


        __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(Token, [{
          key: "range",
          value: function range(endToken, // last token of the range, inclusive
          text) // the text of the newly constructed token
          {
            return new Token(text, __WEBPACK_IMPORTED_MODULE_2__SourceLocation__["a"
            /* default */
            ].range(this, endToken));
          }
        }]);

        return Token;
      }();
      /***/

    },
    /* 28 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /**
       * This file holds a list of all no-argument functions and single-character
       * symbols (like 'a' or ';').
       *
       * For each of the symbols, there are three properties they can have:
       * - font (required): the font to be used for this symbol. Either "main" (the
           normal font), or "ams" (the ams fonts).
       * - group (required): the ParseNode group type the symbol should have (i.e.
           "textord", "mathord", etc).
           See https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types
       * - replace: the character that this symbol or function should be
       *   replaced with (i.e. "\phi" has a replace value of "\u03d5", the phi
       *   character in the main font).
       *
       * The outermost map in the table indicates what mode the symbols should be
       * accepted in (e.g. "math" or "text").
       */

      var symbols = {
        "math": {},
        "text": {}
      };
      /* harmony default export */

      __webpack_exports__["a"] = symbols;
      /** `acceptUnicodeChar = true` is only applicable if `replace` is set. */

      function defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {
        symbols[mode][name] = {
          font: font,
          group: group,
          replace: replace
        };

        if (acceptUnicodeChar && replace) {
          symbols[mode][replace] = symbols[mode][name];
        }
      } // Some abbreviations for commonly used strings.
      // This helps minify the code, and also spotting typos using jshint.
      // modes:


      var math = "math";
      var text = "text"; // fonts:

      var main = "main";
      var ams = "ams"; // groups:

      var accent = "accent";
      var bin = "bin";
      var close = "close";
      var inner = "inner";
      var mathord = "mathord";
      var op = "op";
      var open = "open";
      var punct = "punct";
      var rel = "rel";
      var spacing = "spacing";
      var textord = "textord"; // Now comes the symbol table
      // Relation Symbols

      defineSymbol(math, main, rel, "\u2261", "\\equiv", true);
      defineSymbol(math, main, rel, "\u227A", "\\prec", true);
      defineSymbol(math, main, rel, "\u227B", "\\succ", true);
      defineSymbol(math, main, rel, "\u223C", "\\sim", true);
      defineSymbol(math, main, rel, "\u22A5", "\\perp");
      defineSymbol(math, main, rel, "\u2AAF", "\\preceq", true);
      defineSymbol(math, main, rel, "\u2AB0", "\\succeq", true);
      defineSymbol(math, main, rel, "\u2243", "\\simeq", true);
      defineSymbol(math, main, rel, "\u2223", "\\mid", true);
      defineSymbol(math, main, rel, "\u226A", "\\ll");
      defineSymbol(math, main, rel, "\u226B", "\\gg", true);
      defineSymbol(math, main, rel, "\u224D", "\\asymp", true);
      defineSymbol(math, main, rel, "\u2225", "\\parallel");
      defineSymbol(math, main, rel, "\u22C8", "\\bowtie", true);
      defineSymbol(math, main, rel, "\u2323", "\\smile", true);
      defineSymbol(math, main, rel, "\u2291", "\\sqsubseteq", true);
      defineSymbol(math, main, rel, "\u2292", "\\sqsupseteq", true);
      defineSymbol(math, main, rel, "\u2250", "\\doteq", true);
      defineSymbol(math, main, rel, "\u2322", "\\frown", true);
      defineSymbol(math, main, rel, "\u220B", "\\ni", true);
      defineSymbol(math, main, rel, "\u221D", "\\propto", true);
      defineSymbol(math, main, rel, "\u22A2", "\\vdash", true);
      defineSymbol(math, main, rel, "\u22A3", "\\dashv", true);
      defineSymbol(math, main, rel, "\u220B", "\\owns"); // Punctuation

      defineSymbol(math, main, punct, ".", "\\ldotp");
      defineSymbol(math, main, punct, "\u22C5", "\\cdotp"); // Misc Symbols

      defineSymbol(math, main, textord, "#", "\\#");
      defineSymbol(text, main, textord, "#", "\\#");
      defineSymbol(math, main, textord, "&", "\\&");
      defineSymbol(text, main, textord, "&", "\\&");
      defineSymbol(math, main, textord, "\u2135", "\\aleph", true);
      defineSymbol(math, main, textord, "\u2200", "\\forall", true);
      defineSymbol(math, main, textord, "\u210F", "\\hbar");
      defineSymbol(math, main, textord, "\u2203", "\\exists", true);
      defineSymbol(math, main, textord, "\u2207", "\\nabla", true);
      defineSymbol(math, main, textord, "\u266D", "\\flat", true);
      defineSymbol(math, main, textord, "\u2113", "\\ell", true);
      defineSymbol(math, main, textord, "\u266E", "\\natural", true);
      defineSymbol(math, main, textord, "\u2663", "\\clubsuit", true);
      defineSymbol(math, main, textord, "\u2118", "\\wp", true);
      defineSymbol(math, main, textord, "\u266F", "\\sharp", true);
      defineSymbol(math, main, textord, "\u2662", "\\diamondsuit", true);
      defineSymbol(math, main, textord, "\u211C", "\\Re", true);
      defineSymbol(math, main, textord, "\u2661", "\\heartsuit", true);
      defineSymbol(math, main, textord, "\u2111", "\\Im", true);
      defineSymbol(math, main, textord, "\u2660", "\\spadesuit", true);
      defineSymbol(text, main, textord, "\xA7", "\\S", true);
      defineSymbol(text, main, textord, "\xB6", "\\P", true); // Math and Text

      defineSymbol(math, main, textord, "\u2020", "\\dag");
      defineSymbol(text, main, textord, "\u2020", "\\dag");
      defineSymbol(text, main, textord, "\u2020", "\\textdagger");
      defineSymbol(math, main, textord, "\u2021", "\\ddag");
      defineSymbol(text, main, textord, "\u2021", "\\ddag");
      defineSymbol(text, main, textord, "\u2020", "\\textdaggerdbl"); // Large Delimiters

      defineSymbol(math, main, close, "\u23B1", "\\rmoustache");
      defineSymbol(math, main, open, "\u23B0", "\\lmoustache");
      defineSymbol(math, main, close, "\u27EF", "\\rgroup");
      defineSymbol(math, main, open, "\u27EE", "\\lgroup"); // Binary Operators

      defineSymbol(math, main, bin, "\u2213", "\\mp", true);
      defineSymbol(math, main, bin, "\u2296", "\\ominus", true);
      defineSymbol(math, main, bin, "\u228E", "\\uplus", true);
      defineSymbol(math, main, bin, "\u2293", "\\sqcap", true);
      defineSymbol(math, main, bin, "\u2217", "\\ast");
      defineSymbol(math, main, bin, "\u2294", "\\sqcup", true);
      defineSymbol(math, main, bin, "\u25EF", "\\bigcirc");
      defineSymbol(math, main, bin, "\u2219", "\\bullet");
      defineSymbol(math, main, bin, "\u2021", "\\ddagger");
      defineSymbol(math, main, bin, "\u2240", "\\wr", true);
      defineSymbol(math, main, bin, "\u2A3F", "\\amalg");
      defineSymbol(math, main, bin, "&", "\\And"); // from amsmath
      // Arrow Symbols

      defineSymbol(math, main, rel, "\u27F5", "\\longleftarrow", true);
      defineSymbol(math, main, rel, "\u21D0", "\\Leftarrow", true);
      defineSymbol(math, main, rel, "\u27F8", "\\Longleftarrow", true);
      defineSymbol(math, main, rel, "\u27F6", "\\longrightarrow", true);
      defineSymbol(math, main, rel, "\u21D2", "\\Rightarrow", true);
      defineSymbol(math, main, rel, "\u27F9", "\\Longrightarrow", true);
      defineSymbol(math, main, rel, "\u2194", "\\leftrightarrow", true);
      defineSymbol(math, main, rel, "\u27F7", "\\longleftrightarrow", true);
      defineSymbol(math, main, rel, "\u21D4", "\\Leftrightarrow", true);
      defineSymbol(math, main, rel, "\u27FA", "\\Longleftrightarrow", true);
      defineSymbol(math, main, rel, "\u21A6", "\\mapsto", true);
      defineSymbol(math, main, rel, "\u27FC", "\\longmapsto", true);
      defineSymbol(math, main, rel, "\u2197", "\\nearrow", true);
      defineSymbol(math, main, rel, "\u21A9", "\\hookleftarrow", true);
      defineSymbol(math, main, rel, "\u21AA", "\\hookrightarrow", true);
      defineSymbol(math, main, rel, "\u2198", "\\searrow", true);
      defineSymbol(math, main, rel, "\u21BC", "\\leftharpoonup", true);
      defineSymbol(math, main, rel, "\u21C0", "\\rightharpoonup", true);
      defineSymbol(math, main, rel, "\u2199", "\\swarrow", true);
      defineSymbol(math, main, rel, "\u21BD", "\\leftharpoondown", true);
      defineSymbol(math, main, rel, "\u21C1", "\\rightharpoondown", true);
      defineSymbol(math, main, rel, "\u2196", "\\nwarrow", true);
      defineSymbol(math, main, rel, "\u21CC", "\\rightleftharpoons", true); // AMS Negated Binary Relations

      defineSymbol(math, ams, rel, "\u226E", "\\nless", true);
      defineSymbol(math, ams, rel, "\uE010", "\\nleqslant");
      defineSymbol(math, ams, rel, "\uE011", "\\nleqq");
      defineSymbol(math, ams, rel, "\u2A87", "\\lneq", true);
      defineSymbol(math, ams, rel, "\u2268", "\\lneqq", true);
      defineSymbol(math, ams, rel, "\uE00C", "\\lvertneqq");
      defineSymbol(math, ams, rel, "\u22E6", "\\lnsim", true);
      defineSymbol(math, ams, rel, "\u2A89", "\\lnapprox", true);
      defineSymbol(math, ams, rel, "\u2280", "\\nprec", true); // unicode-math maps \u22e0 to \npreccurlyeq. We'll use the AMS synonym.

      defineSymbol(math, ams, rel, "\u22E0", "\\npreceq", true);
      defineSymbol(math, ams, rel, "\u22E8", "\\precnsim", true);
      defineSymbol(math, ams, rel, "\u2AB9", "\\precnapprox", true);
      defineSymbol(math, ams, rel, "\u2241", "\\nsim", true);
      defineSymbol(math, ams, rel, "\uE006", "\\nshortmid");
      defineSymbol(math, ams, rel, "\u2224", "\\nmid", true);
      defineSymbol(math, ams, rel, "\u22AC", "\\nvdash", true);
      defineSymbol(math, ams, rel, "\u22AD", "\\nvDash", true);
      defineSymbol(math, ams, rel, "\u22EA", "\\ntriangleleft");
      defineSymbol(math, ams, rel, "\u22EC", "\\ntrianglelefteq", true);
      defineSymbol(math, ams, rel, "\u228A", "\\subsetneq", true);
      defineSymbol(math, ams, rel, "\uE01A", "\\varsubsetneq");
      defineSymbol(math, ams, rel, "\u2ACB", "\\subsetneqq", true);
      defineSymbol(math, ams, rel, "\uE017", "\\varsubsetneqq");
      defineSymbol(math, ams, rel, "\u226F", "\\ngtr", true);
      defineSymbol(math, ams, rel, "\uE00F", "\\ngeqslant");
      defineSymbol(math, ams, rel, "\uE00E", "\\ngeqq");
      defineSymbol(math, ams, rel, "\u2A88", "\\gneq", true);
      defineSymbol(math, ams, rel, "\u2269", "\\gneqq", true);
      defineSymbol(math, ams, rel, "\uE00D", "\\gvertneqq");
      defineSymbol(math, ams, rel, "\u22E7", "\\gnsim", true);
      defineSymbol(math, ams, rel, "\u2A8A", "\\gnapprox", true);
      defineSymbol(math, ams, rel, "\u2281", "\\nsucc", true); // unicode-math maps \u22e1 to \nsucccurlyeq. We'll use the AMS synonym.

      defineSymbol(math, ams, rel, "\u22E1", "\\nsucceq", true);
      defineSymbol(math, ams, rel, "\u22E9", "\\succnsim", true);
      defineSymbol(math, ams, rel, "\u2ABA", "\\succnapprox", true); // unicode-math maps \u2246 to \simneqq. We'll use the AMS synonym.

      defineSymbol(math, ams, rel, "\u2246", "\\ncong", true);
      defineSymbol(math, ams, rel, "\uE007", "\\nshortparallel");
      defineSymbol(math, ams, rel, "\u2226", "\\nparallel", true);
      defineSymbol(math, ams, rel, "\u22AF", "\\nVDash", true);
      defineSymbol(math, ams, rel, "\u22EB", "\\ntriangleright");
      defineSymbol(math, ams, rel, "\u22ED", "\\ntrianglerighteq", true);
      defineSymbol(math, ams, rel, "\uE018", "\\nsupseteqq");
      defineSymbol(math, ams, rel, "\u228B", "\\supsetneq", true);
      defineSymbol(math, ams, rel, "\uE01B", "\\varsupsetneq");
      defineSymbol(math, ams, rel, "\u2ACC", "\\supsetneqq", true);
      defineSymbol(math, ams, rel, "\uE019", "\\varsupsetneqq");
      defineSymbol(math, ams, rel, "\u22AE", "\\nVdash", true);
      defineSymbol(math, ams, rel, "\u2AB5", "\\precneqq", true);
      defineSymbol(math, ams, rel, "\u2AB6", "\\succneqq", true);
      defineSymbol(math, ams, rel, "\uE016", "\\nsubseteqq");
      defineSymbol(math, ams, bin, "\u22B4", "\\unlhd");
      defineSymbol(math, ams, bin, "\u22B5", "\\unrhd"); // AMS Negated Arrows

      defineSymbol(math, ams, rel, "\u219A", "\\nleftarrow", true);
      defineSymbol(math, ams, rel, "\u219B", "\\nrightarrow", true);
      defineSymbol(math, ams, rel, "\u21CD", "\\nLeftarrow", true);
      defineSymbol(math, ams, rel, "\u21CF", "\\nRightarrow", true);
      defineSymbol(math, ams, rel, "\u21AE", "\\nleftrightarrow", true);
      defineSymbol(math, ams, rel, "\u21CE", "\\nLeftrightarrow", true); // AMS Misc

      defineSymbol(math, ams, rel, "\u25B3", "\\vartriangle");
      defineSymbol(math, ams, textord, "\u210F", "\\hslash");
      defineSymbol(math, ams, textord, "\u25BD", "\\triangledown");
      defineSymbol(math, ams, textord, "\u25CA", "\\lozenge");
      defineSymbol(math, ams, textord, "\u24C8", "\\circledS");
      defineSymbol(math, ams, textord, "\xAE", "\\circledR");
      defineSymbol(text, ams, textord, "\xAE", "\\circledR");
      defineSymbol(math, ams, textord, "\u2221", "\\measuredangle", true);
      defineSymbol(math, ams, textord, "\u2204", "\\nexists");
      defineSymbol(math, ams, textord, "\u2127", "\\mho");
      defineSymbol(math, ams, textord, "\u2132", "\\Finv", true);
      defineSymbol(math, ams, textord, "\u2141", "\\Game", true);
      defineSymbol(math, ams, textord, "k", "\\Bbbk");
      defineSymbol(math, ams, textord, "\u2035", "\\backprime");
      defineSymbol(math, ams, textord, "\u25B2", "\\blacktriangle");
      defineSymbol(math, ams, textord, "\u25BC", "\\blacktriangledown");
      defineSymbol(math, ams, textord, "\u25A0", "\\blacksquare");
      defineSymbol(math, ams, textord, "\u29EB", "\\blacklozenge");
      defineSymbol(math, ams, textord, "\u2605", "\\bigstar");
      defineSymbol(math, ams, textord, "\u2222", "\\sphericalangle", true);
      defineSymbol(math, ams, textord, "\u2201", "\\complement", true); // unicode-math maps U+F0 (ð) to \matheth. We map to AMS function \eth

      defineSymbol(math, ams, textord, "\xF0", "\\eth", true);
      defineSymbol(math, ams, textord, "\u2571", "\\diagup");
      defineSymbol(math, ams, textord, "\u2572", "\\diagdown");
      defineSymbol(math, ams, textord, "\u25A1", "\\square");
      defineSymbol(math, ams, textord, "\u25A1", "\\Box");
      defineSymbol(math, ams, textord, "\u25CA", "\\Diamond"); // unicode-math maps U+A5 to \mathyen. We map to AMS function \yen

      defineSymbol(math, ams, textord, "\xA5", "\\yen", true);
      defineSymbol(math, ams, textord, "\u2713", "\\checkmark", true);
      defineSymbol(text, ams, textord, "\u2713", "\\checkmark"); // AMS Hebrew

      defineSymbol(math, ams, textord, "\u2136", "\\beth", true);
      defineSymbol(math, ams, textord, "\u2138", "\\daleth", true);
      defineSymbol(math, ams, textord, "\u2137", "\\gimel", true); // AMS Greek

      defineSymbol(math, ams, textord, "\u03DD", "\\digamma");
      defineSymbol(math, ams, textord, "\u03F0", "\\varkappa"); // AMS Delimiters

      defineSymbol(math, ams, open, "\u250C", "\\ulcorner");
      defineSymbol(math, ams, close, "\u2510", "\\urcorner");
      defineSymbol(math, ams, open, "\u2514", "\\llcorner");
      defineSymbol(math, ams, close, "\u2518", "\\lrcorner"); // AMS Binary Relations

      defineSymbol(math, ams, rel, "\u2266", "\\leqq", true);
      defineSymbol(math, ams, rel, "\u2A7D", "\\leqslant");
      defineSymbol(math, ams, rel, "\u2A95", "\\eqslantless", true);
      defineSymbol(math, ams, rel, "\u2272", "\\lesssim");
      defineSymbol(math, ams, rel, "\u2A85", "\\lessapprox");
      defineSymbol(math, ams, rel, "\u224A", "\\approxeq", true);
      defineSymbol(math, ams, bin, "\u22D6", "\\lessdot");
      defineSymbol(math, ams, rel, "\u22D8", "\\lll");
      defineSymbol(math, ams, rel, "\u2276", "\\lessgtr");
      defineSymbol(math, ams, rel, "\u22DA", "\\lesseqgtr");
      defineSymbol(math, ams, rel, "\u2A8B", "\\lesseqqgtr");
      defineSymbol(math, ams, rel, "\u2251", "\\doteqdot");
      defineSymbol(math, ams, rel, "\u2253", "\\risingdotseq", true);
      defineSymbol(math, ams, rel, "\u2252", "\\fallingdotseq", true);
      defineSymbol(math, ams, rel, "\u223D", "\\backsim", true);
      defineSymbol(math, ams, rel, "\u22CD", "\\backsimeq", true);
      defineSymbol(math, ams, rel, "\u2AC5", "\\subseteqq", true);
      defineSymbol(math, ams, rel, "\u22D0", "\\Subset", true);
      defineSymbol(math, ams, rel, "\u228F", "\\sqsubset", true);
      defineSymbol(math, ams, rel, "\u227C", "\\preccurlyeq", true);
      defineSymbol(math, ams, rel, "\u22DE", "\\curlyeqprec", true);
      defineSymbol(math, ams, rel, "\u227E", "\\precsim", true);
      defineSymbol(math, ams, rel, "\u2AB7", "\\precapprox", true);
      defineSymbol(math, ams, rel, "\u22B2", "\\vartriangleleft");
      defineSymbol(math, ams, rel, "\u22B4", "\\trianglelefteq");
      defineSymbol(math, ams, rel, "\u22A8", "\\vDash");
      defineSymbol(math, ams, rel, "\u22AA", "\\Vvdash", true);
      defineSymbol(math, ams, rel, "\u2323", "\\smallsmile");
      defineSymbol(math, ams, rel, "\u2322", "\\smallfrown");
      defineSymbol(math, ams, rel, "\u224F", "\\bumpeq", true);
      defineSymbol(math, ams, rel, "\u224E", "\\Bumpeq", true);
      defineSymbol(math, ams, rel, "\u2267", "\\geqq", true);
      defineSymbol(math, ams, rel, "\u2A7E", "\\geqslant", true);
      defineSymbol(math, ams, rel, "\u2A96", "\\eqslantgtr", true);
      defineSymbol(math, ams, rel, "\u2273", "\\gtrsim", true);
      defineSymbol(math, ams, rel, "\u2A86", "\\gtrapprox", true);
      defineSymbol(math, ams, bin, "\u22D7", "\\gtrdot");
      defineSymbol(math, ams, rel, "\u22D9", "\\ggg", true);
      defineSymbol(math, ams, rel, "\u2277", "\\gtrless", true);
      defineSymbol(math, ams, rel, "\u22DB", "\\gtreqless", true);
      defineSymbol(math, ams, rel, "\u2A8C", "\\gtreqqless", true);
      defineSymbol(math, ams, rel, "\u2256", "\\eqcirc", true);
      defineSymbol(math, ams, rel, "\u2257", "\\circeq", true);
      defineSymbol(math, ams, rel, "\u225C", "\\triangleq", true);
      defineSymbol(math, ams, rel, "\u223C", "\\thicksim");
      defineSymbol(math, ams, rel, "\u2248", "\\thickapprox");
      defineSymbol(math, ams, rel, "\u2AC6", "\\supseteqq", true);
      defineSymbol(math, ams, rel, "\u22D1", "\\Supset", true);
      defineSymbol(math, ams, rel, "\u2290", "\\sqsupset", true);
      defineSymbol(math, ams, rel, "\u227D", "\\succcurlyeq", true);
      defineSymbol(math, ams, rel, "\u22DF", "\\curlyeqsucc", true);
      defineSymbol(math, ams, rel, "\u227F", "\\succsim", true);
      defineSymbol(math, ams, rel, "\u2AB8", "\\succapprox", true);
      defineSymbol(math, ams, rel, "\u22B3", "\\vartriangleright");
      defineSymbol(math, ams, rel, "\u22B5", "\\trianglerighteq");
      defineSymbol(math, ams, rel, "\u22A9", "\\Vdash", true);
      defineSymbol(math, ams, rel, "\u2223", "\\shortmid");
      defineSymbol(math, ams, rel, "\u2225", "\\shortparallel");
      defineSymbol(math, ams, rel, "\u226C", "\\between", true);
      defineSymbol(math, ams, rel, "\u22D4", "\\pitchfork", true);
      defineSymbol(math, ams, rel, "\u221D", "\\varpropto");
      defineSymbol(math, ams, rel, "\u25C0", "\\blacktriangleleft"); // unicode-math says that \therefore is a mathord atom.
      // We kept the amssymb atom type, which is rel.

      defineSymbol(math, ams, rel, "\u2234", "\\therefore", true);
      defineSymbol(math, ams, rel, "\u220D", "\\backepsilon");
      defineSymbol(math, ams, rel, "\u25B6", "\\blacktriangleright"); // unicode-math says that \because is a mathord atom.
      // We kept the amssymb atom type, which is rel.

      defineSymbol(math, ams, rel, "\u2235", "\\because", true);
      defineSymbol(math, ams, rel, "\u22D8", "\\llless");
      defineSymbol(math, ams, rel, "\u22D9", "\\gggtr");
      defineSymbol(math, ams, bin, "\u22B2", "\\lhd");
      defineSymbol(math, ams, bin, "\u22B3", "\\rhd");
      defineSymbol(math, ams, rel, "\u2242", "\\eqsim", true);
      defineSymbol(math, main, rel, "\u22C8", "\\Join");
      defineSymbol(math, ams, rel, "\u2251", "\\Doteq", true); // AMS Binary Operators

      defineSymbol(math, ams, bin, "\u2214", "\\dotplus", true);
      defineSymbol(math, ams, bin, "\u2216", "\\smallsetminus");
      defineSymbol(math, ams, bin, "\u22D2", "\\Cap", true);
      defineSymbol(math, ams, bin, "\u22D3", "\\Cup", true);
      defineSymbol(math, ams, bin, "\u2A5E", "\\doublebarwedge", true);
      defineSymbol(math, ams, bin, "\u229F", "\\boxminus", true);
      defineSymbol(math, ams, bin, "\u229E", "\\boxplus", true);
      defineSymbol(math, ams, bin, "\u22C7", "\\divideontimes", true);
      defineSymbol(math, ams, bin, "\u22C9", "\\ltimes", true);
      defineSymbol(math, ams, bin, "\u22CA", "\\rtimes", true);
      defineSymbol(math, ams, bin, "\u22CB", "\\leftthreetimes", true);
      defineSymbol(math, ams, bin, "\u22CC", "\\rightthreetimes", true);
      defineSymbol(math, ams, bin, "\u22CF", "\\curlywedge", true);
      defineSymbol(math, ams, bin, "\u22CE", "\\curlyvee", true);
      defineSymbol(math, ams, bin, "\u229D", "\\circleddash", true);
      defineSymbol(math, ams, bin, "\u229B", "\\circledast", true);
      defineSymbol(math, ams, bin, "\u22C5", "\\centerdot");
      defineSymbol(math, ams, bin, "\u22BA", "\\intercal", true);
      defineSymbol(math, ams, bin, "\u22D2", "\\doublecap");
      defineSymbol(math, ams, bin, "\u22D3", "\\doublecup");
      defineSymbol(math, ams, bin, "\u22A0", "\\boxtimes", true); // AMS Arrows
      // Note: unicode-math maps \u21e2 to their own function \rightdasharrow.
      // We'll map it to AMS function \dashrightarrow. It produces the same atom.

      defineSymbol(math, ams, rel, "\u21E2", "\\dashrightarrow", true); // unicode-math maps \u21e0 to \leftdasharrow. We'll use the AMS synonym.

      defineSymbol(math, ams, rel, "\u21E0", "\\dashleftarrow", true);
      defineSymbol(math, ams, rel, "\u21C7", "\\leftleftarrows", true);
      defineSymbol(math, ams, rel, "\u21C6", "\\leftrightarrows", true);
      defineSymbol(math, ams, rel, "\u21DA", "\\Lleftarrow", true);
      defineSymbol(math, ams, rel, "\u219E", "\\twoheadleftarrow", true);
      defineSymbol(math, ams, rel, "\u21A2", "\\leftarrowtail", true);
      defineSymbol(math, ams, rel, "\u21AB", "\\looparrowleft", true);
      defineSymbol(math, ams, rel, "\u21CB", "\\leftrightharpoons", true);
      defineSymbol(math, ams, rel, "\u21B6", "\\curvearrowleft", true); // unicode-math maps \u21ba to \acwopencirclearrow. We'll use the AMS synonym.

      defineSymbol(math, ams, rel, "\u21BA", "\\circlearrowleft", true);
      defineSymbol(math, ams, rel, "\u21B0", "\\Lsh", true);
      defineSymbol(math, ams, rel, "\u21C8", "\\upuparrows", true);
      defineSymbol(math, ams, rel, "\u21BF", "\\upharpoonleft", true);
      defineSymbol(math, ams, rel, "\u21C3", "\\downharpoonleft", true);
      defineSymbol(math, ams, rel, "\u22B8", "\\multimap", true);
      defineSymbol(math, ams, rel, "\u21AD", "\\leftrightsquigarrow", true);
      defineSymbol(math, ams, rel, "\u21C9", "\\rightrightarrows", true);
      defineSymbol(math, ams, rel, "\u21C4", "\\rightleftarrows", true);
      defineSymbol(math, ams, rel, "\u21A0", "\\twoheadrightarrow", true);
      defineSymbol(math, ams, rel, "\u21A3", "\\rightarrowtail", true);
      defineSymbol(math, ams, rel, "\u21AC", "\\looparrowright", true);
      defineSymbol(math, ams, rel, "\u21B7", "\\curvearrowright", true); // unicode-math maps \u21bb to \cwopencirclearrow. We'll use the AMS synonym.

      defineSymbol(math, ams, rel, "\u21BB", "\\circlearrowright", true);
      defineSymbol(math, ams, rel, "\u21B1", "\\Rsh", true);
      defineSymbol(math, ams, rel, "\u21CA", "\\downdownarrows", true);
      defineSymbol(math, ams, rel, "\u21BE", "\\upharpoonright", true);
      defineSymbol(math, ams, rel, "\u21C2", "\\downharpoonright", true);
      defineSymbol(math, ams, rel, "\u21DD", "\\rightsquigarrow", true);
      defineSymbol(math, ams, rel, "\u21DD", "\\leadsto");
      defineSymbol(math, ams, rel, "\u21DB", "\\Rrightarrow", true);
      defineSymbol(math, ams, rel, "\u21BE", "\\restriction");
      defineSymbol(math, main, textord, "\u2018", "`");
      defineSymbol(math, main, textord, "$", "\\$");
      defineSymbol(text, main, textord, "$", "\\$");
      defineSymbol(text, main, textord, "$", "\\textdollar");
      defineSymbol(math, main, textord, "%", "\\%");
      defineSymbol(text, main, textord, "%", "\\%");
      defineSymbol(math, main, textord, "_", "\\_");
      defineSymbol(text, main, textord, "_", "\\_");
      defineSymbol(text, main, textord, "_", "\\textunderscore");
      defineSymbol(math, main, textord, "\u2220", "\\angle", true);
      defineSymbol(math, main, textord, "\u221E", "\\infty", true);
      defineSymbol(math, main, textord, "\u2032", "\\prime");
      defineSymbol(math, main, textord, "\u25B3", "\\triangle");
      defineSymbol(math, main, textord, "\u0393", "\\Gamma", true);
      defineSymbol(math, main, textord, "\u0394", "\\Delta", true);
      defineSymbol(math, main, textord, "\u0398", "\\Theta", true);
      defineSymbol(math, main, textord, "\u039B", "\\Lambda", true);
      defineSymbol(math, main, textord, "\u039E", "\\Xi", true);
      defineSymbol(math, main, textord, "\u03A0", "\\Pi", true);
      defineSymbol(math, main, textord, "\u03A3", "\\Sigma", true);
      defineSymbol(math, main, textord, "\u03A5", "\\Upsilon", true);
      defineSymbol(math, main, textord, "\u03A6", "\\Phi", true);
      defineSymbol(math, main, textord, "\u03A8", "\\Psi", true);
      defineSymbol(math, main, textord, "\u03A9", "\\Omega", true);
      defineSymbol(math, main, textord, "\xAC", "\\neg");
      defineSymbol(math, main, textord, "\xAC", "\\lnot");
      defineSymbol(math, main, textord, "\u22A4", "\\top");
      defineSymbol(math, main, textord, "\u22A5", "\\bot");
      defineSymbol(math, main, textord, "\u2205", "\\emptyset");
      defineSymbol(math, ams, textord, "\u2205", "\\varnothing");
      defineSymbol(math, main, mathord, "\u03B1", "\\alpha", true);
      defineSymbol(math, main, mathord, "\u03B2", "\\beta", true);
      defineSymbol(math, main, mathord, "\u03B3", "\\gamma", true);
      defineSymbol(math, main, mathord, "\u03B4", "\\delta", true);
      defineSymbol(math, main, mathord, "\u03F5", "\\epsilon", true);
      defineSymbol(math, main, mathord, "\u03B6", "\\zeta", true);
      defineSymbol(math, main, mathord, "\u03B7", "\\eta", true);
      defineSymbol(math, main, mathord, "\u03B8", "\\theta", true);
      defineSymbol(math, main, mathord, "\u03B9", "\\iota", true);
      defineSymbol(math, main, mathord, "\u03BA", "\\kappa", true);
      defineSymbol(math, main, mathord, "\u03BB", "\\lambda", true);
      defineSymbol(math, main, mathord, "\u03BC", "\\mu", true);
      defineSymbol(math, main, mathord, "\u03BD", "\\nu", true);
      defineSymbol(math, main, mathord, "\u03BE", "\\xi", true);
      defineSymbol(math, main, mathord, "\u03BF", "\\omicron", true);
      defineSymbol(math, main, mathord, "\u03C0", "\\pi", true);
      defineSymbol(math, main, mathord, "\u03C1", "\\rho", true);
      defineSymbol(math, main, mathord, "\u03C3", "\\sigma", true);
      defineSymbol(math, main, mathord, "\u03C4", "\\tau", true);
      defineSymbol(math, main, mathord, "\u03C5", "\\upsilon", true);
      defineSymbol(math, main, mathord, "\u03D5", "\\phi", true);
      defineSymbol(math, main, mathord, "\u03C7", "\\chi", true);
      defineSymbol(math, main, mathord, "\u03C8", "\\psi", true);
      defineSymbol(math, main, mathord, "\u03C9", "\\omega", true);
      defineSymbol(math, main, mathord, "\u03B5", "\\varepsilon", true);
      defineSymbol(math, main, mathord, "\u03D1", "\\vartheta", true);
      defineSymbol(math, main, mathord, "\u03D6", "\\varpi", true);
      defineSymbol(math, main, mathord, "\u03F1", "\\varrho", true);
      defineSymbol(math, main, mathord, "\u03C2", "\\varsigma", true);
      defineSymbol(math, main, mathord, "\u03C6", "\\varphi", true);
      defineSymbol(math, main, bin, "\u2217", "*");
      defineSymbol(math, main, bin, "+", "+");
      defineSymbol(math, main, bin, "\u2212", "-");
      defineSymbol(math, main, bin, "\u22C5", "\\cdot", true);
      defineSymbol(math, main, bin, "\u2218", "\\circ");
      defineSymbol(math, main, bin, "\xF7", "\\div", true);
      defineSymbol(math, main, bin, "\xB1", "\\pm", true);
      defineSymbol(math, main, bin, "\xD7", "\\times", true);
      defineSymbol(math, main, bin, "\u2229", "\\cap", true);
      defineSymbol(math, main, bin, "\u222A", "\\cup", true);
      defineSymbol(math, main, bin, "\u2216", "\\setminus");
      defineSymbol(math, main, bin, "\u2227", "\\land");
      defineSymbol(math, main, bin, "\u2228", "\\lor");
      defineSymbol(math, main, bin, "\u2227", "\\wedge", true);
      defineSymbol(math, main, bin, "\u2228", "\\vee", true);
      defineSymbol(math, main, textord, "\u221A", "\\surd");
      defineSymbol(math, main, open, "(", "(");
      defineSymbol(math, main, open, "[", "[");
      defineSymbol(math, main, open, "\u27E8", "\\langle", true);
      defineSymbol(math, main, open, "\u2223", "\\lvert");
      defineSymbol(math, main, open, "\u2225", "\\lVert");
      defineSymbol(math, main, close, ")", ")");
      defineSymbol(math, main, close, "]", "]");
      defineSymbol(math, main, close, "?", "?");
      defineSymbol(math, main, close, "!", "!");
      defineSymbol(math, main, close, "\u27E9", "\\rangle", true);
      defineSymbol(math, main, close, "\u2223", "\\rvert");
      defineSymbol(math, main, close, "\u2225", "\\rVert");
      defineSymbol(math, main, rel, "=", "=");
      defineSymbol(math, main, rel, "<", "<");
      defineSymbol(math, main, rel, ">", ">");
      defineSymbol(math, main, rel, ":", ":");
      defineSymbol(math, main, rel, "\u2248", "\\approx", true);
      defineSymbol(math, main, rel, "\u2245", "\\cong", true);
      defineSymbol(math, main, rel, "\u2265", "\\ge");
      defineSymbol(math, main, rel, "\u2265", "\\geq", true);
      defineSymbol(math, main, rel, "\u2190", "\\gets");
      defineSymbol(math, main, rel, ">", "\\gt");
      defineSymbol(math, main, rel, "\u2208", "\\in", true);
      defineSymbol(math, main, rel, "\u2209", "\\notin", true);
      defineSymbol(math, main, rel, "\u0338", "\\not");
      defineSymbol(math, main, rel, "\u2282", "\\subset", true);
      defineSymbol(math, main, rel, "\u2283", "\\supset", true);
      defineSymbol(math, main, rel, "\u2286", "\\subseteq", true);
      defineSymbol(math, main, rel, "\u2287", "\\supseteq", true);
      defineSymbol(math, ams, rel, "\u2288", "\\nsubseteq", true);
      defineSymbol(math, ams, rel, "\u2289", "\\nsupseteq", true);
      defineSymbol(math, main, rel, "\u22A8", "\\models");
      defineSymbol(math, main, rel, "\u2190", "\\leftarrow", true);
      defineSymbol(math, main, rel, "\u2264", "\\le");
      defineSymbol(math, main, rel, "\u2264", "\\leq", true);
      defineSymbol(math, main, rel, "<", "\\lt");
      defineSymbol(math, main, rel, "\u2260", "\\ne", true);
      defineSymbol(math, main, rel, "\u2260", "\\neq");
      defineSymbol(math, main, rel, "\u2192", "\\rightarrow", true);
      defineSymbol(math, main, rel, "\u2192", "\\to");
      defineSymbol(math, ams, rel, "\u2271", "\\ngeq", true);
      defineSymbol(math, ams, rel, "\u2270", "\\nleq", true);
      defineSymbol(math, main, spacing, null, "\\!");
      defineSymbol(math, main, spacing, "\xA0", "\\ ");
      defineSymbol(math, main, spacing, "\xA0", "~");
      defineSymbol(math, main, spacing, null, "\\,");
      defineSymbol(math, main, spacing, null, "\\:");
      defineSymbol(math, main, spacing, null, "\\;");
      defineSymbol(math, main, spacing, null, "\\enspace");
      defineSymbol(math, main, spacing, null, "\\qquad");
      defineSymbol(math, main, spacing, null, "\\quad");
      defineSymbol(math, main, spacing, "\xA0", "\\space"); // Ref: LaTeX Source 2e: \DeclareRobustCommand{\nobreakspace}{%

      defineSymbol(math, main, spacing, "\xA0", "\\nobreakspace");
      defineSymbol(text, main, spacing, null, "\\!");
      defineSymbol(text, main, spacing, "\xA0", "\\ ");
      defineSymbol(text, main, spacing, "\xA0", "~");
      defineSymbol(text, main, spacing, null, "\\,");
      defineSymbol(text, main, spacing, null, "\\:");
      defineSymbol(text, main, spacing, null, "\\;");
      defineSymbol(text, main, spacing, null, "\\enspace");
      defineSymbol(text, main, spacing, null, "\\qquad");
      defineSymbol(text, main, spacing, null, "\\quad");
      defineSymbol(text, main, spacing, "\xA0", "\\space");
      defineSymbol(text, main, spacing, "\xA0", "\\nobreakspace");
      defineSymbol(math, main, punct, ",", ",");
      defineSymbol(math, main, punct, ";", ";");
      defineSymbol(math, main, punct, ":", "\\colon");
      defineSymbol(math, ams, bin, "\u22BC", "\\barwedge", true);
      defineSymbol(math, ams, bin, "\u22BB", "\\veebar", true);
      defineSymbol(math, main, bin, "\u2299", "\\odot", true);
      defineSymbol(math, main, bin, "\u2295", "\\oplus", true);
      defineSymbol(math, main, bin, "\u2297", "\\otimes", true);
      defineSymbol(math, main, textord, "\u2202", "\\partial", true);
      defineSymbol(math, main, bin, "\u2298", "\\oslash", true);
      defineSymbol(math, ams, bin, "\u229A", "\\circledcirc", true);
      defineSymbol(math, ams, bin, "\u22A1", "\\boxdot", true);
      defineSymbol(math, main, bin, "\u25B3", "\\bigtriangleup");
      defineSymbol(math, main, bin, "\u25BD", "\\bigtriangledown");
      defineSymbol(math, main, bin, "\u2020", "\\dagger");
      defineSymbol(math, main, bin, "\u22C4", "\\diamond");
      defineSymbol(math, main, bin, "\u22C6", "\\star");
      defineSymbol(math, main, bin, "\u25C3", "\\triangleleft");
      defineSymbol(math, main, bin, "\u25B9", "\\triangleright");
      defineSymbol(math, main, open, "{", "\\{");
      defineSymbol(text, main, textord, "{", "\\{");
      defineSymbol(text, main, textord, "{", "\\textbraceleft");
      defineSymbol(math, main, close, "}", "\\}");
      defineSymbol(text, main, textord, "}", "\\}");
      defineSymbol(text, main, textord, "}", "\\textbraceright");
      defineSymbol(math, main, open, "{", "\\lbrace");
      defineSymbol(math, main, close, "}", "\\rbrace");
      defineSymbol(math, main, open, "[", "\\lbrack");
      defineSymbol(math, main, close, "]", "\\rbrack");
      defineSymbol(text, main, textord, "<", "\\textless"); // in T1 fontenc

      defineSymbol(text, main, textord, ">", "\\textgreater"); // in T1 fontenc

      defineSymbol(math, main, open, "\u230A", "\\lfloor");
      defineSymbol(math, main, close, "\u230B", "\\rfloor");
      defineSymbol(math, main, open, "\u2308", "\\lceil");
      defineSymbol(math, main, close, "\u2309", "\\rceil");
      defineSymbol(math, main, textord, "\\", "\\backslash");
      defineSymbol(math, main, textord, "\u2223", "|");
      defineSymbol(math, main, textord, "\u2223", "\\vert");
      defineSymbol(text, main, textord, "|", "\\textbar"); // in T1 fontenc

      defineSymbol(math, main, textord, "\u2225", "\\|");
      defineSymbol(math, main, textord, "\u2225", "\\Vert");
      defineSymbol(text, main, textord, "\u2225", "\\textbardbl");
      defineSymbol(math, main, rel, "\u2191", "\\uparrow", true);
      defineSymbol(math, main, rel, "\u21D1", "\\Uparrow", true);
      defineSymbol(math, main, rel, "\u2193", "\\downarrow", true);
      defineSymbol(math, main, rel, "\u21D3", "\\Downarrow", true);
      defineSymbol(math, main, rel, "\u2195", "\\updownarrow", true);
      defineSymbol(math, main, rel, "\u21D5", "\\Updownarrow", true);
      defineSymbol(math, main, op, "\u2210", "\\coprod");
      defineSymbol(math, main, op, "\u22C1", "\\bigvee");
      defineSymbol(math, main, op, "\u22C0", "\\bigwedge");
      defineSymbol(math, main, op, "\u2A04", "\\biguplus");
      defineSymbol(math, main, op, "\u22C2", "\\bigcap");
      defineSymbol(math, main, op, "\u22C3", "\\bigcup");
      defineSymbol(math, main, op, "\u222B", "\\int");
      defineSymbol(math, main, op, "\u222B", "\\intop");
      defineSymbol(math, main, op, "\u222C", "\\iint");
      defineSymbol(math, main, op, "\u222D", "\\iiint");
      defineSymbol(math, main, op, "\u220F", "\\prod");
      defineSymbol(math, main, op, "\u2211", "\\sum");
      defineSymbol(math, main, op, "\u2A02", "\\bigotimes");
      defineSymbol(math, main, op, "\u2A01", "\\bigoplus");
      defineSymbol(math, main, op, "\u2A00", "\\bigodot");
      defineSymbol(math, main, op, "\u222E", "\\oint");
      defineSymbol(math, main, op, "\u2A06", "\\bigsqcup");
      defineSymbol(math, main, op, "\u222B", "\\smallint");
      defineSymbol(text, main, inner, "\u2026", "\\textellipsis");
      defineSymbol(math, main, inner, "\u2026", "\\mathellipsis");
      defineSymbol(text, main, inner, "\u2026", "\\ldots", true);
      defineSymbol(math, main, inner, "\u2026", "\\ldots", true);
      defineSymbol(math, main, inner, "\u22EF", "\\@cdots", true);
      defineSymbol(math, main, inner, "\u22F1", "\\ddots", true);
      defineSymbol(math, main, textord, "\u22EE", "\\vdots", true);
      defineSymbol(math, main, accent, "\u02CA", "\\acute");
      defineSymbol(math, main, accent, "\u02CB", "\\grave");
      defineSymbol(math, main, accent, "\xA8", "\\ddot");
      defineSymbol(math, main, accent, "~", "\\tilde");
      defineSymbol(math, main, accent, "\u02C9", "\\bar");
      defineSymbol(math, main, accent, "\u02D8", "\\breve");
      defineSymbol(math, main, accent, "\u02C7", "\\check");
      defineSymbol(math, main, accent, "^", "\\hat");
      defineSymbol(math, main, accent, "\u20D7", "\\vec");
      defineSymbol(math, main, accent, "\u02D9", "\\dot");
      defineSymbol(math, main, accent, "\u02DA", "\\mathring");
      defineSymbol(math, main, mathord, "\u0131", "\\imath", true);
      defineSymbol(math, main, mathord, "\u0237", "\\jmath", true);
      defineSymbol(text, main, textord, "\u0131", "\\i", true);
      defineSymbol(text, main, textord, "\u0237", "\\j", true);
      defineSymbol(text, main, textord, "\xDF", "\\ss", true);
      defineSymbol(text, main, textord, "\xE6", "\\ae", true);
      defineSymbol(text, main, textord, "\xE6", "\\ae", true);
      defineSymbol(text, main, textord, "\u0153", "\\oe", true);
      defineSymbol(text, main, textord, "\xF8", "\\o", true);
      defineSymbol(text, main, textord, "\xC6", "\\AE", true);
      defineSymbol(text, main, textord, "\u0152", "\\OE", true);
      defineSymbol(text, main, textord, "\xD8", "\\O", true);
      defineSymbol(text, main, accent, "\u02CA", "\\'"); // acute

      defineSymbol(text, main, accent, "\u02CB", "\\`"); // grave

      defineSymbol(text, main, accent, "\u02C6", "\\^"); // circumflex

      defineSymbol(text, main, accent, "\u02DC", "\\~"); // tilde

      defineSymbol(text, main, accent, "\u02C9", "\\="); // macron

      defineSymbol(text, main, accent, "\u02D8", "\\u"); // breve

      defineSymbol(text, main, accent, "\u02D9", "\\."); // dot above

      defineSymbol(text, main, accent, "\u02DA", "\\r"); // ring above

      defineSymbol(text, main, accent, "\u02C7", "\\v"); // caron

      defineSymbol(text, main, accent, "\xA8", '\\"'); // diaresis

      defineSymbol(text, main, accent, "\u02DD", "\\H"); // double acute

      defineSymbol(text, main, textord, "\u2013", "--");
      defineSymbol(text, main, textord, "\u2013", "\\textendash");
      defineSymbol(text, main, textord, "\u2014", "---");
      defineSymbol(text, main, textord, "\u2014", "\\textemdash");
      defineSymbol(text, main, textord, "\u2018", "`");
      defineSymbol(text, main, textord, "\u2018", "\\textquoteleft");
      defineSymbol(text, main, textord, "\u2019", "'");
      defineSymbol(text, main, textord, "\u2019", "\\textquoteright");
      defineSymbol(text, main, textord, "\u201C", "``");
      defineSymbol(text, main, textord, "\u201C", "\\textquotedblleft");
      defineSymbol(text, main, textord, "\u201D", "''");
      defineSymbol(text, main, textord, "\u201D", "\\textquotedblright");
      defineSymbol(math, main, textord, "\xB0", "\\degree");
      defineSymbol(text, main, textord, "\xB0", "\\degree"); // TODO: In LaTeX, \pounds can generate a different character in text and math
      // mode, but among our fonts, only Main-Italic defines this character "163".

      defineSymbol(math, main, mathord, "\xA3", "\\pounds");
      defineSymbol(math, main, mathord, "\xA3", "\\mathsterling", true);
      defineSymbol(text, main, mathord, "\xA3", "\\pounds");
      defineSymbol(text, main, mathord, "\xA3", "\\textsterling", true);
      defineSymbol(math, ams, textord, "\u2720", "\\maltese");
      defineSymbol(text, ams, textord, "\u2720", "\\maltese");
      defineSymbol(text, main, spacing, "\xA0", "\\ ");
      defineSymbol(text, main, spacing, "\xA0", " ");
      defineSymbol(text, main, spacing, "\xA0", "~"); // There are lots of symbols which are the same, so we add them in afterwards.
      // All of these are textords in math mode

      var mathTextSymbols = "0123456789/@.\"";

      for (var i = 0; i < mathTextSymbols.length; i++) {
        var ch = mathTextSymbols.charAt(i);
        defineSymbol(math, main, textord, ch, ch);
      } // All of these are textords in text mode


      var textSymbols = "0123456789!@*()-=+[]<>|\";:?/.,";

      for (var _i = 0; _i < textSymbols.length; _i++) {
        var _ch = textSymbols.charAt(_i);

        defineSymbol(text, main, textord, _ch, _ch);
      } // All of these are textords in text mode, and mathords in math mode


      var letters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

      for (var _i2 = 0; _i2 < letters.length; _i2++) {
        var _ch2 = letters.charAt(_i2);

        defineSymbol(math, main, mathord, _ch2, _ch2);
        defineSymbol(text, main, textord, _ch2, _ch2);
      } // We add these Latin-1 letters as symbols for backwards-compatibility,
      // but they are not actually in the font, nor are they supported by the
      // Unicode accent mechanism, so they fall back to Times font and look ugly.
      // TODO(edemaine): Fix this.


      var extraLatin = "ÇÐÞçþ";

      for (var _i3 = 0; _i3 < extraLatin.length; _i3++) {
        var _ch3 = extraLatin.charAt(_i3);

        defineSymbol(math, main, mathord, _ch3, _ch3);
        defineSymbol(text, main, textord, _ch3, _ch3);
      }

      defineSymbol(text, main, textord, "ð", "ð"); // Unicode versions of existing characters

      defineSymbol(text, main, textord, "\u2013", "–");
      defineSymbol(text, main, textord, "\u2014", "—");
      defineSymbol(text, main, textord, "\u2018", "‘");
      defineSymbol(text, main, textord, "\u2019", "’");
      defineSymbol(text, main, textord, "\u201C", "“");
      defineSymbol(text, main, textord, "\u201D", "”");
      /***/
    },
    /* 29 */

    /***/
    function (module, exports, __webpack_require__) {
      // 7.1.13 ToObject(argument)
      var defined = __webpack_require__(38);

      module.exports = function (it) {
        return Object(defined(it));
      };
      /***/

    },
    /* 30 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__unicodeScripts__ = __webpack_require__(42);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__submodules_katex_fonts_fontMetricsData__ = __webpack_require__(59);
      /**
       * This file contains metrics regarding fonts and individual symbols. The sigma
       * and xi variables, as well as the metricMap map contain data extracted from
       * TeX, TeX font metrics, and the TTF files. These data are then exposed via the
       * `metrics` variable and the getCharacterMetrics function.
       */
      // In TeX, there are actually three sets of dimensions, one for each of
      // textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:
      // 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are
      // provided in the the arrays below, in that order.
      //
      // The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.
      // This was determined by running the following script:
      //
      //     latex -interaction=nonstopmode \
      //     '\documentclass{article}\usepackage{amsmath}\begin{document}' \
      //     '$a$ \expandafter\show\the\textfont2' \
      //     '\expandafter\show\the\scriptfont2' \
      //     '\expandafter\show\the\scriptscriptfont2' \
      //     '\stop'
      //
      // The metrics themselves were retreived using the following commands:
      //
      //     tftopl cmsy10
      //     tftopl cmsy7
      //     tftopl cmsy5
      //
      // The output of each of these commands is quite lengthy.  The only part we
      // care about is the FONTDIMEN section. Each value is measured in EMs.


      var sigmasAndXis = {
        slant: [0.250, 0.250, 0.250],
        // sigma1
        space: [0.000, 0.000, 0.000],
        // sigma2
        stretch: [0.000, 0.000, 0.000],
        // sigma3
        shrink: [0.000, 0.000, 0.000],
        // sigma4
        xHeight: [0.431, 0.431, 0.431],
        // sigma5
        quad: [1.000, 1.171, 1.472],
        // sigma6
        extraSpace: [0.000, 0.000, 0.000],
        // sigma7
        num1: [0.677, 0.732, 0.925],
        // sigma8
        num2: [0.394, 0.384, 0.387],
        // sigma9
        num3: [0.444, 0.471, 0.504],
        // sigma10
        denom1: [0.686, 0.752, 1.025],
        // sigma11
        denom2: [0.345, 0.344, 0.532],
        // sigma12
        sup1: [0.413, 0.503, 0.504],
        // sigma13
        sup2: [0.363, 0.431, 0.404],
        // sigma14
        sup3: [0.289, 0.286, 0.294],
        // sigma15
        sub1: [0.150, 0.143, 0.200],
        // sigma16
        sub2: [0.247, 0.286, 0.400],
        // sigma17
        supDrop: [0.386, 0.353, 0.494],
        // sigma18
        subDrop: [0.050, 0.071, 0.100],
        // sigma19
        delim1: [2.390, 1.700, 1.980],
        // sigma20
        delim2: [1.010, 1.157, 1.420],
        // sigma21
        axisHeight: [0.250, 0.250, 0.250],
        // sigma22
        // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;
        // they correspond to the font parameters of the extension fonts (family 3).
        // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to
        // match cmex7, we'd use cmex7.tfm values for script and scriptscript
        // values.
        defaultRuleThickness: [0.04, 0.049, 0.049],
        // xi8; cmex7: 0.049
        bigOpSpacing1: [0.111, 0.111, 0.111],
        // xi9
        bigOpSpacing2: [0.166, 0.166, 0.166],
        // xi10
        bigOpSpacing3: [0.2, 0.2, 0.2],
        // xi11
        bigOpSpacing4: [0.6, 0.611, 0.611],
        // xi12; cmex7: 0.611
        bigOpSpacing5: [0.1, 0.143, 0.143],
        // xi13; cmex7: 0.143
        // The \sqrt rule width is taken from the height of the surd character.
        // Since we use the same font at all sizes, this thickness doesn't scale.
        sqrtRuleThickness: [0.04, 0.04, 0.04],
        // This value determines how large a pt is, for metrics which are defined
        // in terms of pts.
        // This value is also used in katex.less; if you change it make sure the
        // values match.
        ptPerEm: [10.0, 10.0, 10.0],
        // The space between adjacent `|` columns in an array definition. From
        // `\showthe\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.
        doubleRuleSep: [0.2, 0.2, 0.2]
      }; // This map contains a mapping from font name and character code to character
      // metrics, including height, depth, italic correction, and skew (kern from the
      // character to the corresponding \skewchar)
      // This map is generated via `make metrics`. It should not be changed manually.
      // These are very rough approximations.  We default to Times New Roman which
      // should have Latin-1 and Cyrillic characters, but may not depending on the
      // operating system.  The metrics do not account for extra height from the
      // accents.  In the case of Cyrillic characters which have both ascenders and
      // descenders we prefer approximations with ascenders, primarily to prevent
      // the fraction bar or root line from intersecting the glyph.
      // TODO(kevinb) allow union of multiple glyph metrics for better accuracy.

      var extraCharacterMap = {
        // Latin-1
        'Å': 'A',
        'Ç': 'C',
        'Ð': 'D',
        'Þ': 'o',
        'å': 'a',
        'ç': 'c',
        'ð': 'd',
        'þ': 'o',
        // Cyrillic
        'А': 'A',
        'Б': 'B',
        'В': 'B',
        'Г': 'F',
        'Д': 'A',
        'Е': 'E',
        'Ж': 'K',
        'З': '3',
        'И': 'N',
        'Й': 'N',
        'К': 'K',
        'Л': 'N',
        'М': 'M',
        'Н': 'H',
        'О': 'O',
        'П': 'N',
        'Р': 'P',
        'С': 'C',
        'Т': 'T',
        'У': 'y',
        'Ф': 'O',
        'Х': 'X',
        'Ц': 'U',
        'Ч': 'h',
        'Ш': 'W',
        'Щ': 'W',
        'Ъ': 'B',
        'Ы': 'X',
        'Ь': 'B',
        'Э': '3',
        'Ю': 'X',
        'Я': 'R',
        'а': 'a',
        'б': 'b',
        'в': 'a',
        'г': 'r',
        'д': 'y',
        'е': 'e',
        'ж': 'm',
        'з': 'e',
        'и': 'n',
        'й': 'n',
        'к': 'n',
        'л': 'n',
        'м': 'm',
        'н': 'n',
        'о': 'o',
        'п': 'n',
        'р': 'p',
        'с': 'c',
        'т': 'o',
        'у': 'y',
        'ф': 'b',
        'х': 'x',
        'ц': 'n',
        'ч': 'n',
        'ш': 'w',
        'щ': 'w',
        'ъ': 'a',
        'ы': 'm',
        'ь': 'a',
        'э': 'e',
        'ю': 'm',
        'я': 'r'
      };
      /**
       * This function is a convenience function for looking up information in the
       * metricMap table. It takes a character as a string, and a font.
       *
       * Note: the `width` property may be undefined if fontMetricsData.js wasn't
       * built using `Make extended_metrics`.
       */

      var getCharacterMetrics = function getCharacterMetrics(character, font, mode) {
        if (!__WEBPACK_IMPORTED_MODULE_1__submodules_katex_fonts_fontMetricsData__["a"
        /* default */
        ][font]) {
          throw new Error("Font metrics not found for font: " + font + ".");
        }

        var ch = character.charCodeAt(0);

        if (character[0] in extraCharacterMap) {
          ch = extraCharacterMap[character[0]].charCodeAt(0);
        }

        var metrics = __WEBPACK_IMPORTED_MODULE_1__submodules_katex_fonts_fontMetricsData__["a"
        /* default */
        ][font][ch];

        if (!metrics && mode === 'text') {
          // We don't typically have font metrics for Asian scripts.
          // But since we support them in text mode, we need to return
          // some sort of metrics.
          // So if the character is in a script we support but we
          // don't have metrics for it, just use the metrics for
          // the Latin capital letter M. This is close enough because
          // we (currently) only care about the height of the glpyh
          // not its width.
          if (Object(__WEBPACK_IMPORTED_MODULE_0__unicodeScripts__["b"
          /* supportedCodepoint */
          ])(ch)) {
            metrics = __WEBPACK_IMPORTED_MODULE_1__submodules_katex_fonts_fontMetricsData__["a"
            /* default */
            ][font][77]; // 77 is the charcode for 'M'
          }
        }

        if (metrics) {
          return {
            depth: metrics[0],
            height: metrics[1],
            italic: metrics[2],
            skew: metrics[3],
            width: metrics[4]
          };
        }
      };

      var fontMetricsBySizeIndex = {};
      /**
       * Get the font metrics for a given size.
       */

      var getFontMetrics = function getFontMetrics(size) {
        var sizeIndex = void 0;

        if (size >= 5) {
          sizeIndex = 0;
        } else if (size >= 3) {
          sizeIndex = 1;
        } else {
          sizeIndex = 2;
        }

        if (!fontMetricsBySizeIndex[sizeIndex]) {
          var metrics = fontMetricsBySizeIndex[sizeIndex] = {
            cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18
          };

          for (var key in sigmasAndXis) {
            if (sigmasAndXis.hasOwnProperty(key)) {
              metrics[key] = sigmasAndXis[key][sizeIndex];
            }
          }
        }

        return fontMetricsBySizeIndex[sizeIndex];
      };
      /* harmony default export */


      __webpack_exports__["a"] = {
        getFontMetrics: getFontMetrics,
        getCharacterMetrics: getCharacterMetrics
      };
      /***/
    },
    /* 31 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_freeze__ = __webpack_require__(66);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_freeze___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_freeze__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);
      /**
       * Lexing or parsing positional information for error reporting.
       * This object is immutable.
       */


      var SourceLocation = function () {
        // End offset, zero-based exclusive.
        // Lexer holding the input string.
        function SourceLocation(lexer, start, end) {
          __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, SourceLocation);

          this.lexer = lexer;
          this.start = start;
          this.end = end;

          __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_freeze___default()(this); // Immutable to allow sharing in range().

        }
        /**
         * Merges two `SourceLocation`s from location providers, given they are
         * provided in order of appearance.
         * - Returns the first one's location if only the first is provided.
         * - Returns a merged range of the first and the last if both are provided
         *   and their lexers match.
         * - Otherwise, returns null.
         */
        // Start offset, zero-based inclusive.


        __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(SourceLocation, null, [{
          key: "range",
          value: function range(first, second) {
            if (!second) {
              return first && first.loc;
            } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {
              return null;
            } else {
              return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);
            }
          }
        }]);

        return SourceLocation;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = SourceLocation;
      /***/
    },
    /* 32 */

    /***/
    function (module, exports) {
      var id = 0,
          px = Math.random();

      module.exports = function (key) {
        return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
      };
      /***/

    },
    /* 33 */

    /***/
    function (module, exports) {
      module.exports = function (bitmap, value) {
        return {
          enumerable: !(bitmap & 1),
          configurable: !(bitmap & 2),
          writable: !(bitmap & 4),
          value: value
        };
      };
      /***/

    },
    /* 34 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(5);
      /**
       * This is a module for storing settings passed into KaTeX. It correctly handles
       * default settings.
       */

      /**
       * The main Settings object
       *
       * The current options stored are:
       *  - displayMode: Whether the expression should be typeset as inline math
       *                 (false, the default), meaning that the math starts in
       *                 \textstyle and is placed in an inline-block); or as display
       *                 math (true), meaning that the math starts in \displaystyle
       *                 and is placed in a block with vertical margin.
       */


      var Settings = function Settings(options) {
        __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, Settings); // allow null options


        options = options || {};
        this.displayMode = __WEBPACK_IMPORTED_MODULE_1__utils__["a"
        /* default */
        ].deflt(options.displayMode, false);
        this.throwOnError = __WEBPACK_IMPORTED_MODULE_1__utils__["a"
        /* default */
        ].deflt(options.throwOnError, true);
        this.errorColor = __WEBPACK_IMPORTED_MODULE_1__utils__["a"
        /* default */
        ].deflt(options.errorColor, "#cc0000");
        this.macros = options.macros || {};
        this.colorIsTextColor = __WEBPACK_IMPORTED_MODULE_1__utils__["a"
        /* default */
        ].deflt(options.colorIsTextColor, false);
        this.maxSize = Math.max(0, __WEBPACK_IMPORTED_MODULE_1__utils__["a"
        /* default */
        ].deflt(options.maxSize, Infinity));
      };
      /* harmony default export */


      __webpack_exports__["a"] = Settings;
      /***/
    },
    /* 35 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _from = __webpack_require__(79);

      var _from2 = _interopRequireDefault(_from);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function (arr) {
        if (Array.isArray(arr)) {
          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
            arr2[i] = arr[i];
          }

          return arr2;
        } else {
          return (0, _from2.default)(arr);
        }
      };
      /***/

    },
    /* 36 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      var $at = __webpack_require__(81)(true); // 21.1.3.27 String.prototype[@@iterator]()


      __webpack_require__(48)(String, 'String', function (iterated) {
        this._t = String(iterated); // target

        this._i = 0; // next index
        // 21.1.5.2.1 %StringIteratorPrototype%.next()
      }, function () {
        var O = this._t,
            index = this._i,
            point;
        if (index >= O.length) return {
          value: undefined,
          done: true
        };
        point = $at(O, index);
        this._i += point.length;
        return {
          value: point,
          done: false
        };
      });
      /***/

    },
    /* 37 */

    /***/
    function (module, exports) {
      // 7.1.4 ToInteger
      var ceil = Math.ceil,
          floor = Math.floor;

      module.exports = function (it) {
        return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
      };
      /***/

    },
    /* 38 */

    /***/
    function (module, exports) {
      // 7.2.1 RequireObjectCoercible(argument)
      module.exports = function (it) {
        if (it == undefined) throw TypeError("Can't call method on  " + it);
        return it;
      };
      /***/

    },
    /* 39 */

    /***/
    function (module, exports, __webpack_require__) {
      // 19.1.2.14 / 15.2.3.14 Object.keys(O)
      var $keys = __webpack_require__(87),
          enumBugKeys = __webpack_require__(53);

      module.exports = Object.keys || function keys(O) {
        return $keys(O, enumBugKeys);
      };
      /***/

    },
    /* 40 */

    /***/
    function (module, exports, __webpack_require__) {
      // to indexed object, toObject with fallback for non-array-like ES3 strings
      var IObject = __webpack_require__(49),
          defined = __webpack_require__(38);

      module.exports = function (it) {
        return IObject(defined(it));
      };
      /***/

    },
    /* 41 */

    /***/
    function (module, exports, __webpack_require__) {
      var shared = __webpack_require__(52)('keys'),
          uid = __webpack_require__(32);

      module.exports = function (key) {
        return shared[key] || (shared[key] = uid(key));
      };
      /***/

    },
    /* 42 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (immutable) */

      __webpack_exports__["a"] = scriptFromCodepoint;
      /* harmony export (immutable) */

      __webpack_exports__["b"] = supportedCodepoint;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(35);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_get_iterator__ = __webpack_require__(18);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_get_iterator__);
      /**
       * Unicode block data for the families of scripts we support in \text{}.
       * Scripts only need to appear here if they do not have font metrics.
       */


      var scriptData = [{
        // Latin characters beyond the Latin-1 characters we have metrics for.
        // Needed for Czech, Hungarian and Turkish text, for example.
        name: 'latin',
        blocks: [[0x0100, 0x024f], // Latin Extended-A and Latin Extended-B
        [0x0300, 0x036f]]
      }, {
        // The Cyrillic script used by Russian and related languages.
        // A Cyrillic subset used to be supported as explicitly defined
        // symbols in symbols.js
        name: 'cyrillic',
        blocks: [[0x0400, 0x04ff]]
      }, {
        // The Brahmic scripts of South and Southeast Asia
        // Devanagari (0900–097F)
        // Bengali (0980–09FF)
        // Gurmukhi (0A00–0A7F)
        // Gujarati (0A80–0AFF)
        // Oriya (0B00–0B7F)
        // Tamil (0B80–0BFF)
        // Telugu (0C00–0C7F)
        // Kannada (0C80–0CFF)
        // Malayalam (0D00–0D7F)
        // Sinhala (0D80–0DFF)
        // Thai (0E00–0E7F)
        // Lao (0E80–0EFF)
        // Tibetan (0F00–0FFF)
        // Myanmar (1000–109F)
        name: 'brahmic',
        blocks: [[0x0900, 0x109F]]
      }, {
        name: 'georgian',
        blocks: [[0x10A0, 0x10ff]]
      }, {
        // Chinese and Japanese.
        // The "k" in cjk is for Korean, but we've separated Korean out
        name: "cjk",
        blocks: [[0x3000, 0x30FF], // CJK symbols and punctuation, Hiragana, Katakana
        [0x4E00, 0x9FAF], // CJK ideograms
        [0xFF00, 0xFF60]]
      }, {
        // Korean
        name: 'hangul',
        blocks: [[0xAC00, 0xD7AF]]
      }];
      /**
       * Given a codepoint, return the name of the script or script family
       * it is from, or null if it is not part of a known block
       */

      /*
       * This file defines the Unicode scripts and script families that we
       * support. To add new scripts or families, just add a new entry to the
       * scriptData array below. Adding scripts to the scriptData array allows
       * characters from that script to appear in \text{} environments.
       */

      /**
       * Each script or script family has a name and an array of blocks.
       * Each block is an array of two numbers which specify the start and
       * end points (inclusive) of a block of Unicode codepoints.
       */

      function scriptFromCodepoint(codepoint) {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_get_iterator___default()(scriptData), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var script = _step.value;
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
              for (var _iterator2 = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_get_iterator___default()(script.blocks), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                var block = _step2.value;

                if (codepoint >= block[0] && codepoint <= block[1]) {
                  return script.name;
                }
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                  _iterator2.return();
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }

        return null;
      }
      /**
       * A flattened version of all the supported blocks in a single array.
       * This is an optimization to make supportedCodepoint() fast.
       */


      var allBlocks = [];
      scriptData.forEach(function (s) {
        return s.blocks.forEach(function (b) {
          return allBlocks.push.apply(allBlocks, __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(b));
        });
      });
      /**
       * Given a codepoint, return true if it falls within one of the
       * scripts or script families defined above and false otherwise.
       *
       * Micro benchmarks shows that this is faster than
       * /[\u3000-\u30FF\u4E00-\u9FAF\uFF00-\uFF60\uAC00-\uD7AF\u0900-\u109F]/.test()
       * in Firefox, Chrome and Node.
       */

      function supportedCodepoint(codepoint) {
        for (var i = 0; i < allBlocks.length; i += 2) {
          if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) {
            return true;
          }
        }

        return false;
      }
      /***/

    },
    /* 43 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__fontMetrics__ = __webpack_require__(30);
      /**
       * This file contains information about the options that the Parser carries
       * around with it while parsing. Data is held in an `Options` object, and when
       * recursing, a new `Options` object can be created with the `.with*` and
       * `.reset` functions.
       */


      var sizeStyleMap = [// Each element contains [textsize, scriptsize, scriptscriptsize].
      // The size mappings are taken from TeX with \normalsize=10pt.
      [1, 1, 1], // size1: [5, 5, 5]              \tiny
      [2, 1, 1], // size2: [6, 5, 5]
      [3, 1, 1], // size3: [7, 5, 5]              \scriptsize
      [4, 2, 1], // size4: [8, 6, 5]              \footnotesize
      [5, 2, 1], // size5: [9, 6, 5]              \small
      [6, 3, 1], // size6: [10, 7, 5]             \normalsize
      [7, 4, 2], // size7: [12, 8, 6]             \large
      [8, 6, 3], // size8: [14.4, 10, 7]          \Large
      [9, 7, 6], // size9: [17.28, 12, 10]        \LARGE
      [10, 8, 7], // size10: [20.74, 14.4, 12]     \huge
      [11, 10, 9]];
      var sizeMultipliers = [// fontMetrics.js:getFontMetrics also uses size indexes, so if
      // you change size indexes, change that function.
      0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];

      var sizeAtStyle = function sizeAtStyle(size, style) {
        return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];
      };
      /**
       * This is the main options class. It contains the current style, size, color,
       * and font.
       *
       * Options objects should not be modified. To create a new Options with
       * different properties, call a `.having*` method.
       */


      var Options = function () {
        function Options(data) {
          __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, Options);

          this.style = data.style;
          this.color = data.color;
          this.size = data.size || Options.BASESIZE;
          this.textSize = data.textSize || this.size;
          this.phantom = !!data.phantom;
          this.fontFamily = data.fontFamily;
          this.fontWeight = data.fontWeight || '';
          this.fontShape = data.fontShape || '';
          this.sizeMultiplier = sizeMultipliers[this.size - 1];
          this.maxSize = data.maxSize;
          this._fontMetrics = undefined;
        }
        /**
         * Returns a new options object with the same properties as "this".  Properties
         * from "extension" will be copied to the new options object.
         */

        /**
         * The base size index.
         */


        __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(Options, [{
          key: "extend",
          value: function extend(extension) {
            var data = {
              style: this.style,
              size: this.size,
              textSize: this.textSize,
              color: this.color,
              phantom: this.phantom,
              fontFamily: this.fontFamily,
              fontWeight: this.fontWeight,
              fontShape: this.fontShape,
              maxSize: this.maxSize
            };

            for (var key in extension) {
              if (extension.hasOwnProperty(key)) {
                data[key] = extension[key];
              }
            }

            return new Options(data);
          }
          /**
           * Return an options object with the given style. If `this.style === style`,
           * returns `this`.
           */

        }, {
          key: "havingStyle",
          value: function havingStyle(style) {
            if (this.style === style) {
              return this;
            } else {
              return this.extend({
                style: style,
                size: sizeAtStyle(this.textSize, style)
              });
            }
          }
          /**
           * Return an options object with a cramped version of the current style. If
           * the current style is cramped, returns `this`.
           */

        }, {
          key: "havingCrampedStyle",
          value: function havingCrampedStyle() {
            return this.havingStyle(this.style.cramp());
          }
          /**
           * Return an options object with the given size and in at least `\textstyle`.
           * Returns `this` if appropriate.
           */

        }, {
          key: "havingSize",
          value: function havingSize(size) {
            if (this.size === size && this.textSize === size) {
              return this;
            } else {
              return this.extend({
                style: this.style.text(),
                size: size,
                textSize: size,
                sizeMultiplier: sizeMultipliers[size - 1]
              });
            }
          }
          /**
           * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,
           * changes to at least `\textstyle`.
           */

        }, {
          key: "havingBaseStyle",
          value: function havingBaseStyle(style) {
            style = style || this.style.text();
            var wantSize = sizeAtStyle(Options.BASESIZE, style);

            if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {
              return this;
            } else {
              return this.extend({
                style: style,
                size: wantSize
              });
            }
          }
          /**
           * Create a new options object with the given color.
           */

        }, {
          key: "withColor",
          value: function withColor(color) {
            return this.extend({
              color: color
            });
          }
          /**
           * Create a new options object with "phantom" set to true.
           */

        }, {
          key: "withPhantom",
          value: function withPhantom() {
            return this.extend({
              phantom: true
            });
          }
          /**
           * Create a new options objects with the give font.
           */

        }, {
          key: "withFontFamily",
          value: function withFontFamily(fontFamily) {
            return this.extend({
              fontFamily: fontFamily || this.fontFamily
            });
          }
          /**
           * Creates a new options object with the given font weight
           */

        }, {
          key: "withFontWeight",
          value: function withFontWeight(fontWeight) {
            return this.extend({
              fontWeight: fontWeight
            });
          }
          /**
           * Creates a new options object with the given font weight
           */

        }, {
          key: "withFontShape",
          value: function withFontShape(fontShape) {
            return this.extend({
              fontShape: fontShape
            });
          }
          /**
           * Return the CSS sizing classes required to switch from enclosing options
           * `oldOptions` to `this`. Returns an array of classes.
           */

        }, {
          key: "sizingClasses",
          value: function sizingClasses(oldOptions) {
            if (oldOptions.size !== this.size) {
              return ["sizing", "reset-size" + oldOptions.size, "size" + this.size];
            } else {
              return [];
            }
          }
          /**
           * Return the CSS sizing classes required to switch to the base size. Like
           * `this.havingSize(BASESIZE).sizingClasses(this)`.
           */

        }, {
          key: "baseSizingClasses",
          value: function baseSizingClasses() {
            if (this.size !== Options.BASESIZE) {
              return ["sizing", "reset-size" + this.size, "size" + Options.BASESIZE];
            } else {
              return [];
            }
          }
          /**
           * Return the font metrics for this size.
           */

        }, {
          key: "fontMetrics",
          value: function fontMetrics() {
            if (!this._fontMetrics) {
              this._fontMetrics = __WEBPACK_IMPORTED_MODULE_2__fontMetrics__["a"
              /* default */
              ].getFontMetrics(this.size);
            }

            return this._fontMetrics;
          }
          /**
           * A map of color names to CSS colors.
           * TODO(emily): Remove this when we have real macros
           */

        }, {
          key: "getColor",

          /**
           * Gets the CSS color of the current options object, accounting for the
           * `colorMap`.
           */
          value: function getColor() {
            if (this.phantom) {
              return "transparent";
            } else if (this.color != null && Options.colorMap.hasOwnProperty(this.color)) {
              return Options.colorMap[this.color];
            } else {
              return this.color;
            }
          }
        }]);

        return Options;
      }();

      Options.BASESIZE = 6;
      Options.colorMap = {
        "katex-blue": "#6495ed",
        "katex-orange": "#ffa500",
        "katex-pink": "#ff00af",
        "katex-red": "#df0030",
        "katex-green": "#28ae7b",
        "katex-gray": "gray",
        "katex-purple": "#9d38bd",
        "katex-blueA": "#ccfaff",
        "katex-blueB": "#80f6ff",
        "katex-blueC": "#63d9ea",
        "katex-blueD": "#11accd",
        "katex-blueE": "#0c7f99",
        "katex-tealA": "#94fff5",
        "katex-tealB": "#26edd5",
        "katex-tealC": "#01d1c1",
        "katex-tealD": "#01a995",
        "katex-tealE": "#208170",
        "katex-greenA": "#b6ffb0",
        "katex-greenB": "#8af281",
        "katex-greenC": "#74cf70",
        "katex-greenD": "#1fab54",
        "katex-greenE": "#0d923f",
        "katex-goldA": "#ffd0a9",
        "katex-goldB": "#ffbb71",
        "katex-goldC": "#ff9c39",
        "katex-goldD": "#e07d10",
        "katex-goldE": "#a75a05",
        "katex-redA": "#fca9a9",
        "katex-redB": "#ff8482",
        "katex-redC": "#f9685d",
        "katex-redD": "#e84d39",
        "katex-redE": "#bc2612",
        "katex-maroonA": "#ffbde0",
        "katex-maroonB": "#ff92c6",
        "katex-maroonC": "#ed5fa6",
        "katex-maroonD": "#ca337c",
        "katex-maroonE": "#9e034e",
        "katex-purpleA": "#ddd7ff",
        "katex-purpleB": "#c6b9fc",
        "katex-purpleC": "#aa87ff",
        "katex-purpleD": "#7854ab",
        "katex-purpleE": "#543b78",
        "katex-mintA": "#f5f9e8",
        "katex-mintB": "#edf2df",
        "katex-mintC": "#e0e5cc",
        "katex-grayA": "#f6f7f7",
        "katex-grayB": "#f0f1f2",
        "katex-grayC": "#e3e5e6",
        "katex-grayD": "#d6d8da",
        "katex-grayE": "#babec2",
        "katex-grayF": "#888d93",
        "katex-grayG": "#626569",
        "katex-grayH": "#3b3e40",
        "katex-grayI": "#21242c",
        "katex-kaBlue": "#314453",
        "katex-kaGreen": "#71B307"
      };
      /* harmony default export */

      __webpack_exports__["a"] = Options;
      /***/
    },
    /* 44 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__ParseError__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__Style__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__domTree__ = __webpack_require__(12);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__fontMetrics__ = __webpack_require__(30);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__symbols__ = __webpack_require__(28);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__utils__ = __webpack_require__(5);
      /**
       * This file deals with creating delimiters of various sizes. The TeXbook
       * discusses these routines on page 441-442, in the "Another subroutine sets box
       * x to a specified variable delimiter" paragraph.
       *
       * There are three main routines here. `makeSmallDelim` makes a delimiter in the
       * normal font, but in either text, script, or scriptscript style.
       * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,
       * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of
       * smaller pieces that are stacked on top of one another.
       *
       * The functions take a parameter `center`, which determines if the delimiter
       * should be centered around the axis.
       *
       * Then, there are three exposed functions. `sizedDelim` makes a delimiter in
       * one of the given sizes. This is used for things like `\bigl`.
       * `customSizedDelim` makes a delimiter with a given total height+depth. It is
       * called in places like `\sqrt`. `leftRightDelim` makes an appropriate
       * delimiter which surrounds an expression of a given height an depth. It is
       * used in `\left` and `\right`.
       */

      /**
       * Get the metrics for a given symbol and font, after transformation (i.e.
       * after following replacement from symbols.js)
       */


      var getMetrics = function getMetrics(symbol, font, mode) {
        if (__WEBPACK_IMPORTED_MODULE_5__symbols__["a"
        /* default */
        ].math[symbol] && __WEBPACK_IMPORTED_MODULE_5__symbols__["a"
        /* default */
        ].math[symbol].replace) {
          return __WEBPACK_IMPORTED_MODULE_4__fontMetrics__["a"
          /* default */
          ].getCharacterMetrics(__WEBPACK_IMPORTED_MODULE_5__symbols__["a"
          /* default */
          ].math[symbol].replace, font, mode);
        } else {
          return __WEBPACK_IMPORTED_MODULE_4__fontMetrics__["a"
          /* default */
          ].getCharacterMetrics(symbol, font, mode);
        }
      };
      /**
       * Puts a delimiter span in a given style, and adds appropriate height, depth,
       * and maxFontSizes.
       */


      var styleWrap = function styleWrap(delim, toStyle, options, classes) {
        var newOptions = options.havingBaseStyle(toStyle);

        var span = __WEBPACK_IMPORTED_MODULE_3__buildCommon__["a"
        /* default */
        ].makeSpan((classes || []).concat(newOptions.sizingClasses(options)), [delim], options);

        span.delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;
        span.height *= span.delimSizeMultiplier;
        span.depth *= span.delimSizeMultiplier;
        span.maxFontSize = newOptions.sizeMultiplier;
        return span;
      };

      var centerSpan = function centerSpan(span, options, style) {
        var newOptions = options.havingBaseStyle(style);
        var shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;
        span.classes.push("delimcenter");
        span.style.top = shift + "em";
        span.height -= shift;
        span.depth += shift;
      };
      /**
       * Makes a small delimiter. This is a delimiter that comes in the Main-Regular
       * font, but is restyled to either be in textstyle, scriptstyle, or
       * scriptscriptstyle.
       */


      var makeSmallDelim = function makeSmallDelim(delim, style, center, options, mode, classes) {
        var text = __WEBPACK_IMPORTED_MODULE_3__buildCommon__["a"
        /* default */
        ].makeSymbol(delim, "Main-Regular", mode, options);

        var span = styleWrap(text, style, options, classes);

        if (center) {
          centerSpan(span, options, style);
        }

        return span;
      };
      /**
       * Builds a symbol in the given font size (note size is an integer)
       */


      var mathrmSize = function mathrmSize(value, size, mode, options) {
        return __WEBPACK_IMPORTED_MODULE_3__buildCommon__["a"
        /* default */
        ].makeSymbol(value, "Size" + size + "-Regular", mode, options);
      };
      /**
       * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,
       * Size3, or Size4 fonts. It is always rendered in textstyle.
       */


      var makeLargeDelim = function makeLargeDelim(delim, size, center, options, mode, classes) {
        var inner = mathrmSize(delim, size, mode, options);
        var span = styleWrap(__WEBPACK_IMPORTED_MODULE_3__buildCommon__["a"
        /* default */
        ].makeSpan(["delimsizing", "size" + size], [inner], options), __WEBPACK_IMPORTED_MODULE_1__Style__["a"
        /* default */
        ].TEXT, options, classes);

        if (center) {
          centerSpan(span, options, __WEBPACK_IMPORTED_MODULE_1__Style__["a"
          /* default */
          ].TEXT);
        }

        return span;
      };
      /**
       * Make an inner span with the given offset and in the given font. This is used
       * in `makeStackedDelim` to make the stacking pieces for the delimiter.
       */


      var makeInner = function makeInner(symbol, font, mode) {
        var sizeClass = void 0; // Apply the correct CSS class to choose the right font.

        if (font === "Size1-Regular") {
          sizeClass = "delim-size1";
        } else if (font === "Size4-Regular") {
          sizeClass = "delim-size4";
        }

        var inner = __WEBPACK_IMPORTED_MODULE_3__buildCommon__["a"
        /* default */
        ].makeSpan(["delimsizinginner", sizeClass], [__WEBPACK_IMPORTED_MODULE_3__buildCommon__["a"
        /* default */
        ].makeSpan([], [__WEBPACK_IMPORTED_MODULE_3__buildCommon__["a"
        /* default */
        ].makeSymbol(symbol, font, mode)])]); // Since this will be passed into `makeVList` in the end, wrap the element
        // in the appropriate tag that VList uses.


        return {
          type: "elem",
          elem: inner
        };
      };
      /**
       * Make a stacked delimiter out of a given delimiter, with the total height at
       * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.
       */


      var makeStackedDelim = function makeStackedDelim(delim, heightTotal, center, options, mode, classes) {
        // There are four parts, the top, an optional middle, a repeated part, and a
        // bottom.
        var top = void 0;
        var middle = void 0;
        var repeat = void 0;
        var bottom = void 0;
        top = repeat = bottom = delim;
        middle = null; // Also keep track of what font the delimiters are in

        var font = "Size1-Regular"; // We set the parts and font based on the symbol. Note that we use
        // '\u23d0' instead of '|' and '\u2016' instead of '\\|' for the
        // repeats of the arrows

        if (delim === "\\uparrow") {
          repeat = bottom = "\u23D0";
        } else if (delim === "\\Uparrow") {
          repeat = bottom = "\u2016";
        } else if (delim === "\\downarrow") {
          top = repeat = "\u23D0";
        } else if (delim === "\\Downarrow") {
          top = repeat = "\u2016";
        } else if (delim === "\\updownarrow") {
          top = "\\uparrow";
          repeat = "\u23D0";
          bottom = "\\downarrow";
        } else if (delim === "\\Updownarrow") {
          top = "\\Uparrow";
          repeat = "\u2016";
          bottom = "\\Downarrow";
        } else if (delim === "[" || delim === "\\lbrack") {
          top = "\u23A1";
          repeat = "\u23A2";
          bottom = "\u23A3";
          font = "Size4-Regular";
        } else if (delim === "]" || delim === "\\rbrack") {
          top = "\u23A4";
          repeat = "\u23A5";
          bottom = "\u23A6";
          font = "Size4-Regular";
        } else if (delim === "\\lfloor") {
          repeat = top = "\u23A2";
          bottom = "\u23A3";
          font = "Size4-Regular";
        } else if (delim === "\\lceil") {
          top = "\u23A1";
          repeat = bottom = "\u23A2";
          font = "Size4-Regular";
        } else if (delim === "\\rfloor") {
          repeat = top = "\u23A5";
          bottom = "\u23A6";
          font = "Size4-Regular";
        } else if (delim === "\\rceil") {
          top = "\u23A4";
          repeat = bottom = "\u23A5";
          font = "Size4-Regular";
        } else if (delim === "(") {
          top = "\u239B";
          repeat = "\u239C";
          bottom = "\u239D";
          font = "Size4-Regular";
        } else if (delim === ")") {
          top = "\u239E";
          repeat = "\u239F";
          bottom = "\u23A0";
          font = "Size4-Regular";
        } else if (delim === "\\{" || delim === "\\lbrace") {
          top = "\u23A7";
          middle = "\u23A8";
          bottom = "\u23A9";
          repeat = "\u23AA";
          font = "Size4-Regular";
        } else if (delim === "\\}" || delim === "\\rbrace") {
          top = "\u23AB";
          middle = "\u23AC";
          bottom = "\u23AD";
          repeat = "\u23AA";
          font = "Size4-Regular";
        } else if (delim === "\\lgroup") {
          top = "\u23A7";
          bottom = "\u23A9";
          repeat = "\u23AA";
          font = "Size4-Regular";
        } else if (delim === "\\rgroup") {
          top = "\u23AB";
          bottom = "\u23AD";
          repeat = "\u23AA";
          font = "Size4-Regular";
        } else if (delim === "\\lmoustache") {
          top = "\u23A7";
          bottom = "\u23AD";
          repeat = "\u23AA";
          font = "Size4-Regular";
        } else if (delim === "\\rmoustache") {
          top = "\u23AB";
          bottom = "\u23A9";
          repeat = "\u23AA";
          font = "Size4-Regular";
        } // Get the metrics of the four sections


        var topMetrics = getMetrics(top, font, mode);
        var topHeightTotal = topMetrics.height + topMetrics.depth;
        var repeatMetrics = getMetrics(repeat, font, mode);
        var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;
        var bottomMetrics = getMetrics(bottom, font, mode);
        var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;
        var middleHeightTotal = 0;
        var middleFactor = 1;

        if (middle !== null) {
          var middleMetrics = getMetrics(middle, font, mode);
          middleHeightTotal = middleMetrics.height + middleMetrics.depth;
          middleFactor = 2; // repeat symmetrically above and below middle
        } // Calcuate the minimal height that the delimiter can have.
        // It is at least the size of the top, bottom, and optional middle combined.


        var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal; // Compute the number of copies of the repeat symbol we will need

        var repeatCount = Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal)); // Compute the total height of the delimiter including all the symbols

        var realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal; // The center of the delimiter is placed at the center of the axis. Note
        // that in this context, "center" means that the delimiter should be
        // centered around the axis in the current style, while normally it is
        // centered around the axis in textstyle.

        var axisHeight = options.fontMetrics().axisHeight;

        if (center) {
          axisHeight *= options.sizeMultiplier;
        } // Calculate the depth


        var depth = realHeightTotal / 2 - axisHeight; // Now, we start building the pieces that will go into the vlist
        // Keep a list of the inner pieces

        var inners = []; // Add the bottom symbol

        inners.push(makeInner(bottom, font, mode));

        if (middle === null) {
          // Add that many symbols
          for (var i = 0; i < repeatCount; i++) {
            inners.push(makeInner(repeat, font, mode));
          }
        } else {
          // When there is a middle bit, we need the middle part and two repeated
          // sections
          for (var _i = 0; _i < repeatCount; _i++) {
            inners.push(makeInner(repeat, font, mode));
          }

          inners.push(makeInner(middle, font, mode));

          for (var _i2 = 0; _i2 < repeatCount; _i2++) {
            inners.push(makeInner(repeat, font, mode));
          }
        } // Add the top symbol


        inners.push(makeInner(top, font, mode)); // Finally, build the vlist

        var newOptions = options.havingBaseStyle(__WEBPACK_IMPORTED_MODULE_1__Style__["a"
        /* default */
        ].TEXT);

        var inner = __WEBPACK_IMPORTED_MODULE_3__buildCommon__["a"
        /* default */
        ].makeVList({
          positionType: "bottom",
          positionData: depth,
          children: inners
        }, newOptions);

        return styleWrap(__WEBPACK_IMPORTED_MODULE_3__buildCommon__["a"
        /* default */
        ].makeSpan(["delimsizing", "mult"], [inner], newOptions), __WEBPACK_IMPORTED_MODULE_1__Style__["a"
        /* default */
        ].TEXT, options, classes);
      }; // All surds have 0.08em padding above the viniculum inside the SVG.
      // That keeps browser span height rounding error from pinching the line.


      var vbPad = 80; // padding above the surd, measured inside the viewBox.

      var emPad = 0.08; // padding, in ems, measured in the document.

      var sqrtSvg = function sqrtSvg(sqrtName, height, viewBoxHeight, options) {
        var alternate = void 0;

        if (sqrtName === "sqrtTall") {
          // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular
          // One path edge has a variable length. It runs from the viniculumn
          // to a point near (14 units) the bottom of the surd. The viniculum
          // is 40 units thick. So the length of the line in question is:
          var vertSegment = viewBoxHeight - 54 - vbPad;
          alternate = "M702 " + vbPad + "H400000v40H742v" + vertSegment + "l-4 4-4 4c-.667.7\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 " + vbPad + "H400000v40H742z";
        }

        var pathNode = new __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
        /* default */
        ].pathNode(sqrtName, alternate);
        var svg = new __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
        /* default */
        ].svgNode([pathNode], {
          // Note: 1000:1 ratio of viewBox to document em width.
          "width": "400em",
          "height": height + "em",
          "viewBox": "0 0 400000 " + viewBoxHeight,
          "preserveAspectRatio": "xMinYMin slice"
        });
        return __WEBPACK_IMPORTED_MODULE_3__buildCommon__["a"
        /* default */
        ].makeSpan(["hide-tail"], [svg], options);
      };
      /**
       * Make a sqrt image of the given height,
       */


      var makeSqrtImage = function makeSqrtImage(height, options) {
        var delim = traverseSequence("\\surd", height, stackLargeDelimiterSequence, options); // Create a span containing an SVG image of a sqrt symbol.

        var span = void 0;
        var sizeMultiplier = options.sizeMultiplier; // default

        var spanHeight = 0;
        var texHeight = 0;
        var viewBoxHeight = 0; // We create viewBoxes with 80 units of "padding" above each surd.
        // Then browser rounding error on the parent span height will not
        // encroach on the ink of the viniculum. But that padding is not
        // included in the TeX-like `height` used for calculation of
        // vertical alignment. So texHeight = span.height < span.style.height.

        if (delim.type === "small") {
          // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.
          viewBoxHeight = 1000 + vbPad; // 1000 unit glyph height.

          var newOptions = options.havingBaseStyle(delim.style);
          sizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;
          spanHeight = (1.0 + emPad) * sizeMultiplier;
          texHeight = 1.00 * sizeMultiplier;
          span = sqrtSvg("sqrtMain", spanHeight, viewBoxHeight, options);
          span.style.minWidth = "0.853em";
          span.advanceWidth = 0.833 * sizeMultiplier; // from the font.
        } else if (delim.type === "large") {
          // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.
          viewBoxHeight = (1000 + vbPad) * sizeToMaxHeight[delim.size];
          texHeight = sizeToMaxHeight[delim.size] / sizeMultiplier;
          spanHeight = (sizeToMaxHeight[delim.size] + emPad) / sizeMultiplier;
          span = sqrtSvg("sqrtSize" + delim.size, spanHeight, viewBoxHeight, options);
          span.style.minWidth = "1.02em";
          span.advanceWidth = 1.0 / sizeMultiplier; // from the font
        } else {
          // Tall sqrt. In TeX, this would be stacked using multiple glyphs.
          // We'll use a single SVG to accomplish the same thing.
          spanHeight = height / sizeMultiplier + emPad;
          texHeight = height / sizeMultiplier;
          viewBoxHeight = Math.floor(1000 * height) + vbPad;
          span = sqrtSvg("sqrtTall", spanHeight, viewBoxHeight, options);
          span.style.minWidth = "0.742em";
          span.advanceWidth = 1.056 / sizeMultiplier;
        }

        span.height = texHeight;
        span.style.height = spanHeight + "em";
        return {
          span: span,
          // Calculate the actual line width.
          // This actually should depend on the chosen font -- e.g. \boldmath
          // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and
          // have thicker rules.
          ruleWidth: options.fontMetrics().sqrtRuleThickness * sizeMultiplier
        };
      }; // There are three kinds of delimiters, delimiters that stack when they become
      // too large


      var stackLargeDelimiters = ["(", ")", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "\\lceil", "\\rceil", "\\surd"]; // delimiters that always stack

      var stackAlwaysDelimiters = ["\\uparrow", "\\downarrow", "\\updownarrow", "\\Uparrow", "\\Downarrow", "\\Updownarrow", "|", "\\|", "\\vert", "\\Vert", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "\\lmoustache", "\\rmoustache"]; // and delimiters that never stack

      var stackNeverDelimiters = ["<", ">", "\\langle", "\\rangle", "/", "\\backslash", "\\lt", "\\gt"]; // Metrics of the different sizes. Found by looking at TeX's output of
      // $\bigl| // \Bigl| \biggl| \Biggl| \showlists$
      // Used to create stacked delimiters of appropriate sizes in makeSizedDelim.

      var sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];
      /**
       * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.
       */

      var makeSizedDelim = function makeSizedDelim(delim, size, options, mode, classes) {
        // < and > turn into \langle and \rangle in delimiters
        if (delim === "<" || delim === "\\lt" || delim === "\u27E8") {
          delim = "\\langle";
        } else if (delim === ">" || delim === "\\gt" || delim === "\u27E9") {
          delim = "\\rangle";
        } // Sized delimiters are never centered.


        if (__WEBPACK_IMPORTED_MODULE_6__utils__["a"
        /* default */
        ].contains(stackLargeDelimiters, delim) || __WEBPACK_IMPORTED_MODULE_6__utils__["a"
        /* default */
        ].contains(stackNeverDelimiters, delim)) {
          return makeLargeDelim(delim, size, false, options, mode, classes);
        } else if (__WEBPACK_IMPORTED_MODULE_6__utils__["a"
        /* default */
        ].contains(stackAlwaysDelimiters, delim)) {
          return makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);
        } else {
          throw new __WEBPACK_IMPORTED_MODULE_0__ParseError__["a"
          /* default */
          ]("Illegal delimiter: '" + delim + "'");
        }
      };
      /**
       * There are three different sequences of delimiter sizes that the delimiters
       * follow depending on the kind of delimiter. This is used when creating custom
       * sized delimiters to decide whether to create a small, large, or stacked
       * delimiter.
       *
       * In real TeX, these sequences aren't explicitly defined, but are instead
       * defined inside the font metrics. Since there are only three sequences that
       * are possible for the delimiters that TeX defines, it is easier to just encode
       * them explicitly here.
       */
      // Delimiters that never stack try small delimiters and large delimiters only


      var stackNeverDelimiterSequence = [{
        type: "small",
        style: __WEBPACK_IMPORTED_MODULE_1__Style__["a"
        /* default */
        ].SCRIPTSCRIPT
      }, {
        type: "small",
        style: __WEBPACK_IMPORTED_MODULE_1__Style__["a"
        /* default */
        ].SCRIPT
      }, {
        type: "small",
        style: __WEBPACK_IMPORTED_MODULE_1__Style__["a"
        /* default */
        ].TEXT
      }, {
        type: "large",
        size: 1
      }, {
        type: "large",
        size: 2
      }, {
        type: "large",
        size: 3
      }, {
        type: "large",
        size: 4
      }]; // Delimiters that always stack try the small delimiters first, then stack

      var stackAlwaysDelimiterSequence = [{
        type: "small",
        style: __WEBPACK_IMPORTED_MODULE_1__Style__["a"
        /* default */
        ].SCRIPTSCRIPT
      }, {
        type: "small",
        style: __WEBPACK_IMPORTED_MODULE_1__Style__["a"
        /* default */
        ].SCRIPT
      }, {
        type: "small",
        style: __WEBPACK_IMPORTED_MODULE_1__Style__["a"
        /* default */
        ].TEXT
      }, {
        type: "stack"
      }]; // Delimiters that stack when large try the small and then large delimiters, and
      // stack afterwards

      var stackLargeDelimiterSequence = [{
        type: "small",
        style: __WEBPACK_IMPORTED_MODULE_1__Style__["a"
        /* default */
        ].SCRIPTSCRIPT
      }, {
        type: "small",
        style: __WEBPACK_IMPORTED_MODULE_1__Style__["a"
        /* default */
        ].SCRIPT
      }, {
        type: "small",
        style: __WEBPACK_IMPORTED_MODULE_1__Style__["a"
        /* default */
        ].TEXT
      }, {
        type: "large",
        size: 1
      }, {
        type: "large",
        size: 2
      }, {
        type: "large",
        size: 3
      }, {
        type: "large",
        size: 4
      }, {
        type: "stack"
      }];
      /**
       * Get the font used in a delimiter based on what kind of delimiter it is.
       */

      var delimTypeToFont = function delimTypeToFont(type) {
        if (type.type === "small") {
          return "Main-Regular";
        } else if (type.type === "large") {
          return "Size" + type.size + "-Regular";
        } else if (type.type === "stack") {
          return "Size4-Regular";
        }
      };
      /**
       * Traverse a sequence of types of delimiters to decide what kind of delimiter
       * should be used to create a delimiter of the given height+depth.
       */


      var traverseSequence = function traverseSequence(delim, height, sequence, options) {
        // Here, we choose the index we should start at in the sequences. In smaller
        // sizes (which correspond to larger numbers in style.size) we start earlier
        // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts
        // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2
        var start = Math.min(2, 3 - options.style.size);

        for (var i = start; i < sequence.length; i++) {
          if (sequence[i].type === "stack") {
            // This is always the last delimiter, so we just break the loop now.
            break;
          }

          var metrics = getMetrics(delim, delimTypeToFont(sequence[i]), "math");
          var heightDepth = metrics.height + metrics.depth; // Small delimiters are scaled down versions of the same font, so we
          // account for the style change size.

          if (sequence[i].type === "small") {
            var newOptions = options.havingBaseStyle(sequence[i].style);
            heightDepth *= newOptions.sizeMultiplier;
          } // Check if the delimiter at this size works for the given height.


          if (heightDepth > height) {
            return sequence[i];
          }
        } // If we reached the end of the sequence, return the last sequence element.


        return sequence[sequence.length - 1];
      };
      /**
       * Make a delimiter of a given height+depth, with optional centering. Here, we
       * traverse the sequences, and create a delimiter that the sequence tells us to.
       */


      var makeCustomSizedDelim = function makeCustomSizedDelim(delim, height, center, options, mode, classes) {
        if (delim === "<" || delim === "\\lt" || delim === "\u27E8") {
          delim = "\\langle";
        } else if (delim === ">" || delim === "\\gt" || delim === "\u27E9") {
          delim = "\\rangle";
        } // Decide what sequence to use


        var sequence = void 0;

        if (__WEBPACK_IMPORTED_MODULE_6__utils__["a"
        /* default */
        ].contains(stackNeverDelimiters, delim)) {
          sequence = stackNeverDelimiterSequence;
        } else if (__WEBPACK_IMPORTED_MODULE_6__utils__["a"
        /* default */
        ].contains(stackLargeDelimiters, delim)) {
          sequence = stackLargeDelimiterSequence;
        } else {
          sequence = stackAlwaysDelimiterSequence;
        } // Look through the sequence


        var delimType = traverseSequence(delim, height, sequence, options); // Get the delimiter from font glyphs.
        // Depending on the sequence element we decided on, call the
        // appropriate function.

        if (delimType.type === "small") {
          return makeSmallDelim(delim, delimType.style, center, options, mode, classes);
        } else if (delimType.type === "large") {
          return makeLargeDelim(delim, delimType.size, center, options, mode, classes);
        } else
          /* if (delimType.type === "stack") */
          {
            return makeStackedDelim(delim, height, center, options, mode, classes);
          }
      };
      /**
       * Make a delimiter for use with `\left` and `\right`, given a height and depth
       * of an expression that the delimiters surround.
       */


      var makeLeftRightDelim = function makeLeftRightDelim(delim, height, depth, options, mode, classes) {
        // We always center \left/\right delimiters, so the axis is always shifted
        var axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier; // Taken from TeX source, tex.web, function make_left_right

        var delimiterFactor = 901;
        var delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;
        var maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);
        var totalHeight = Math.max( // In real TeX, calculations are done using integral values which are
        // 65536 per pt, or 655360 per em. So, the division here truncates in
        // TeX but doesn't here, producing different results. If we wanted to
        // exactly match TeX's calculation, we could do
        //   Math.floor(655360 * maxDistFromAxis / 500) *
        //    delimiterFactor / 655360
        // (To see the difference, compare
        //    x^{x^{\left(\rule{0.1em}{0.68em}\right)}}
        // in TeX and KaTeX)
        maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend); // Finally, we defer to `makeCustomSizedDelim` with our calculated total
        // height

        return makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);
      };
      /* harmony default export */


      __webpack_exports__["a"] = {
        sqrtImage: makeSqrtImage,
        sizedDelim: makeSizedDelim,
        customSizedDelim: makeCustomSizedDelim,
        leftRightDelim: makeLeftRightDelim
      };
      /***/
    },
    /* 45 */

    /***/
    function (module, exports, __webpack_require__) {
      var isObject = __webpack_require__(20),
          document = __webpack_require__(16).document // in old IE typeof document.createElement is 'object'
      ,
          is = isObject(document) && isObject(document.createElement);

      module.exports = function (it) {
        return is ? document.createElement(it) : {};
      };
      /***/

    },
    /* 46 */

    /***/
    function (module, exports, __webpack_require__) {
      // most Object methods by ES6 should accept primitives
      var $export = __webpack_require__(25),
          core = __webpack_require__(8),
          fails = __webpack_require__(24);

      module.exports = function (KEY, exec) {
        var fn = (core.Object || {})[KEY] || Object[KEY],
            exp = {};
        exp[KEY] = exec(fn);
        $export($export.S + $export.F * fails(function () {
          fn(1);
        }), 'Object', exp);
      };
      /***/

    },
    /* 47 */

    /***/
    function (module, exports, __webpack_require__) {
      // optional / simple context binding
      var aFunction = __webpack_require__(72);

      module.exports = function (fn, that, length) {
        aFunction(fn);
        if (that === undefined) return fn;

        switch (length) {
          case 1:
            return function (a) {
              return fn.call(that, a);
            };

          case 2:
            return function (a, b) {
              return fn.call(that, a, b);
            };

          case 3:
            return function (a, b, c) {
              return fn.call(that, a, b, c);
            };
        }

        return function ()
        /* ...args */
        {
          return fn.apply(that, arguments);
        };
      };
      /***/

    },
    /* 48 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      var LIBRARY = __webpack_require__(82),
          $export = __webpack_require__(25),
          redefine = __webpack_require__(83),
          hide = __webpack_require__(26),
          has = __webpack_require__(21),
          Iterators = __webpack_require__(17),
          $iterCreate = __webpack_require__(84),
          setToStringTag = __webpack_require__(54),
          getPrototypeOf = __webpack_require__(91),
          ITERATOR = __webpack_require__(11)('iterator'),
          BUGGY = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
      ,
          FF_ITERATOR = '@@iterator',
          KEYS = 'keys',
          VALUES = 'values';

      var returnThis = function returnThis() {
        return this;
      };

      module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
        $iterCreate(Constructor, NAME, next);

        var getMethod = function getMethod(kind) {
          if (!BUGGY && kind in proto) return proto[kind];

          switch (kind) {
            case KEYS:
              return function keys() {
                return new Constructor(this, kind);
              };

            case VALUES:
              return function values() {
                return new Constructor(this, kind);
              };
          }

          return function entries() {
            return new Constructor(this, kind);
          };
        };

        var TAG = NAME + ' Iterator',
            DEF_VALUES = DEFAULT == VALUES,
            VALUES_BUG = false,
            proto = Base.prototype,
            $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT],
            $default = $native || getMethod(DEFAULT),
            $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined,
            $anyNative = NAME == 'Array' ? proto.entries || $native : $native,
            methods,
            key,
            IteratorPrototype; // Fix native

        if ($anyNative) {
          IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));

          if (IteratorPrototype !== Object.prototype) {
            // Set @@toStringTag to native iterators
            setToStringTag(IteratorPrototype, TAG, true); // fix for some old engines

            if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
          }
        } // fix Array#{values, @@iterator}.name in V8 / FF


        if (DEF_VALUES && $native && $native.name !== VALUES) {
          VALUES_BUG = true;

          $default = function values() {
            return $native.call(this);
          };
        } // Define iterator


        if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
          hide(proto, ITERATOR, $default);
        } // Plug for library


        Iterators[NAME] = $default;
        Iterators[TAG] = returnThis;

        if (DEFAULT) {
          methods = {
            values: DEF_VALUES ? $default : getMethod(VALUES),
            keys: IS_SET ? $default : getMethod(KEYS),
            entries: $entries
          };
          if (FORCED) for (key in methods) {
            if (!(key in proto)) redefine(proto, key, methods[key]);
          } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
        }

        return methods;
      };
      /***/

    },
    /* 49 */

    /***/
    function (module, exports, __webpack_require__) {
      // fallback for non-array-like ES3 and non-enumerable old V8 strings
      var cof = __webpack_require__(50);

      module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
        return cof(it) == 'String' ? it.split('') : Object(it);
      };
      /***/
    },
    /* 50 */

    /***/
    function (module, exports) {
      var toString = {}.toString;

      module.exports = function (it) {
        return toString.call(it).slice(8, -1);
      };
      /***/

    },
    /* 51 */

    /***/
    function (module, exports, __webpack_require__) {
      // 7.1.15 ToLength
      var toInteger = __webpack_require__(37),
          min = Math.min;

      module.exports = function (it) {
        return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
      };
      /***/

    },
    /* 52 */

    /***/
    function (module, exports, __webpack_require__) {
      var global = __webpack_require__(16),
          SHARED = '__core-js_shared__',
          store = global[SHARED] || (global[SHARED] = {});

      module.exports = function (key) {
        return store[key] || (store[key] = {});
      };
      /***/

    },
    /* 53 */

    /***/
    function (module, exports) {
      // IE 8- don't enum bug keys
      module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');
      /***/
    },
    /* 54 */

    /***/
    function (module, exports, __webpack_require__) {
      var def = __webpack_require__(15).f,
          has = __webpack_require__(21),
          TAG = __webpack_require__(11)('toStringTag');

      module.exports = function (it, tag, stat) {
        if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {
          configurable: true,
          value: tag
        });
      };
      /***/

    },
    /* 55 */

    /***/
    function (module, exports, __webpack_require__) {
      var classof = __webpack_require__(56),
          ITERATOR = __webpack_require__(11)('iterator'),
          Iterators = __webpack_require__(17);

      module.exports = __webpack_require__(8).getIteratorMethod = function (it) {
        if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
      };
      /***/

    },
    /* 56 */

    /***/
    function (module, exports, __webpack_require__) {
      // getting tag from 19.1.3.6 Object.prototype.toString()
      var cof = __webpack_require__(50),
          TAG = __webpack_require__(11)('toStringTag') // ES3 wrong here
      ,
          ARG = cof(function () {
        return arguments;
      }()) == 'Arguments'; // fallback for IE11 Script Access Denied error


      var tryGet = function tryGet(it, key) {
        try {
          return it[key];
        } catch (e) {
          /* empty */
        }
      };

      module.exports = function (it) {
        var O, T, B;
        return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case
        : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T // builtinTag case
        : ARG ? cof(O) // ES3 arguments fallback
        : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
      };
      /***/

    },
    /* 57 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _isIterable2 = __webpack_require__(97);

      var _isIterable3 = _interopRequireDefault(_isIterable2);

      var _getIterator2 = __webpack_require__(18);

      var _getIterator3 = _interopRequireDefault(_getIterator2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      exports.default = function () {
        function sliceIterator(arr, i) {
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;

          try {
            for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);

              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }

          return _arr;
        }

        return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if ((0, _isIterable3.default)(Object(arr))) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();
      /***/

    },
    /* 58 */

    /***/
    function (module, exports, __webpack_require__) {
      __webpack_require__(99);

      var global = __webpack_require__(16),
          hide = __webpack_require__(26),
          Iterators = __webpack_require__(17),
          TO_STRING_TAG = __webpack_require__(11)('toStringTag');

      for (var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++) {
        var NAME = collections[i],
            Collection = global[NAME],
            proto = Collection && Collection.prototype;
        if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
        Iterators[NAME] = Iterators.Array;
      }
      /***/

    },
    /* 59 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony default export */

      __webpack_exports__["a"] = {
        "AMS-Regular": {
          "65": [0, 0.68889, 0, 0, 0.72222],
          "66": [0, 0.68889, 0, 0, 0.66667],
          "67": [0, 0.68889, 0, 0, 0.72222],
          "68": [0, 0.68889, 0, 0, 0.72222],
          "69": [0, 0.68889, 0, 0, 0.66667],
          "70": [0, 0.68889, 0, 0, 0.61111],
          "71": [0, 0.68889, 0, 0, 0.77778],
          "72": [0, 0.68889, 0, 0, 0.77778],
          "73": [0, 0.68889, 0, 0, 0.38889],
          "74": [0.16667, 0.68889, 0, 0, 0.5],
          "75": [0, 0.68889, 0, 0, 0.77778],
          "76": [0, 0.68889, 0, 0, 0.66667],
          "77": [0, 0.68889, 0, 0, 0.94445],
          "78": [0, 0.68889, 0, 0, 0.72222],
          "79": [0.16667, 0.68889, 0, 0, 0.77778],
          "80": [0, 0.68889, 0, 0, 0.61111],
          "81": [0.16667, 0.68889, 0, 0, 0.77778],
          "82": [0, 0.68889, 0, 0, 0.72222],
          "83": [0, 0.68889, 0, 0, 0.55556],
          "84": [0, 0.68889, 0, 0, 0.66667],
          "85": [0, 0.68889, 0, 0, 0.72222],
          "86": [0, 0.68889, 0, 0, 0.72222],
          "87": [0, 0.68889, 0, 0, 1.0],
          "88": [0, 0.68889, 0, 0, 0.72222],
          "89": [0, 0.68889, 0, 0, 0.72222],
          "90": [0, 0.68889, 0, 0, 0.66667],
          "107": [0, 0.68889, 0, 0, 0.55556],
          "165": [0, 0.675, 0.025, 0, 0.75],
          "174": [0.15559, 0.69224, 0, 0, 0.94666],
          "240": [0, 0.68889, 0, 0, 0.55556],
          "295": [0, 0.68889, 0, 0, 0.54028],
          "710": [0, 0.825, 0, 0, 2.33334],
          "732": [0, 0.9, 0, 0, 2.33334],
          "770": [0, 0.825, 0, 0, 2.33334],
          "771": [0, 0.9, 0, 0, 2.33334],
          "989": [0.08167, 0.58167, 0, 0, 0.77778],
          "1008": [0, 0.43056, 0.04028, 0, 0.66667],
          "8245": [0, 0.54986, 0, 0, 0.275],
          "8463": [0, 0.68889, 0, 0, 0.54028],
          "8487": [0, 0.68889, 0, 0, 0.72222],
          "8498": [0, 0.68889, 0, 0, 0.55556],
          "8502": [0, 0.68889, 0, 0, 0.66667],
          "8503": [0, 0.68889, 0, 0, 0.44445],
          "8504": [0, 0.68889, 0, 0, 0.66667],
          "8513": [0, 0.68889, 0, 0, 0.63889],
          "8592": [-0.03598, 0.46402, 0, 0, 0.5],
          "8594": [-0.03598, 0.46402, 0, 0, 0.5],
          "8602": [-0.13313, 0.36687, 0, 0, 1.0],
          "8603": [-0.13313, 0.36687, 0, 0, 1.0],
          "8606": [0.01354, 0.52239, 0, 0, 1.0],
          "8608": [0.01354, 0.52239, 0, 0, 1.0],
          "8610": [0.01354, 0.52239, 0, 0, 1.11111],
          "8611": [0.01354, 0.52239, 0, 0, 1.11111],
          "8619": [0, 0.54986, 0, 0, 1.0],
          "8620": [0, 0.54986, 0, 0, 1.0],
          "8621": [-0.13313, 0.37788, 0, 0, 1.38889],
          "8622": [-0.13313, 0.36687, 0, 0, 1.0],
          "8624": [0, 0.69224, 0, 0, 0.5],
          "8625": [0, 0.69224, 0, 0, 0.5],
          "8630": [0, 0.43056, 0, 0, 1.0],
          "8631": [0, 0.43056, 0, 0, 1.0],
          "8634": [0.08198, 0.58198, 0, 0, 0.77778],
          "8635": [0.08198, 0.58198, 0, 0, 0.77778],
          "8638": [0.19444, 0.69224, 0, 0, 0.41667],
          "8639": [0.19444, 0.69224, 0, 0, 0.41667],
          "8642": [0.19444, 0.69224, 0, 0, 0.41667],
          "8643": [0.19444, 0.69224, 0, 0, 0.41667],
          "8644": [0.1808, 0.675, 0, 0, 1.0],
          "8646": [0.1808, 0.675, 0, 0, 1.0],
          "8647": [0.1808, 0.675, 0, 0, 1.0],
          "8648": [0.19444, 0.69224, 0, 0, 0.83334],
          "8649": [0.1808, 0.675, 0, 0, 1.0],
          "8650": [0.19444, 0.69224, 0, 0, 0.83334],
          "8651": [0.01354, 0.52239, 0, 0, 1.0],
          "8652": [0.01354, 0.52239, 0, 0, 1.0],
          "8653": [-0.13313, 0.36687, 0, 0, 1.0],
          "8654": [-0.13313, 0.36687, 0, 0, 1.0],
          "8655": [-0.13313, 0.36687, 0, 0, 1.0],
          "8666": [0.13667, 0.63667, 0, 0, 1.0],
          "8667": [0.13667, 0.63667, 0, 0, 1.0],
          "8669": [-0.13313, 0.37788, 0, 0, 1.0],
          "8672": [-0.064, 0.437, 0, 0, 1187],
          "8674": [-0.064, 0.437, 0, 0, 1167],
          "8705": [0, 0.825, 0, 0, 0.5],
          "8708": [0, 0.68889, 0, 0, 0.55556],
          "8709": [0.08167, 0.58167, 0, 0, 0.77778],
          "8717": [0, 0.43056, 0, 0, 0.42917],
          "8722": [-0.03598, 0.46402, 0, 0, 0.5],
          "8724": [0.08198, 0.69224, 0, 0, 0.77778],
          "8726": [0.08167, 0.58167, 0, 0, 0.77778],
          "8733": [0, 0.69224, 0, 0, 0.77778],
          "8736": [0, 0.69224, 0, 0, 0.72222],
          "8737": [0, 0.69224, 0, 0, 0.72222],
          "8738": [0.03517, 0.52239, 0, 0, 0.72222],
          "8739": [0.08167, 0.58167, 0, 0, 0.22222],
          "8740": [0.25142, 0.74111, 0, 0, 0.27778],
          "8741": [0.08167, 0.58167, 0, 0, 0.38889],
          "8742": [0.25142, 0.74111, 0, 0, 0.5],
          "8756": [0, 0.69224, 0, 0, 0.66667],
          "8757": [0, 0.69224, 0, 0, 0.66667],
          "8764": [-0.13313, 0.36687, 0, 0, 0.77778],
          "8765": [-0.13313, 0.37788, 0, 0, 0.77778],
          "8769": [-0.13313, 0.36687, 0, 0, 0.77778],
          "8770": [-0.03625, 0.46375, 0, 0, 0.77778],
          "8774": [0.30274, 0.79383, 0, 0, 0.77778],
          "8776": [-0.01688, 0.48312, 0, 0, 0.77778],
          "8778": [0.08167, 0.58167, 0, 0, 0.77778],
          "8782": [0.06062, 0.54986, 0, 0, 0.77778],
          "8783": [0.06062, 0.54986, 0, 0, 0.77778],
          "8785": [0.08198, 0.58198, 0, 0, 0.77778],
          "8786": [0.08198, 0.58198, 0, 0, 0.77778],
          "8787": [0.08198, 0.58198, 0, 0, 0.77778],
          "8790": [0, 0.69224, 0, 0, 0.77778],
          "8791": [0.22958, 0.72958, 0, 0, 0.77778],
          "8796": [0.08198, 0.91667, 0, 0, 0.77778],
          "8806": [0.25583, 0.75583, 0, 0, 0.77778],
          "8807": [0.25583, 0.75583, 0, 0, 0.77778],
          "8808": [0.25142, 0.75726, 0, 0, 0.77778],
          "8809": [0.25142, 0.75726, 0, 0, 0.77778],
          "8812": [0.25583, 0.75583, 0, 0, 0.5],
          "8814": [0.20576, 0.70576, 0, 0, 0.77778],
          "8815": [0.20576, 0.70576, 0, 0, 0.77778],
          "8816": [0.30274, 0.79383, 0, 0, 0.77778],
          "8817": [0.30274, 0.79383, 0, 0, 0.77778],
          "8818": [0.22958, 0.72958, 0, 0, 0.77778],
          "8819": [0.22958, 0.72958, 0, 0, 0.77778],
          "8822": [0.1808, 0.675, 0, 0, 0.77778],
          "8823": [0.1808, 0.675, 0, 0, 0.77778],
          "8828": [0.13667, 0.63667, 0, 0, 0.77778],
          "8829": [0.13667, 0.63667, 0, 0, 0.77778],
          "8830": [0.22958, 0.72958, 0, 0, 0.77778],
          "8831": [0.22958, 0.72958, 0, 0, 0.77778],
          "8832": [0.20576, 0.70576, 0, 0, 0.77778],
          "8833": [0.20576, 0.70576, 0, 0, 0.77778],
          "8840": [0.30274, 0.79383, 0, 0, 0.77778],
          "8841": [0.30274, 0.79383, 0, 0, 0.77778],
          "8842": [0.13597, 0.63597, 0, 0, 0.77778],
          "8843": [0.13597, 0.63597, 0, 0, 0.77778],
          "8847": [0.03517, 0.54986, 0, 0, 0.77778],
          "8848": [0.03517, 0.54986, 0, 0, 0.77778],
          "8858": [0.08198, 0.58198, 0, 0, 0.77778],
          "8859": [0.08198, 0.58198, 0, 0, 0.77778],
          "8861": [0.08198, 0.58198, 0, 0, 0.77778],
          "8862": [0, 0.675, 0, 0, 0.77778],
          "8863": [0, 0.675, 0, 0, 0.77778],
          "8864": [0, 0.675, 0, 0, 0.77778],
          "8865": [0, 0.675, 0, 0, 0.77778],
          "8872": [0, 0.69224, 0, 0, 0.61111],
          "8873": [0, 0.69224, 0, 0, 0.72222],
          "8874": [0, 0.69224, 0, 0, 0.88889],
          "8876": [0, 0.68889, 0, 0, 0.61111],
          "8877": [0, 0.68889, 0, 0, 0.61111],
          "8878": [0, 0.68889, 0, 0, 0.72222],
          "8879": [0, 0.68889, 0, 0, 0.72222],
          "8882": [0.03517, 0.54986, 0, 0, 0.77778],
          "8883": [0.03517, 0.54986, 0, 0, 0.77778],
          "8884": [0.13667, 0.63667, 0, 0, 0.77778],
          "8885": [0.13667, 0.63667, 0, 0, 0.77778],
          "8888": [0, 0.54986, 0, 0, 1.11111],
          "8890": [0.19444, 0.43056, 0, 0, 0.55556],
          "8891": [0.19444, 0.69224, 0, 0, 0.61111],
          "8892": [0.19444, 0.69224, 0, 0, 0.61111],
          "8901": [0, 0.54986, 0, 0, 0.27778],
          "8903": [0.08167, 0.58167, 0, 0, 0.77778],
          "8905": [0.08167, 0.58167, 0, 0, 0.77778],
          "8906": [0.08167, 0.58167, 0, 0, 0.77778],
          "8907": [0, 0.69224, 0, 0, 0.77778],
          "8908": [0, 0.69224, 0, 0, 0.77778],
          "8909": [-0.03598, 0.46402, 0, 0, 0.77778],
          "8910": [0, 0.54986, 0, 0, 0.76042],
          "8911": [0, 0.54986, 0, 0, 0.76042],
          "8912": [0.03517, 0.54986, 0, 0, 0.77778],
          "8913": [0.03517, 0.54986, 0, 0, 0.77778],
          "8914": [0, 0.54986, 0, 0, 0.66667],
          "8915": [0, 0.54986, 0, 0, 0.66667],
          "8916": [0, 0.69224, 0, 0, 0.66667],
          "8918": [0.0391, 0.5391, 0, 0, 0.77778],
          "8919": [0.0391, 0.5391, 0, 0, 0.77778],
          "8920": [0.03517, 0.54986, 0, 0, 1.33334],
          "8921": [0.03517, 0.54986, 0, 0, 1.33334],
          "8922": [0.38569, 0.88569, 0, 0, 0.77778],
          "8923": [0.38569, 0.88569, 0, 0, 0.77778],
          "8926": [0.13667, 0.63667, 0, 0, 0.77778],
          "8927": [0.13667, 0.63667, 0, 0, 0.77778],
          "8928": [0.30274, 0.79383, 0, 0, 0.77778],
          "8929": [0.30274, 0.79383, 0, 0, 0.77778],
          "8934": [0.23222, 0.74111, 0, 0, 0.77778],
          "8935": [0.23222, 0.74111, 0, 0, 0.77778],
          "8936": [0.23222, 0.74111, 0, 0, 0.77778],
          "8937": [0.23222, 0.74111, 0, 0, 0.77778],
          "8938": [0.20576, 0.70576, 0, 0, 0.77778],
          "8939": [0.20576, 0.70576, 0, 0, 0.77778],
          "8940": [0.30274, 0.79383, 0, 0, 0.77778],
          "8941": [0.30274, 0.79383, 0, 0, 0.77778],
          "8994": [0.19444, 0.69224, 0, 0, 0.77778],
          "8995": [0.19444, 0.69224, 0, 0, 0.77778],
          "9416": [0.15559, 0.69224, 0, 0, 0.90222],
          "9484": [0, 0.69224, 0, 0, 0.5],
          "9488": [0, 0.69224, 0, 0, 0.5],
          "9492": [0, 0.37788, 0, 0, 0.5],
          "9496": [0, 0.37788, 0, 0, 0.5],
          "9585": [0.19444, 0.68889, 0, 0, 0.88889],
          "9586": [0.19444, 0.74111, 0, 0, 0.88889],
          "9632": [0, 0.675, 0, 0, 0.77778],
          "9633": [0, 0.675, 0, 0, 0.77778],
          "9650": [0, 0.54986, 0, 0, 0.72222],
          "9651": [0, 0.54986, 0, 0, 0.72222],
          "9654": [0.03517, 0.54986, 0, 0, 0.77778],
          "9660": [0, 0.54986, 0, 0, 0.72222],
          "9661": [0, 0.54986, 0, 0, 0.72222],
          "9664": [0.03517, 0.54986, 0, 0, 0.77778],
          "9674": [0.11111, 0.69224, 0, 0, 0.66667],
          "9733": [0.19444, 0.69224, 0, 0, 0.94445],
          "10003": [0, 0.69224, 0, 0, 0.83334],
          "10016": [0, 0.69224, 0, 0, 0.83334],
          "10731": [0.11111, 0.69224, 0, 0, 0.66667],
          "10846": [0.19444, 0.75583, 0, 0, 0.61111],
          "10877": [0.13667, 0.63667, 0, 0, 0.77778],
          "10878": [0.13667, 0.63667, 0, 0, 0.77778],
          "10885": [0.25583, 0.75583, 0, 0, 0.77778],
          "10886": [0.25583, 0.75583, 0, 0, 0.77778],
          "10887": [0.13597, 0.63597, 0, 0, 0.77778],
          "10888": [0.13597, 0.63597, 0, 0, 0.77778],
          "10889": [0.26167, 0.75726, 0, 0, 0.77778],
          "10890": [0.26167, 0.75726, 0, 0, 0.77778],
          "10891": [0.48256, 0.98256, 0, 0, 0.77778],
          "10892": [0.48256, 0.98256, 0, 0, 0.77778],
          "10901": [0.13667, 0.63667, 0, 0, 0.77778],
          "10902": [0.13667, 0.63667, 0, 0, 0.77778],
          "10933": [0.25142, 0.75726, 0, 0, 0.77778],
          "10934": [0.25142, 0.75726, 0, 0, 0.77778],
          "10935": [0.26167, 0.75726, 0, 0, 0.77778],
          "10936": [0.26167, 0.75726, 0, 0, 0.77778],
          "10937": [0.26167, 0.75726, 0, 0, 0.77778],
          "10938": [0.26167, 0.75726, 0, 0, 0.77778],
          "10949": [0.25583, 0.75583, 0, 0, 0.77778],
          "10950": [0.25583, 0.75583, 0, 0, 0.77778],
          "10955": [0.28481, 0.79383, 0, 0, 0.77778],
          "10956": [0.28481, 0.79383, 0, 0, 0.77778],
          "57350": [0.08167, 0.58167, 0, 0, 0.22222],
          "57351": [0.08167, 0.58167, 0, 0, 0.38889],
          "57352": [0.08167, 0.58167, 0, 0, 0.77778],
          "57353": [0, 0.43056, 0.04028, 0, 0.66667],
          "57356": [0.25142, 0.75726, 0, 0, 0.77778],
          "57357": [0.25142, 0.75726, 0, 0, 0.77778],
          "57358": [0.41951, 0.91951, 0, 0, 0.77778],
          "57359": [0.30274, 0.79383, 0, 0, 0.77778],
          "57360": [0.30274, 0.79383, 0, 0, 0.77778],
          "57361": [0.41951, 0.91951, 0, 0, 0.77778],
          "57366": [0.25142, 0.75726, 0, 0, 0.77778],
          "57367": [0.25142, 0.75726, 0, 0, 0.77778],
          "57368": [0.25142, 0.75726, 0, 0, 0.77778],
          "57369": [0.25142, 0.75726, 0, 0, 0.77778],
          "57370": [0.13597, 0.63597, 0, 0, 0.77778],
          "57371": [0.13597, 0.63597, 0, 0, 0.77778]
        },
        "Caligraphic-Regular": {
          "48": [0, 0.43056, 0, 0, 0.5],
          "49": [0, 0.43056, 0, 0, 0.5],
          "50": [0, 0.43056, 0, 0, 0.5],
          "51": [0.19444, 0.43056, 0, 0, 0.5],
          "52": [0.19444, 0.43056, 0, 0, 0.5],
          "53": [0.19444, 0.43056, 0, 0, 0.5],
          "54": [0, 0.64444, 0, 0, 0.5],
          "55": [0.19444, 0.43056, 0, 0, 0.5],
          "56": [0, 0.64444, 0, 0, 0.5],
          "57": [0.19444, 0.43056, 0, 0, 0.5],
          "65": [0, 0.68333, 0, 0.19445, 0.79847],
          "66": [0, 0.68333, 0.03041, 0.13889, 0.65681],
          "67": [0, 0.68333, 0.05834, 0.13889, 0.52653],
          "68": [0, 0.68333, 0.02778, 0.08334, 0.77139],
          "69": [0, 0.68333, 0.08944, 0.11111, 0.52778],
          "70": [0, 0.68333, 0.09931, 0.11111, 0.71875],
          "71": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],
          "72": [0, 0.68333, 0.00965, 0.11111, 0.84452],
          "73": [0, 0.68333, 0.07382, 0, 0.54452],
          "74": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],
          "75": [0, 0.68333, 0.01445, 0.05556, 0.76195],
          "76": [0, 0.68333, 0, 0.13889, 0.68972],
          "77": [0, 0.68333, 0, 0.13889, 1.2009],
          "78": [0, 0.68333, 0.14736, 0.08334, 0.82049],
          "79": [0, 0.68333, 0.02778, 0.11111, 0.79611],
          "80": [0, 0.68333, 0.08222, 0.08334, 0.69556],
          "81": [0.09722, 0.68333, 0, 0.11111, 0.81667],
          "82": [0, 0.68333, 0, 0.08334, 0.8475],
          "83": [0, 0.68333, 0.075, 0.13889, 0.60556],
          "84": [0, 0.68333, 0.25417, 0, 0.54464],
          "85": [0, 0.68333, 0.09931, 0.08334, 0.62583],
          "86": [0, 0.68333, 0.08222, 0, 0.61278],
          "87": [0, 0.68333, 0.08222, 0.08334, 0.98778],
          "88": [0, 0.68333, 0.14643, 0.13889, 0.7133],
          "89": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],
          "90": [0, 0.68333, 0.07944, 0.13889, 0.72473]
        },
        "Fraktur-Regular": {
          "33": [0, 0.69141, 0, 0, 0.29574],
          "34": [0, 0.69141, 0, 0, 0.21471],
          "38": [0, 0.69141, 0, 0, 0.73786],
          "39": [0, 0.69141, 0, 0, 0.21201],
          "40": [0.24982, 0.74947, 0, 0, 0.38865],
          "41": [0.24982, 0.74947, 0, 0, 0.38865],
          "42": [0, 0.62119, 0, 0, 0.27764],
          "43": [0.08319, 0.58283, 0, 0, 0.75623],
          "44": [0, 0.10803, 0, 0, 0.27764],
          "45": [0.08319, 0.58283, 0, 0, 0.75623],
          "46": [0, 0.10803, 0, 0, 0.27764],
          "47": [0.24982, 0.74947, 0, 0, 0.50181],
          "48": [0, 0.47534, 0, 0, 0.50181],
          "49": [0, 0.47534, 0, 0, 0.50181],
          "50": [0, 0.47534, 0, 0, 0.50181],
          "51": [0.18906, 0.47534, 0, 0, 0.50181],
          "52": [0.18906, 0.47534, 0, 0, 0.50181],
          "53": [0.18906, 0.47534, 0, 0, 0.50181],
          "54": [0, 0.69141, 0, 0, 0.50181],
          "55": [0.18906, 0.47534, 0, 0, 0.50181],
          "56": [0, 0.69141, 0, 0, 0.50181],
          "57": [0.18906, 0.47534, 0, 0, 0.50181],
          "58": [0, 0.47534, 0, 0, 0.21606],
          "59": [0.12604, 0.47534, 0, 0, 0.21606],
          "61": [-0.13099, 0.36866, 0, 0, 0.75623],
          "63": [0, 0.69141, 0, 0, 0.36245],
          "65": [0, 0.69141, 0, 0, 0.7176],
          "66": [0, 0.69141, 0, 0, 0.88397],
          "67": [0, 0.69141, 0, 0, 0.61254],
          "68": [0, 0.69141, 0, 0, 0.83158],
          "69": [0, 0.69141, 0, 0, 0.66278],
          "70": [0.12604, 0.69141, 0, 0, 0.61119],
          "71": [0, 0.69141, 0, 0, 0.78539],
          "72": [0.06302, 0.69141, 0, 0, 0.7203],
          "73": [0, 0.69141, 0, 0, 0.55448],
          "74": [0.12604, 0.69141, 0, 0, 0.55231],
          "75": [0, 0.69141, 0, 0, 0.66845],
          "76": [0, 0.69141, 0, 0, 0.66602],
          "77": [0, 0.69141, 0, 0, 1.04953],
          "78": [0, 0.69141, 0, 0, 0.83212],
          "79": [0, 0.69141, 0, 0, 0.82699],
          "80": [0.18906, 0.69141, 0, 0, 0.82753],
          "81": [0.03781, 0.69141, 0, 0, 0.82699],
          "82": [0, 0.69141, 0, 0, 0.82807],
          "83": [0, 0.69141, 0, 0, 0.82861],
          "84": [0, 0.69141, 0, 0, 0.66899],
          "85": [0, 0.69141, 0, 0, 0.64576],
          "86": [0, 0.69141, 0, 0, 0.83131],
          "87": [0, 0.69141, 0, 0, 1.04602],
          "88": [0, 0.69141, 0, 0, 0.71922],
          "89": [0.18906, 0.69141, 0, 0, 0.83293],
          "90": [0.12604, 0.69141, 0, 0, 0.60201],
          "91": [0.24982, 0.74947, 0, 0, 0.27764],
          "93": [0.24982, 0.74947, 0, 0, 0.27764],
          "94": [0, 0.69141, 0, 0, 0.49965],
          "97": [0, 0.47534, 0, 0, 0.50046],
          "98": [0, 0.69141, 0, 0, 0.51315],
          "99": [0, 0.47534, 0, 0, 0.38946],
          "100": [0, 0.62119, 0, 0, 0.49857],
          "101": [0, 0.47534, 0, 0, 0.40053],
          "102": [0.18906, 0.69141, 0, 0, 0.32626],
          "103": [0.18906, 0.47534, 0, 0, 0.5037],
          "104": [0.18906, 0.69141, 0, 0, 0.52126],
          "105": [0, 0.69141, 0, 0, 0.27899],
          "106": [0, 0.69141, 0, 0, 0.28088],
          "107": [0, 0.69141, 0, 0, 0.38946],
          "108": [0, 0.69141, 0, 0, 0.27953],
          "109": [0, 0.47534, 0, 0, 0.76676],
          "110": [0, 0.47534, 0, 0, 0.52666],
          "111": [0, 0.47534, 0, 0, 0.48885],
          "112": [0.18906, 0.52396, 0, 0, 0.50046],
          "113": [0.18906, 0.47534, 0, 0, 0.48912],
          "114": [0, 0.47534, 0, 0, 0.38919],
          "115": [0, 0.47534, 0, 0, 0.44266],
          "116": [0, 0.62119, 0, 0, 0.33301],
          "117": [0, 0.47534, 0, 0, 0.5172],
          "118": [0, 0.52396, 0, 0, 0.5118],
          "119": [0, 0.52396, 0, 0, 0.77351],
          "120": [0.18906, 0.47534, 0, 0, 0.38865],
          "121": [0.18906, 0.47534, 0, 0, 0.49884],
          "122": [0.18906, 0.47534, 0, 0, 0.39054],
          "8216": [0, 0.69141, 0, 0, 0.21471],
          "8217": [0, 0.69141, 0, 0, 0.21471],
          "58112": [0, 0.62119, 0, 0, 0.49749],
          "58113": [0, 0.62119, 0, 0, 0.4983],
          "58114": [0.18906, 0.69141, 0, 0, 0.33328],
          "58115": [0.18906, 0.69141, 0, 0, 0.32923],
          "58116": [0.18906, 0.47534, 0, 0, 0.50343],
          "58117": [0, 0.69141, 0, 0, 0.33301],
          "58118": [0, 0.62119, 0, 0, 0.33409],
          "58119": [0, 0.47534, 0, 0, 0.50073]
        },
        "Main-Bold": {
          "33": [0, 0.69444, 0, 0, 0.35],
          "34": [0, 0.69444, 0, 0, 0.60278],
          "35": [0.19444, 0.69444, 0, 0, 0.95833],
          "36": [0.05556, 0.75, 0, 0, 0.575],
          "37": [0.05556, 0.75, 0, 0, 0.95833],
          "38": [0, 0.69444, 0, 0, 0.89444],
          "39": [0, 0.69444, 0, 0, 0.31944],
          "40": [0.25, 0.75, 0, 0, 0.44722],
          "41": [0.25, 0.75, 0, 0, 0.44722],
          "42": [0, 0.75, 0, 0, 0.575],
          "43": [0.13333, 0.63333, 0, 0, 0.89444],
          "44": [0.19444, 0.15556, 0, 0, 0.31944],
          "45": [0, 0.44444, 0, 0, 0.38333],
          "46": [0, 0.15556, 0, 0, 0.31944],
          "47": [0.25, 0.75, 0, 0, 0.575],
          "48": [0, 0.64444, 0, 0, 0.575],
          "49": [0, 0.64444, 0, 0, 0.575],
          "50": [0, 0.64444, 0, 0, 0.575],
          "51": [0, 0.64444, 0, 0, 0.575],
          "52": [0, 0.64444, 0, 0, 0.575],
          "53": [0, 0.64444, 0, 0, 0.575],
          "54": [0, 0.64444, 0, 0, 0.575],
          "55": [0, 0.64444, 0, 0, 0.575],
          "56": [0, 0.64444, 0, 0, 0.575],
          "57": [0, 0.64444, 0, 0, 0.575],
          "58": [0, 0.44444, 0, 0, 0.31944],
          "59": [0.19444, 0.44444, 0, 0, 0.31944],
          "60": [0.08556, 0.58556, 0, 0, 0.89444],
          "61": [-0.10889, 0.39111, 0, 0, 0.89444],
          "62": [0.08556, 0.58556, 0, 0, 0.89444],
          "63": [0, 0.69444, 0, 0, 0.54305],
          "64": [0, 0.69444, 0, 0, 0.89444],
          "65": [0, 0.68611, 0, 0, 0.86944],
          "66": [0, 0.68611, 0, 0, 0.81805],
          "67": [0, 0.68611, 0, 0, 0.83055],
          "68": [0, 0.68611, 0, 0, 0.88194],
          "69": [0, 0.68611, 0, 0, 0.75555],
          "70": [0, 0.68611, 0, 0, 0.72361],
          "71": [0, 0.68611, 0, 0, 0.90416],
          "72": [0, 0.68611, 0, 0, 0.9],
          "73": [0, 0.68611, 0, 0, 0.43611],
          "74": [0, 0.68611, 0, 0, 0.59444],
          "75": [0, 0.68611, 0, 0, 0.90138],
          "76": [0, 0.68611, 0, 0, 0.69166],
          "77": [0, 0.68611, 0, 0, 1.09166],
          "78": [0, 0.68611, 0, 0, 0.9],
          "79": [0, 0.68611, 0, 0, 0.86388],
          "80": [0, 0.68611, 0, 0, 0.78611],
          "81": [0.19444, 0.68611, 0, 0, 0.86388],
          "82": [0, 0.68611, 0, 0, 0.8625],
          "83": [0, 0.68611, 0, 0, 0.63889],
          "84": [0, 0.68611, 0, 0, 0.8],
          "85": [0, 0.68611, 0, 0, 0.88472],
          "86": [0, 0.68611, 0.01597, 0, 0.86944],
          "87": [0, 0.68611, 0.01597, 0, 1.18888],
          "88": [0, 0.68611, 0, 0, 0.86944],
          "89": [0, 0.68611, 0.02875, 0, 0.86944],
          "90": [0, 0.68611, 0, 0, 0.70277],
          "91": [0.25, 0.75, 0, 0, 0.31944],
          "92": [0.25, 0.75, 0, 0, 0.575],
          "93": [0.25, 0.75, 0, 0, 0.31944],
          "94": [0, 0.69444, 0, 0, 0.575],
          "95": [0.31, 0.13444, 0.03194, 0, 0.575],
          "97": [0, 0.44444, 0, 0, 0.55902],
          "98": [0, 0.69444, 0, 0, 0.63889],
          "99": [0, 0.44444, 0, 0, 0.51111],
          "100": [0, 0.69444, 0, 0, 0.63889],
          "101": [0, 0.44444, 0, 0, 0.52708],
          "102": [0, 0.69444, 0.10903, 0, 0.35139],
          "103": [0.19444, 0.44444, 0.01597, 0, 0.575],
          "104": [0, 0.69444, 0, 0, 0.63889],
          "105": [0, 0.69444, 0, 0, 0.31944],
          "106": [0.19444, 0.69444, 0, 0, 0.35139],
          "107": [0, 0.69444, 0, 0, 0.60694],
          "108": [0, 0.69444, 0, 0, 0.31944],
          "109": [0, 0.44444, 0, 0, 0.95833],
          "110": [0, 0.44444, 0, 0, 0.63889],
          "111": [0, 0.44444, 0, 0, 0.575],
          "112": [0.19444, 0.44444, 0, 0, 0.63889],
          "113": [0.19444, 0.44444, 0, 0, 0.60694],
          "114": [0, 0.44444, 0, 0, 0.47361],
          "115": [0, 0.44444, 0, 0, 0.45361],
          "116": [0, 0.63492, 0, 0, 0.44722],
          "117": [0, 0.44444, 0, 0, 0.63889],
          "118": [0, 0.44444, 0.01597, 0, 0.60694],
          "119": [0, 0.44444, 0.01597, 0, 0.83055],
          "120": [0, 0.44444, 0, 0, 0.60694],
          "121": [0.19444, 0.44444, 0.01597, 0, 0.60694],
          "122": [0, 0.44444, 0, 0, 0.51111],
          "123": [0.25, 0.75, 0, 0, 0.575],
          "124": [0.25, 0.75, 0, 0, 0.31944],
          "125": [0.25, 0.75, 0, 0, 0.575],
          "126": [0.35, 0.34444, 0, 0, 0.575],
          "168": [0, 0.69444, 0, 0, 0.575],
          "172": [0, 0.44444, 0, 0, 0.76666],
          "176": [0, 0.69444, 0, 0, 0.86944],
          "177": [0.13333, 0.63333, 0, 0, 0.89444],
          "198": [0, 0.68611, 0, 0, 1.04166],
          "215": [0.13333, 0.63333, 0, 0, 0.89444],
          "216": [0.04861, 0.73472, 0, 0, 0.89444],
          "223": [0, 0.69444, 0, 0, 0.59722],
          "230": [0, 0.44444, 0, 0, 0.83055],
          "247": [0.13333, 0.63333, 0, 0, 0.89444],
          "248": [0.09722, 0.54167, 0, 0, 0.575],
          "305": [0, 0.44444, 0, 0, 0.31944],
          "338": [0, 0.68611, 0, 0, 1.16944],
          "339": [0, 0.44444, 0, 0, 0.89444],
          "567": [0.19444, 0.44444, 0, 0, 0.35139],
          "710": [0, 0.69444, 0, 0, 0.575],
          "711": [0, 0.63194, 0, 0, 0.575],
          "713": [0, 0.59611, 0, 0, 0.575],
          "714": [0, 0.69444, 0, 0, 0.575],
          "715": [0, 0.69444, 0, 0, 0.575],
          "728": [0, 0.69444, 0, 0, 0.575],
          "729": [0, 0.69444, 0, 0, 0.31944],
          "730": [0, 0.69444, 0, 0, 0.86944],
          "732": [0, 0.69444, 0, 0, 0.575],
          "733": [0, 0.69444, 0, 0, 0.575],
          "824": [0.19444, 0.69444, 0, 0, 0],
          "915": [0, 0.68611, 0, 0, 0.69166],
          "916": [0, 0.68611, 0, 0, 0.95833],
          "920": [0, 0.68611, 0, 0, 0.89444],
          "923": [0, 0.68611, 0, 0, 0.80555],
          "926": [0, 0.68611, 0, 0, 0.76666],
          "928": [0, 0.68611, 0, 0, 0.9],
          "931": [0, 0.68611, 0, 0, 0.83055],
          "933": [0, 0.68611, 0, 0, 0.89444],
          "934": [0, 0.68611, 0, 0, 0.83055],
          "936": [0, 0.68611, 0, 0, 0.89444],
          "937": [0, 0.68611, 0, 0, 0.83055],
          "8211": [0, 0.44444, 0.03194, 0, 0.575],
          "8212": [0, 0.44444, 0.03194, 0, 1.14999],
          "8216": [0, 0.69444, 0, 0, 0.31944],
          "8217": [0, 0.69444, 0, 0, 0.31944],
          "8220": [0, 0.69444, 0, 0, 0.60278],
          "8221": [0, 0.69444, 0, 0, 0.60278],
          "8224": [0.19444, 0.69444, 0, 0, 0.51111],
          "8225": [0.19444, 0.69444, 0, 0, 0.51111],
          "8242": [0, 0.55556, 0, 0, 0.34444],
          "8407": [0, 0.72444, 0.15486, 0, 0.575],
          "8463": [0, 0.69444, 0, 0, 0.66759],
          "8465": [0, 0.69444, 0, 0, 0.83055],
          "8467": [0, 0.69444, 0, 0, 0.47361],
          "8472": [0.19444, 0.44444, 0, 0, 0.74027],
          "8476": [0, 0.69444, 0, 0, 0.83055],
          "8501": [0, 0.69444, 0, 0, 0.70277],
          "8592": [-0.10889, 0.39111, 0, 0, 1.14999],
          "8593": [0.19444, 0.69444, 0, 0, 0.575],
          "8594": [-0.10889, 0.39111, 0, 0, 1.14999],
          "8595": [0.19444, 0.69444, 0, 0, 0.575],
          "8596": [-0.10889, 0.39111, 0, 0, 1.14999],
          "8597": [0.25, 0.75, 0, 0, 0.575],
          "8598": [0.19444, 0.69444, 0, 0, 1.14999],
          "8599": [0.19444, 0.69444, 0, 0, 1.14999],
          "8600": [0.19444, 0.69444, 0, 0, 1.14999],
          "8601": [0.19444, 0.69444, 0, 0, 1.14999],
          "8636": [-0.10889, 0.39111, 0, 0, 1.14999],
          "8637": [-0.10889, 0.39111, 0, 0, 1.14999],
          "8640": [-0.10889, 0.39111, 0, 0, 1.14999],
          "8641": [-0.10889, 0.39111, 0, 0, 1.14999],
          "8656": [-0.10889, 0.39111, 0, 0, 1.14999],
          "8657": [0.19444, 0.69444, 0, 0, 0.70277],
          "8658": [-0.10889, 0.39111, 0, 0, 1.14999],
          "8659": [0.19444, 0.69444, 0, 0, 0.70277],
          "8660": [-0.10889, 0.39111, 0, 0, 1.14999],
          "8661": [0.25, 0.75, 0, 0, 0.70277],
          "8704": [0, 0.69444, 0, 0, 0.63889],
          "8706": [0, 0.69444, 0.06389, 0, 0.62847],
          "8707": [0, 0.69444, 0, 0, 0.63889],
          "8709": [0.05556, 0.75, 0, 0, 0.575],
          "8711": [0, 0.68611, 0, 0, 0.95833],
          "8712": [0.08556, 0.58556, 0, 0, 0.76666],
          "8715": [0.08556, 0.58556, 0, 0, 0.76666],
          "8722": [0.13333, 0.63333, 0, 0, 0.89444],
          "8723": [0.13333, 0.63333, 0, 0, 0.89444],
          "8725": [0.25, 0.75, 0, 0, 0.575],
          "8726": [0.25, 0.75, 0, 0, 0.575],
          "8727": [-0.02778, 0.47222, 0, 0, 0.575],
          "8728": [-0.02639, 0.47361, 0, 0, 0.575],
          "8729": [-0.02639, 0.47361, 0, 0, 0.575],
          "8730": [0.18, 0.82, 0, 0, 0.95833],
          "8733": [0, 0.44444, 0, 0, 0.89444],
          "8734": [0, 0.44444, 0, 0, 1.14999],
          "8736": [0, 0.69224, 0, 0, 0.72222],
          "8739": [0.25, 0.75, 0, 0, 0.31944],
          "8741": [0.25, 0.75, 0, 0, 0.575],
          "8743": [0, 0.55556, 0, 0, 0.76666],
          "8744": [0, 0.55556, 0, 0, 0.76666],
          "8745": [0, 0.55556, 0, 0, 0.76666],
          "8746": [0, 0.55556, 0, 0, 0.76666],
          "8747": [0.19444, 0.69444, 0.12778, 0, 0.56875],
          "8764": [-0.10889, 0.39111, 0, 0, 0.89444],
          "8768": [0.19444, 0.69444, 0, 0, 0.31944],
          "8771": [0.00222, 0.50222, 0, 0, 0.89444],
          "8776": [0.02444, 0.52444, 0, 0, 0.89444],
          "8781": [0.00222, 0.50222, 0, 0, 0.89444],
          "8801": [0.00222, 0.50222, 0, 0, 0.89444],
          "8804": [0.19667, 0.69667, 0, 0, 0.89444],
          "8805": [0.19667, 0.69667, 0, 0, 0.89444],
          "8810": [0.08556, 0.58556, 0, 0, 1.14999],
          "8811": [0.08556, 0.58556, 0, 0, 1.14999],
          "8826": [0.08556, 0.58556, 0, 0, 0.89444],
          "8827": [0.08556, 0.58556, 0, 0, 0.89444],
          "8834": [0.08556, 0.58556, 0, 0, 0.89444],
          "8835": [0.08556, 0.58556, 0, 0, 0.89444],
          "8838": [0.19667, 0.69667, 0, 0, 0.89444],
          "8839": [0.19667, 0.69667, 0, 0, 0.89444],
          "8846": [0, 0.55556, 0, 0, 0.76666],
          "8849": [0.19667, 0.69667, 0, 0, 0.89444],
          "8850": [0.19667, 0.69667, 0, 0, 0.89444],
          "8851": [0, 0.55556, 0, 0, 0.76666],
          "8852": [0, 0.55556, 0, 0, 0.76666],
          "8853": [0.13333, 0.63333, 0, 0, 0.89444],
          "8854": [0.13333, 0.63333, 0, 0, 0.89444],
          "8855": [0.13333, 0.63333, 0, 0, 0.89444],
          "8856": [0.13333, 0.63333, 0, 0, 0.89444],
          "8857": [0.13333, 0.63333, 0, 0, 0.89444],
          "8866": [0, 0.69444, 0, 0, 0.70277],
          "8867": [0, 0.69444, 0, 0, 0.70277],
          "8868": [0, 0.69444, 0, 0, 0.89444],
          "8869": [0, 0.69444, 0, 0, 0.89444],
          "8900": [-0.02639, 0.47361, 0, 0, 0.575],
          "8901": [-0.02639, 0.47361, 0, 0, 0.31944],
          "8902": [-0.02778, 0.47222, 0, 0, 0.575],
          "8968": [0.25, 0.75, 0, 0, 0.51111],
          "8969": [0.25, 0.75, 0, 0, 0.51111],
          "8970": [0.25, 0.75, 0, 0, 0.51111],
          "8971": [0.25, 0.75, 0, 0, 0.51111],
          "8994": [-0.13889, 0.36111, 0, 0, 1.14999],
          "8995": [-0.13889, 0.36111, 0, 0, 1.14999],
          "9651": [0.19444, 0.69444, 0, 0, 1.02222],
          "9657": [-0.02778, 0.47222, 0, 0, 0.575],
          "9661": [0.19444, 0.69444, 0, 0, 1.02222],
          "9667": [-0.02778, 0.47222, 0, 0, 0.575],
          "9711": [0.19444, 0.69444, 0, 0, 1.14999],
          "9824": [0.12963, 0.69444, 0, 0, 0.89444],
          "9825": [0.12963, 0.69444, 0, 0, 0.89444],
          "9826": [0.12963, 0.69444, 0, 0, 0.89444],
          "9827": [0.12963, 0.69444, 0, 0, 0.89444],
          "9837": [0, 0.75, 0, 0, 0.44722],
          "9838": [0.19444, 0.69444, 0, 0, 0.44722],
          "9839": [0.19444, 0.69444, 0, 0, 0.44722],
          "10216": [0.25, 0.75, 0, 0, 0.44722],
          "10217": [0.25, 0.75, 0, 0, 0.44722],
          "10815": [0, 0.68611, 0, 0, 0.9],
          "10927": [0.19667, 0.69667, 0, 0, 0.89444],
          "10928": [0.19667, 0.69667, 0, 0, 0.89444]
        },
        "Main-BoldItalic": {
          "33": [0, 0.69444, 0.11417, 0, 0.38611],
          "34": [0, 0.69444, 0.07939, 0, 0.62055],
          "35": [0.19444, 0.69444, 0.06833, 0, 0.94444],
          "37": [0.05556, 0.75, 0.12861, 0, 0.94444],
          "38": [0, 0.69444, 0.08528, 0, 0.88555],
          "39": [0, 0.69444, 0.12945, 0, 0.35555],
          "40": [0.25, 0.75, 0.15806, 0, 0.47333],
          "41": [0.25, 0.75, 0.03306, 0, 0.47333],
          "42": [0, 0.75, 0.14333, 0, 0.59111],
          "43": [0.10333, 0.60333, 0.03306, 0, 0.88555],
          "44": [0.19444, 0.14722, 0, 0, 0.35555],
          "45": [0, 0.44444, 0.02611, 0, 0.41444],
          "46": [0, 0.14722, 0, 0, 0.35555],
          "47": [0.25, 0.75, 0.15806, 0, 0.59111],
          "48": [0, 0.64444, 0.13167, 0, 0.59111],
          "49": [0, 0.64444, 0.13167, 0, 0.59111],
          "50": [0, 0.64444, 0.13167, 0, 0.59111],
          "51": [0, 0.64444, 0.13167, 0, 0.59111],
          "52": [0.19444, 0.64444, 0.13167, 0, 0.59111],
          "53": [0, 0.64444, 0.13167, 0, 0.59111],
          "54": [0, 0.64444, 0.13167, 0, 0.59111],
          "55": [0.19444, 0.64444, 0.13167, 0, 0.59111],
          "56": [0, 0.64444, 0.13167, 0, 0.59111],
          "57": [0, 0.64444, 0.13167, 0, 0.59111],
          "58": [0, 0.44444, 0.06695, 0, 0.35555],
          "59": [0.19444, 0.44444, 0.06695, 0, 0.35555],
          "61": [-0.10889, 0.39111, 0.06833, 0, 0.88555],
          "63": [0, 0.69444, 0.11472, 0, 0.59111],
          "64": [0, 0.69444, 0.09208, 0, 0.88555],
          "65": [0, 0.68611, 0, 0, 0.86555],
          "66": [0, 0.68611, 0.0992, 0, 0.81666],
          "67": [0, 0.68611, 0.14208, 0, 0.82666],
          "68": [0, 0.68611, 0.09062, 0, 0.87555],
          "69": [0, 0.68611, 0.11431, 0, 0.75666],
          "70": [0, 0.68611, 0.12903, 0, 0.72722],
          "71": [0, 0.68611, 0.07347, 0, 0.89527],
          "72": [0, 0.68611, 0.17208, 0, 0.8961],
          "73": [0, 0.68611, 0.15681, 0, 0.47166],
          "74": [0, 0.68611, 0.145, 0, 0.61055],
          "75": [0, 0.68611, 0.14208, 0, 0.89499],
          "76": [0, 0.68611, 0, 0, 0.69777],
          "77": [0, 0.68611, 0.17208, 0, 1.07277],
          "78": [0, 0.68611, 0.17208, 0, 0.8961],
          "79": [0, 0.68611, 0.09062, 0, 0.85499],
          "80": [0, 0.68611, 0.0992, 0, 0.78721],
          "81": [0.19444, 0.68611, 0.09062, 0, 0.85499],
          "82": [0, 0.68611, 0.02559, 0, 0.85944],
          "83": [0, 0.68611, 0.11264, 0, 0.64999],
          "84": [0, 0.68611, 0.12903, 0, 0.7961],
          "85": [0, 0.68611, 0.17208, 0, 0.88083],
          "86": [0, 0.68611, 0.18625, 0, 0.86555],
          "87": [0, 0.68611, 0.18625, 0, 1.15999],
          "88": [0, 0.68611, 0.15681, 0, 0.86555],
          "89": [0, 0.68611, 0.19803, 0, 0.86555],
          "90": [0, 0.68611, 0.14208, 0, 0.70888],
          "91": [0.25, 0.75, 0.1875, 0, 0.35611],
          "93": [0.25, 0.75, 0.09972, 0, 0.35611],
          "94": [0, 0.69444, 0.06709, 0, 0.59111],
          "95": [0.31, 0.13444, 0.09811, 0, 0.59111],
          "97": [0, 0.44444, 0.09426, 0, 0.59111],
          "98": [0, 0.69444, 0.07861, 0, 0.53222],
          "99": [0, 0.44444, 0.05222, 0, 0.53222],
          "100": [0, 0.69444, 0.10861, 0, 0.59111],
          "101": [0, 0.44444, 0.085, 0, 0.53222],
          "102": [0.19444, 0.69444, 0.21778, 0, 0.4],
          "103": [0.19444, 0.44444, 0.105, 0, 0.53222],
          "104": [0, 0.69444, 0.09426, 0, 0.59111],
          "105": [0, 0.69326, 0.11387, 0, 0.35555],
          "106": [0.19444, 0.69326, 0.1672, 0, 0.35555],
          "107": [0, 0.69444, 0.11111, 0, 0.53222],
          "108": [0, 0.69444, 0.10861, 0, 0.29666],
          "109": [0, 0.44444, 0.09426, 0, 0.94444],
          "110": [0, 0.44444, 0.09426, 0, 0.64999],
          "111": [0, 0.44444, 0.07861, 0, 0.59111],
          "112": [0.19444, 0.44444, 0.07861, 0, 0.59111],
          "113": [0.19444, 0.44444, 0.105, 0, 0.53222],
          "114": [0, 0.44444, 0.11111, 0, 0.50167],
          "115": [0, 0.44444, 0.08167, 0, 0.48694],
          "116": [0, 0.63492, 0.09639, 0, 0.385],
          "117": [0, 0.44444, 0.09426, 0, 0.62055],
          "118": [0, 0.44444, 0.11111, 0, 0.53222],
          "119": [0, 0.44444, 0.11111, 0, 0.76777],
          "120": [0, 0.44444, 0.12583, 0, 0.56055],
          "121": [0.19444, 0.44444, 0.105, 0, 0.56166],
          "122": [0, 0.44444, 0.13889, 0, 0.49055],
          "126": [0.35, 0.34444, 0.11472, 0, 0.59111],
          "163": [0, 0.69444, 0, 0, 0.86853],
          "168": [0, 0.69444, 0.11473, 0, 0.59111],
          "176": [0, 0.69444, 0, 0, 0.94888],
          "198": [0, 0.68611, 0.11431, 0, 1.02277],
          "216": [0.04861, 0.73472, 0.09062, 0, 0.88555],
          "223": [0.19444, 0.69444, 0.09736, 0, 0.665],
          "230": [0, 0.44444, 0.085, 0, 0.82666],
          "248": [0.09722, 0.54167, 0.09458, 0, 0.59111],
          "305": [0, 0.44444, 0.09426, 0, 0.35555],
          "338": [0, 0.68611, 0.11431, 0, 1.14054],
          "339": [0, 0.44444, 0.085, 0, 0.82666],
          "567": [0.19444, 0.44444, 0.04611, 0, 0.385],
          "710": [0, 0.69444, 0.06709, 0, 0.59111],
          "711": [0, 0.63194, 0.08271, 0, 0.59111],
          "713": [0, 0.59444, 0.10444, 0, 0.59111],
          "714": [0, 0.69444, 0.08528, 0, 0.59111],
          "715": [0, 0.69444, 0, 0, 0.59111],
          "728": [0, 0.69444, 0.10333, 0, 0.59111],
          "729": [0, 0.69444, 0.12945, 0, 0.35555],
          "730": [0, 0.69444, 0, 0, 0.94888],
          "732": [0, 0.69444, 0.11472, 0, 0.59111],
          "733": [0, 0.69444, 0.11472, 0, 0.59111],
          "915": [0, 0.68611, 0.12903, 0, 0.69777],
          "916": [0, 0.68611, 0, 0, 0.94444],
          "920": [0, 0.68611, 0.09062, 0, 0.88555],
          "923": [0, 0.68611, 0, 0, 0.80666],
          "926": [0, 0.68611, 0.15092, 0, 0.76777],
          "928": [0, 0.68611, 0.17208, 0, 0.8961],
          "931": [0, 0.68611, 0.11431, 0, 0.82666],
          "933": [0, 0.68611, 0.10778, 0, 0.88555],
          "934": [0, 0.68611, 0.05632, 0, 0.82666],
          "936": [0, 0.68611, 0.10778, 0, 0.88555],
          "937": [0, 0.68611, 0.0992, 0, 0.82666],
          "8211": [0, 0.44444, 0.09811, 0, 0.59111],
          "8212": [0, 0.44444, 0.09811, 0, 1.18221],
          "8216": [0, 0.69444, 0.12945, 0, 0.35555],
          "8217": [0, 0.69444, 0.12945, 0, 0.35555],
          "8220": [0, 0.69444, 0.16772, 0, 0.62055],
          "8221": [0, 0.69444, 0.07939, 0, 0.62055]
        },
        "Main-Italic": {
          "33": [0, 0.69444, 0.12417, 0, 0.30667],
          "34": [0, 0.69444, 0.06961, 0, 0.51444],
          "35": [0.19444, 0.69444, 0.06616, 0, 0.81777],
          "37": [0.05556, 0.75, 0.13639, 0, 0.81777],
          "38": [0, 0.69444, 0.09694, 0, 0.76666],
          "39": [0, 0.69444, 0.12417, 0, 0.30667],
          "40": [0.25, 0.75, 0.16194, 0, 0.40889],
          "41": [0.25, 0.75, 0.03694, 0, 0.40889],
          "42": [0, 0.75, 0.14917, 0, 0.51111],
          "43": [0.05667, 0.56167, 0.03694, 0, 0.76666],
          "44": [0.19444, 0.10556, 0, 0, 0.30667],
          "45": [0, 0.43056, 0.02826, 0, 0.35778],
          "46": [0, 0.10556, 0, 0, 0.30667],
          "47": [0.25, 0.75, 0.16194, 0, 0.51111],
          "48": [0, 0.64444, 0.13556, 0, 0.51111],
          "49": [0, 0.64444, 0.13556, 0, 0.51111],
          "50": [0, 0.64444, 0.13556, 0, 0.51111],
          "51": [0, 0.64444, 0.13556, 0, 0.51111],
          "52": [0.19444, 0.64444, 0.13556, 0, 0.51111],
          "53": [0, 0.64444, 0.13556, 0, 0.51111],
          "54": [0, 0.64444, 0.13556, 0, 0.51111],
          "55": [0.19444, 0.64444, 0.13556, 0, 0.51111],
          "56": [0, 0.64444, 0.13556, 0, 0.51111],
          "57": [0, 0.64444, 0.13556, 0, 0.51111],
          "58": [0, 0.43056, 0.0582, 0, 0.30667],
          "59": [0.19444, 0.43056, 0.0582, 0, 0.30667],
          "61": [-0.13313, 0.36687, 0.06616, 0, 0.76666],
          "63": [0, 0.69444, 0.1225, 0, 0.51111],
          "64": [0, 0.69444, 0.09597, 0, 0.76666],
          "65": [0, 0.68333, 0, 0, 0.74333],
          "66": [0, 0.68333, 0.10257, 0, 0.70389],
          "67": [0, 0.68333, 0.14528, 0, 0.71555],
          "68": [0, 0.68333, 0.09403, 0, 0.755],
          "69": [0, 0.68333, 0.12028, 0, 0.67833],
          "70": [0, 0.68333, 0.13305, 0, 0.65277],
          "71": [0, 0.68333, 0.08722, 0, 0.77361],
          "72": [0, 0.68333, 0.16389, 0, 0.74333],
          "73": [0, 0.68333, 0.15806, 0, 0.38555],
          "74": [0, 0.68333, 0.14028, 0, 0.525],
          "75": [0, 0.68333, 0.14528, 0, 0.76888],
          "76": [0, 0.68333, 0, 0, 0.62722],
          "77": [0, 0.68333, 0.16389, 0, 0.89666],
          "78": [0, 0.68333, 0.16389, 0, 0.74333],
          "79": [0, 0.68333, 0.09403, 0, 0.76666],
          "80": [0, 0.68333, 0.10257, 0, 0.67833],
          "81": [0.19444, 0.68333, 0.09403, 0, 0.76666],
          "82": [0, 0.68333, 0.03868, 0, 0.72944],
          "83": [0, 0.68333, 0.11972, 0, 0.56222],
          "84": [0, 0.68333, 0.13305, 0, 0.71555],
          "85": [0, 0.68333, 0.16389, 0, 0.74333],
          "86": [0, 0.68333, 0.18361, 0, 0.74333],
          "87": [0, 0.68333, 0.18361, 0, 0.99888],
          "88": [0, 0.68333, 0.15806, 0, 0.74333],
          "89": [0, 0.68333, 0.19383, 0, 0.74333],
          "90": [0, 0.68333, 0.14528, 0, 0.61333],
          "91": [0.25, 0.75, 0.1875, 0, 0.30667],
          "93": [0.25, 0.75, 0.10528, 0, 0.30667],
          "94": [0, 0.69444, 0.06646, 0, 0.51111],
          "95": [0.31, 0.12056, 0.09208, 0, 0.51111],
          "97": [0, 0.43056, 0.07671, 0, 0.51111],
          "98": [0, 0.69444, 0.06312, 0, 0.46],
          "99": [0, 0.43056, 0.05653, 0, 0.46],
          "100": [0, 0.69444, 0.10333, 0, 0.51111],
          "101": [0, 0.43056, 0.07514, 0, 0.46],
          "102": [0.19444, 0.69444, 0.21194, 0, 0.30667],
          "103": [0.19444, 0.43056, 0.08847, 0, 0.46],
          "104": [0, 0.69444, 0.07671, 0, 0.51111],
          "105": [0, 0.65536, 0.1019, 0, 0.30667],
          "106": [0.19444, 0.65536, 0.14467, 0, 0.30667],
          "107": [0, 0.69444, 0.10764, 0, 0.46],
          "108": [0, 0.69444, 0.10333, 0, 0.25555],
          "109": [0, 0.43056, 0.07671, 0, 0.81777],
          "110": [0, 0.43056, 0.07671, 0, 0.56222],
          "111": [0, 0.43056, 0.06312, 0, 0.51111],
          "112": [0.19444, 0.43056, 0.06312, 0, 0.51111],
          "113": [0.19444, 0.43056, 0.08847, 0, 0.46],
          "114": [0, 0.43056, 0.10764, 0, 0.42166],
          "115": [0, 0.43056, 0.08208, 0, 0.40889],
          "116": [0, 0.61508, 0.09486, 0, 0.33222],
          "117": [0, 0.43056, 0.07671, 0, 0.53666],
          "118": [0, 0.43056, 0.10764, 0, 0.46],
          "119": [0, 0.43056, 0.10764, 0, 0.66444],
          "120": [0, 0.43056, 0.12042, 0, 0.46389],
          "121": [0.19444, 0.43056, 0.08847, 0, 0.48555],
          "122": [0, 0.43056, 0.12292, 0, 0.40889],
          "126": [0.35, 0.31786, 0.11585, 0, 0.51111],
          "163": [0, 0.69444, 0, 0, 0.76909],
          "168": [0, 0.66786, 0.10474, 0, 0.51111],
          "176": [0, 0.69444, 0, 0, 0.83129],
          "198": [0, 0.68333, 0.12028, 0, 0.88277],
          "216": [0.04861, 0.73194, 0.09403, 0, 0.76666],
          "223": [0.19444, 0.69444, 0.10514, 0, 0.53666],
          "230": [0, 0.43056, 0.07514, 0, 0.71555],
          "248": [0.09722, 0.52778, 0.09194, 0, 0.51111],
          "305": [0, 0.43056, 0, 0.02778, 0.32246],
          "338": [0, 0.68333, 0.12028, 0, 0.98499],
          "339": [0, 0.43056, 0.07514, 0, 0.71555],
          "567": [0.19444, 0.43056, 0, 0.08334, 0.38403],
          "710": [0, 0.69444, 0.06646, 0, 0.51111],
          "711": [0, 0.62847, 0.08295, 0, 0.51111],
          "713": [0, 0.56167, 0.10333, 0, 0.51111],
          "714": [0, 0.69444, 0.09694, 0, 0.51111],
          "715": [0, 0.69444, 0, 0, 0.51111],
          "728": [0, 0.69444, 0.10806, 0, 0.51111],
          "729": [0, 0.66786, 0.11752, 0, 0.30667],
          "730": [0, 0.69444, 0, 0, 0.83129],
          "732": [0, 0.66786, 0.11585, 0, 0.51111],
          "733": [0, 0.69444, 0.1225, 0, 0.51111],
          "915": [0, 0.68333, 0.13305, 0, 0.62722],
          "916": [0, 0.68333, 0, 0, 0.81777],
          "920": [0, 0.68333, 0.09403, 0, 0.76666],
          "923": [0, 0.68333, 0, 0, 0.69222],
          "926": [0, 0.68333, 0.15294, 0, 0.66444],
          "928": [0, 0.68333, 0.16389, 0, 0.74333],
          "931": [0, 0.68333, 0.12028, 0, 0.71555],
          "933": [0, 0.68333, 0.11111, 0, 0.76666],
          "934": [0, 0.68333, 0.05986, 0, 0.71555],
          "936": [0, 0.68333, 0.11111, 0, 0.76666],
          "937": [0, 0.68333, 0.10257, 0, 0.71555],
          "8211": [0, 0.43056, 0.09208, 0, 0.51111],
          "8212": [0, 0.43056, 0.09208, 0, 1.02222],
          "8216": [0, 0.69444, 0.12417, 0, 0.30667],
          "8217": [0, 0.69444, 0.12417, 0, 0.30667],
          "8220": [0, 0.69444, 0.1685, 0, 0.51444],
          "8221": [0, 0.69444, 0.06961, 0, 0.51444],
          "8463": [0, 0.68889, 0, 0, 0.54028]
        },
        "Main-Regular": {
          "32": [0, 0, 0, 0, 0],
          "33": [0, 0.69444, 0, 0, 0.27778],
          "34": [0, 0.69444, 0, 0, 0.5],
          "35": [0.19444, 0.69444, 0, 0, 0.83334],
          "36": [0.05556, 0.75, 0, 0, 0.5],
          "37": [0.05556, 0.75, 0, 0, 0.83334],
          "38": [0, 0.69444, 0, 0, 0.77778],
          "39": [0, 0.69444, 0, 0, 0.27778],
          "40": [0.25, 0.75, 0, 0, 0.38889],
          "41": [0.25, 0.75, 0, 0, 0.38889],
          "42": [0, 0.75, 0, 0, 0.5],
          "43": [0.08333, 0.58333, 0, 0, 0.77778],
          "44": [0.19444, 0.10556, 0, 0, 0.27778],
          "45": [0, 0.43056, 0, 0, 0.33333],
          "46": [0, 0.10556, 0, 0, 0.27778],
          "47": [0.25, 0.75, 0, 0, 0.5],
          "48": [0, 0.64444, 0, 0, 0.5],
          "49": [0, 0.64444, 0, 0, 0.5],
          "50": [0, 0.64444, 0, 0, 0.5],
          "51": [0, 0.64444, 0, 0, 0.5],
          "52": [0, 0.64444, 0, 0, 0.5],
          "53": [0, 0.64444, 0, 0, 0.5],
          "54": [0, 0.64444, 0, 0, 0.5],
          "55": [0, 0.64444, 0, 0, 0.5],
          "56": [0, 0.64444, 0, 0, 0.5],
          "57": [0, 0.64444, 0, 0, 0.5],
          "58": [0, 0.43056, 0, 0, 0.27778],
          "59": [0.19444, 0.43056, 0, 0, 0.27778],
          "60": [0.0391, 0.5391, 0, 0, 0.77778],
          "61": [-0.13313, 0.36687, 0, 0, 0.77778],
          "62": [0.0391, 0.5391, 0, 0, 0.77778],
          "63": [0, 0.69444, 0, 0, 0.47222],
          "64": [0, 0.69444, 0, 0, 0.77778],
          "65": [0, 0.68333, 0, 0, 0.75],
          "66": [0, 0.68333, 0, 0, 0.70834],
          "67": [0, 0.68333, 0, 0, 0.72222],
          "68": [0, 0.68333, 0, 0, 0.76389],
          "69": [0, 0.68333, 0, 0, 0.68056],
          "70": [0, 0.68333, 0, 0, 0.65278],
          "71": [0, 0.68333, 0, 0, 0.78472],
          "72": [0, 0.68333, 0, 0, 0.75],
          "73": [0, 0.68333, 0, 0, 0.36111],
          "74": [0, 0.68333, 0, 0, 0.51389],
          "75": [0, 0.68333, 0, 0, 0.77778],
          "76": [0, 0.68333, 0, 0, 0.625],
          "77": [0, 0.68333, 0, 0, 0.91667],
          "78": [0, 0.68333, 0, 0, 0.75],
          "79": [0, 0.68333, 0, 0, 0.77778],
          "80": [0, 0.68333, 0, 0, 0.68056],
          "81": [0.19444, 0.68333, 0, 0, 0.77778],
          "82": [0, 0.68333, 0, 0, 0.73611],
          "83": [0, 0.68333, 0, 0, 0.55556],
          "84": [0, 0.68333, 0, 0, 0.72222],
          "85": [0, 0.68333, 0, 0, 0.75],
          "86": [0, 0.68333, 0.01389, 0, 0.75],
          "87": [0, 0.68333, 0.01389, 0, 1.02778],
          "88": [0, 0.68333, 0, 0, 0.75],
          "89": [0, 0.68333, 0.025, 0, 0.75],
          "90": [0, 0.68333, 0, 0, 0.61111],
          "91": [0.25, 0.75, 0, 0, 0.27778],
          "92": [0.25, 0.75, 0, 0, 0.5],
          "93": [0.25, 0.75, 0, 0, 0.27778],
          "94": [0, 0.69444, 0, 0, 0.5],
          "95": [0.31, 0.12056, 0.02778, 0, 0.5],
          "97": [0, 0.43056, 0, 0, 0.5],
          "98": [0, 0.69444, 0, 0, 0.55556],
          "99": [0, 0.43056, 0, 0, 0.44445],
          "100": [0, 0.69444, 0, 0, 0.55556],
          "101": [0, 0.43056, 0, 0, 0.44445],
          "102": [0, 0.69444, 0.07778, 0, 0.30556],
          "103": [0.19444, 0.43056, 0.01389, 0, 0.5],
          "104": [0, 0.69444, 0, 0, 0.55556],
          "105": [0, 0.66786, 0, 0, 0.27778],
          "106": [0.19444, 0.66786, 0, 0, 0.30556],
          "107": [0, 0.69444, 0, 0, 0.52778],
          "108": [0, 0.69444, 0, 0, 0.27778],
          "109": [0, 0.43056, 0, 0, 0.83334],
          "110": [0, 0.43056, 0, 0, 0.55556],
          "111": [0, 0.43056, 0, 0, 0.5],
          "112": [0.19444, 0.43056, 0, 0, 0.55556],
          "113": [0.19444, 0.43056, 0, 0, 0.52778],
          "114": [0, 0.43056, 0, 0, 0.39167],
          "115": [0, 0.43056, 0, 0, 0.39445],
          "116": [0, 0.61508, 0, 0, 0.38889],
          "117": [0, 0.43056, 0, 0, 0.55556],
          "118": [0, 0.43056, 0.01389, 0, 0.52778],
          "119": [0, 0.43056, 0.01389, 0, 0.72222],
          "120": [0, 0.43056, 0, 0, 0.52778],
          "121": [0.19444, 0.43056, 0.01389, 0, 0.52778],
          "122": [0, 0.43056, 0, 0, 0.44445],
          "123": [0.25, 0.75, 0, 0, 0.5],
          "124": [0.25, 0.75, 0, 0, 0.27778],
          "125": [0.25, 0.75, 0, 0, 0.5],
          "126": [0.35, 0.31786, 0, 0, 0.5],
          "160": [0, 0, 0, 0, 0],
          "168": [0, 0.66786, 0, 0, 0.5],
          "172": [0, 0.43056, 0, 0, 0.66667],
          "176": [0, 0.69444, 0, 0, 0.75],
          "177": [0.08333, 0.58333, 0, 0, 0.77778],
          "198": [0, 0.68333, 0, 0, 0.90278],
          "215": [0.08333, 0.58333, 0, 0, 0.77778],
          "216": [0.04861, 0.73194, 0, 0, 0.77778],
          "223": [0, 0.69444, 0, 0, 0.5],
          "230": [0, 0.43056, 0, 0, 0.72222],
          "247": [0.08333, 0.58333, 0, 0, 0.77778],
          "248": [0.09722, 0.52778, 0, 0, 0.5],
          "305": [0, 0.43056, 0, 0, 0.27778],
          "338": [0, 0.68333, 0, 0, 1.01389],
          "339": [0, 0.43056, 0, 0, 0.77778],
          "567": [0.19444, 0.43056, 0, 0, 0.30556],
          "710": [0, 0.69444, 0, 0, 0.5],
          "711": [0, 0.62847, 0, 0, 0.5],
          "713": [0, 0.56778, 0, 0, 0.5],
          "714": [0, 0.69444, 0, 0, 0.5],
          "715": [0, 0.69444, 0, 0, 0.5],
          "728": [0, 0.69444, 0, 0, 0.5],
          "729": [0, 0.66786, 0, 0, 0.27778],
          "730": [0, 0.69444, 0, 0, 0.75],
          "732": [0, 0.66786, 0, 0, 0.5],
          "733": [0, 0.69444, 0, 0, 0.5],
          "824": [0.19444, 0.69444, 0, 0, 0],
          "915": [0, 0.68333, 0, 0, 0.625],
          "916": [0, 0.68333, 0, 0, 0.83334],
          "920": [0, 0.68333, 0, 0, 0.77778],
          "923": [0, 0.68333, 0, 0, 0.69445],
          "926": [0, 0.68333, 0, 0, 0.66667],
          "928": [0, 0.68333, 0, 0, 0.75],
          "931": [0, 0.68333, 0, 0, 0.72222],
          "933": [0, 0.68333, 0, 0, 0.77778],
          "934": [0, 0.68333, 0, 0, 0.72222],
          "936": [0, 0.68333, 0, 0, 0.77778],
          "937": [0, 0.68333, 0, 0, 0.72222],
          "8211": [0, 0.43056, 0.02778, 0, 0.5],
          "8212": [0, 0.43056, 0.02778, 0, 1.0],
          "8216": [0, 0.69444, 0, 0, 0.27778],
          "8217": [0, 0.69444, 0, 0, 0.27778],
          "8220": [0, 0.69444, 0, 0, 0.5],
          "8221": [0, 0.69444, 0, 0, 0.5],
          "8224": [0.19444, 0.69444, 0, 0, 0.44445],
          "8225": [0.19444, 0.69444, 0, 0, 0.44445],
          "8230": [0, 0.12, 0, 0, 1015],
          "8242": [0, 0.55556, 0, 0, 0.275],
          "8407": [0, 0.71444, 0.15382, 0, 0.5],
          "8463": [0, 0.68889, 0, 0, 0.54028],
          "8465": [0, 0.69444, 0, 0, 0.72222],
          "8467": [0, 0.69444, 0, 0.11111, 0.41667],
          "8472": [0.19444, 0.43056, 0, 0.11111, 0.63646],
          "8476": [0, 0.69444, 0, 0, 0.72222],
          "8501": [0, 0.69444, 0, 0, 0.61111],
          "8592": [-0.13313, 0.36687, 0, 0, 1.0],
          "8593": [0.19444, 0.69444, 0, 0, 0.5],
          "8594": [-0.13313, 0.36687, 0, 0, 1.0],
          "8595": [0.19444, 0.69444, 0, 0, 0.5],
          "8596": [-0.13313, 0.36687, 0, 0, 1.0],
          "8597": [0.25, 0.75, 0, 0, 0.5],
          "8598": [0.19444, 0.69444, 0, 0, 1.0],
          "8599": [0.19444, 0.69444, 0, 0, 1.0],
          "8600": [0.19444, 0.69444, 0, 0, 1.0],
          "8601": [0.19444, 0.69444, 0, 0, 1.0],
          "8614": [0.011, 0.511, 0, 0, 889],
          "8617": [0.011, 0.511, 0, 0, 1015],
          "8618": [0.011, 0.511, 0, 0, 1015],
          "8636": [-0.13313, 0.36687, 0, 0, 1.0],
          "8637": [-0.13313, 0.36687, 0, 0, 1.0],
          "8640": [-0.13313, 0.36687, 0, 0, 1.0],
          "8641": [-0.13313, 0.36687, 0, 0, 1.0],
          "8652": [0.011, 0.671, 0, 0, 889],
          "8656": [-0.13313, 0.36687, 0, 0, 1.0],
          "8657": [0.19444, 0.69444, 0, 0, 0.61111],
          "8658": [-0.13313, 0.36687, 0, 0, 1.0],
          "8659": [0.19444, 0.69444, 0, 0, 0.61111],
          "8660": [-0.13313, 0.36687, 0, 0, 1.0],
          "8661": [0.25, 0.75, 0, 0, 0.61111],
          "8704": [0, 0.69444, 0, 0, 0.55556],
          "8706": [0, 0.69444, 0.05556, 0.08334, 0.5309],
          "8707": [0, 0.69444, 0, 0, 0.55556],
          "8709": [0.05556, 0.75, 0, 0, 0.5],
          "8711": [0, 0.68333, 0, 0, 0.83334],
          "8712": [0.0391, 0.5391, 0, 0, 0.66667],
          "8715": [0.0391, 0.5391, 0, 0, 0.66667],
          "8722": [0.08333, 0.58333, 0, 0, 0.77778],
          "8723": [0.08333, 0.58333, 0, 0, 0.77778],
          "8725": [0.25, 0.75, 0, 0, 0.5],
          "8726": [0.25, 0.75, 0, 0, 0.5],
          "8727": [-0.03472, 0.46528, 0, 0, 0.5],
          "8728": [-0.05555, 0.44445, 0, 0, 0.5],
          "8729": [-0.05555, 0.44445, 0, 0, 0.5],
          "8730": [0.2, 0.8, 0, 0, 0.83334],
          "8733": [0, 0.43056, 0, 0, 0.77778],
          "8734": [0, 0.43056, 0, 0, 1.0],
          "8736": [0, 0.69224, 0, 0, 0.72222],
          "8739": [0.25, 0.75, 0, 0, 0.27778],
          "8741": [0.25, 0.75, 0, 0, 0.5],
          "8743": [0, 0.55556, 0, 0, 0.66667],
          "8744": [0, 0.55556, 0, 0, 0.66667],
          "8745": [0, 0.55556, 0, 0, 0.66667],
          "8746": [0, 0.55556, 0, 0, 0.66667],
          "8747": [0.19444, 0.69444, 0.11111, 0, 0.41667],
          "8764": [-0.13313, 0.36687, 0, 0, 0.77778],
          "8768": [0.19444, 0.69444, 0, 0, 0.27778],
          "8771": [-0.03625, 0.46375, 0, 0, 0.77778],
          "8773": [-0.022, 0.589, 0, 0, 667],
          "8776": [-0.01688, 0.48312, 0, 0, 0.77778],
          "8781": [-0.03625, 0.46375, 0, 0, 0.77778],
          "8784": [-0.133, 0.67, 0, 0, 666],
          "8800": [0.215, 0.716, 0, 0, 666],
          "8801": [-0.03625, 0.46375, 0, 0, 0.77778],
          "8804": [0.13597, 0.63597, 0, 0, 0.77778],
          "8805": [0.13597, 0.63597, 0, 0, 0.77778],
          "8810": [0.0391, 0.5391, 0, 0, 1.0],
          "8811": [0.0391, 0.5391, 0, 0, 1.0],
          "8826": [0.0391, 0.5391, 0, 0, 0.77778],
          "8827": [0.0391, 0.5391, 0, 0, 0.77778],
          "8834": [0.0391, 0.5391, 0, 0, 0.77778],
          "8835": [0.0391, 0.5391, 0, 0, 0.77778],
          "8838": [0.13597, 0.63597, 0, 0, 0.77778],
          "8839": [0.13597, 0.63597, 0, 0, 0.77778],
          "8846": [0, 0.55556, 0, 0, 0.66667],
          "8849": [0.13597, 0.63597, 0, 0, 0.77778],
          "8850": [0.13597, 0.63597, 0, 0, 0.77778],
          "8851": [0, 0.55556, 0, 0, 0.66667],
          "8852": [0, 0.55556, 0, 0, 0.66667],
          "8853": [0.08333, 0.58333, 0, 0, 0.77778],
          "8854": [0.08333, 0.58333, 0, 0, 0.77778],
          "8855": [0.08333, 0.58333, 0, 0, 0.77778],
          "8856": [0.08333, 0.58333, 0, 0, 0.77778],
          "8857": [0.08333, 0.58333, 0, 0, 0.77778],
          "8866": [0, 0.69444, 0, 0, 0.61111],
          "8867": [0, 0.69444, 0, 0, 0.61111],
          "8868": [0, 0.69444, 0, 0, 0.77778],
          "8869": [0, 0.69444, 0, 0, 0.77778],
          "8872": [0.249, 0.75, 0, 0, 692],
          "8900": [-0.05555, 0.44445, 0, 0, 0.5],
          "8901": [-0.05555, 0.44445, 0, 0, 0.27778],
          "8902": [-0.03472, 0.46528, 0, 0, 0.5],
          "8904": [0.005, 0.505, 0, 0, 847],
          "8942": [0.03, 0.9, 0, 0, 121],
          "8943": [-0.19, 0.31, 0, 0, 1015],
          "8945": [-0.1, 0.82, 0, 0, 1015],
          "8968": [0.25, 0.75, 0, 0, 0.44445],
          "8969": [0.25, 0.75, 0, 0, 0.44445],
          "8970": [0.25, 0.75, 0, 0, 0.44445],
          "8971": [0.25, 0.75, 0, 0, 0.44445],
          "8994": [-0.14236, 0.35764, 0, 0, 1.0],
          "8995": [-0.14236, 0.35764, 0, 0, 1.0],
          "9136": [0.244, 0.744, 0, 0, 301],
          "9137": [0.244, 0.744, 0, 0, 301],
          "9651": [0.19444, 0.69444, 0, 0, 0.88889],
          "9657": [-0.03472, 0.46528, 0, 0, 0.5],
          "9661": [0.19444, 0.69444, 0, 0, 0.88889],
          "9667": [-0.03472, 0.46528, 0, 0, 0.5],
          "9711": [0.19444, 0.69444, 0, 0, 1.0],
          "9824": [0.12963, 0.69444, 0, 0, 0.77778],
          "9825": [0.12963, 0.69444, 0, 0, 0.77778],
          "9826": [0.12963, 0.69444, 0, 0, 0.77778],
          "9827": [0.12963, 0.69444, 0, 0, 0.77778],
          "9837": [0, 0.75, 0, 0, 0.38889],
          "9838": [0.19444, 0.69444, 0, 0, 0.38889],
          "9839": [0.19444, 0.69444, 0, 0, 0.38889],
          "10216": [0.25, 0.75, 0, 0, 0.38889],
          "10217": [0.25, 0.75, 0, 0, 0.38889],
          "10222": [0.244, 0.744, 0, 0, 184],
          "10223": [0.244, 0.744, 0, 0, 184],
          "10229": [0.011, 0.511, 0, 0, 1470],
          "10230": [0.011, 0.511, 0, 0, 1469],
          "10231": [0.011, 0.511, 0, 0, 1748],
          "10232": [0.024, 0.525, 0, 0, 1497],
          "10233": [0.024, 0.525, 0, 0, 1526],
          "10234": [0.024, 0.525, 0, 0, 1746],
          "10236": [0.011, 0.511, 0, 0, 1498],
          "10815": [0, 0.68333, 0, 0, 0.75],
          "10927": [0.13597, 0.63597, 0, 0, 0.77778],
          "10928": [0.13597, 0.63597, 0, 0, 0.77778]
        },
        "Math-BoldItalic": {
          "47": [0.19444, 0.69444, 0, 0, 0],
          "65": [0, 0.68611, 0, 0, 0.86944],
          "66": [0, 0.68611, 0.04835, 0, 0.8664],
          "67": [0, 0.68611, 0.06979, 0, 0.81694],
          "68": [0, 0.68611, 0.03194, 0, 0.93812],
          "69": [0, 0.68611, 0.05451, 0, 0.81007],
          "70": [0, 0.68611, 0.15972, 0, 0.68889],
          "71": [0, 0.68611, 0, 0, 0.88673],
          "72": [0, 0.68611, 0.08229, 0, 0.98229],
          "73": [0, 0.68611, 0.07778, 0, 0.51111],
          "74": [0, 0.68611, 0.10069, 0, 0.63125],
          "75": [0, 0.68611, 0.06979, 0, 0.97118],
          "76": [0, 0.68611, 0, 0, 0.75555],
          "77": [0, 0.68611, 0.11424, 0, 1.14201],
          "78": [0, 0.68611, 0.11424, 0, 0.95034],
          "79": [0, 0.68611, 0.03194, 0, 0.83666],
          "80": [0, 0.68611, 0.15972, 0, 0.72309],
          "81": [0.19444, 0.68611, 0, 0, 0.86861],
          "82": [0, 0.68611, 0.00421, 0, 0.87235],
          "83": [0, 0.68611, 0.05382, 0, 0.69271],
          "84": [0, 0.68611, 0.15972, 0, 0.63663],
          "85": [0, 0.68611, 0.11424, 0, 0.80027],
          "86": [0, 0.68611, 0.25555, 0, 0.67778],
          "87": [0, 0.68611, 0.15972, 0, 1.09305],
          "88": [0, 0.68611, 0.07778, 0, 0.94722],
          "89": [0, 0.68611, 0.25555, 0, 0.67458],
          "90": [0, 0.68611, 0.06979, 0, 0.77257],
          "97": [0, 0.44444, 0, 0, 0.63287],
          "98": [0, 0.69444, 0, 0, 0.52083],
          "99": [0, 0.44444, 0, 0, 0.51342],
          "100": [0, 0.69444, 0, 0, 0.60972],
          "101": [0, 0.44444, 0, 0, 0.55361],
          "102": [0.19444, 0.69444, 0.11042, 0, 0.56806],
          "103": [0.19444, 0.44444, 0.03704, 0, 0.5449],
          "104": [0, 0.69444, 0, 0, 0.66759],
          "105": [0, 0.69326, 0, 0, 0.4048],
          "106": [0.19444, 0.69326, 0.0622, 0, 0.47083],
          "107": [0, 0.69444, 0.01852, 0, 0.6037],
          "108": [0, 0.69444, 0.0088, 0, 0.34815],
          "109": [0, 0.44444, 0, 0, 1.0324],
          "110": [0, 0.44444, 0, 0, 0.71296],
          "111": [0, 0.44444, 0, 0, 0.58472],
          "112": [0.19444, 0.44444, 0, 0, 0.60092],
          "113": [0.19444, 0.44444, 0.03704, 0, 0.54213],
          "114": [0, 0.44444, 0.03194, 0, 0.5287],
          "115": [0, 0.44444, 0, 0, 0.53125],
          "116": [0, 0.63492, 0, 0, 0.41528],
          "117": [0, 0.44444, 0, 0, 0.68102],
          "118": [0, 0.44444, 0.03704, 0, 0.56666],
          "119": [0, 0.44444, 0.02778, 0, 0.83148],
          "120": [0, 0.44444, 0, 0, 0.65903],
          "121": [0.19444, 0.44444, 0.03704, 0, 0.59028],
          "122": [0, 0.44444, 0.04213, 0, 0.55509],
          "915": [0, 0.68611, 0.15972, 0, 0.65694],
          "916": [0, 0.68611, 0, 0, 0.95833],
          "920": [0, 0.68611, 0.03194, 0, 0.86722],
          "923": [0, 0.68611, 0, 0, 0.80555],
          "926": [0, 0.68611, 0.07458, 0, 0.84125],
          "928": [0, 0.68611, 0.08229, 0, 0.98229],
          "931": [0, 0.68611, 0.05451, 0, 0.88507],
          "933": [0, 0.68611, 0.15972, 0, 0.67083],
          "934": [0, 0.68611, 0, 0, 0.76666],
          "936": [0, 0.68611, 0.11653, 0, 0.71402],
          "937": [0, 0.68611, 0.04835, 0, 0.8789],
          "945": [0, 0.44444, 0, 0, 0.76064],
          "946": [0.19444, 0.69444, 0.03403, 0, 0.65972],
          "947": [0.19444, 0.44444, 0.06389, 0, 0.59003],
          "948": [0, 0.69444, 0.03819, 0, 0.52222],
          "949": [0, 0.44444, 0, 0, 0.52882],
          "950": [0.19444, 0.69444, 0.06215, 0, 0.50833],
          "951": [0.19444, 0.44444, 0.03704, 0, 0.6],
          "952": [0, 0.69444, 0.03194, 0, 0.5618],
          "953": [0, 0.44444, 0, 0, 0.41204],
          "954": [0, 0.44444, 0, 0, 0.66759],
          "955": [0, 0.69444, 0, 0, 0.67083],
          "956": [0.19444, 0.44444, 0, 0, 0.70787],
          "957": [0, 0.44444, 0.06898, 0, 0.57685],
          "958": [0.19444, 0.69444, 0.03021, 0, 0.50833],
          "959": [0, 0.44444, 0, 0, 0.58472],
          "960": [0, 0.44444, 0.03704, 0, 0.68241],
          "961": [0.19444, 0.44444, 0, 0, 0.6118],
          "962": [0.09722, 0.44444, 0.07917, 0, 0.42361],
          "963": [0, 0.44444, 0.03704, 0, 0.68588],
          "964": [0, 0.44444, 0.13472, 0, 0.52083],
          "965": [0, 0.44444, 0.03704, 0, 0.63055],
          "966": [0.19444, 0.44444, 0, 0, 0.74722],
          "967": [0.19444, 0.44444, 0, 0, 0.71805],
          "968": [0.19444, 0.69444, 0.03704, 0, 0.75833],
          "969": [0, 0.44444, 0.03704, 0, 0.71782],
          "977": [0, 0.69444, 0, 0, 0.69155],
          "981": [0.19444, 0.69444, 0, 0, 0.7125],
          "982": [0, 0.44444, 0.03194, 0, 0.975],
          "1009": [0.19444, 0.44444, 0, 0, 0.6118],
          "1013": [0, 0.44444, 0, 0, 0.48333]
        },
        "Math-Italic": {
          "47": [0.19444, 0.69444, 0, 0, 0],
          "65": [0, 0.68333, 0, 0.13889, 0.75],
          "66": [0, 0.68333, 0.05017, 0.08334, 0.75851],
          "67": [0, 0.68333, 0.07153, 0.08334, 0.71472],
          "68": [0, 0.68333, 0.02778, 0.05556, 0.82792],
          "69": [0, 0.68333, 0.05764, 0.08334, 0.7382],
          "70": [0, 0.68333, 0.13889, 0.08334, 0.64306],
          "71": [0, 0.68333, 0, 0.08334, 0.78625],
          "72": [0, 0.68333, 0.08125, 0.05556, 0.83125],
          "73": [0, 0.68333, 0.07847, 0.11111, 0.43958],
          "74": [0, 0.68333, 0.09618, 0.16667, 0.55451],
          "75": [0, 0.68333, 0.07153, 0.05556, 0.84931],
          "76": [0, 0.68333, 0, 0.02778, 0.68056],
          "77": [0, 0.68333, 0.10903, 0.08334, 0.97014],
          "78": [0, 0.68333, 0.10903, 0.08334, 0.80347],
          "79": [0, 0.68333, 0.02778, 0.08334, 0.76278],
          "80": [0, 0.68333, 0.13889, 0.08334, 0.64201],
          "81": [0.19444, 0.68333, 0, 0.08334, 0.79056],
          "82": [0, 0.68333, 0.00773, 0.08334, 0.75929],
          "83": [0, 0.68333, 0.05764, 0.08334, 0.6132],
          "84": [0, 0.68333, 0.13889, 0.08334, 0.58438],
          "85": [0, 0.68333, 0.10903, 0.02778, 0.68278],
          "86": [0, 0.68333, 0.22222, 0, 0.58333],
          "87": [0, 0.68333, 0.13889, 0, 0.94445],
          "88": [0, 0.68333, 0.07847, 0.08334, 0.82847],
          "89": [0, 0.68333, 0.22222, 0, 0.58056],
          "90": [0, 0.68333, 0.07153, 0.08334, 0.68264],
          "97": [0, 0.43056, 0, 0, 0.52859],
          "98": [0, 0.69444, 0, 0, 0.42917],
          "99": [0, 0.43056, 0, 0.05556, 0.43276],
          "100": [0, 0.69444, 0, 0.16667, 0.52049],
          "101": [0, 0.43056, 0, 0.05556, 0.46563],
          "102": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],
          "103": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],
          "104": [0, 0.69444, 0, 0, 0.57616],
          "105": [0, 0.65952, 0, 0, 0.34451],
          "106": [0.19444, 0.65952, 0.05724, 0, 0.41181],
          "107": [0, 0.69444, 0.03148, 0, 0.5206],
          "108": [0, 0.69444, 0.01968, 0.08334, 0.29838],
          "109": [0, 0.43056, 0, 0, 0.87801],
          "110": [0, 0.43056, 0, 0, 0.60023],
          "111": [0, 0.43056, 0, 0.05556, 0.48472],
          "112": [0.19444, 0.43056, 0, 0.08334, 0.50313],
          "113": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],
          "114": [0, 0.43056, 0.02778, 0.05556, 0.45116],
          "115": [0, 0.43056, 0, 0.05556, 0.46875],
          "116": [0, 0.61508, 0, 0.08334, 0.36111],
          "117": [0, 0.43056, 0, 0.02778, 0.57246],
          "118": [0, 0.43056, 0.03588, 0.02778, 0.48472],
          "119": [0, 0.43056, 0.02691, 0.08334, 0.71592],
          "120": [0, 0.43056, 0, 0.02778, 0.57153],
          "121": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],
          "122": [0, 0.43056, 0.04398, 0.05556, 0.46505],
          "915": [0, 0.68333, 0.13889, 0.08334, 0.61528],
          "916": [0, 0.68333, 0, 0.16667, 0.83334],
          "920": [0, 0.68333, 0.02778, 0.08334, 0.76278],
          "923": [0, 0.68333, 0, 0.16667, 0.69445],
          "926": [0, 0.68333, 0.07569, 0.08334, 0.74236],
          "928": [0, 0.68333, 0.08125, 0.05556, 0.83125],
          "931": [0, 0.68333, 0.05764, 0.08334, 0.77986],
          "933": [0, 0.68333, 0.13889, 0.05556, 0.58333],
          "934": [0, 0.68333, 0, 0.08334, 0.66667],
          "936": [0, 0.68333, 0.11, 0.05556, 0.61222],
          "937": [0, 0.68333, 0.05017, 0.08334, 0.7724],
          "945": [0, 0.43056, 0.0037, 0.02778, 0.6397],
          "946": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],
          "947": [0.19444, 0.43056, 0.05556, 0, 0.51773],
          "948": [0, 0.69444, 0.03785, 0.05556, 0.44444],
          "949": [0, 0.43056, 0, 0.08334, 0.46632],
          "950": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],
          "951": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],
          "952": [0, 0.69444, 0.02778, 0.08334, 0.46944],
          "953": [0, 0.43056, 0, 0.05556, 0.35394],
          "954": [0, 0.43056, 0, 0, 0.57616],
          "955": [0, 0.69444, 0, 0, 0.58334],
          "956": [0.19444, 0.43056, 0, 0.02778, 0.60255],
          "957": [0, 0.43056, 0.06366, 0.02778, 0.49398],
          "958": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],
          "959": [0, 0.43056, 0, 0.05556, 0.48472],
          "960": [0, 0.43056, 0.03588, 0, 0.57003],
          "961": [0.19444, 0.43056, 0, 0.08334, 0.51702],
          "962": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],
          "963": [0, 0.43056, 0.03588, 0, 0.57141],
          "964": [0, 0.43056, 0.1132, 0.02778, 0.43715],
          "965": [0, 0.43056, 0.03588, 0.02778, 0.54028],
          "966": [0.19444, 0.43056, 0, 0.08334, 0.65417],
          "967": [0.19444, 0.43056, 0, 0.05556, 0.62569],
          "968": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],
          "969": [0, 0.43056, 0.03588, 0, 0.62245],
          "977": [0, 0.69444, 0, 0.08334, 0.59144],
          "981": [0.19444, 0.69444, 0, 0.08334, 0.59583],
          "982": [0, 0.43056, 0.02778, 0, 0.82813],
          "1009": [0.19444, 0.43056, 0, 0.08334, 0.51702],
          "1013": [0, 0.43056, 0, 0.05556, 0.4059]
        },
        "Math-Regular": {
          "65": [0, 0.68333, 0, 0.13889, 0.75],
          "66": [0, 0.68333, 0.05017, 0.08334, 0.75851],
          "67": [0, 0.68333, 0.07153, 0.08334, 0.71472],
          "68": [0, 0.68333, 0.02778, 0.05556, 0.82792],
          "69": [0, 0.68333, 0.05764, 0.08334, 0.7382],
          "70": [0, 0.68333, 0.13889, 0.08334, 0.64306],
          "71": [0, 0.68333, 0, 0.08334, 0.78625],
          "72": [0, 0.68333, 0.08125, 0.05556, 0.83125],
          "73": [0, 0.68333, 0.07847, 0.11111, 0.43958],
          "74": [0, 0.68333, 0.09618, 0.16667, 0.55451],
          "75": [0, 0.68333, 0.07153, 0.05556, 0.84931],
          "76": [0, 0.68333, 0, 0.02778, 0.68056],
          "77": [0, 0.68333, 0.10903, 0.08334, 0.97014],
          "78": [0, 0.68333, 0.10903, 0.08334, 0.80347],
          "79": [0, 0.68333, 0.02778, 0.08334, 0.76278],
          "80": [0, 0.68333, 0.13889, 0.08334, 0.64201],
          "81": [0.19444, 0.68333, 0, 0.08334, 0.79056],
          "82": [0, 0.68333, 0.00773, 0.08334, 0.75929],
          "83": [0, 0.68333, 0.05764, 0.08334, 0.6132],
          "84": [0, 0.68333, 0.13889, 0.08334, 0.58438],
          "85": [0, 0.68333, 0.10903, 0.02778, 0.68278],
          "86": [0, 0.68333, 0.22222, 0, 0.58333],
          "87": [0, 0.68333, 0.13889, 0, 0.94445],
          "88": [0, 0.68333, 0.07847, 0.08334, 0.82847],
          "89": [0, 0.68333, 0.22222, 0, 0.58056],
          "90": [0, 0.68333, 0.07153, 0.08334, 0.68264],
          "97": [0, 0.43056, 0, 0, 0.52859],
          "98": [0, 0.69444, 0, 0, 0.42917],
          "99": [0, 0.43056, 0, 0.05556, 0.43276],
          "100": [0, 0.69444, 0, 0.16667, 0.52049],
          "101": [0, 0.43056, 0, 0.05556, 0.46563],
          "102": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],
          "103": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],
          "104": [0, 0.69444, 0, 0, 0.57616],
          "105": [0, 0.65952, 0, 0, 0.34451],
          "106": [0.19444, 0.65952, 0.05724, 0, 0.41181],
          "107": [0, 0.69444, 0.03148, 0, 0.5206],
          "108": [0, 0.69444, 0.01968, 0.08334, 0.29838],
          "109": [0, 0.43056, 0, 0, 0.87801],
          "110": [0, 0.43056, 0, 0, 0.60023],
          "111": [0, 0.43056, 0, 0.05556, 0.48472],
          "112": [0.19444, 0.43056, 0, 0.08334, 0.50313],
          "113": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],
          "114": [0, 0.43056, 0.02778, 0.05556, 0.45116],
          "115": [0, 0.43056, 0, 0.05556, 0.46875],
          "116": [0, 0.61508, 0, 0.08334, 0.36111],
          "117": [0, 0.43056, 0, 0.02778, 0.57246],
          "118": [0, 0.43056, 0.03588, 0.02778, 0.48472],
          "119": [0, 0.43056, 0.02691, 0.08334, 0.71592],
          "120": [0, 0.43056, 0, 0.02778, 0.57153],
          "121": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],
          "122": [0, 0.43056, 0.04398, 0.05556, 0.46505],
          "915": [0, 0.68333, 0.13889, 0.08334, 0.61528],
          "916": [0, 0.68333, 0, 0.16667, 0.83334],
          "920": [0, 0.68333, 0.02778, 0.08334, 0.76278],
          "923": [0, 0.68333, 0, 0.16667, 0.69445],
          "926": [0, 0.68333, 0.07569, 0.08334, 0.74236],
          "928": [0, 0.68333, 0.08125, 0.05556, 0.83125],
          "931": [0, 0.68333, 0.05764, 0.08334, 0.77986],
          "933": [0, 0.68333, 0.13889, 0.05556, 0.58333],
          "934": [0, 0.68333, 0, 0.08334, 0.66667],
          "936": [0, 0.68333, 0.11, 0.05556, 0.61222],
          "937": [0, 0.68333, 0.05017, 0.08334, 0.7724],
          "945": [0, 0.43056, 0.0037, 0.02778, 0.6397],
          "946": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],
          "947": [0.19444, 0.43056, 0.05556, 0, 0.51773],
          "948": [0, 0.69444, 0.03785, 0.05556, 0.44444],
          "949": [0, 0.43056, 0, 0.08334, 0.46632],
          "950": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],
          "951": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],
          "952": [0, 0.69444, 0.02778, 0.08334, 0.46944],
          "953": [0, 0.43056, 0, 0.05556, 0.35394],
          "954": [0, 0.43056, 0, 0, 0.57616],
          "955": [0, 0.69444, 0, 0, 0.58334],
          "956": [0.19444, 0.43056, 0, 0.02778, 0.60255],
          "957": [0, 0.43056, 0.06366, 0.02778, 0.49398],
          "958": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],
          "959": [0, 0.43056, 0, 0.05556, 0.48472],
          "960": [0, 0.43056, 0.03588, 0, 0.57003],
          "961": [0.19444, 0.43056, 0, 0.08334, 0.51702],
          "962": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],
          "963": [0, 0.43056, 0.03588, 0, 0.57141],
          "964": [0, 0.43056, 0.1132, 0.02778, 0.43715],
          "965": [0, 0.43056, 0.03588, 0.02778, 0.54028],
          "966": [0.19444, 0.43056, 0, 0.08334, 0.65417],
          "967": [0.19444, 0.43056, 0, 0.05556, 0.62569],
          "968": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],
          "969": [0, 0.43056, 0.03588, 0, 0.62245],
          "977": [0, 0.69444, 0, 0.08334, 0.59144],
          "981": [0.19444, 0.69444, 0, 0.08334, 0.59583],
          "982": [0, 0.43056, 0.02778, 0, 0.82813],
          "1009": [0.19444, 0.43056, 0, 0.08334, 0.51702],
          "1013": [0, 0.43056, 0, 0.05556, 0.4059]
        },
        "SansSerif-Bold": {
          "33": [0, 0.69444, 0, 0, 0.36667],
          "34": [0, 0.69444, 0, 0, 0.55834],
          "35": [0.19444, 0.69444, 0, 0, 0.91667],
          "36": [0.05556, 0.75, 0, 0, 0.55],
          "37": [0.05556, 0.75, 0, 0, 1.02912],
          "38": [0, 0.69444, 0, 0, 0.83056],
          "39": [0, 0.69444, 0, 0, 0.30556],
          "40": [0.25, 0.75, 0, 0, 0.42778],
          "41": [0.25, 0.75, 0, 0, 0.42778],
          "42": [0, 0.75, 0, 0, 0.55],
          "43": [0.11667, 0.61667, 0, 0, 0.85556],
          "44": [0.10556, 0.13056, 0, 0, 0.30556],
          "45": [0, 0.45833, 0, 0, 0.36667],
          "46": [0, 0.13056, 0, 0, 0.30556],
          "47": [0.25, 0.75, 0, 0, 0.55],
          "48": [0, 0.69444, 0, 0, 0.55],
          "49": [0, 0.69444, 0, 0, 0.55],
          "50": [0, 0.69444, 0, 0, 0.55],
          "51": [0, 0.69444, 0, 0, 0.55],
          "52": [0, 0.69444, 0, 0, 0.55],
          "53": [0, 0.69444, 0, 0, 0.55],
          "54": [0, 0.69444, 0, 0, 0.55],
          "55": [0, 0.69444, 0, 0, 0.55],
          "56": [0, 0.69444, 0, 0, 0.55],
          "57": [0, 0.69444, 0, 0, 0.55],
          "58": [0, 0.45833, 0, 0, 0.30556],
          "59": [0.10556, 0.45833, 0, 0, 0.30556],
          "61": [-0.09375, 0.40625, 0, 0, 0.85556],
          "63": [0, 0.69444, 0, 0, 0.51945],
          "64": [0, 0.69444, 0, 0, 0.73334],
          "65": [0, 0.69444, 0, 0, 0.73334],
          "66": [0, 0.69444, 0, 0, 0.73334],
          "67": [0, 0.69444, 0, 0, 0.70278],
          "68": [0, 0.69444, 0, 0, 0.79445],
          "69": [0, 0.69444, 0, 0, 0.64167],
          "70": [0, 0.69444, 0, 0, 0.61111],
          "71": [0, 0.69444, 0, 0, 0.73334],
          "72": [0, 0.69444, 0, 0, 0.79445],
          "73": [0, 0.69444, 0, 0, 0.33056],
          "74": [0, 0.69444, 0, 0, 0.51945],
          "75": [0, 0.69444, 0, 0, 0.76389],
          "76": [0, 0.69444, 0, 0, 0.58056],
          "77": [0, 0.69444, 0, 0, 0.97778],
          "78": [0, 0.69444, 0, 0, 0.79445],
          "79": [0, 0.69444, 0, 0, 0.79445],
          "80": [0, 0.69444, 0, 0, 0.70278],
          "81": [0.10556, 0.69444, 0, 0, 0.79445],
          "82": [0, 0.69444, 0, 0, 0.70278],
          "83": [0, 0.69444, 0, 0, 0.61111],
          "84": [0, 0.69444, 0, 0, 0.73334],
          "85": [0, 0.69444, 0, 0, 0.76389],
          "86": [0, 0.69444, 0.01528, 0, 0.73334],
          "87": [0, 0.69444, 0.01528, 0, 1.03889],
          "88": [0, 0.69444, 0, 0, 0.73334],
          "89": [0, 0.69444, 0.0275, 0, 0.73334],
          "90": [0, 0.69444, 0, 0, 0.67223],
          "91": [0.25, 0.75, 0, 0, 0.34306],
          "93": [0.25, 0.75, 0, 0, 0.34306],
          "94": [0, 0.69444, 0, 0, 0.55],
          "95": [0.35, 0.10833, 0.03056, 0, 0.55],
          "97": [0, 0.45833, 0, 0, 0.525],
          "98": [0, 0.69444, 0, 0, 0.56111],
          "99": [0, 0.45833, 0, 0, 0.48889],
          "100": [0, 0.69444, 0, 0, 0.56111],
          "101": [0, 0.45833, 0, 0, 0.51111],
          "102": [0, 0.69444, 0.07639, 0, 0.33611],
          "103": [0.19444, 0.45833, 0.01528, 0, 0.55],
          "104": [0, 0.69444, 0, 0, 0.56111],
          "105": [0, 0.69444, 0, 0, 0.25556],
          "106": [0.19444, 0.69444, 0, 0, 0.28611],
          "107": [0, 0.69444, 0, 0, 0.53056],
          "108": [0, 0.69444, 0, 0, 0.25556],
          "109": [0, 0.45833, 0, 0, 0.86667],
          "110": [0, 0.45833, 0, 0, 0.56111],
          "111": [0, 0.45833, 0, 0, 0.55],
          "112": [0.19444, 0.45833, 0, 0, 0.56111],
          "113": [0.19444, 0.45833, 0, 0, 0.56111],
          "114": [0, 0.45833, 0.01528, 0, 0.37222],
          "115": [0, 0.45833, 0, 0, 0.42167],
          "116": [0, 0.58929, 0, 0, 0.40417],
          "117": [0, 0.45833, 0, 0, 0.56111],
          "118": [0, 0.45833, 0.01528, 0, 0.5],
          "119": [0, 0.45833, 0.01528, 0, 0.74445],
          "120": [0, 0.45833, 0, 0, 0.5],
          "121": [0.19444, 0.45833, 0.01528, 0, 0.5],
          "122": [0, 0.45833, 0, 0, 0.47639],
          "126": [0.35, 0.34444, 0, 0, 0.55],
          "168": [0, 0.69444, 0, 0, 0.55],
          "176": [0, 0.69444, 0, 0, 0.73334],
          "180": [0, 0.69444, 0, 0, 0.55],
          "305": [0, 0.45833, 0, 0, 0.25556],
          "567": [0.19444, 0.45833, 0, 0, 0.28611],
          "710": [0, 0.69444, 0, 0, 0.55],
          "711": [0, 0.63542, 0, 0, 0.55],
          "713": [0, 0.63778, 0, 0, 0.55],
          "728": [0, 0.69444, 0, 0, 0.55],
          "729": [0, 0.69444, 0, 0, 0.30556],
          "730": [0, 0.69444, 0, 0, 0.73334],
          "732": [0, 0.69444, 0, 0, 0.55],
          "733": [0, 0.69444, 0, 0, 0.55],
          "915": [0, 0.69444, 0, 0, 0.58056],
          "916": [0, 0.69444, 0, 0, 0.91667],
          "920": [0, 0.69444, 0, 0, 0.85556],
          "923": [0, 0.69444, 0, 0, 0.67223],
          "926": [0, 0.69444, 0, 0, 0.73334],
          "928": [0, 0.69444, 0, 0, 0.79445],
          "931": [0, 0.69444, 0, 0, 0.79445],
          "933": [0, 0.69444, 0, 0, 0.85556],
          "934": [0, 0.69444, 0, 0, 0.79445],
          "936": [0, 0.69444, 0, 0, 0.85556],
          "937": [0, 0.69444, 0, 0, 0.79445],
          "8211": [0, 0.45833, 0.03056, 0, 0.55],
          "8212": [0, 0.45833, 0.03056, 0, 1.10001],
          "8216": [0, 0.69444, 0, 0, 0.30556],
          "8217": [0, 0.69444, 0, 0, 0.30556],
          "8220": [0, 0.69444, 0, 0, 0.55834],
          "8221": [0, 0.69444, 0, 0, 0.55834]
        },
        "SansSerif-Italic": {
          "33": [0, 0.69444, 0.05733, 0, 0.31945],
          "34": [0, 0.69444, 0.00316, 0, 0.5],
          "35": [0.19444, 0.69444, 0.05087, 0, 0.83334],
          "36": [0.05556, 0.75, 0.11156, 0, 0.5],
          "37": [0.05556, 0.75, 0.03126, 0, 0.83334],
          "38": [0, 0.69444, 0.03058, 0, 0.75834],
          "39": [0, 0.69444, 0.07816, 0, 0.27778],
          "40": [0.25, 0.75, 0.13164, 0, 0.38889],
          "41": [0.25, 0.75, 0.02536, 0, 0.38889],
          "42": [0, 0.75, 0.11775, 0, 0.5],
          "43": [0.08333, 0.58333, 0.02536, 0, 0.77778],
          "44": [0.125, 0.08333, 0, 0, 0.27778],
          "45": [0, 0.44444, 0.01946, 0, 0.33333],
          "46": [0, 0.08333, 0, 0, 0.27778],
          "47": [0.25, 0.75, 0.13164, 0, 0.5],
          "48": [0, 0.65556, 0.11156, 0, 0.5],
          "49": [0, 0.65556, 0.11156, 0, 0.5],
          "50": [0, 0.65556, 0.11156, 0, 0.5],
          "51": [0, 0.65556, 0.11156, 0, 0.5],
          "52": [0, 0.65556, 0.11156, 0, 0.5],
          "53": [0, 0.65556, 0.11156, 0, 0.5],
          "54": [0, 0.65556, 0.11156, 0, 0.5],
          "55": [0, 0.65556, 0.11156, 0, 0.5],
          "56": [0, 0.65556, 0.11156, 0, 0.5],
          "57": [0, 0.65556, 0.11156, 0, 0.5],
          "58": [0, 0.44444, 0.02502, 0, 0.27778],
          "59": [0.125, 0.44444, 0.02502, 0, 0.27778],
          "61": [-0.13, 0.37, 0.05087, 0, 0.77778],
          "63": [0, 0.69444, 0.11809, 0, 0.47222],
          "64": [0, 0.69444, 0.07555, 0, 0.66667],
          "65": [0, 0.69444, 0, 0, 0.66667],
          "66": [0, 0.69444, 0.08293, 0, 0.66667],
          "67": [0, 0.69444, 0.11983, 0, 0.63889],
          "68": [0, 0.69444, 0.07555, 0, 0.72223],
          "69": [0, 0.69444, 0.11983, 0, 0.59722],
          "70": [0, 0.69444, 0.13372, 0, 0.56945],
          "71": [0, 0.69444, 0.11983, 0, 0.66667],
          "72": [0, 0.69444, 0.08094, 0, 0.70834],
          "73": [0, 0.69444, 0.13372, 0, 0.27778],
          "74": [0, 0.69444, 0.08094, 0, 0.47222],
          "75": [0, 0.69444, 0.11983, 0, 0.69445],
          "76": [0, 0.69444, 0, 0, 0.54167],
          "77": [0, 0.69444, 0.08094, 0, 0.875],
          "78": [0, 0.69444, 0.08094, 0, 0.70834],
          "79": [0, 0.69444, 0.07555, 0, 0.73611],
          "80": [0, 0.69444, 0.08293, 0, 0.63889],
          "81": [0.125, 0.69444, 0.07555, 0, 0.73611],
          "82": [0, 0.69444, 0.08293, 0, 0.64584],
          "83": [0, 0.69444, 0.09205, 0, 0.55556],
          "84": [0, 0.69444, 0.13372, 0, 0.68056],
          "85": [0, 0.69444, 0.08094, 0, 0.6875],
          "86": [0, 0.69444, 0.1615, 0, 0.66667],
          "87": [0, 0.69444, 0.1615, 0, 0.94445],
          "88": [0, 0.69444, 0.13372, 0, 0.66667],
          "89": [0, 0.69444, 0.17261, 0, 0.66667],
          "90": [0, 0.69444, 0.11983, 0, 0.61111],
          "91": [0.25, 0.75, 0.15942, 0, 0.28889],
          "93": [0.25, 0.75, 0.08719, 0, 0.28889],
          "94": [0, 0.69444, 0.0799, 0, 0.5],
          "95": [0.35, 0.09444, 0.08616, 0, 0.5],
          "97": [0, 0.44444, 0.00981, 0, 0.48056],
          "98": [0, 0.69444, 0.03057, 0, 0.51667],
          "99": [0, 0.44444, 0.08336, 0, 0.44445],
          "100": [0, 0.69444, 0.09483, 0, 0.51667],
          "101": [0, 0.44444, 0.06778, 0, 0.44445],
          "102": [0, 0.69444, 0.21705, 0, 0.30556],
          "103": [0.19444, 0.44444, 0.10836, 0, 0.5],
          "104": [0, 0.69444, 0.01778, 0, 0.51667],
          "105": [0, 0.67937, 0.09718, 0, 0.23889],
          "106": [0.19444, 0.67937, 0.09162, 0, 0.26667],
          "107": [0, 0.69444, 0.08336, 0, 0.48889],
          "108": [0, 0.69444, 0.09483, 0, 0.23889],
          "109": [0, 0.44444, 0.01778, 0, 0.79445],
          "110": [0, 0.44444, 0.01778, 0, 0.51667],
          "111": [0, 0.44444, 0.06613, 0, 0.5],
          "112": [0.19444, 0.44444, 0.0389, 0, 0.51667],
          "113": [0.19444, 0.44444, 0.04169, 0, 0.51667],
          "114": [0, 0.44444, 0.10836, 0, 0.34167],
          "115": [0, 0.44444, 0.0778, 0, 0.38333],
          "116": [0, 0.57143, 0.07225, 0, 0.36111],
          "117": [0, 0.44444, 0.04169, 0, 0.51667],
          "118": [0, 0.44444, 0.10836, 0, 0.46111],
          "119": [0, 0.44444, 0.10836, 0, 0.68334],
          "120": [0, 0.44444, 0.09169, 0, 0.46111],
          "121": [0.19444, 0.44444, 0.10836, 0, 0.46111],
          "122": [0, 0.44444, 0.08752, 0, 0.43472],
          "126": [0.35, 0.32659, 0.08826, 0, 0.5],
          "168": [0, 0.67937, 0.06385, 0, 0.5],
          "176": [0, 0.69444, 0, 0, 0.73752],
          "305": [0, 0.44444, 0.04169, 0, 0.23889],
          "567": [0.19444, 0.44444, 0.04169, 0, 0.26667],
          "710": [0, 0.69444, 0.0799, 0, 0.5],
          "711": [0, 0.63194, 0.08432, 0, 0.5],
          "713": [0, 0.60889, 0.08776, 0, 0.5],
          "714": [0, 0.69444, 0.09205, 0, 0.5],
          "715": [0, 0.69444, 0, 0, 0.5],
          "728": [0, 0.69444, 0.09483, 0, 0.5],
          "729": [0, 0.67937, 0.07774, 0, 0.27778],
          "730": [0, 0.69444, 0, 0, 0.73752],
          "732": [0, 0.67659, 0.08826, 0, 0.5],
          "733": [0, 0.69444, 0.09205, 0, 0.5],
          "915": [0, 0.69444, 0.13372, 0, 0.54167],
          "916": [0, 0.69444, 0, 0, 0.83334],
          "920": [0, 0.69444, 0.07555, 0, 0.77778],
          "923": [0, 0.69444, 0, 0, 0.61111],
          "926": [0, 0.69444, 0.12816, 0, 0.66667],
          "928": [0, 0.69444, 0.08094, 0, 0.70834],
          "931": [0, 0.69444, 0.11983, 0, 0.72222],
          "933": [0, 0.69444, 0.09031, 0, 0.77778],
          "934": [0, 0.69444, 0.04603, 0, 0.72222],
          "936": [0, 0.69444, 0.09031, 0, 0.77778],
          "937": [0, 0.69444, 0.08293, 0, 0.72222],
          "8211": [0, 0.44444, 0.08616, 0, 0.5],
          "8212": [0, 0.44444, 0.08616, 0, 1.0],
          "8216": [0, 0.69444, 0.07816, 0, 0.27778],
          "8217": [0, 0.69444, 0.07816, 0, 0.27778],
          "8220": [0, 0.69444, 0.14205, 0, 0.5],
          "8221": [0, 0.69444, 0.00316, 0, 0.5]
        },
        "SansSerif-Regular": {
          "33": [0, 0.69444, 0, 0, 0.31945],
          "34": [0, 0.69444, 0, 0, 0.5],
          "35": [0.19444, 0.69444, 0, 0, 0.83334],
          "36": [0.05556, 0.75, 0, 0, 0.5],
          "37": [0.05556, 0.75, 0, 0, 0.83334],
          "38": [0, 0.69444, 0, 0, 0.75834],
          "39": [0, 0.69444, 0, 0, 0.27778],
          "40": [0.25, 0.75, 0, 0, 0.38889],
          "41": [0.25, 0.75, 0, 0, 0.38889],
          "42": [0, 0.75, 0, 0, 0.5],
          "43": [0.08333, 0.58333, 0, 0, 0.77778],
          "44": [0.125, 0.08333, 0, 0, 0.27778],
          "45": [0, 0.44444, 0, 0, 0.33333],
          "46": [0, 0.08333, 0, 0, 0.27778],
          "47": [0.25, 0.75, 0, 0, 0.5],
          "48": [0, 0.65556, 0, 0, 0.5],
          "49": [0, 0.65556, 0, 0, 0.5],
          "50": [0, 0.65556, 0, 0, 0.5],
          "51": [0, 0.65556, 0, 0, 0.5],
          "52": [0, 0.65556, 0, 0, 0.5],
          "53": [0, 0.65556, 0, 0, 0.5],
          "54": [0, 0.65556, 0, 0, 0.5],
          "55": [0, 0.65556, 0, 0, 0.5],
          "56": [0, 0.65556, 0, 0, 0.5],
          "57": [0, 0.65556, 0, 0, 0.5],
          "58": [0, 0.44444, 0, 0, 0.27778],
          "59": [0.125, 0.44444, 0, 0, 0.27778],
          "61": [-0.13, 0.37, 0, 0, 0.77778],
          "63": [0, 0.69444, 0, 0, 0.47222],
          "64": [0, 0.69444, 0, 0, 0.66667],
          "65": [0, 0.69444, 0, 0, 0.66667],
          "66": [0, 0.69444, 0, 0, 0.66667],
          "67": [0, 0.69444, 0, 0, 0.63889],
          "68": [0, 0.69444, 0, 0, 0.72223],
          "69": [0, 0.69444, 0, 0, 0.59722],
          "70": [0, 0.69444, 0, 0, 0.56945],
          "71": [0, 0.69444, 0, 0, 0.66667],
          "72": [0, 0.69444, 0, 0, 0.70834],
          "73": [0, 0.69444, 0, 0, 0.27778],
          "74": [0, 0.69444, 0, 0, 0.47222],
          "75": [0, 0.69444, 0, 0, 0.69445],
          "76": [0, 0.69444, 0, 0, 0.54167],
          "77": [0, 0.69444, 0, 0, 0.875],
          "78": [0, 0.69444, 0, 0, 0.70834],
          "79": [0, 0.69444, 0, 0, 0.73611],
          "80": [0, 0.69444, 0, 0, 0.63889],
          "81": [0.125, 0.69444, 0, 0, 0.73611],
          "82": [0, 0.69444, 0, 0, 0.64584],
          "83": [0, 0.69444, 0, 0, 0.55556],
          "84": [0, 0.69444, 0, 0, 0.68056],
          "85": [0, 0.69444, 0, 0, 0.6875],
          "86": [0, 0.69444, 0.01389, 0, 0.66667],
          "87": [0, 0.69444, 0.01389, 0, 0.94445],
          "88": [0, 0.69444, 0, 0, 0.66667],
          "89": [0, 0.69444, 0.025, 0, 0.66667],
          "90": [0, 0.69444, 0, 0, 0.61111],
          "91": [0.25, 0.75, 0, 0, 0.28889],
          "93": [0.25, 0.75, 0, 0, 0.28889],
          "94": [0, 0.69444, 0, 0, 0.5],
          "95": [0.35, 0.09444, 0.02778, 0, 0.5],
          "97": [0, 0.44444, 0, 0, 0.48056],
          "98": [0, 0.69444, 0, 0, 0.51667],
          "99": [0, 0.44444, 0, 0, 0.44445],
          "100": [0, 0.69444, 0, 0, 0.51667],
          "101": [0, 0.44444, 0, 0, 0.44445],
          "102": [0, 0.69444, 0.06944, 0, 0.30556],
          "103": [0.19444, 0.44444, 0.01389, 0, 0.5],
          "104": [0, 0.69444, 0, 0, 0.51667],
          "105": [0, 0.67937, 0, 0, 0.23889],
          "106": [0.19444, 0.67937, 0, 0, 0.26667],
          "107": [0, 0.69444, 0, 0, 0.48889],
          "108": [0, 0.69444, 0, 0, 0.23889],
          "109": [0, 0.44444, 0, 0, 0.79445],
          "110": [0, 0.44444, 0, 0, 0.51667],
          "111": [0, 0.44444, 0, 0, 0.5],
          "112": [0.19444, 0.44444, 0, 0, 0.51667],
          "113": [0.19444, 0.44444, 0, 0, 0.51667],
          "114": [0, 0.44444, 0.01389, 0, 0.34167],
          "115": [0, 0.44444, 0, 0, 0.38333],
          "116": [0, 0.57143, 0, 0, 0.36111],
          "117": [0, 0.44444, 0, 0, 0.51667],
          "118": [0, 0.44444, 0.01389, 0, 0.46111],
          "119": [0, 0.44444, 0.01389, 0, 0.68334],
          "120": [0, 0.44444, 0, 0, 0.46111],
          "121": [0.19444, 0.44444, 0.01389, 0, 0.46111],
          "122": [0, 0.44444, 0, 0, 0.43472],
          "126": [0.35, 0.32659, 0, 0, 0.5],
          "176": [0, 0.69444, 0, 0, 0.66667],
          "305": [0, 0.44444, 0, 0, 0.23889],
          "567": [0.19444, 0.44444, 0, 0, 0.26667],
          "710": [0, 0.69444, 0, 0, 0.5],
          "711": [0, 0.63194, 0, 0, 0.5],
          "713": [0, 0.60889, 0, 0, 0.5],
          "714": [0, 0.69444, 0, 0, 0.5],
          "728": [0, 0.69444, 0, 0, 0.5],
          "729": [0, 0.67937, 0, 0, 0.27778],
          "730": [0, 0.69444, 0, 0, 0.66667],
          "733": [0, 0.69444, 0, 0, 0.5],
          "771": [0, 0.67659, 0, 0, 0.5],
          "776": [0, 0.67937, 0, 0, 0.5],
          "915": [0, 0.69444, 0, 0, 0.54167],
          "916": [0, 0.69444, 0, 0, 0.83334],
          "920": [0, 0.69444, 0, 0, 0.77778],
          "923": [0, 0.69444, 0, 0, 0.61111],
          "926": [0, 0.69444, 0, 0, 0.66667],
          "928": [0, 0.69444, 0, 0, 0.70834],
          "931": [0, 0.69444, 0, 0, 0.72222],
          "933": [0, 0.69444, 0, 0, 0.77778],
          "934": [0, 0.69444, 0, 0, 0.72222],
          "936": [0, 0.69444, 0, 0, 0.77778],
          "937": [0, 0.69444, 0, 0, 0.72222],
          "8211": [0, 0.44444, 0.02778, 0, 0.5],
          "8212": [0, 0.44444, 0.02778, 0, 1.0],
          "8216": [0, 0.69444, 0, 0, 0.27778],
          "8217": [0, 0.69444, 0, 0, 0.27778],
          "8220": [0, 0.69444, 0, 0, 0.5],
          "8221": [0, 0.69444, 0, 0, 0.5]
        },
        "Script-Regular": {
          "65": [0, 0.7, 0.22925, 0, 0.80253],
          "66": [0, 0.7, 0.04087, 0, 0.90757],
          "67": [0, 0.7, 0.1689, 0, 0.66619],
          "68": [0, 0.7, 0.09371, 0, 0.77443],
          "69": [0, 0.7, 0.18583, 0, 0.56162],
          "70": [0, 0.7, 0.13634, 0, 0.89544],
          "71": [0, 0.7, 0.17322, 0, 0.60961],
          "72": [0, 0.7, 0.29694, 0, 0.96919],
          "73": [0, 0.7, 0.19189, 0, 0.80907],
          "74": [0.27778, 0.7, 0.19189, 0, 1.05159],
          "75": [0, 0.7, 0.31259, 0, 0.91364],
          "76": [0, 0.7, 0.19189, 0, 0.87373],
          "77": [0, 0.7, 0.15981, 0, 1.08031],
          "78": [0, 0.7, 0.3525, 0, 0.9015],
          "79": [0, 0.7, 0.08078, 0, 0.73787],
          "80": [0, 0.7, 0.08078, 0, 1.01262],
          "81": [0, 0.7, 0.03305, 0, 0.88282],
          "82": [0, 0.7, 0.06259, 0, 0.85],
          "83": [0, 0.7, 0.19189, 0, 0.86767],
          "84": [0, 0.7, 0.29087, 0, 0.74697],
          "85": [0, 0.7, 0.25815, 0, 0.79996],
          "86": [0, 0.7, 0.27523, 0, 0.62204],
          "87": [0, 0.7, 0.27523, 0, 0.80532],
          "88": [0, 0.7, 0.26006, 0, 0.94445],
          "89": [0, 0.7, 0.2939, 0, 0.70961],
          "90": [0, 0.7, 0.24037, 0, 0.8212]
        },
        "Size1-Regular": {
          "40": [0.35001, 0.85, 0, 0, 0.45834],
          "41": [0.35001, 0.85, 0, 0, 0.45834],
          "47": [0.35001, 0.85, 0, 0, 0.57778],
          "91": [0.35001, 0.85, 0, 0, 0.41667],
          "92": [0.35001, 0.85, 0, 0, 0.57778],
          "93": [0.35001, 0.85, 0, 0, 0.41667],
          "123": [0.35001, 0.85, 0, 0, 0.58334],
          "125": [0.35001, 0.85, 0, 0, 0.58334],
          "710": [0, 0.72222, 0, 0, 0.55556],
          "732": [0, 0.72222, 0, 0, 0.55556],
          "770": [0, 0.72222, 0, 0, 0.55556],
          "771": [0, 0.72222, 0, 0, 0.55556],
          "8214": [-0.00099, 0.601, 0, 0, 0.77778],
          "8593": [1e-05, 0.6, 0, 0, 0.66667],
          "8595": [1e-05, 0.6, 0, 0, 0.66667],
          "8657": [1e-05, 0.6, 0, 0, 0.77778],
          "8659": [1e-05, 0.6, 0, 0, 0.77778],
          "8719": [0.25001, 0.75, 0, 0, 0.94445],
          "8720": [0.25001, 0.75, 0, 0, 0.94445],
          "8721": [0.25001, 0.75, 0, 0, 1.05556],
          "8730": [0.35001, 0.85, 0, 0, 1.0],
          "8739": [-0.00599, 0.606, 0, 0, 0.33333],
          "8741": [-0.00599, 0.606, 0, 0, 0.55556],
          "8747": [0.30612, 0.805, 0.19445, 0, 0.47222],
          "8748": [0.306, 0.805, 0.19445, 0, 0.47222],
          "8749": [0.306, 0.805, 0.19445, 0, 0.47222],
          "8750": [0.30612, 0.805, 0.19445, 0, 0.47222],
          "8896": [0.25001, 0.75, 0, 0, 0.83334],
          "8897": [0.25001, 0.75, 0, 0, 0.83334],
          "8898": [0.25001, 0.75, 0, 0, 0.83334],
          "8899": [0.25001, 0.75, 0, 0, 0.83334],
          "8968": [0.35001, 0.85, 0, 0, 0.47222],
          "8969": [0.35001, 0.85, 0, 0, 0.47222],
          "8970": [0.35001, 0.85, 0, 0, 0.47222],
          "8971": [0.35001, 0.85, 0, 0, 0.47222],
          "9168": [-0.00099, 0.601, 0, 0, 0.66667],
          "10216": [0.35001, 0.85, 0, 0, 0.47222],
          "10217": [0.35001, 0.85, 0, 0, 0.47222],
          "10752": [0.25001, 0.75, 0, 0, 1.11111],
          "10753": [0.25001, 0.75, 0, 0, 1.11111],
          "10754": [0.25001, 0.75, 0, 0, 1.11111],
          "10756": [0.25001, 0.75, 0, 0, 0.83334],
          "10758": [0.25001, 0.75, 0, 0, 0.83334]
        },
        "Size2-Regular": {
          "40": [0.65002, 1.15, 0, 0, 0.59722],
          "41": [0.65002, 1.15, 0, 0, 0.59722],
          "47": [0.65002, 1.15, 0, 0, 0.81111],
          "91": [0.65002, 1.15, 0, 0, 0.47222],
          "92": [0.65002, 1.15, 0, 0, 0.81111],
          "93": [0.65002, 1.15, 0, 0, 0.47222],
          "123": [0.65002, 1.15, 0, 0, 0.66667],
          "125": [0.65002, 1.15, 0, 0, 0.66667],
          "710": [0, 0.75, 0, 0, 1.0],
          "732": [0, 0.75, 0, 0, 1.0],
          "770": [0, 0.75, 0, 0, 1.0],
          "771": [0, 0.75, 0, 0, 1.0],
          "8719": [0.55001, 1.05, 0, 0, 1.27778],
          "8720": [0.55001, 1.05, 0, 0, 1.27778],
          "8721": [0.55001, 1.05, 0, 0, 1.44445],
          "8730": [0.65002, 1.15, 0, 0, 1.0],
          "8747": [0.86225, 1.36, 0.44445, 0, 0.55556],
          "8748": [0.862, 1.36, 0.44445, 0, 0.55556],
          "8749": [0.862, 1.36, 0.44445, 0, 0.55556],
          "8750": [0.86225, 1.36, 0.44445, 0, 0.55556],
          "8896": [0.55001, 1.05, 0, 0, 1.11111],
          "8897": [0.55001, 1.05, 0, 0, 1.11111],
          "8898": [0.55001, 1.05, 0, 0, 1.11111],
          "8899": [0.55001, 1.05, 0, 0, 1.11111],
          "8968": [0.65002, 1.15, 0, 0, 0.52778],
          "8969": [0.65002, 1.15, 0, 0, 0.52778],
          "8970": [0.65002, 1.15, 0, 0, 0.52778],
          "8971": [0.65002, 1.15, 0, 0, 0.52778],
          "10216": [0.65002, 1.15, 0, 0, 0.61111],
          "10217": [0.65002, 1.15, 0, 0, 0.61111],
          "10752": [0.55001, 1.05, 0, 0, 1.51112],
          "10753": [0.55001, 1.05, 0, 0, 1.51112],
          "10754": [0.55001, 1.05, 0, 0, 1.51112],
          "10756": [0.55001, 1.05, 0, 0, 1.11111],
          "10758": [0.55001, 1.05, 0, 0, 1.11111]
        },
        "Size3-Regular": {
          "40": [0.95003, 1.45, 0, 0, 0.73611],
          "41": [0.95003, 1.45, 0, 0, 0.73611],
          "47": [0.95003, 1.45, 0, 0, 1.04445],
          "91": [0.95003, 1.45, 0, 0, 0.52778],
          "92": [0.95003, 1.45, 0, 0, 1.04445],
          "93": [0.95003, 1.45, 0, 0, 0.52778],
          "123": [0.95003, 1.45, 0, 0, 0.75],
          "125": [0.95003, 1.45, 0, 0, 0.75],
          "710": [0, 0.75, 0, 0, 1.44445],
          "732": [0, 0.75, 0, 0, 1.44445],
          "770": [0, 0.75, 0, 0, 1.44445],
          "771": [0, 0.75, 0, 0, 1.44445],
          "8730": [0.95003, 1.45, 0, 0, 1.0],
          "8968": [0.95003, 1.45, 0, 0, 0.58334],
          "8969": [0.95003, 1.45, 0, 0, 0.58334],
          "8970": [0.95003, 1.45, 0, 0, 0.58334],
          "8971": [0.95003, 1.45, 0, 0, 0.58334],
          "10216": [0.95003, 1.45, 0, 0, 0.75],
          "10217": [0.95003, 1.45, 0, 0, 0.75]
        },
        "Size4-Regular": {
          "40": [1.25003, 1.75, 0, 0, 0.79167],
          "41": [1.25003, 1.75, 0, 0, 0.79167],
          "47": [1.25003, 1.75, 0, 0, 1.27778],
          "91": [1.25003, 1.75, 0, 0, 0.58334],
          "92": [1.25003, 1.75, 0, 0, 1.27778],
          "93": [1.25003, 1.75, 0, 0, 0.58334],
          "123": [1.25003, 1.75, 0, 0, 0.80556],
          "125": [1.25003, 1.75, 0, 0, 0.80556],
          "710": [0, 0.825, 0, 0, 1.8889],
          "732": [0, 0.825, 0, 0, 1.8889],
          "770": [0, 0.825, 0, 0, 1.8889],
          "771": [0, 0.825, 0, 0, 1.8889],
          "8730": [1.25003, 1.75, 0, 0, 1.0],
          "8968": [1.25003, 1.75, 0, 0, 0.63889],
          "8969": [1.25003, 1.75, 0, 0, 0.63889],
          "8970": [1.25003, 1.75, 0, 0, 0.63889],
          "8971": [1.25003, 1.75, 0, 0, 0.63889],
          "9115": [0.64502, 1.155, 0, 0, 0.875],
          "9116": [1e-05, 0.6, 0, 0, 0.875],
          "9117": [0.64502, 1.155, 0, 0, 0.875],
          "9118": [0.64502, 1.155, 0, 0, 0.875],
          "9119": [1e-05, 0.6, 0, 0, 0.875],
          "9120": [0.64502, 1.155, 0, 0, 0.875],
          "9121": [0.64502, 1.155, 0, 0, 0.66667],
          "9122": [-0.00099, 0.601, 0, 0, 0.66667],
          "9123": [0.64502, 1.155, 0, 0, 0.66667],
          "9124": [0.64502, 1.155, 0, 0, 0.66667],
          "9125": [-0.00099, 0.601, 0, 0, 0.66667],
          "9126": [0.64502, 1.155, 0, 0, 0.66667],
          "9127": [1e-05, 0.9, 0, 0, 0.88889],
          "9128": [0.65002, 1.15, 0, 0, 0.88889],
          "9129": [0.90001, 0, 0, 0, 0.88889],
          "9130": [0, 0.3, 0, 0, 0.88889],
          "9131": [1e-05, 0.9, 0, 0, 0.88889],
          "9132": [0.65002, 1.15, 0, 0, 0.88889],
          "9133": [0.90001, 0, 0, 0, 0.88889],
          "9143": [0.88502, 0.915, 0, 0, 1.05556],
          "10216": [1.25003, 1.75, 0, 0, 0.80556],
          "10217": [1.25003, 1.75, 0, 0, 0.80556],
          "57344": [-0.00499, 0.605, 0, 0, 1.05556],
          "57345": [-0.00499, 0.605, 0, 0, 1.05556],
          "57680": [0, 0.12, 0, 0, 0.45],
          "57681": [0, 0.12, 0, 0, 0.45],
          "57682": [0, 0.12, 0, 0, 0.45],
          "57683": [0, 0.12, 0, 0, 0.45]
        },
        "Typewriter-Regular": {
          "33": [0, 0.61111, 0, 0, 0.525],
          "34": [0, 0.61111, 0, 0, 0.525],
          "35": [0, 0.61111, 0, 0, 0.525],
          "36": [0.08333, 0.69444, 0, 0, 0.525],
          "37": [0.08333, 0.69444, 0, 0, 0.525],
          "38": [0, 0.61111, 0, 0, 0.525],
          "39": [0, 0.61111, 0, 0, 0.525],
          "40": [0.08333, 0.69444, 0, 0, 0.525],
          "41": [0.08333, 0.69444, 0, 0, 0.525],
          "42": [0, 0.52083, 0, 0, 0.525],
          "43": [-0.08056, 0.53055, 0, 0, 0.525],
          "44": [0.13889, 0.125, 0, 0, 0.525],
          "45": [-0.08056, 0.53055, 0, 0, 0.525],
          "46": [0, 0.125, 0, 0, 0.525],
          "47": [0.08333, 0.69444, 0, 0, 0.525],
          "48": [0, 0.61111, 0, 0, 0.525],
          "49": [0, 0.61111, 0, 0, 0.525],
          "50": [0, 0.61111, 0, 0, 0.525],
          "51": [0, 0.61111, 0, 0, 0.525],
          "52": [0, 0.61111, 0, 0, 0.525],
          "53": [0, 0.61111, 0, 0, 0.525],
          "54": [0, 0.61111, 0, 0, 0.525],
          "55": [0, 0.61111, 0, 0, 0.525],
          "56": [0, 0.61111, 0, 0, 0.525],
          "57": [0, 0.61111, 0, 0, 0.525],
          "58": [0, 0.43056, 0, 0, 0.525],
          "59": [0.13889, 0.43056, 0, 0, 0.525],
          "60": [-0.05556, 0.55556, 0, 0, 0.525],
          "61": [-0.19549, 0.41562, 0, 0, 0.525],
          "62": [-0.05556, 0.55556, 0, 0, 0.525],
          "63": [0, 0.61111, 0, 0, 0.525],
          "64": [0, 0.61111, 0, 0, 0.525],
          "65": [0, 0.61111, 0, 0, 0.525],
          "66": [0, 0.61111, 0, 0, 0.525],
          "67": [0, 0.61111, 0, 0, 0.525],
          "68": [0, 0.61111, 0, 0, 0.525],
          "69": [0, 0.61111, 0, 0, 0.525],
          "70": [0, 0.61111, 0, 0, 0.525],
          "71": [0, 0.61111, 0, 0, 0.525],
          "72": [0, 0.61111, 0, 0, 0.525],
          "73": [0, 0.61111, 0, 0, 0.525],
          "74": [0, 0.61111, 0, 0, 0.525],
          "75": [0, 0.61111, 0, 0, 0.525],
          "76": [0, 0.61111, 0, 0, 0.525],
          "77": [0, 0.61111, 0, 0, 0.525],
          "78": [0, 0.61111, 0, 0, 0.525],
          "79": [0, 0.61111, 0, 0, 0.525],
          "80": [0, 0.61111, 0, 0, 0.525],
          "81": [0.13889, 0.61111, 0, 0, 0.525],
          "82": [0, 0.61111, 0, 0, 0.525],
          "83": [0, 0.61111, 0, 0, 0.525],
          "84": [0, 0.61111, 0, 0, 0.525],
          "85": [0, 0.61111, 0, 0, 0.525],
          "86": [0, 0.61111, 0, 0, 0.525],
          "87": [0, 0.61111, 0, 0, 0.525],
          "88": [0, 0.61111, 0, 0, 0.525],
          "89": [0, 0.61111, 0, 0, 0.525],
          "90": [0, 0.61111, 0, 0, 0.525],
          "91": [0.08333, 0.69444, 0, 0, 0.525],
          "92": [0.08333, 0.69444, 0, 0, 0.525],
          "93": [0.08333, 0.69444, 0, 0, 0.525],
          "94": [0, 0.61111, 0, 0, 0.525],
          "95": [0.09514, 0, 0, 0, 0.525],
          "96": [0, 0.61111, 0, 0, 0.525],
          "97": [0, 0.43056, 0, 0, 0.525],
          "98": [0, 0.61111, 0, 0, 0.525],
          "99": [0, 0.43056, 0, 0, 0.525],
          "100": [0, 0.61111, 0, 0, 0.525],
          "101": [0, 0.43056, 0, 0, 0.525],
          "102": [0, 0.61111, 0, 0, 0.525],
          "103": [0.22222, 0.43056, 0, 0, 0.525],
          "104": [0, 0.61111, 0, 0, 0.525],
          "105": [0, 0.61111, 0, 0, 0.525],
          "106": [0.22222, 0.61111, 0, 0, 0.525],
          "107": [0, 0.61111, 0, 0, 0.525],
          "108": [0, 0.61111, 0, 0, 0.525],
          "109": [0, 0.43056, 0, 0, 0.525],
          "110": [0, 0.43056, 0, 0, 0.525],
          "111": [0, 0.43056, 0, 0, 0.525],
          "112": [0.22222, 0.43056, 0, 0, 0.525],
          "113": [0.22222, 0.43056, 0, 0, 0.525],
          "114": [0, 0.43056, 0, 0, 0.525],
          "115": [0, 0.43056, 0, 0, 0.525],
          "116": [0, 0.55358, 0, 0, 0.525],
          "117": [0, 0.43056, 0, 0, 0.525],
          "118": [0, 0.43056, 0, 0, 0.525],
          "119": [0, 0.43056, 0, 0, 0.525],
          "120": [0, 0.43056, 0, 0, 0.525],
          "121": [0.22222, 0.43056, 0, 0, 0.525],
          "122": [0, 0.43056, 0, 0, 0.525],
          "123": [0.08333, 0.69444, 0, 0, 0.525],
          "124": [0.08333, 0.69444, 0, 0, 0.525],
          "125": [0.08333, 0.69444, 0, 0, 0.525],
          "126": [0, 0.61111, 0, 0, 0.525],
          "127": [0, 0.61111, 0, 0, 0.525],
          "176": [0, 0.61111, 0, 0, 0.525],
          "305": [0, 0.43056, 0, 0, 0.525],
          "567": [0.22222, 0.43056, 0, 0, 0.525],
          "711": [0, 0.56597, 0, 0, 0.525],
          "713": [0, 0.56555, 0, 0, 0.525],
          "714": [0, 0.61111, 0, 0, 0.525],
          "715": [0, 0.61111, 0, 0, 0.525],
          "728": [0, 0.61111, 0, 0, 0.525],
          "730": [0, 0.61111, 0, 0, 0.525],
          "770": [0, 0.61111, 0, 0, 0.525],
          "771": [0, 0.61111, 0, 0, 0.525],
          "776": [0, 0.61111, 0, 0, 0.525],
          "915": [0, 0.61111, 0, 0, 0.525],
          "916": [0, 0.61111, 0, 0, 0.525],
          "920": [0, 0.61111, 0, 0, 0.525],
          "923": [0, 0.61111, 0, 0, 0.525],
          "926": [0, 0.61111, 0, 0, 0.525],
          "928": [0, 0.61111, 0, 0, 0.525],
          "931": [0, 0.61111, 0, 0, 0.525],
          "933": [0, 0.61111, 0, 0, 0.525],
          "934": [0, 0.61111, 0, 0, 0.525],
          "936": [0, 0.61111, 0, 0, 0.525],
          "937": [0, 0.61111, 0, 0, 0.525],
          "8216": [0, 0.61111, 0, 0, 0.525],
          "8217": [0, 0.61111, 0, 0, 0.525],
          "8242": [0, 0.61111, 0, 0, 0.525],
          "9251": [0.11111, 0.21944, 0, 0, 0.525]
        }
      };
      /***/
    },
    /* 60 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (immutable) */

      __webpack_exports__["a"] = sizingGroup;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__utils__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__buildMathML__ = __webpack_require__(2);

      function sizingGroup(value, options, baseOptions) {
        var inner = __WEBPACK_IMPORTED_MODULE_4__buildHTML__["a"
        /* buildExpression */
        ](value, options, false);

        var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier; // Add size-resetting classes to the inner list and set maxFontSize
        // manually. Handle nested size changes.

        for (var i = 0; i < inner.length; i++) {
          var pos = __WEBPACK_IMPORTED_MODULE_3__utils__["a"
          /* default */
          ].indexOf(inner[i].classes, "sizing");

          if (pos < 0) {
            Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));
          } else if (inner[i].classes[pos + 1] === "reset-size" + options.size) {
            // This is a nested size change: e.g., inner[i] is the "b" in
            // `\Huge a \small b`. Override the old size (the `reset-` class)
            // but not the new size.
            inner[i].classes[pos + 1] = "reset-size" + baseOptions.size;
          }

          inner[i].height *= multiplier;
          inner[i].depth *= multiplier;
        }

        return __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
        /* default */
        ].makeFragment(inner);
      }

      var sizeFuncs = ["\\tiny", "\\sixptsize", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge"];
      Object(__WEBPACK_IMPORTED_MODULE_1__defineFunction__["b"
      /* default */
      ])({
        type: "sizing",
        names: sizeFuncs,
        props: {
          numArgs: 0,
          allowedInText: true
        },
        handler: function handler(context, args) {
          var breakOnTokenText = context.breakOnTokenText,
              funcName = context.funcName,
              parser = context.parser;
          parser.consumeSpaces();
          var body = parser.parseExpression(false, breakOnTokenText);
          return {
            type: "sizing",
            // Figure out what size to use based on the list of functions above
            size: __WEBPACK_IMPORTED_MODULE_3__utils__["a"
            /* default */
            ].indexOf(sizeFuncs, funcName) + 1,
            value: body
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          // Handle sizing operators like \Huge. Real TeX doesn't actually allow
          // these functions inside of math expressions, so we do some special
          // handling.
          var newOptions = options.havingSize(group.value.size);
          return sizingGroup(group.value.value, newOptions, options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var newOptions = options.havingSize(group.value.size);

          var inner = __WEBPACK_IMPORTED_MODULE_5__buildMathML__["a"
          /* buildExpression */
          ](group.value.value, newOptions);

          var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mstyle", inner); // TODO(emily): This doesn't produce the correct size for nested size
          // changes, because we don't keep state of what style we're currently
          // in, so we can't reset the size to normal before changing it.  Now
          // that we're passing an options parameter we should be able to fix
          // this.

          node.setAttribute("mathsize", newOptions.sizeMultiplier + "em");
          return node;
        }
      });
      /***/
    },
    /* 61 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return _environments;
      });
      /* harmony export (immutable) */


      __webpack_exports__["b"] = defineEnvironment;
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildMathML__ = __webpack_require__(2);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__Options__ = __webpack_require__(43);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__ParseNode__ = __webpack_require__(14);
      /**
       * The context contains the following properties:
       *  - mode: current parsing mode.
       *  - envName: the name of the environment, one of the listed names.
       *  - parser: the parser object.
       */

      /**
       *  - context: information and references provided by the parser
       *  - args: an array of arguments passed to \begin{name}
       *  - optArgs: an array of optional arguments passed to \begin{name}
       */

      /**
       *  - numArgs: (default 0) The number of arguments after the \begin{name} function.
       *  - argTypes: (optional) Just like for a function
       *  - allowedInText: (default false) Whether or not the environment is allowed
       *                   inside text mode (not enforced yet).
       *  - numOptionalArgs: (default 0) Just like for a function
       */

      /**
       * Final enviornment spec for use at parse time.
       * This is almost identical to `EnvDefSpec`, except it
       * 1. includes the function handler
       * 2. requires all arguments except argType
       * It is generated by `defineEnvironment()` below.
       */

      /**
       * All registered environments.
       * `environments.js` exports this same dictionary again and makes it public.
       * `Parser.js` requires this dictionary via `environments.js`.
       */


      var _environments = {};

      function defineEnvironment(_ref) {
        var type = _ref.type,
            names = _ref.names,
            props = _ref.props,
            handler = _ref.handler,
            htmlBuilder = _ref.htmlBuilder,
            mathmlBuilder = _ref.mathmlBuilder; // Set default values of environments

        var data = {
          numArgs: props.numArgs || 0,
          greediness: 1,
          allowedInText: false,
          numOptionalArgs: 0,
          handler: handler
        };

        for (var i = 0; i < names.length; ++i) {
          _environments[names[i]] = data;
        }

        if (htmlBuilder) {
          __WEBPACK_IMPORTED_MODULE_0__buildHTML__["d"
          /* groupTypes */
          ][type] = htmlBuilder;
        }

        if (mathmlBuilder) {
          __WEBPACK_IMPORTED_MODULE_1__buildMathML__["d"
          /* groupTypes */
          ][type] = mathmlBuilder;
        }
      }
      /***/

    },
    /* 62 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return combiningDiacriticalMarksEndRegex;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return controlWordRegex;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2_match_at__ = __webpack_require__(145);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2_match_at___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_match_at__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__ParseError__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__SourceLocation__ = __webpack_require__(31);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__Token__ = __webpack_require__(27);
      /**
       * The Lexer class handles tokenizing the input in various ways. Since our
       * parser expects us to be able to backtrack, the lexer allows lexing from any
       * given starting point.
       *
       * Its main exposed function is the `lex` function, which takes a position to
       * lex from and a type of token to lex. It defers to the appropriate `_innerLex`
       * function.
       *
       * The various `_innerLex` functions perform the actual lexing of different
       * kinds.
       */

      /* The following tokenRegex
       * - matches typical whitespace (but not NBSP etc.) using its first group
       * - matches comments (must have trailing newlines)
       * - does not match any control character \x00-\x1f except whitespace
       * - does not match a bare backslash
       * - matches any ASCII character except those just mentioned
       * - does not match the BMP private use area \uE000-\uF8FF
       * - does not match bare surrogate code units
       * - matches any BMP character except for those just described
       * - matches any valid Unicode surrogate pair
       * - matches a backslash followed by one or more letters
       * - matches a backslash followed by any BMP character, including newline
       * Just because the Lexer matches something doesn't mean it's valid input:
       * If there is no matching function or symbol definition, the Parser will
       * still reject the input.
       */


      var commentRegexString = "%[^\n]*[\n]";
      var controlWordRegexString = "\\\\[a-zA-Z@]+";
      var controlSymbolRegexString = "\\\\[^\uD800-\uDFFF]";
      var combiningDiacriticalMarkString = "[\u0300-\u036F]";
      var combiningDiacriticalMarksEndRegex = new RegExp(combiningDiacriticalMarkString + "+$");
      var tokenRegex = new RegExp("([ \r\n\t]+)|" + ( // whitespace
      "(" + commentRegexString) + // comments
      "|[!-\\[\\]-\u2027\u202A-\uD7FF\uF900-\uFFFF]" + ( // single codepoint
      combiningDiacriticalMarkString + "*") + // ...plus accents
      "|[\uD800-\uDBFF][\uDC00-\uDFFF]" + ( // surrogate pair
      combiningDiacriticalMarkString + "*") + // ...plus accents
      "|\\\\verb\\*([^]).*?\\3" + // \verb*
      "|\\\\verb([^*a-zA-Z]).*?\\4" + ( // \verb unstarred
      "|" + controlWordRegexString) + ( // \macroName
      "|" + controlSymbolRegexString) + // \\, \', etc.
      ")"); // tokenRegex has no ^ marker, as required by matchAt.
      // These regexs are for matching results from tokenRegex,
      // so they do have ^ markers.

      var controlWordRegex = new RegExp("^" + controlWordRegexString);
      var commentRegex = new RegExp("^" + commentRegexString);
      /** Main Lexer class */

      var Lexer = function () {
        function Lexer(input) {
          __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, Lexer); // Separate accents from characters


          this.input = input;
          this.pos = 0;
        }
        /**
         * This function lexes a single token.
         */


        __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(Lexer, [{
          key: "lex",
          value: function lex() {
            var input = this.input;
            var pos = this.pos;

            if (pos === input.length) {
              return new __WEBPACK_IMPORTED_MODULE_5__Token__["a"
              /* Token */
              ]("EOF", new __WEBPACK_IMPORTED_MODULE_4__SourceLocation__["a"
              /* default */
              ](this, pos, pos));
            }

            var match = __WEBPACK_IMPORTED_MODULE_2_match_at___default()(tokenRegex, input, pos);

            if (match === null) {
              throw new __WEBPACK_IMPORTED_MODULE_3__ParseError__["a"
              /* default */
              ]("Unexpected character: '" + input[pos] + "'", new __WEBPACK_IMPORTED_MODULE_5__Token__["a"
              /* Token */
              ](input[pos], new __WEBPACK_IMPORTED_MODULE_4__SourceLocation__["a"
              /* default */
              ](this, pos, pos + 1)));
            }

            var text = match[2] || " ";
            var start = this.pos;
            this.pos += match[0].length;
            var end = this.pos;

            if (commentRegex.test(text)) {
              return this.lex();
            } else {
              return new __WEBPACK_IMPORTED_MODULE_5__Token__["a"
              /* Token */
              ](text, new __WEBPACK_IMPORTED_MODULE_4__SourceLocation__["a"
              /* default */
              ](this, start, end));
            }
          }
        }]);

        return Lexer;
      }();
      /* harmony default export */


      __webpack_exports__["c"] = Lexer;
      /***/
    },
    /* 63 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__src_katex_less__ = __webpack_require__(64);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__src_katex_less___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__src_katex_less__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__katex_js__ = __webpack_require__(65);
      /**
       * This is the webpack entry point for KaTeX. As flow[1] and jest[2] doesn't support
       * CSS modules natively, a separate entry point is used and it is not flowtyped.
       *
       * [1] https://gist.github.com/lambdahands/d19e0da96285b749f0ef
       * [2] https://facebook.github.io/jest/docs/en/webpack.html
       */

      /* harmony default export */


      __webpack_exports__["default"] = __WEBPACK_IMPORTED_MODULE_1__katex_js__["a"
      /* default */
      ];
      /***/
    },
    /* 64 */

    /***/
    function (module, exports) {// removed by extract-text-webpack-plugin

      /***/
    },
    /* 65 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__src_ParseError__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__src_Settings__ = __webpack_require__(34);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__src_buildTree__ = __webpack_require__(76);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__src_parseTree__ = __webpack_require__(113);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__src_utils__ = __webpack_require__(5);
      /* eslint no-console:0 */

      /**
       * This is the main entry point for KaTeX. Here, we expose functions for
       * rendering expressions either to DOM nodes or to markup strings.
       *
       * We also expose the ParseError class to check if errors thrown from KaTeX are
       * errors in the expression, or errors in javascript handling.
       */

      /**
       * Parse and build an expression, and place that expression in the DOM node
       * given.
       */


      var render = function render(expression, baseNode, options) {
        __WEBPACK_IMPORTED_MODULE_4__src_utils__["a"
        /* default */
        ].clearNode(baseNode);

        var node = renderToDomTree(expression, options).toNode();
        baseNode.appendChild(node);
      }; // KaTeX's styles don't work properly in quirks mode. Print out an error, and
      // disable rendering.


      if (typeof document !== "undefined") {
        if (document.compatMode !== "CSS1Compat") {
          typeof console !== "undefined" && console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your " + "website has a suitable doctype.");

          render = function render() {
            throw new __WEBPACK_IMPORTED_MODULE_0__src_ParseError__["a"
            /* default */
            ]("KaTeX doesn't work in quirks mode.");
          };
        }
      }
      /**
       * Parse and build an expression, and return the markup for that.
       */


      var renderToString = function renderToString(expression, options) {
        var markup = renderToDomTree(expression, options).toMarkup();
        return markup;
      };
      /**
       * Parse an expression and return the parse tree.
       */


      var generateParseTree = function generateParseTree(expression, options) {
        var settings = new __WEBPACK_IMPORTED_MODULE_1__src_Settings__["a"
        /* default */
        ](options);
        return Object(__WEBPACK_IMPORTED_MODULE_3__src_parseTree__["a"
        /* default */
        ])(expression, settings);
      };
      /**
       * Generates and returns the katex build tree. This is used for advanced
       * use cases (like rendering to custom output).
       */


      var renderToDomTree = function renderToDomTree(expression, options) {
        var settings = new __WEBPACK_IMPORTED_MODULE_1__src_Settings__["a"
        /* default */
        ](options);
        var tree = Object(__WEBPACK_IMPORTED_MODULE_3__src_parseTree__["a"
        /* default */
        ])(expression, settings);
        return Object(__WEBPACK_IMPORTED_MODULE_2__src_buildTree__["b"
        /* buildTree */
        ])(tree, expression, settings);
      };
      /**
       * Generates and returns the katex build tree, with just HTML (no MathML).
       * This is used for advanced use cases (like rendering to custom output).
       */


      var renderToHTMLTree = function renderToHTMLTree(expression, options) {
        var settings = new __WEBPACK_IMPORTED_MODULE_1__src_Settings__["a"
        /* default */
        ](options);
        var tree = Object(__WEBPACK_IMPORTED_MODULE_3__src_parseTree__["a"
        /* default */
        ])(expression, settings);
        return Object(__WEBPACK_IMPORTED_MODULE_2__src_buildTree__["a"
        /* buildHTMLTree */
        ])(tree, expression, settings);
      };
      /* harmony default export */


      __webpack_exports__["a"] = {
        /**
         * Renders the given LaTeX into an HTML+MathML combination, and adds
         * it as a child to the specified DOM node.
         */
        render: render,

        /**
         * Renders the given LaTeX into an HTML+MathML combination string,
         * for sending to the client.
         */
        renderToString: renderToString,

        /**
         * KaTeX error, usually during parsing.
         */
        ParseError: __WEBPACK_IMPORTED_MODULE_0__src_ParseError__["a"
        /* default */
        ],

        /**
         * Parses the given LaTeX into KaTeX's internal parse tree structure,
         * without rendering to HTML or MathML.
         *
         * NOTE: This method is not currently recommended for public use.
         * The internal tree representation is unstable and is very likely
         * to change. Use at your own risk.
         */
        __parse: generateParseTree,

        /**
         * Renders the given LaTeX into an HTML+MathML internal DOM tree
         * representation, without flattening that representation to a string.
         *
         * NOTE: This method is not currently recommended for public use.
         * The internal tree representation is unstable and is very likely
         * to change. Use at your own risk.
         */
        __renderToDomTree: renderToDomTree,

        /**
         * Renders the given LaTeX into an HTML internal DOM tree representation,
         * without MathML and without flattening that representation to a string.
         *
         * NOTE: This method is not currently recommended for public use.
         * The internal tree representation is unstable and is very likely
         * to change. Use at your own risk.
         */
        __renderToHTMLTree: renderToHTMLTree
      };
      /***/
    },
    /* 66 */

    /***/
    function (module, exports, __webpack_require__) {
      module.exports = {
        "default": __webpack_require__(67),
        __esModule: true
      };
      /***/
    },
    /* 67 */

    /***/
    function (module, exports, __webpack_require__) {
      __webpack_require__(68);

      module.exports = __webpack_require__(8).Object.freeze;
      /***/
    },
    /* 68 */

    /***/
    function (module, exports, __webpack_require__) {
      // 19.1.2.5 Object.freeze(O)
      var isObject = __webpack_require__(20),
          meta = __webpack_require__(69).onFreeze;

      __webpack_require__(46)('freeze', function ($freeze) {
        return function freeze(it) {
          return $freeze && isObject(it) ? $freeze(meta(it)) : it;
        };
      });
      /***/

    },
    /* 69 */

    /***/
    function (module, exports, __webpack_require__) {
      var META = __webpack_require__(32)('meta'),
          isObject = __webpack_require__(20),
          has = __webpack_require__(21),
          setDesc = __webpack_require__(15).f,
          id = 0;

      var isExtensible = Object.isExtensible || function () {
        return true;
      };

      var FREEZE = !__webpack_require__(24)(function () {
        return isExtensible(Object.preventExtensions({}));
      });

      var setMeta = function setMeta(it) {
        setDesc(it, META, {
          value: {
            i: 'O' + ++id,
            // object ID
            w: {} // weak collections IDs

          }
        });
      };

      var fastKey = function fastKey(it, create) {
        // return primitive with prefix
        if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;

        if (!has(it, META)) {
          // can't set metadata to uncaught frozen object
          if (!isExtensible(it)) return 'F'; // not necessary to add metadata

          if (!create) return 'E'; // add missing metadata

          setMeta(it); // return object ID
        }

        return it[META].i;
      };

      var getWeak = function getWeak(it, create) {
        if (!has(it, META)) {
          // can't set metadata to uncaught frozen object
          if (!isExtensible(it)) return true; // not necessary to add metadata

          if (!create) return false; // add missing metadata

          setMeta(it); // return hash weak collections IDs
        }

        return it[META].w;
      }; // add metadata on freeze-family methods calling


      var onFreeze = function onFreeze(it) {
        if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
        return it;
      };

      var meta = module.exports = {
        KEY: META,
        NEED: false,
        fastKey: fastKey,
        getWeak: getWeak,
        onFreeze: onFreeze
      };
      /***/
    },
    /* 70 */

    /***/
    function (module, exports, __webpack_require__) {
      module.exports = !__webpack_require__(23) && !__webpack_require__(24)(function () {
        return Object.defineProperty(__webpack_require__(45)('div'), 'a', {
          get: function get() {
            return 7;
          }
        }).a != 7;
      });
      /***/
    },
    /* 71 */

    /***/
    function (module, exports, __webpack_require__) {
      // 7.1.1 ToPrimitive(input [, PreferredType])
      var isObject = __webpack_require__(20); // instead of the ES6 spec version, we didn't implement @@toPrimitive case
      // and the second argument - flag - preferred type is a string


      module.exports = function (it, S) {
        if (!isObject(it)) return it;
        var fn, val;
        if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
        if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
        if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
        throw TypeError("Can't convert object to primitive value");
      };
      /***/

    },
    /* 72 */

    /***/
    function (module, exports) {
      module.exports = function (it) {
        if (typeof it != 'function') throw TypeError(it + ' is not a function!');
        return it;
      };
      /***/

    },
    /* 73 */

    /***/
    function (module, exports, __webpack_require__) {
      module.exports = {
        "default": __webpack_require__(74),
        __esModule: true
      };
      /***/
    },
    /* 74 */

    /***/
    function (module, exports, __webpack_require__) {
      __webpack_require__(75);

      var $Object = __webpack_require__(8).Object;

      module.exports = function defineProperty(it, key, desc) {
        return $Object.defineProperty(it, key, desc);
      };
      /***/

    },
    /* 75 */

    /***/
    function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(25); // 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)


      $export($export.S + $export.F * !__webpack_require__(23), 'Object', {
        defineProperty: __webpack_require__(15).f
      });
      /***/
    },
    /* 76 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return buildTree;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return buildHTMLTree;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildMathML__ = __webpack_require__(2);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__Options__ = __webpack_require__(43);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__Settings__ = __webpack_require__(34);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__Style__ = __webpack_require__(9);

      var optionsFromSettings = function optionsFromSettings(settings) {
        return new __WEBPACK_IMPORTED_MODULE_3__Options__["a"
        /* default */
        ]({
          style: settings.displayMode ? __WEBPACK_IMPORTED_MODULE_5__Style__["a"
          /* default */
          ].DISPLAY : __WEBPACK_IMPORTED_MODULE_5__Style__["a"
          /* default */
          ].TEXT,
          maxSize: settings.maxSize
        });
      };

      var buildTree = function buildTree(tree, expression, settings) {
        var options = optionsFromSettings(settings); // `buildHTML` sometimes messes with the parse tree (like turning bins ->
        // ords), so we build the MathML version first.

        var mathMLNode = Object(__WEBPACK_IMPORTED_MODULE_1__buildMathML__["c"
        /* default */
        ])(tree, expression, options);
        var htmlNode = Object(__WEBPACK_IMPORTED_MODULE_0__buildHTML__["c"
        /* default */
        ])(tree, options);

        var katexNode = __WEBPACK_IMPORTED_MODULE_2__buildCommon__["a"
        /* default */
        ].makeSpan(["katex"], [mathMLNode, htmlNode]);

        if (settings.displayMode) {
          return __WEBPACK_IMPORTED_MODULE_2__buildCommon__["a"
          /* default */
          ].makeSpan(["katex-display"], [katexNode]);
        } else {
          return katexNode;
        }
      };

      var buildHTMLTree = function buildHTMLTree(tree, expression, settings) {
        var options = optionsFromSettings(settings);
        var htmlNode = Object(__WEBPACK_IMPORTED_MODULE_0__buildHTML__["c"
        /* default */
        ])(tree, options);

        var katexNode = __WEBPACK_IMPORTED_MODULE_2__buildCommon__["a"
        /* default */
        ].makeSpan(["katex"], [htmlNode]);

        if (settings.displayMode) {
          return __WEBPACK_IMPORTED_MODULE_2__buildCommon__["a"
          /* default */
          ].makeSpan(["katex-display"], [katexNode]);
        } else {
          return katexNode;
        }
      };
      /* unused harmony default export */


      var _unused_webpack_default_export = buildTree;
      /***/
    },
    /* 77 */

    /***/
    function (module, exports, __webpack_require__) {
      module.exports = {
        "default": __webpack_require__(78),
        __esModule: true
      };
      /***/
    },
    /* 78 */

    /***/
    function (module, exports, __webpack_require__) {
      var core = __webpack_require__(8),
          $JSON = core.JSON || (core.JSON = {
        stringify: JSON.stringify
      });

      module.exports = function stringify(it) {
        // eslint-disable-line no-unused-vars
        return $JSON.stringify.apply($JSON, arguments);
      };
      /***/

    },
    /* 79 */

    /***/
    function (module, exports, __webpack_require__) {
      module.exports = {
        "default": __webpack_require__(80),
        __esModule: true
      };
      /***/
    },
    /* 80 */

    /***/
    function (module, exports, __webpack_require__) {
      __webpack_require__(36);

      __webpack_require__(92);

      module.exports = __webpack_require__(8).Array.from;
      /***/
    },
    /* 81 */

    /***/
    function (module, exports, __webpack_require__) {
      var toInteger = __webpack_require__(37),
          defined = __webpack_require__(38); // true  -> String#at
      // false -> String#codePointAt


      module.exports = function (TO_STRING) {
        return function (that, pos) {
          var s = String(defined(that)),
              i = toInteger(pos),
              l = s.length,
              a,
              b;
          if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
          a = s.charCodeAt(i);
          return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
        };
      };
      /***/

    },
    /* 82 */

    /***/
    function (module, exports) {
      module.exports = true;
      /***/
    },
    /* 83 */

    /***/
    function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(26);
      /***/
    },
    /* 84 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      var create = __webpack_require__(85),
          descriptor = __webpack_require__(33),
          setToStringTag = __webpack_require__(54),
          IteratorPrototype = {}; // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()


      __webpack_require__(26)(IteratorPrototype, __webpack_require__(11)('iterator'), function () {
        return this;
      });

      module.exports = function (Constructor, NAME, next) {
        Constructor.prototype = create(IteratorPrototype, {
          next: descriptor(1, next)
        });
        setToStringTag(Constructor, NAME + ' Iterator');
      };
      /***/

    },
    /* 85 */

    /***/
    function (module, exports, __webpack_require__) {
      // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
      var anObject = __webpack_require__(22),
          dPs = __webpack_require__(86),
          enumBugKeys = __webpack_require__(53),
          IE_PROTO = __webpack_require__(41)('IE_PROTO'),
          Empty = function Empty() {
        /* empty */
      },
          PROTOTYPE = 'prototype'; // Create object with fake `null` prototype: use iframe Object with cleared prototype


      var _createDict = function createDict() {
        // Thrash, waste and sodomy: IE GC bug
        var iframe = __webpack_require__(45)('iframe'),
            i = enumBugKeys.length,
            lt = '<',
            gt = '>',
            iframeDocument;

        iframe.style.display = 'none';

        __webpack_require__(90).appendChild(iframe);

        iframe.src = 'javascript:'; // eslint-disable-line no-script-url
        // createDict = iframe.contentWindow.Object;
        // html.removeChild(iframe);

        iframeDocument = iframe.contentWindow.document;
        iframeDocument.open();
        iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
        iframeDocument.close();
        _createDict = iframeDocument.F;

        while (i--) {
          delete _createDict[PROTOTYPE][enumBugKeys[i]];
        }

        return _createDict();
      };

      module.exports = Object.create || function create(O, Properties) {
        var result;

        if (O !== null) {
          Empty[PROTOTYPE] = anObject(O);
          result = new Empty();
          Empty[PROTOTYPE] = null; // add "__proto__" for Object.getPrototypeOf polyfill

          result[IE_PROTO] = O;
        } else result = _createDict();

        return Properties === undefined ? result : dPs(result, Properties);
      };
      /***/

    },
    /* 86 */

    /***/
    function (module, exports, __webpack_require__) {
      var dP = __webpack_require__(15),
          anObject = __webpack_require__(22),
          getKeys = __webpack_require__(39);

      module.exports = __webpack_require__(23) ? Object.defineProperties : function defineProperties(O, Properties) {
        anObject(O);
        var keys = getKeys(Properties),
            length = keys.length,
            i = 0,
            P;

        while (length > i) {
          dP.f(O, P = keys[i++], Properties[P]);
        }

        return O;
      };
      /***/
    },
    /* 87 */

    /***/
    function (module, exports, __webpack_require__) {
      var has = __webpack_require__(21),
          toIObject = __webpack_require__(40),
          arrayIndexOf = __webpack_require__(88)(false),
          IE_PROTO = __webpack_require__(41)('IE_PROTO');

      module.exports = function (object, names) {
        var O = toIObject(object),
            i = 0,
            result = [],
            key;

        for (key in O) {
          if (key != IE_PROTO) has(O, key) && result.push(key);
        } // Don't enum bug & hidden keys


        while (names.length > i) {
          if (has(O, key = names[i++])) {
            ~arrayIndexOf(result, key) || result.push(key);
          }
        }

        return result;
      };
      /***/

    },
    /* 88 */

    /***/
    function (module, exports, __webpack_require__) {
      // false -> Array#indexOf
      // true  -> Array#includes
      var toIObject = __webpack_require__(40),
          toLength = __webpack_require__(51),
          toIndex = __webpack_require__(89);

      module.exports = function (IS_INCLUDES) {
        return function ($this, el, fromIndex) {
          var O = toIObject($this),
              length = toLength(O.length),
              index = toIndex(fromIndex, length),
              value; // Array#includes uses SameValueZero equality algorithm

          if (IS_INCLUDES && el != el) while (length > index) {
            value = O[index++];
            if (value != value) return true; // Array#toIndex ignores holes, Array#includes - not
          } else for (; length > index; index++) {
            if (IS_INCLUDES || index in O) {
              if (O[index] === el) return IS_INCLUDES || index || 0;
            }
          }
          return !IS_INCLUDES && -1;
        };
      };
      /***/

    },
    /* 89 */

    /***/
    function (module, exports, __webpack_require__) {
      var toInteger = __webpack_require__(37),
          max = Math.max,
          min = Math.min;

      module.exports = function (index, length) {
        index = toInteger(index);
        return index < 0 ? max(index + length, 0) : min(index, length);
      };
      /***/

    },
    /* 90 */

    /***/
    function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(16).document && document.documentElement;
      /***/
    },
    /* 91 */

    /***/
    function (module, exports, __webpack_require__) {
      // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
      var has = __webpack_require__(21),
          toObject = __webpack_require__(29),
          IE_PROTO = __webpack_require__(41)('IE_PROTO'),
          ObjectProto = Object.prototype;

      module.exports = Object.getPrototypeOf || function (O) {
        O = toObject(O);
        if (has(O, IE_PROTO)) return O[IE_PROTO];

        if (typeof O.constructor == 'function' && O instanceof O.constructor) {
          return O.constructor.prototype;
        }

        return O instanceof Object ? ObjectProto : null;
      };
      /***/

    },
    /* 92 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      var ctx = __webpack_require__(47),
          $export = __webpack_require__(25),
          toObject = __webpack_require__(29),
          call = __webpack_require__(93),
          isArrayIter = __webpack_require__(94),
          toLength = __webpack_require__(51),
          createProperty = __webpack_require__(95),
          getIterFn = __webpack_require__(55);

      $export($export.S + $export.F * !__webpack_require__(96)(function (iter) {
        Array.from(iter);
      }), 'Array', {
        // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
        from: function from(arrayLike
        /*, mapfn = undefined, thisArg = undefined*/
        ) {
          var O = toObject(arrayLike),
              C = typeof this == 'function' ? this : Array,
              aLen = arguments.length,
              mapfn = aLen > 1 ? arguments[1] : undefined,
              mapping = mapfn !== undefined,
              index = 0,
              iterFn = getIterFn(O),
              length,
              result,
              step,
              iterator;
          if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2); // if object isn't iterable or it's array with default iterator - use simple case

          if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
            for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
              createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
            }
          } else {
            length = toLength(O.length);

            for (result = new C(length); length > index; index++) {
              createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
            }
          }

          result.length = index;
          return result;
        }
      });
      /***/
    },
    /* 93 */

    /***/
    function (module, exports, __webpack_require__) {
      // call something on iterator step with safe closing on error
      var anObject = __webpack_require__(22);

      module.exports = function (iterator, fn, value, entries) {
        try {
          return entries ? fn(anObject(value)[0], value[1]) : fn(value); // 7.4.6 IteratorClose(iterator, completion)
        } catch (e) {
          var ret = iterator['return'];
          if (ret !== undefined) anObject(ret.call(iterator));
          throw e;
        }
      };
      /***/

    },
    /* 94 */

    /***/
    function (module, exports, __webpack_require__) {
      // check on default Array iterator
      var Iterators = __webpack_require__(17),
          ITERATOR = __webpack_require__(11)('iterator'),
          ArrayProto = Array.prototype;

      module.exports = function (it) {
        return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
      };
      /***/

    },
    /* 95 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      var $defineProperty = __webpack_require__(15),
          createDesc = __webpack_require__(33);

      module.exports = function (object, index, value) {
        if (index in object) $defineProperty.f(object, index, createDesc(0, value));else object[index] = value;
      };
      /***/

    },
    /* 96 */

    /***/
    function (module, exports, __webpack_require__) {
      var ITERATOR = __webpack_require__(11)('iterator'),
          SAFE_CLOSING = false;

      try {
        var riter = [7][ITERATOR]();

        riter['return'] = function () {
          SAFE_CLOSING = true;
        };

        Array.from(riter, function () {
          throw 2;
        });
      } catch (e) {
        /* empty */
      }

      module.exports = function (exec, skipClosing) {
        if (!skipClosing && !SAFE_CLOSING) return false;
        var safe = false;

        try {
          var arr = [7],
              iter = arr[ITERATOR]();

          iter.next = function () {
            return {
              done: safe = true
            };
          };

          arr[ITERATOR] = function () {
            return iter;
          };

          exec(arr);
        } catch (e) {
          /* empty */
        }

        return safe;
      };
      /***/

    },
    /* 97 */

    /***/
    function (module, exports, __webpack_require__) {
      module.exports = {
        "default": __webpack_require__(98),
        __esModule: true
      };
      /***/
    },
    /* 98 */

    /***/
    function (module, exports, __webpack_require__) {
      __webpack_require__(58);

      __webpack_require__(36);

      module.exports = __webpack_require__(102);
      /***/
    },
    /* 99 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";

      var addToUnscopables = __webpack_require__(100),
          step = __webpack_require__(101),
          Iterators = __webpack_require__(17),
          toIObject = __webpack_require__(40); // 22.1.3.4 Array.prototype.entries()
      // 22.1.3.13 Array.prototype.keys()
      // 22.1.3.29 Array.prototype.values()
      // 22.1.3.30 Array.prototype[@@iterator]()


      module.exports = __webpack_require__(48)(Array, 'Array', function (iterated, kind) {
        this._t = toIObject(iterated); // target

        this._i = 0; // next index

        this._k = kind; // kind
        // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
      }, function () {
        var O = this._t,
            kind = this._k,
            index = this._i++;

        if (!O || index >= O.length) {
          this._t = undefined;
          return step(1);
        }

        if (kind == 'keys') return step(0, index);
        if (kind == 'values') return step(0, O[index]);
        return step(0, [index, O[index]]);
      }, 'values'); // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)

      Iterators.Arguments = Iterators.Array;
      addToUnscopables('keys');
      addToUnscopables('values');
      addToUnscopables('entries');
      /***/
    },
    /* 100 */

    /***/
    function (module, exports) {
      module.exports = function () {
        /* empty */
      };
      /***/

    },
    /* 101 */

    /***/
    function (module, exports) {
      module.exports = function (done, value) {
        return {
          value: value,
          done: !!done
        };
      };
      /***/

    },
    /* 102 */

    /***/
    function (module, exports, __webpack_require__) {
      var classof = __webpack_require__(56),
          ITERATOR = __webpack_require__(11)('iterator'),
          Iterators = __webpack_require__(17);

      module.exports = __webpack_require__(8).isIterable = function (it) {
        var O = Object(it);
        return O[ITERATOR] !== undefined || '@@iterator' in O || Iterators.hasOwnProperty(classof(O));
      };
      /***/

    },
    /* 103 */

    /***/
    function (module, exports, __webpack_require__) {
      __webpack_require__(58);

      __webpack_require__(36);

      module.exports = __webpack_require__(104);
      /***/
    },
    /* 104 */

    /***/
    function (module, exports, __webpack_require__) {
      var anObject = __webpack_require__(22),
          get = __webpack_require__(55);

      module.exports = __webpack_require__(8).getIterator = function (it) {
        var iterFn = get(it);
        if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
        return anObject(iterFn.call(it));
      };
      /***/

    },
    /* 105 */

    /***/
    function (module, exports, __webpack_require__) {
      module.exports = {
        "default": __webpack_require__(106),
        __esModule: true
      };
      /***/
    },
    /* 106 */

    /***/
    function (module, exports, __webpack_require__) {
      __webpack_require__(107);

      module.exports = __webpack_require__(8).Object.assign;
      /***/
    },
    /* 107 */

    /***/
    function (module, exports, __webpack_require__) {
      // 19.1.3.1 Object.assign(target, source)
      var $export = __webpack_require__(25);

      $export($export.S + $export.F, 'Object', {
        assign: __webpack_require__(108)
      });
      /***/
    },
    /* 108 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict"; // 19.1.2.1 Object.assign(target, source, ...)

      var getKeys = __webpack_require__(39),
          gOPS = __webpack_require__(109),
          pIE = __webpack_require__(110),
          toObject = __webpack_require__(29),
          IObject = __webpack_require__(49),
          $assign = Object.assign; // should work with symbols and should have deterministic property order (V8 bug)


      module.exports = !$assign || __webpack_require__(24)(function () {
        var A = {},
            B = {},
            S = Symbol(),
            K = 'abcdefghijklmnopqrst';
        A[S] = 7;
        K.split('').forEach(function (k) {
          B[k] = k;
        });
        return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
      }) ? function assign(target, source) {
        // eslint-disable-line no-unused-vars
        var T = toObject(target),
            aLen = arguments.length,
            index = 1,
            getSymbols = gOPS.f,
            isEnum = pIE.f;

        while (aLen > index) {
          var S = IObject(arguments[index++]),
              keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S),
              length = keys.length,
              j = 0,
              key;

          while (length > j) {
            if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
          }
        }

        return T;
      } : $assign;
      /***/
    },
    /* 109 */

    /***/
    function (module, exports) {
      exports.f = Object.getOwnPropertySymbols;
      /***/
    },
    /* 110 */

    /***/
    function (module, exports) {
      exports.f = {}.propertyIsEnumerable;
      /***/
    },
    /* 111 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /**
       * This file provides support to domTree.js
       * It's a storehouse of path geometry for SVG images.
       */
      // We do frac-lines, underlines, and overlines with an SVG path and we put that
      // path is into a viewBox that is 5 times as thick as the line. That way,
      // any browser rounding error on the size of the surrounding span will
      // not pinch the ink of the line.  Think of it as padding for the line.
      // As usual, the viewBox-to-em scale is 1000.

      var hLinePad = 80; // padding above and below a std 0.04em horiz rule.

      var vLinePad = 100; // padding on either side of a std vert 0.05em rule.

      var path = {
        // stdHorizRule is used for frac-lines, underlines, and overlines.
        // It is 0.04em thick if the line comes from normalsize/textstyle.
        stdHorizRule: "M0 " + hLinePad + "H400000 v40H0z M0 " + hLinePad + "H400000 v40H0z",
        // vertSeparator is used in arrays. It is 0.05em wide in a 0.25em viewBox.
        vertSeparator: "M" + vLinePad + " 0h50V400000h-50zM" + vLinePad + " 0h50V400000h-50z",
        // sqrtMain path geometry is from glyph U221A in the font KaTeX Main
        // All surds have 80 units padding above the viniculumn.
        sqrtMain: "M95," + (622 + hLinePad) + "c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,\n-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,\n-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,\n35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,\n-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467\ns-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422\ns-65,47,-65,47z M834 " + hLinePad + "H400000v40H845z",
        // size1 is from glyph U221A in the font KaTeX_Size1-Regular
        sqrtSize1: "M263," + (601 + hLinePad) + "c0.7,0,18,39.7,52,119c34,79.3,68.167,\n158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067\nc4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,\n175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71\nc-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,\n-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26\ns76,-59,76,-59s76,-60,76,-60z M1001 " + hLinePad + "H40000v40H1012z",
        // size2 is from glyph U221A in the font KaTeX_Size2-Regular
        // The 80 units padding is most obvious here. Note start node at M1001 80.
        sqrtSize2: "M1001," + hLinePad + "H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\nM1001 " + hLinePad + "H400000v40H1013z",
        // size3 is from glyph U221A in the font KaTeX_Size3-Regular
        sqrtSize3: "M424," + (2398 + hLinePad) + "c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,\n-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,\n25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,\n-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079\nc169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M1001 " + hLinePad + "H400000v40H1014z",
        // size4 is from glyph U221A in the font KaTeX_Size4-Regular
        sqrtSize4: "M473," + (2713 + hLinePad) + "c339.3,-1799.3,509.3,-2700,510,-2702\nc3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,\n-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,\n-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,\n21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,\n77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606z\nM1001 " + hLinePad + "H400000v40H1017z",
        // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main
        doubleleftarrow: "M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z",
        // doublerightarrow is from glyph U+21D2 in font KaTeX Main
        doublerightarrow: "M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z",
        // leftarrow is from glyph U+2190 in font KaTeX Main
        leftarrow: "M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z",
        // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular
        leftbrace: "M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z",
        leftbraceunder: "M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z",
        // overgroup is from the MnSymbol package (public domain)
        leftgroup: "M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z",
        leftgroupunder: "M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z",
        // Harpoons are from glyph U+21BD in font KaTeX Main
        leftharpoon: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z",
        leftharpoonplus: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z",
        leftharpoondown: "M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z",
        leftharpoondownplus: "M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z",
        // hook is from glyph U+21A9 in font KaTeX Main
        lefthook: "M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z",
        leftlinesegment: "M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z",
        leftmapsto: "M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z",
        // tofrom is from glyph U+21C4 in font KaTeX AMS Regular
        leftToFrom: "M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z",
        longequal: "M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z",
        midbrace: "M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z",
        midbraceunder: "M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z",
        rightarrow: "M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z",
        rightbrace: "M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z",
        rightbraceunder: "M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z",
        rightgroup: "M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z",
        rightgroupunder: "M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z",
        rightharpoon: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z",
        rightharpoonplus: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z",
        rightharpoondown: "M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z",
        rightharpoondownplus: "M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z",
        righthook: "M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z",
        rightlinesegment: "M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z",
        rightToFrom: "M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z",
        // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular
        twoheadleftarrow: "M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z",
        twoheadrightarrow: "M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z",
        // tilde1 is a modified version of a glyph from the MnSymbol package
        tilde1: "M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z",
        // ditto tilde2, tilde3, & tilde4
        tilde2: "M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z",
        tilde3: "M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z",
        tilde4: "M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z",
        // vec is from glyph U+20D7 in font KaTeX Main
        vec: "M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z",
        // widehat1 is a modified version of a glyph from the MnSymbol package
        widehat1: "M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z",
        // ditto widehat2, widehat3, & widehat4
        widehat2: "M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",
        widehat3: "M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",
        widehat4: "M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",
        // baraboveleftarrow is from glyph U+21C4 in font KaTeX AMS Regular
        baraboveleftarrow: "M1 500c30.67-18 59-41.833 85-71.5s45-61.17 57-94.5h23\nc15.33 0 23 .33 23 1 0 .67-5.33 12.67-16 36-16.67 34.67-39 67.33-67 98l-10 11\nh39904v40H96l9 10c27.33 30.67 50.67 65 70 103l14 33c0 .67-7.67 1-23 1h-22\nC116.67 596.33 69 540.67 1 500z M96 480 H400000 v40 H96z\nM1 147 H399905 v40  H1z M0 147 H399905 v40  H0z",
        // ditto rightarrowabovebar
        rightarrowabovebar: "M400000 167c-70.67 42-118 97.67-142 167h-23c-15.33 0\n-23-.33-23-1 0-1.33 5.33-13.67 16-37 18-35.33 41.33-69 70-101l7-8h-39905\nv-40h39905c-389 0 0 0 0 0l-7-8c-28.67-32-52-65.67-70-101-10.67-23.33-16-35.67\n-16-37 0-.67 7.67-1 23-1h23c11.33 33.33 30 64.833 56 94.5s54.67 53.83 86 72.5z\nM0 147 H399905 v40  H0z M96 480 H400000 v40 H0z M96 480 H400000 v40 H0z",
        // The next eight paths support reaction arrows from the mhchem package.
        // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.
        // Ref from mhchem.sty: \rlap{\raisebox{-.22ex}{$\kern0.5em
        baraboveshortleftharpoon: "M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z",
        rightharpoonaboveshortbar: "M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z",
        shortbaraboveleftharpoon: "M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z",
        shortrightharpoonabovebar: "M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z"
      };
      /* harmony default export */

      __webpack_exports__["a"] = {
        path: path
      };
      /***/
    },
    /* 112 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return spacings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return tightSpacings;
      });
      /**
       * Describes spaces between different classes of atoms.
       */


      var thinspace = {
        number: 3,
        unit: "mu"
      };
      var mediumspace = {
        number: 4,
        unit: "mu"
      };
      var thickspace = {
        number: 5,
        unit: "mu"
      }; // Spacing relationships for display and text styles

      var spacings = {
        mord: {
          mop: thinspace,
          mbin: mediumspace,
          mrel: thickspace,
          minner: thinspace
        },
        mop: {
          mord: thinspace,
          mop: thinspace,
          mrel: thickspace,
          minner: thinspace
        },
        mbin: {
          mord: mediumspace,
          mop: mediumspace,
          mopen: mediumspace,
          minner: mediumspace
        },
        mrel: {
          mord: thickspace,
          mop: thickspace,
          mopen: thickspace,
          minner: thickspace
        },
        mopen: {},
        mclose: {
          mop: thinspace,
          mbin: mediumspace,
          mrel: thickspace,
          minner: thinspace
        },
        mpunct: {
          mord: thinspace,
          mop: thinspace,
          mrel: thickspace,
          mopen: thinspace,
          mclose: thinspace,
          mpunct: thinspace,
          minner: thinspace
        },
        minner: {
          mord: thinspace,
          mop: thinspace,
          mbin: mediumspace,
          mrel: thickspace,
          mopen: thinspace,
          mpunct: thinspace,
          minner: thinspace
        }
      }; // Spacing relationships for script and scriptscript styles

      var tightSpacings = {
        mord: {
          mop: thinspace
        },
        mop: {
          mord: thinspace,
          mop: thinspace
        },
        mbin: {},
        mrel: {},
        mopen: {},
        mclose: {
          mop: thinspace
        },
        mpunct: {},
        minner: {
          mop: thinspace
        }
      };
      /***/
    },
    /* 113 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__Parser__ = __webpack_require__(114);
      /**
       * Provides a single function for parsing an expression using a Parser
       * TODO(emily): Remove this
       */

      /**
       * Parses an expression using a Parser, then returns the parsed result.
       */


      var parseTree = function parseTree(toParse, settings) {
        if (!(typeof toParse === 'string' || toParse instanceof String)) {
          throw new TypeError('KaTeX can only parse string typed expression');
        }

        var parser = new __WEBPACK_IMPORTED_MODULE_0__Parser__["a"
        /* default */
        ](toParse, settings);
        return parser.parse();
      };
      /* harmony default export */


      __webpack_exports__["a"] = parseTree;
      /***/
    },
    /* 114 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__functions__ = __webpack_require__(115);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__environments__ = __webpack_require__(142);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__MacroExpander__ = __webpack_require__(144);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__symbols__ = __webpack_require__(28);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__units__ = __webpack_require__(19);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__unicodeScripts__ = __webpack_require__(42);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_8__unicodeAccents__ = __webpack_require__(148);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_8__unicodeAccents___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8__unicodeAccents__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_9__unicodeSymbols__ = __webpack_require__(149);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_10__ParseNode__ = __webpack_require__(14);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_11__ParseError__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_12__Lexer_js__ = __webpack_require__(62);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_13__Settings__ = __webpack_require__(34);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_14__Token__ = __webpack_require__(27);
      /* eslint no-constant-condition:0 */

      /* eslint no-console:0 */

      /**
       * This file contains the parser used to parse out a TeX expression from the
       * input. Since TeX isn't context-free, standard parsers don't work particularly
       * well.
       *
       * The strategy of this parser is as such:
       *
       * The main functions (the `.parse...` ones) take a position in the current
       * parse string to parse tokens from. The lexer (found in Lexer.js, stored at
       * this.lexer) also supports pulling out tokens at arbitrary places. When
       * individual tokens are needed at a position, the lexer is called to pull out a
       * token, which is then used.
       *
       * The parser has a property called "mode" indicating the mode that
       * the parser is currently in. Currently it has to be one of "math" or
       * "text", which denotes whether the current environment is a math-y
       * one or a text-y one (e.g. inside \text). Currently, this serves to
       * limit the functions which can be used in text mode.
       *
       * The main functions then return an object which contains the useful data that
       * was parsed at its given point, and a new position at the end of the parsed
       * data. The main functions can call each other and continue the parsing by
       * using the returned position as a new starting point.
       *
       * There are also extra `.handle...` functions, which pull out some reused
       * functionality into self-contained functions.
       *
       * The earlier functions return ParseNodes.
       * The later functions (which are called deeper in the parse) sometimes return
       * ParsedFuncOrArgOrDollar, which contain a ParseNode as well as some data about
       * whether the parsed object is a function which is missing some arguments, or a
       * standalone object which can be used as an argument to another function.
       */


      function newArgument(result, token) {
        return {
          type: "arg",
          result: result,
          token: token
        };
      }

      function newFunction(token) {
        return {
          type: "fn",
          result: token.text,
          token: token
        };
      }

      function newDollar(token) {
        return {
          type: "$",
          result: "$",
          token: token
        };
      }

      function assertFuncOrArg(parsed) {
        if (parsed.type === "$") {
          throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
          /* default */
          ]("Unexpected $", parsed.token);
        }

        return parsed;
      }

      var Parser = function () {
        function Parser(input, settings) {
          __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, Parser); // Start in math mode


          this.mode = "math"; // Create a new macro expander (gullet) and (indirectly via that) also a
          // new lexer (mouth) for this parser (stomach, in the language of TeX)

          this.gullet = new __WEBPACK_IMPORTED_MODULE_4__MacroExpander__["a"
          /* default */
          ](input, settings.macros, this.mode); // Use old \color behavior (same as LaTeX's \textcolor) if requested.
          // We do this after the macros object has been copied by MacroExpander.

          if (settings.colorIsTextColor) {
            this.gullet.macros["\\color"] = "\\textcolor";
          } // Store the settings for use in parsing


          this.settings = settings; // Count leftright depth (for \middle errors)

          this.leftrightDepth = 0;
        }
        /**
         * Checks a result to make sure it has the right type, and throws an
         * appropriate error otherwise.
         */


        __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(Parser, [{
          key: "expect",
          value: function expect(text) {
            var consume = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

            if (this.nextToken.text !== text) {
              throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
              /* default */
              ]("Expected '" + text + "', got '" + this.nextToken.text + "'", this.nextToken);
            }

            if (consume) {
              this.consume();
            }
          }
          /**
           * Considers the current look ahead token as consumed,
           * and fetches the one after that as the new look ahead.
           */

        }, {
          key: "consume",
          value: function consume() {
            this.nextToken = this.gullet.expandNextToken();
          }
          /**
           * Switches between "text" and "math" modes.
           */

        }, {
          key: "switchMode",
          value: function switchMode(newMode) {
            this.mode = newMode;
            this.gullet.switchMode(newMode);
          }
          /**
           * Main parsing function, which parses an entire input.
           */

        }, {
          key: "parse",
          value: function parse() {
            // Try to parse the input
            this.consume();
            var parse = this.parseInput();
            return parse;
          }
          /**
           * Parses an entire input tree.
           */

        }, {
          key: "parseInput",
          value: function parseInput() {
            // Parse an expression
            var expression = this.parseExpression(false); // If we succeeded, make sure there's an EOF at the end

            this.expect("EOF", false);
            return expression;
          }
        }, {
          key: "parseExpression",

          /**
           * Parses an "expression", which is a list of atoms.
           *
           * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This
           *                 happens when functions have higher precendence han infix
           *                 nodes in implicit parses.
           *
           * `breakOnTokenText`: The text of the token that the expression should end
           *                     with, or `null` if something else should end the
           *                     expression.
           */
          value: function parseExpression(breakOnInfix, breakOnTokenText) {
            var body = []; // Keep adding atoms to the body until we can't parse any more atoms (either
            // we reached the end, a }, or a \right)

            while (true) {
              // Ignore spaces in math mode
              if (this.mode === "math") {
                this.consumeSpaces();
              }

              var lex = this.nextToken;

              if (Parser.endOfExpression.indexOf(lex.text) !== -1) {
                break;
              }

              if (breakOnTokenText && lex.text === breakOnTokenText) {
                break;
              }

              if (breakOnInfix && __WEBPACK_IMPORTED_MODULE_2__functions__["a"
              /* default */
              ][lex.text] && __WEBPACK_IMPORTED_MODULE_2__functions__["a"
              /* default */
              ][lex.text].infix) {
                break;
              }

              var atom = this.parseAtom(breakOnTokenText);

              if (!atom) {
                if (!this.settings.throwOnError && lex.text[0] === "\\") {
                  var errorNode = this.handleUnsupportedCmd();
                  body.push(errorNode);
                  continue;
                }

                break;
              }

              body.push(atom);
            }

            return this.handleInfixNodes(body);
          }
          /**
           * Rewrites infix operators such as \over with corresponding commands such
           * as \frac.
           *
           * There can only be one infix operator per group.  If there's more than one
           * then the expression is ambiguous.  This can be resolved by adding {}.
           */

        }, {
          key: "handleInfixNodes",
          value: function handleInfixNodes(body) {
            var overIndex = -1;
            var funcName = void 0;

            for (var i = 0; i < body.length; i++) {
              var node = body[i];

              if (node.type === "infix") {
                if (overIndex !== -1) {
                  throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                  /* default */
                  ]("only one infix operator per group", node.value.token);
                }

                overIndex = i;
                funcName = node.value.replaceWith;
              }
            }

            if (overIndex !== -1 && funcName) {
              var numerNode = void 0;
              var denomNode = void 0;
              var numerBody = body.slice(0, overIndex);
              var denomBody = body.slice(overIndex + 1);

              if (numerBody.length === 1 && numerBody[0].type === "ordgroup") {
                numerNode = numerBody[0];
              } else {
                numerNode = new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
                /* default */
                ]("ordgroup", numerBody, this.mode);
              }

              if (denomBody.length === 1 && denomBody[0].type === "ordgroup") {
                denomNode = denomBody[0];
              } else {
                denomNode = new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
                /* default */
                ]("ordgroup", denomBody, this.mode);
              }

              var value = this.callFunction(funcName, [numerNode, denomNode], []);
              return [new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
              /* default */
              ](value.type, value, this.mode)];
            } else {
              return body;
            }
          } // The greediness of a superscript or subscript

        }, {
          key: "handleSupSubscript",

          /**
           * Handle a subscript or superscript with nice errors.
           */
          value: function handleSupSubscript(name) {
            var symbolToken = this.nextToken;
            var symbol = symbolToken.text;
            this.consume();
            this.consumeSpaces(); // ignore spaces before sup/subscript argument

            var group = this.parseGroup();

            if (!group) {
              if (!this.settings.throwOnError && this.nextToken.text[0] === "\\") {
                return this.handleUnsupportedCmd();
              } else {
                throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                /* default */
                ]("Expected group after '" + symbol + "'", symbolToken);
              }
            }

            var arg = assertFuncOrArg(group);

            if (arg.type === "fn") {
              // ^ and _ have a greediness, so handle interactions with functions'
              // greediness
              var funcGreediness = __WEBPACK_IMPORTED_MODULE_2__functions__["a"
              /* default */
              ][arg.result].greediness;

              if (funcGreediness > Parser.SUPSUB_GREEDINESS) {
                return this.parseGivenFunction(group);
              } else {
                throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                /* default */
                ]("Got function '" + arg.result + "' with no arguments " + "as " + name, symbolToken);
              }
            } else {
              return arg.result;
            }
          }
          /**
           * Converts the textual input of an unsupported command into a text node
           * contained within a color node whose color is determined by errorColor
           */

        }, {
          key: "handleUnsupportedCmd",
          value: function handleUnsupportedCmd() {
            var text = this.nextToken.text;
            var textordArray = [];

            for (var i = 0; i < text.length; i++) {
              textordArray.push(new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
              /* default */
              ]("textord", text[i], "text"));
            }

            var textNode = new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
            /* default */
            ]("text", {
              body: textordArray,
              type: "text"
            }, this.mode);
            var colorNode = new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
            /* default */
            ]("color", {
              color: this.settings.errorColor,
              value: [textNode],
              type: "color"
            }, this.mode);
            this.consume();
            return colorNode;
          }
          /**
           * Parses a group with optional super/subscripts.
           */

        }, {
          key: "parseAtom",
          value: function parseAtom(breakOnTokenText) {
            // The body of an atom is an implicit group, so that things like
            // \left(x\right)^2 work correctly.
            var base = this.parseImplicitGroup(breakOnTokenText); // In text mode, we don't have superscripts or subscripts

            if (this.mode === "text") {
              return base;
            } // Note that base may be empty (i.e. null) at this point.


            var superscript = void 0;
            var subscript = void 0;

            while (true) {
              // Guaranteed in math mode, so eat any spaces first.
              this.consumeSpaces(); // Lex the first token

              var lex = this.nextToken;

              if (lex.text === "\\limits" || lex.text === "\\nolimits") {
                // We got a limit control
                if (!base || base.type !== "op") {
                  throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                  /* default */
                  ]("Limit controls must follow a math operator", lex);
                } else {
                  var limits = lex.text === "\\limits";
                  base.value.limits = limits;
                  base.value.alwaysHandleSupSub = true;
                }

                this.consume();
              } else if (lex.text === "^") {
                // We got a superscript start
                if (superscript) {
                  throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                  /* default */
                  ]("Double superscript", lex);
                }

                superscript = this.handleSupSubscript("superscript");
              } else if (lex.text === "_") {
                // We got a subscript start
                if (subscript) {
                  throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                  /* default */
                  ]("Double subscript", lex);
                }

                subscript = this.handleSupSubscript("subscript");
              } else if (lex.text === "'") {
                // We got a prime
                if (superscript) {
                  throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                  /* default */
                  ]("Double superscript", lex);
                }

                var prime = new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
                /* default */
                ]("textord", "\\prime", this.mode); // Many primes can be grouped together, so we handle this here

                var primes = [prime];
                this.consume(); // Keep lexing tokens until we get something that's not a prime

                while (this.nextToken.text === "'") {
                  // For each one, add another prime to the list
                  primes.push(prime);
                  this.consume();
                } // If there's a superscript following the primes, combine that
                // superscript in with the primes.


                if (this.nextToken.text === "^") {
                  primes.push(this.handleSupSubscript("superscript"));
                } // Put everything into an ordgroup as the superscript


                superscript = new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
                /* default */
                ]("ordgroup", primes, this.mode);
              } else {
                // If it wasn't ^, _, or ', stop parsing super/subscripts
                break;
              }
            }

            if (superscript || subscript) {
              // If we got either a superscript or subscript, create a supsub
              return new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
              /* default */
              ]("supsub", {
                base: base,
                sup: superscript,
                sub: subscript
              }, this.mode);
            } else {
              // Otherwise return the original body
              return base;
            }
          }
          /**
           * Parses an implicit group, which is a group that starts at the end of a
           * specified, and ends right before a higher explicit group ends, or at EOL. It
           * is used for functions that appear to affect the current style, like \Large or
           * \textrm, where instead of keeping a style we just pretend that there is an
           * implicit grouping after it until the end of the group. E.g.
           *   small text {\Large large text} small text again
           */

        }, {
          key: "parseImplicitGroup",
          value: function parseImplicitGroup(breakOnTokenText) {
            var start = this.parseSymbol();

            if (start == null) {
              // If we didn't get anything we handle, fall back to parseFunction
              return this.parseFunction();
            } else if (start.type === "arg") {
              // Defer to parseGivenFunction if it's not a function we handle
              return this.parseGivenFunction(start);
            }

            var func = start.result;

            if (func === "$") {
              if (this.mode === "math") {
                throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                /* default */
                ]("$ within math mode");
              }

              var outerMode = this.mode;
              this.switchMode("math"); // Expand next symbol now that we're in math mode.

              this.consume();
              var body = this.parseExpression(false, "$"); // We can't expand the next symbol after the $ until after
              // switching modes back.  So don't consume within expect.

              this.expect("$", false);
              this.switchMode(outerMode);
              this.consume();
              return new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
              /* default */
              ]("styling", {
                style: "text",
                value: body
              }, "math");
            } else if (func === "\\begin") {
              // begin...end is similar to left...right
              var begin = this.parseGivenFunction(start);
              var envName = begin.value.name;

              if (!__WEBPACK_IMPORTED_MODULE_3__environments__["a"
              /* default */
              ].hasOwnProperty(envName)) {
                throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                /* default */
                ]("No such environment: " + envName, begin.value.nameGroup);
              } // Build the environment object. Arguments and other information will
              // be made available to the begin and end methods using properties.


              var env = __WEBPACK_IMPORTED_MODULE_3__environments__["a"
              /* default */
              ][envName];

              var _parseArguments = this.parseArguments("\\begin{" + envName + "}", env),
                  args = _parseArguments.args,
                  optArgs = _parseArguments.optArgs;

              var context = {
                mode: this.mode,
                envName: envName,
                parser: this
              };

              var _result = env.handler(context, args, optArgs);

              this.expect("\\end", false);
              var endNameToken = this.nextToken;
              var end = this.parseFunction();

              if (!end) {
                throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                /* default */
                ]("failed to parse function after \\end");
              } else if (end.value.name !== envName) {
                throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                /* default */
                ]("Mismatch: \\begin{" + envName + "} matched " + "by \\end{" + end.value.name + "}", endNameToken);
              }

              return _result;
            } else {
              // Defer to parseGivenFunction if it's not a function we handle
              return this.parseGivenFunction(start, breakOnTokenText);
            }
          }
          /**
           * Parses an entire function, including its base and all of its arguments.
           * It also handles the case where the parsed node is not a function.
           */

        }, {
          key: "parseFunction",
          value: function parseFunction() {
            var baseGroup = this.parseGroup();
            return baseGroup ? this.parseGivenFunction(baseGroup) : null;
          }
          /**
           * Same as parseFunction(), except that the base is provided, guaranteeing a
           * non-nullable result.
           */

        }, {
          key: "parseGivenFunction",
          value: function parseGivenFunction(baseGroup, breakOnTokenText) {
            baseGroup = assertFuncOrArg(baseGroup);

            if (baseGroup.type === "fn") {
              var func = baseGroup.result;
              var funcData = __WEBPACK_IMPORTED_MODULE_2__functions__["a"
              /* default */
              ][func];

              if (this.mode === "text" && !funcData.allowedInText) {
                throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                /* default */
                ]("Can't use function '" + func + "' in text mode", baseGroup.token);
              } else if (this.mode === "math" && funcData.allowedInMath === false) {
                throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                /* default */
                ]("Can't use function '" + func + "' in math mode", baseGroup.token);
              }

              var _parseArguments2 = this.parseArguments(func, funcData),
                  args = _parseArguments2.args,
                  optArgs = _parseArguments2.optArgs;

              var _token = baseGroup.token;

              var _result2 = this.callFunction(func, args, optArgs, _token, breakOnTokenText);

              return new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
              /* default */
              ](_result2.type, _result2, this.mode);
            } else {
              return baseGroup.result;
            }
          }
          /**
           * Call a function handler with a suitable context and arguments.
           */

        }, {
          key: "callFunction",
          value: function callFunction(name, args, optArgs, token, breakOnTokenText) {
            var context = {
              funcName: name,
              parser: this,
              token: token,
              breakOnTokenText: breakOnTokenText
            };
            var func = __WEBPACK_IMPORTED_MODULE_2__functions__["a"
            /* default */
            ][name];

            if (func && func.handler) {
              return func.handler(context, args, optArgs);
            } else {
              throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
              /* default */
              ]("No function handler for " + name);
            }
          }
          /**
           * Parses the arguments of a function or environment
           */

        }, {
          key: "parseArguments",
          value: function parseArguments(func, // Should look like "\name" or "\begin{name}".
          funcData) {
            var totalArgs = funcData.numArgs + funcData.numOptionalArgs;

            if (totalArgs === 0) {
              return {
                args: [],
                optArgs: []
              };
            }

            var baseGreediness = funcData.greediness;
            var args = [];
            var optArgs = [];

            for (var i = 0; i < totalArgs; i++) {
              var argType = funcData.argTypes && funcData.argTypes[i];
              var isOptional = i < funcData.numOptionalArgs; // Ignore spaces between arguments.  As the TeXbook says:
              // "After you have said ‘\def\row#1#2{...}’, you are allowed to
              //  put spaces between the arguments (e.g., ‘\row x n’), because
              //  TeX doesn’t use single spaces as undelimited arguments."

              if (i > 0 && !isOptional) {
                this.consumeSpaces();
              } // Also consume leading spaces in math mode, as parseSymbol
              // won't know what to do with them.  This can only happen with
              // macros, e.g. \frac\foo\foo where \foo expands to a space symbol.
              // In LaTeX, the \foo's get treated as (blank) arguments).
              // In KaTeX, for now, both spaces will get consumed.
              // TODO(edemaine)


              if (i === 0 && !isOptional && this.mode === "math") {
                this.consumeSpaces();
              }

              var nextToken = this.nextToken;
              var arg = argType ? this.parseGroupOfType(argType, isOptional) : this.parseGroup(isOptional);

              if (!arg) {
                if (isOptional) {
                  optArgs.push(null);
                  continue;
                }

                if (!this.settings.throwOnError && this.nextToken.text[0] === "\\") {
                  arg = newArgument(this.handleUnsupportedCmd(), nextToken);
                } else {
                  throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                  /* default */
                  ]("Expected group after '" + func + "'", nextToken);
                }
              }

              var argNode = void 0;
              arg = assertFuncOrArg(arg);

              if (arg.type === "fn") {
                var argGreediness = __WEBPACK_IMPORTED_MODULE_2__functions__["a"
                /* default */
                ][arg.result].greediness;

                if (argGreediness > baseGreediness) {
                  argNode = this.parseGivenFunction(arg);
                } else {
                  throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                  /* default */
                  ]("Got function '" + arg.result + "' as " + "argument to '" + func + "'", nextToken);
                }
              } else {
                argNode = arg.result;
              }

              (isOptional ? optArgs : args).push(argNode);
            }

            return {
              args: args,
              optArgs: optArgs
            };
          }
          /**
           * Parses a group when the mode is changing.
           */

        }, {
          key: "parseGroupOfType",
          value: function parseGroupOfType(type, // Used to describe the mode in error messages.
          optional) {
            // Handle `original` argTypes
            if (type === "original") {
              type = this.mode;
            }

            if (type === "color") {
              return this.parseColorGroup(optional);
            }

            if (type === "size") {
              return this.parseSizeGroup(optional);
            }

            if (type === "url") {
              return this.parseUrlGroup(optional);
            } // By the time we get here, type is one of "text" or "math".
            // Specify this as mode to parseGroup.


            return this.parseGroup(optional, type);
          }
        }, {
          key: "consumeSpaces",
          value: function consumeSpaces() {
            while (this.nextToken.text === " ") {
              this.consume();
            }
          }
          /**
           * Parses a group, essentially returning the string formed by the
           * brace-enclosed tokens plus some position information.
           */

        }, {
          key: "parseStringGroup",
          value: function parseStringGroup(modeName, // Used to describe the mode in error messages.
          optional) {
            if (optional && this.nextToken.text !== "[") {
              return null;
            }

            var outerMode = this.mode;
            this.mode = "text";
            this.expect(optional ? "[" : "{");
            var str = "";
            var firstToken = this.nextToken;
            var lastToken = firstToken;

            while (this.nextToken.text !== (optional ? "]" : "}")) {
              if (this.nextToken.text === "EOF") {
                throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                /* default */
                ]("Unexpected end of input in " + modeName, firstToken.range(this.nextToken, str));
              }

              lastToken = this.nextToken;
              str += lastToken.text;
              this.consume();
            }

            this.mode = outerMode;
            this.expect(optional ? "]" : "}");
            return firstToken.range(lastToken, str);
          }
          /**
           * Parses a group, essentially returning the string formed by the
           * brace-enclosed tokens plus some position information, possibly
           * with nested braces.
           */

        }, {
          key: "parseStringGroupWithBalancedBraces",
          value: function parseStringGroupWithBalancedBraces(modeName, // Used to describe the mode in error messages.
          optional) {
            if (optional && this.nextToken.text !== "[") {
              return null;
            }

            var outerMode = this.mode;
            this.mode = "text";
            this.expect(optional ? "[" : "{");
            var str = "";
            var nest = 0;
            var firstToken = this.nextToken;
            var lastToken = firstToken;

            while (nest > 0 || this.nextToken.text !== (optional ? "]" : "}")) {
              if (this.nextToken.text === "EOF") {
                throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                /* default */
                ]("Unexpected end of input in " + modeName, firstToken.range(this.nextToken, str));
              }

              lastToken = this.nextToken;
              str += lastToken.text;

              if (lastToken.text === "{") {
                nest += 1;
              } else if (lastToken.text === "}") {
                if (nest <= 0) {
                  throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                  /* default */
                  ]("Unbalanced brace of input in " + modeName, firstToken.range(this.nextToken, str));
                } else {
                  nest -= 1;
                }
              }

              this.consume();
            }

            this.mode = outerMode;
            this.expect(optional ? "]" : "}");
            return firstToken.range(lastToken, str);
          }
          /**
           * Parses a regex-delimited group: the largest sequence of tokens
           * whose concatenated strings match `regex`. Returns the string
           * formed by the tokens plus some position information.
           */

        }, {
          key: "parseRegexGroup",
          value: function parseRegexGroup(regex, modeName) {
            var outerMode = this.mode;
            this.mode = "text";
            var firstToken = this.nextToken;
            var lastToken = firstToken;
            var str = "";

            while (this.nextToken.text !== "EOF" && regex.test(str + this.nextToken.text)) {
              lastToken = this.nextToken;
              str += lastToken.text;
              this.consume();
            }

            if (str === "") {
              throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
              /* default */
              ]("Invalid " + modeName + ": '" + firstToken.text + "'", firstToken);
            }

            this.mode = outerMode;
            return firstToken.range(lastToken, str);
          }
          /**
           * Parses a color description.
           */

        }, {
          key: "parseColorGroup",
          value: function parseColorGroup(optional) {
            var res = this.parseStringGroup("color", optional);

            if (!res) {
              return null;
            }

            var match = /^(#[a-f0-9]{3}|#[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);

            if (!match) {
              throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
              /* default */
              ]("Invalid color: '" + res.text + "'", res);
            }

            return newArgument(new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
            /* default */
            ]("color", match[0], this.mode), res);
          }
          /**
           * Parses a url string.
           */

        }, {
          key: "parseUrlGroup",
          value: function parseUrlGroup(optional) {
            var res = this.parseStringGroupWithBalancedBraces("url", optional);

            if (!res) {
              return null;
            }

            var raw = res.text; // hyperref package allows backslashes alone in href, but doesn't generate
            // valid links in such cases; we interpret this as "undefiend" behaviour,
            // and keep them as-is. Some browser will replace backslashes with
            // forward slashes.

            var url = raw.replace(/\\([#$%&~_^{}])/g, '$1');
            return newArgument(new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
            /* default */
            ]("url", url, this.mode), res);
          }
          /**
           * Parses a size specification, consisting of magnitude and unit.
           */

        }, {
          key: "parseSizeGroup",
          value: function parseSizeGroup(optional) {
            var res = void 0;

            if (!optional && this.nextToken.text !== "{") {
              res = this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/, "size");
            } else {
              res = this.parseStringGroup("size", optional);
            }

            if (!res) {
              return null;
            }

            var match = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(res.text);

            if (!match) {
              throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
              /* default */
              ]("Invalid size: '" + res.text + "'", res);
            }

            var data = {
              number: +(match[1] + match[2]),
              // sign + magnitude, cast to number
              unit: match[3]
            };

            if (!Object(__WEBPACK_IMPORTED_MODULE_6__units__["b"
            /* validUnit */
            ])(data)) {
              throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
              /* default */
              ]("Invalid unit: '" + data.unit + "'", res);
            }

            return newArgument(new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
            /* default */
            ]("size", data, this.mode), res);
          }
          /**
           * If `optional` is false or absent, this parses an ordinary group,
           * which is either a single nucleus (like "x") or an expression
           * in braces (like "{x+y}").
           * If `optional` is true, it parses either a bracket-delimited expression
           * (like "[x+y]") or returns null to indicate the absence of a
           * bracket-enclosed group.
           * If `mode` is present, switches to that mode while parsing the group,
           * and switches back after.
           */

        }, {
          key: "parseGroup",
          value: function parseGroup(optional, mode) {
            var outerMode = this.mode;
            var firstToken = this.nextToken; // Try to parse an open brace

            if (this.nextToken.text === (optional ? "[" : "{")) {
              // Switch to specified mode before we expand symbol after brace
              if (mode) {
                this.switchMode(mode);
              } // If we get a brace, parse an expression


              this.consume();
              var expression = this.parseExpression(false, optional ? "]" : "}");
              var lastToken = this.nextToken; // Switch mode back before consuming symbol after close brace

              if (mode) {
                this.switchMode(outerMode);
              } // Make sure we get a close brace


              this.expect(optional ? "]" : "}");

              if (mode === "text") {
                this.formLigatures(expression);
              }

              return newArgument(new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
              /* default */
              ]("ordgroup", expression, this.mode, firstToken, lastToken), firstToken.range(lastToken, firstToken.text));
            } else {
              // Otherwise, just return a nucleus, or nothing for an optional group
              if (mode) {
                this.switchMode(mode);
              }

              var _result3 = optional ? null : this.parseSymbol();

              if (mode) {
                this.switchMode(outerMode);
              }

              return _result3;
            }
          }
          /**
           * Form ligature-like combinations of characters for text mode.
           * This includes inputs like "--", "---", "``" and "''".
           * The result will simply replace multiple textord nodes with a single
           * character in each value by a single textord node having multiple
           * characters in its value.  The representation is still ASCII source.
           * The group will be modified in place.
           */

        }, {
          key: "formLigatures",
          value: function formLigatures(group) {
            var n = group.length - 1;

            for (var i = 0; i < n; ++i) {
              var a = group[i];
              var v = a.value;

              if (v === "-" && group[i + 1].value === "-") {
                if (i + 1 < n && group[i + 2].value === "-") {
                  group.splice(i, 3, new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
                  /* default */
                  ]("textord", "---", "text", a, group[i + 2]));
                  n -= 2;
                } else {
                  group.splice(i, 2, new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
                  /* default */
                  ]("textord", "--", "text", a, group[i + 1]));
                  n -= 1;
                }
              }

              if ((v === "'" || v === "`") && group[i + 1].value === v) {
                group.splice(i, 2, new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
                /* default */
                ]("textord", v + v, "text", a, group[i + 1]));
                n -= 1;
              }
            }
          }
          /**
           * Parse a single symbol out of the string. Here, we handle both the functions
           * we have defined, as well as the single character symbols
           */

        }, {
          key: "parseSymbol",
          value: function parseSymbol() {
            var nucleus = this.nextToken;
            var text = nucleus.text;

            if (__WEBPACK_IMPORTED_MODULE_2__functions__["a"
            /* default */
            ][text]) {
              this.consume(); // If there exists a function with this name, we return the function and
              // say that it is a function.

              return newFunction(nucleus);
            } else if (/^\\verb[^a-zA-Z]/.test(text)) {
              this.consume();
              var arg = text.slice(5);
              var star = arg.charAt(0) === "*";

              if (star) {
                arg = arg.slice(1);
              } // Lexer's tokenRegex is constructed to always have matching
              // first/last characters.


              if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {
                throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                /* default */
                ]("\\verb assertion failed --\n                    please report what input caused this bug");
              }

              arg = arg.slice(1, -1); // remove first and last char

              return newArgument(new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
              /* default */
              ]("verb", {
                body: arg,
                star: star
              }, "text"), nucleus);
            } else if (text === "$") {
              return newDollar(nucleus);
            } // At this point, we should have a symbol, possibly with accents.
            // First expand any accented base symbol according to unicodeSymbols.


            if (__WEBPACK_IMPORTED_MODULE_9__unicodeSymbols__["a"
            /* default */
            ].hasOwnProperty(text[0]) && !__WEBPACK_IMPORTED_MODULE_5__symbols__["a"
            /* default */
            ][this.mode][text[0]]) {
              text = __WEBPACK_IMPORTED_MODULE_9__unicodeSymbols__["a"
              /* default */
              ][text[0]] + text.substr(1);
            } // Strip off any combining characters


            var match = __WEBPACK_IMPORTED_MODULE_12__Lexer_js__["a"
            /* combiningDiacriticalMarksEndRegex */
            ].exec(text);

            if (match) {
              text = text.substring(0, match.index);

              if (text === 'i') {
                text = "\u0131"; // dotless i, in math and text mode
              } else if (text === 'j') {
                text = "\u0237"; // dotless j, in math and text mode
              }
            } // Recognize base symbol


            var symbol = null;

            if (__WEBPACK_IMPORTED_MODULE_5__symbols__["a"
            /* default */
            ][this.mode][text]) {
              symbol = new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
              /* default */
              ](__WEBPACK_IMPORTED_MODULE_5__symbols__["a"
              /* default */
              ][this.mode][text].group, text, this.mode, nucleus);
            } else if (this.mode === "text" && Object(__WEBPACK_IMPORTED_MODULE_7__unicodeScripts__["b"
            /* supportedCodepoint */
            ])(text.charCodeAt(0))) {
              symbol = new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
              /* default */
              ]("textord", text, this.mode, nucleus);
            } else {
              return null; // EOF, ^, _, {, }, etc.
            }

            this.consume(); // Transform combining characters into accents

            if (match) {
              for (var i = 0; i < match[0].length; i++) {
                var accent = match[0][i];

                if (!__WEBPACK_IMPORTED_MODULE_8__unicodeAccents___default.a[accent]) {
                  throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                  /* default */
                  ]("Unknown accent ' " + accent + "'", nucleus);
                }

                var command = __WEBPACK_IMPORTED_MODULE_8__unicodeAccents___default.a[accent][this.mode];

                if (!command) {
                  throw new __WEBPACK_IMPORTED_MODULE_11__ParseError__["a"
                  /* default */
                  ]("Accent " + accent + " unsupported in " + this.mode + " mode", nucleus);
                }

                symbol = new __WEBPACK_IMPORTED_MODULE_10__ParseNode__["a"
                /* default */
                ]("accent", {
                  type: "accent",
                  label: command,
                  isStretchy: false,
                  isShifty: true,
                  base: symbol
                }, this.mode, nucleus);
              }
            }

            return newArgument(symbol, nucleus);
          }
        }]);

        return Parser;
      }();

      Parser.endOfExpression = ["}", "\\end", "\\right", "&", "\\\\", "\\cr"];
      Parser.SUPSUB_GREEDINESS = 1;
      /* harmony default export */

      __webpack_exports__["a"] = Parser;
      /***/
    },
    /* 115 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__ParseError__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__ParseNode__ = __webpack_require__(14);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__functions_sqrt__ = __webpack_require__(116);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__functions_color__ = __webpack_require__(117);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__functions_text__ = __webpack_require__(118);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__functions_enclose__ = __webpack_require__(119);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__functions_overline__ = __webpack_require__(120);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_8__functions_underline__ = __webpack_require__(121);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_9__functions_rule__ = __webpack_require__(122);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_10__functions_kern__ = __webpack_require__(123);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_11__functions_phantom__ = __webpack_require__(124);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_12__functions_mod__ = __webpack_require__(125);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_13__functions_op__ = __webpack_require__(126);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_14__functions_operatorname__ = __webpack_require__(127);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_15__functions_genfrac__ = __webpack_require__(128);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_16__functions_lap__ = __webpack_require__(129);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_17__functions_smash__ = __webpack_require__(130);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_18__functions_delimsizing__ = __webpack_require__(131);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_19__functions_sizing__ = __webpack_require__(60);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_20__functions_styling__ = __webpack_require__(132);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_21__functions_font__ = __webpack_require__(133);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_22__functions_accent__ = __webpack_require__(137);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_23__functions_accentunder__ = __webpack_require__(138);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_24__functions_verb__ = __webpack_require__(139);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_25__functions_href__ = __webpack_require__(140);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_26__functions_mathchoice__ = __webpack_require__(141);
      /** Include this to ensure that all functions are defined. */
      // WARNING: New functions should be added to src/functions and imported here.


      var functions = __WEBPACK_IMPORTED_MODULE_2__defineFunction__["a"
      /* _functions */
      ];
      /* harmony default export */

      __webpack_exports__["a"] = functions; // Define a convenience function that mimcs the old semantics of defineFunction
      // to support existing code so that we can migrate it a little bit at a time.

      var defineFunction = function defineFunction(names, props, handler) // null only if handled in parser
      {
        Object(__WEBPACK_IMPORTED_MODULE_2__defineFunction__["b"
        /* default */
        ])({
          names: names,
          props: props,
          handler: handler
        });
      }; // TODO(kevinb): have functions return an object and call defineFunction with
      // that object in this file instead of relying on side-effects.
      // Math class commands except \mathop


      defineFunction(["\\mathord", "\\mathbin", "\\mathrel", "\\mathopen", "\\mathclose", "\\mathpunct", "\\mathinner"], {
        numArgs: 1
      }, function (context, args) {
        var body = args[0];
        return {
          type: "mclass",
          mclass: "m" + context.funcName.substr(5),
          value: Object(__WEBPACK_IMPORTED_MODULE_2__defineFunction__["c"
          /* ordargument */
          ])(body)
        };
      }); // Build a relation by placing one symbol on top of another

      defineFunction(["\\stackrel"], {
        numArgs: 2
      }, function (context, args) {
        var top = args[0];
        var bottom = args[1];
        var bottomop = new __WEBPACK_IMPORTED_MODULE_1__ParseNode__["a"
        /* default */
        ]("op", {
          type: "op",
          limits: true,
          alwaysHandleSupSub: true,
          symbol: false,
          value: Object(__WEBPACK_IMPORTED_MODULE_2__defineFunction__["c"
          /* ordargument */
          ])(bottom)
        }, bottom.mode);
        var supsub = new __WEBPACK_IMPORTED_MODULE_1__ParseNode__["a"
        /* default */
        ]("supsub", {
          base: bottomop,
          sup: top,
          sub: null
        }, top.mode);
        return {
          type: "mclass",
          mclass: "mrel",
          value: [supsub]
        };
      });
      var singleCharIntegrals = {
        "\u222B": "\\int",
        "\u222C": "\\iint",
        "\u222D": "\\iiint",
        "\u222E": "\\oint"
      }; // There are 2 flags for operators; whether they produce limits in
      // displaystyle, and whether they are symbols and should grow in
      // displaystyle. These four groups cover the four possible choices.
      // No limits, not symbols

      defineFunction(["\\arcsin", "\\arccos", "\\arctan", "\\arctg", "\\arcctg", "\\arg", "\\ch", "\\cos", "\\cosec", "\\cosh", "\\cot", "\\cotg", "\\coth", "\\csc", "\\ctg", "\\cth", "\\deg", "\\dim", "\\exp", "\\hom", "\\ker", "\\lg", "\\ln", "\\log", "\\sec", "\\sin", "\\sinh", "\\sh", "\\tan", "\\tanh", "\\tg", "\\th"], {
        numArgs: 0
      }, function (context) {
        return {
          type: "op",
          limits: false,
          symbol: false,
          body: context.funcName
        };
      }); // Limits, not symbols

      defineFunction(["\\det", "\\gcd", "\\inf", "\\lim", "\\max", "\\min", "\\Pr", "\\sup"], {
        numArgs: 0
      }, function (context) {
        return {
          type: "op",
          limits: true,
          symbol: false,
          body: context.funcName
        };
      }); // No limits, symbols

      defineFunction(["\\int", "\\iint", "\\iiint", "\\oint", "\u222B", "\u222C", "\u222D", "\u222E"], {
        numArgs: 0
      }, function (context) {
        var fName = context.funcName;

        if (fName.length === 1) {
          fName = singleCharIntegrals[fName];
        }

        return {
          type: "op",
          limits: false,
          symbol: true,
          body: fName
        };
      }); // Horizontal stretchy braces

      defineFunction(["\\overbrace", "\\underbrace"], {
        numArgs: 1
      }, function (context, args) {
        var base = args[0];
        return {
          type: "horizBrace",
          label: context.funcName,
          isOver: /^\\over/.test(context.funcName),
          base: base
        };
      }); // Stretchy accents under the body
      // Stretchy arrows with an optional argument

      defineFunction(["\\xleftarrow", "\\xrightarrow", "\\xLeftarrow", "\\xRightarrow", "\\xleftrightarrow", "\\xLeftrightarrow", "\\xhookleftarrow", "\\xhookrightarrow", "\\xmapsto", "\\xrightharpoondown", "\\xrightharpoonup", "\\xleftharpoondown", "\\xleftharpoonup", "\\xrightleftharpoons", "\\xleftrightharpoons", "\\xlongequal", "\\xtwoheadrightarrow", "\\xtwoheadleftarrow", "\\xtofrom", // The next 3 functions are here to support the mhchem extension.
      // Direct use of these functions is discouraged and may break someday.
      "\\xrightleftarrows", "\\xrightequilibrium", "\\xleftequilibrium"], {
        numArgs: 1,
        numOptionalArgs: 1
      }, function (context, args, optArgs) {
        var below = optArgs[0];
        var body = args[0];
        return {
          type: "xArrow",
          // x for extensible
          label: context.funcName,
          body: body,
          below: below
        };
      }); // Infix generalized fractions

      defineFunction(["\\over", "\\choose", "\\atop"], {
        numArgs: 0,
        infix: true
      }, function (context) {
        var replaceWith = void 0;

        switch (context.funcName) {
          case "\\over":
            replaceWith = "\\frac";
            break;

          case "\\choose":
            replaceWith = "\\binom";
            break;

          case "\\atop":
            replaceWith = "\\\\atopfrac";
            break;

          default:
            throw new Error("Unrecognized infix genfrac command");
        }

        return {
          type: "infix",
          replaceWith: replaceWith,
          token: context.token
        };
      }); // Row breaks for aligned data

      defineFunction(["\\\\", "\\cr"], {
        numArgs: 0,
        numOptionalArgs: 1,
        argTypes: ["size"]
      }, function (context, args, optArgs) {
        var size = optArgs[0];
        return {
          type: "cr",
          size: size
        };
      }); // Environment delimiters

      defineFunction(["\\begin", "\\end"], {
        numArgs: 1,
        argTypes: ["text"]
      }, function (context, args) {
        var nameGroup = args[0];

        if (nameGroup.type !== "ordgroup") {
          throw new __WEBPACK_IMPORTED_MODULE_0__ParseError__["a"
          /* default */
          ]("Invalid environment name", nameGroup);
        }

        var name = "";

        for (var i = 0; i < nameGroup.value.length; ++i) {
          name += nameGroup.value[i].value;
        }

        return {
          type: "environment",
          name: name,
          nameGroup: nameGroup
        };
      }); // Box manipulation

      defineFunction(["\\raisebox"], {
        numArgs: 2,
        argTypes: ["size", "text"],
        allowedInText: true
      }, function (context, args) {
        var amount = args[0];
        var body = args[1];
        return {
          type: "raisebox",
          dy: amount,
          body: body,
          value: Object(__WEBPACK_IMPORTED_MODULE_2__defineFunction__["c"
          /* ordargument */
          ])(body)
        };
      }); // Hyperlinks
      // MathChoice

      /***/
    },
    /* 116 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__domTree__ = __webpack_require__(12);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__delimiter__ = __webpack_require__(44);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__Style__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__buildMathML__ = __webpack_require__(2);

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "sqrt",
        names: ["\\sqrt"],
        props: {
          numArgs: 1,
          numOptionalArgs: 1
        },
        handler: function handler(context, args, optArgs) {
          var index = optArgs[0];
          var body = args[0];
          return {
            type: "sqrt",
            body: body,
            index: index
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          // Square roots are handled in the TeXbook pg. 443, Rule 11.
          // First, we do the same steps as in overline to build the inner group
          // and line
          var inner = __WEBPACK_IMPORTED_MODULE_6__buildHTML__["b"
          /* buildGroup */
          ](group.value.body, options.havingCrampedStyle());

          if (inner.height === 0) {
            // Render a small surd.
            inner.height = options.fontMetrics().xHeight;
          } // Some groups can return document fragments.  Handle those by wrapping
          // them in a span.


          if (inner instanceof __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
          /* default */
          ].documentFragment) {
            inner = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSpan([], [inner], options);
          } // Calculate the minimum size for the \surd delimiter


          var metrics = options.fontMetrics();
          var theta = metrics.defaultRuleThickness;
          var phi = theta;

          if (options.style.id < __WEBPACK_IMPORTED_MODULE_5__Style__["a"
          /* default */
          ].TEXT.id) {
            phi = options.fontMetrics().xHeight;
          } // Calculate the clearance between the body and line


          var lineClearance = theta + phi / 4;
          var minDelimiterHeight = (inner.height + inner.depth + lineClearance + theta) * options.sizeMultiplier; // Create a sqrt SVG of the required minimum size

          var _delimiter$sqrtImage = __WEBPACK_IMPORTED_MODULE_4__delimiter__["a"
          /* default */
          ].sqrtImage(minDelimiterHeight, options),
              img = _delimiter$sqrtImage.span,
              ruleWidth = _delimiter$sqrtImage.ruleWidth;

          var delimDepth = img.height - ruleWidth; // Adjust the clearance based on the delimiter size

          if (delimDepth > inner.height + inner.depth + lineClearance) {
            lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;
          } // Shift the sqrt image


          var imgShift = img.height - inner.height - lineClearance - ruleWidth;
          inner.style.paddingLeft = img.advanceWidth + "em"; // Overlay the image and the argument.

          var body = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "firstBaseline",
            children: [{
              type: "elem",
              elem: inner,
              wrapperClasses: ["svg-align"]
            }, {
              type: "kern",
              size: -(inner.height + imgShift)
            }, {
              type: "elem",
              elem: img
            }, {
              type: "kern",
              size: ruleWidth
            }]
          }, options);

          if (!group.value.index) {
            return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSpan(["mord", "sqrt"], [body], options);
          } else {
            // Handle the optional root index
            // The index is always in scriptscript style
            var newOptions = options.havingStyle(__WEBPACK_IMPORTED_MODULE_5__Style__["a"
            /* default */
            ].SCRIPTSCRIPT);

            var rootm = __WEBPACK_IMPORTED_MODULE_6__buildHTML__["b"
            /* buildGroup */
            ](group.value.index, newOptions, options); // The amount the index is shifted by. This is taken from the TeX
            // source, in the definition of `\r@@t`.


            var toShift = 0.6 * (body.height - body.depth); // Build a VList with the superscript shifted up correctly

            var rootVList = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeVList({
              positionType: "shift",
              positionData: -toShift,
              children: [{
                type: "elem",
                elem: rootm
              }]
            }, options); // Add a class surrounding it so we can add on the appropriate
            // kerning


            var rootVListWrap = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSpan(["root"], [rootVList]);

            return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSpan(["mord", "sqrt"], [rootVListWrap, body], options);
          }
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var node = void 0;

          if (group.value.index) {
            node = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
            /* default */
            ].MathNode("mroot", [__WEBPACK_IMPORTED_MODULE_7__buildMathML__["b"
            /* buildGroup */
            ](group.value.body, options), __WEBPACK_IMPORTED_MODULE_7__buildMathML__["b"
            /* buildGroup */
            ](group.value.index, options)]);
          } else {
            node = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
            /* default */
            ].MathNode("msqrt", [__WEBPACK_IMPORTED_MODULE_7__buildMathML__["b"
            /* buildGroup */
            ](group.value.body, options)]);
          }

          return node;
        }
      });
      /***/
    },
    /* 117 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__ParseError__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__buildMathML__ = __webpack_require__(2);

      var htmlBuilder = function htmlBuilder(group, options) {
        var elements = __WEBPACK_IMPORTED_MODULE_4__buildHTML__["a"
        /* buildExpression */
        ](group.value.value, options.withColor(group.value.color), false); // \color isn't supposed to affect the type of the elements it contains.
        // To accomplish this, we wrap the results in a fragment, so the inner
        // elements will be able to directly interact with their neighbors. For
        // example, `\color{red}{2 +} 3` has the same spacing as `2 + 3`


        return new __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
        /* default */
        ].makeFragment(elements);
      };

      var mathmlBuilder = function mathmlBuilder(group, options) {
        var inner = __WEBPACK_IMPORTED_MODULE_5__buildMathML__["a"
        /* buildExpression */
        ](group.value.value, options);

        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mstyle", inner);
        node.setAttribute("mathcolor", group.value.color);
        return node;
      };

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "color",
        names: ["\\textcolor"],
        props: {
          numArgs: 2,
          allowedInText: true,
          greediness: 3,
          argTypes: ["color", "original"]
        },
        handler: function handler(context, args) {
          var color = args[0];
          var body = args[1];
          return {
            type: "color",
            color: color.value,
            value: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(body)
          };
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      }); // TODO(kevinb): define these using macros

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "color",
        names: ["\\blue", "\\orange", "\\pink", "\\red", "\\green", "\\gray", "\\purple", "\\blueA", "\\blueB", "\\blueC", "\\blueD", "\\blueE", "\\tealA", "\\tealB", "\\tealC", "\\tealD", "\\tealE", "\\greenA", "\\greenB", "\\greenC", "\\greenD", "\\greenE", "\\goldA", "\\goldB", "\\goldC", "\\goldD", "\\goldE", "\\redA", "\\redB", "\\redC", "\\redD", "\\redE", "\\maroonA", "\\maroonB", "\\maroonC", "\\maroonD", "\\maroonE", "\\purpleA", "\\purpleB", "\\purpleC", "\\purpleD", "\\purpleE", "\\mintA", "\\mintB", "\\mintC", "\\grayA", "\\grayB", "\\grayC", "\\grayD", "\\grayE", "\\grayF", "\\grayG", "\\grayH", "\\grayI", "\\kaBlue", "\\kaGreen"],
        props: {
          numArgs: 1,
          allowedInText: true,
          greediness: 3
        },
        handler: function handler(context, args) {
          var body = args[0];
          return {
            type: "color",
            color: "katex-" + context.funcName.slice(1),
            value: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(body)
          };
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      });
      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "color",
        names: ["\\color"],
        props: {
          numArgs: 1,
          allowedInText: true,
          greediness: 3,
          argTypes: ["color"]
        },
        handler: function handler(context, args) {
          var parser = context.parser,
              breakOnTokenText = context.breakOnTokenText;
          var color = args[0];

          if (!color) {
            throw new __WEBPACK_IMPORTED_MODULE_3__ParseError__["a"
            /* default */
            ]("\\color not followed by color");
          } // If we see a styling function, parse out the implicit body


          var body = parser.parseExpression(true, breakOnTokenText);
          return {
            type: "color",
            color: color.value,
            value: body
          };
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      });
      /***/
    },
    /* 118 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildMathML__ = __webpack_require__(2); // Non-mathy text, possibly in a font


      var textFontFamilies = {
        "\\text": undefined,
        "\\textrm": "textrm",
        "\\textsf": "textsf",
        "\\texttt": "texttt",
        "\\textnormal": "textrm"
      };
      var textFontWeights = {
        "\\textbf": "textbf"
      };
      var textFontShapes = {
        "\\textit": "textit"
      };
      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "text",
        names: [// Font families
        "\\text", "\\textrm", "\\textsf", "\\texttt", "\\textnormal", // Font weights
        "\\textbf", // Font Shapes
        "\\textit"],
        props: {
          numArgs: 1,
          argTypes: ["text"],
          greediness: 2,
          allowedInText: true
        },
        handler: function handler(context, args) {
          var body = args[0];
          return {
            type: "text",
            body: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(body),
            font: context.funcName
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          var font = group.value.font; // Checks if the argument is a font family or a font style.

          var newOptions = void 0;

          if (textFontFamilies[font]) {
            newOptions = options.withFontFamily(textFontFamilies[font]);
          } else if (textFontWeights[font]) {
            newOptions = options.withFontWeight(textFontWeights[font]);
          } else {
            newOptions = options.withFontShape(textFontShapes[font]);
          }

          var inner = __WEBPACK_IMPORTED_MODULE_3__buildHTML__["a"
          /* buildExpression */
          ](group.value.body, newOptions, true);

          __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].tryCombineChars(inner);

          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mord", "text"], inner, newOptions);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var body = group.value.body; // Convert each element of the body into MathML, and combine consecutive
          // <mtext> outputs into a single <mtext> tag.  In this way, we don't
          // nest non-text items (e.g., $nested-math$) within an <mtext>.

          var inner = [];
          var currentText = null;

          for (var i = 0; i < body.length; i++) {
            var _group = __WEBPACK_IMPORTED_MODULE_4__buildMathML__["b"
            /* buildGroup */
            ](body[i], options);

            if (_group.type === 'mtext' && currentText != null) {
              Array.prototype.push.apply(currentText.children, _group.children);
            } else {
              inner.push(_group);

              if (_group.type === 'mtext') {
                currentText = _group;
              }
            }
          } // If there is a single tag in the end (presumably <mtext>),
          // just return it.  Otherwise, wrap them in an <mrow>.


          if (inner.length === 1) {
            return inner[0];
          } else {
            return new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
            /* default */
            ].MathNode("mrow", inner);
          }
        }
      });
      /***/
    },
    /* 119 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__utils__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__stretchy__ = __webpack_require__(13);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__buildMathML__ = __webpack_require__(2);

      var htmlBuilder = function htmlBuilder(group, options) {
        // \cancel, \bcancel, \xcancel, \sout, \fbox, \colorbox, \fcolorbox
        var inner = __WEBPACK_IMPORTED_MODULE_5__buildHTML__["b"
        /* buildGroup */
        ](group.value.body, options);

        var label = group.value.label.substr(1);
        var scale = options.sizeMultiplier;
        var img = void 0;
        var imgShift = 0;
        var isColorbox = /color/.test(label);

        if (label === "sout") {
          img = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["stretchy", "sout"]);
          img.height = options.fontMetrics().defaultRuleThickness / scale;
          imgShift = -0.5 * options.fontMetrics().xHeight;
        } else {
          // Add horizontal padding
          inner.classes.push(/cancel/.test(label) ? "cancel-pad" : "boxpad"); // Add vertical padding

          var vertPad = 0; // ref: LaTeX source2e: \fboxsep = 3pt;  \fboxrule = .4pt
          // ref: cancel package: \advance\totalheight2\p@ % "+2"

          if (/box/.test(label)) {
            vertPad = label === "colorbox" ? 0.3 : 0.34;
          } else {
            vertPad = __WEBPACK_IMPORTED_MODULE_3__utils__["a"
            /* default */
            ].isCharacterBox(group.value.body) ? 0.2 : 0;
          }

          img = __WEBPACK_IMPORTED_MODULE_4__stretchy__["a"
          /* default */
          ].encloseSpan(inner, label, vertPad, options);
          imgShift = inner.depth + vertPad;

          if (isColorbox) {
            img.style.backgroundColor = group.value.backgroundColor.value;

            if (label === "fcolorbox") {
              img.style.borderColor = group.value.borderColor.value;
            }
          }
        }

        var vlist = void 0;

        if (isColorbox) {
          vlist = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "individualShift",
            children: [// Put the color background behind inner;
            {
              type: "elem",
              elem: img,
              shift: imgShift
            }, {
              type: "elem",
              elem: inner,
              shift: 0
            }]
          }, options);
        } else {
          vlist = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "individualShift",
            children: [// Write the \cancel stroke on top of inner.
            {
              type: "elem",
              elem: inner,
              shift: 0
            }, {
              type: "elem",
              elem: img,
              shift: imgShift,
              wrapperClasses: /cancel/.test(label) ? ["svg-align"] : []
            }]
          }, options);
        }

        if (/cancel/.test(label)) {
          // cancel does not create horiz space for its line extension.
          // That is, not when adjacent to a mord.
          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mord", "cancel-lap"], [vlist], options);
        } else {
          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mord"], [vlist], options);
        }
      };

      var mathmlBuilder = function mathmlBuilder(group, options) {
        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("menclose", [__WEBPACK_IMPORTED_MODULE_6__buildMathML__["b"
        /* buildGroup */
        ](group.value.body, options)]);

        switch (group.value.label) {
          case "\\cancel":
            node.setAttribute("notation", "updiagonalstrike");
            break;

          case "\\bcancel":
            node.setAttribute("notation", "downdiagonalstrike");
            break;

          case "\\sout":
            node.setAttribute("notation", "horizontalstrike");
            break;

          case "\\fbox":
            node.setAttribute("notation", "box");
            break;

          case "\\colorbox":
            node.setAttribute("mathbackground", group.value.backgroundColor.value);
            break;

          case "\\fcolorbox":
            node.setAttribute("mathbackground", group.value.backgroundColor.value); // TODO(ron): I don't know any way to set the border color.

            node.setAttribute("notation", "box");
            break;

          default:
            // xcancel
            node.setAttribute("notation", "updiagonalstrike downdiagonalstrike");
        }

        return node;
      };

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "enclose",
        names: ["\\colorbox"],
        props: {
          numArgs: 2,
          allowedInText: true,
          greediness: 3,
          argTypes: ["color", "text"]
        },
        handler: function handler(context, args, optArgs) {
          var color = args[0];
          var body = args[1];
          return {
            type: "enclose",
            label: context.funcName,
            backgroundColor: color,
            body: body
          };
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      });
      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "enclose",
        names: ["\\fcolorbox"],
        props: {
          numArgs: 3,
          allowedInText: true,
          greediness: 3,
          argTypes: ["color", "color", "text"]
        },
        handler: function handler(context, args, optArgs) {
          var borderColor = args[0];
          var backgroundColor = args[1];
          var body = args[2];
          return {
            type: "enclose",
            label: context.funcName,
            backgroundColor: backgroundColor,
            borderColor: borderColor,
            body: body
          };
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      });
      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "enclose",
        names: ["\\cancel", "\\bcancel", "\\xcancel", "\\sout", "\\fbox"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args, optArgs) {
          var body = args[0];
          return {
            type: "enclose",
            label: context.funcName,
            body: body
          };
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      });
      /***/
    },
    /* 120 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildMathML__ = __webpack_require__(2);

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "overline",
        names: ["\\overline"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var body = args[0];
          return {
            type: "overline",
            body: body
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          // Overlines are handled in the TeXbook pg 443, Rule 9.
          // Build the inner group in the cramped style.
          var innerGroup = __WEBPACK_IMPORTED_MODULE_3__buildHTML__["b"
          /* buildGroup */
          ](group.value.body, options.havingCrampedStyle()); // Create the line above the body


          var line = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeLineSpan("overline-line", options); // Generate the vlist, with the appropriate kerns


          var vlist = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "firstBaseline",
            children: [{
              type: "elem",
              elem: innerGroup
            }, // The kern on the next line would ordinarily be 3 * line.height
            // But we put the line into a span that is 5 lines tall, to
            // overcome a Chrome rendering issue. The SVG has a space in
            // the bottom that is 2 lines high. That and the 1-line-high
            // kern sum up to the same distance as the old 3 line kern.
            {
              type: "kern",
              size: line.height
            }, {
              type: "elem",
              elem: line
            }]
          }, options);

          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mord", "overline"], [vlist], options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var operator = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mo", [new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].TextNode("\u203E")]);
          operator.setAttribute("stretchy", "true");
          var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mover", [__WEBPACK_IMPORTED_MODULE_4__buildMathML__["b"
          /* buildGroup */
          ](group.value.body, options), operator]);
          node.setAttribute("accent", "true");
          return node;
        }
      });
      /***/
    },
    /* 121 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildMathML__ = __webpack_require__(2);

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "underline",
        names: ["\\underline"],
        props: {
          numArgs: 1,
          allowedInText: true
        },
        handler: function handler(context, args) {
          var body = args[0];
          return {
            type: "underline",
            body: body
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          // Underlines are handled in the TeXbook pg 443, Rule 10.
          // Build the inner group.
          var innerGroup = __WEBPACK_IMPORTED_MODULE_3__buildHTML__["b"
          /* buildGroup */
          ](group.value.body, options); // Create the line to go below the body


          var line = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeLineSpan("underline-line", options); // Generate the vlist, with the appropriate kerns


          var vlist = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "top",
            positionData: innerGroup.height,
            children: [// The SVG image is 5x as tall as the line.
            // The bottom 2/5 of the image is blank and acts like a kern.
            // So we omit the kern that would otherwise go at the bottom.
            {
              type: "elem",
              elem: line
            }, {
              type: "kern",
              size: 5 * line.height
            }, {
              type: "elem",
              elem: innerGroup
            }]
          }, options);

          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mord", "underline"], [vlist], options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var operator = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mo", [new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].TextNode("\u203E")]);
          operator.setAttribute("stretchy", "true");
          var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("munder", [__WEBPACK_IMPORTED_MODULE_4__buildMathML__["b"
          /* buildGroup */
          ](group.value.body, options), operator]);
          node.setAttribute("accentunder", "true");
          return node;
        }
      });
      /***/
    },
    /* 122 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__units__ = __webpack_require__(19);

      Object(__WEBPACK_IMPORTED_MODULE_1__defineFunction__["b"
      /* default */
      ])({
        type: "rule",
        names: ["\\rule"],
        props: {
          numArgs: 2,
          numOptionalArgs: 1,
          argTypes: ["size", "size", "size"]
        },
        handler: function handler(context, args, optArgs) {
          var shift = optArgs[0];
          var width = args[0];
          var height = args[1];
          return {
            type: "rule",
            shift: shift && shift.value,
            width: width.value,
            height: height.value
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          // Make an empty span for the rule
          var rule = __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
          /* default */
          ].makeSpan(["mord", "rule"], [], options); // Calculate the shift, width, and height of the rule, and account for units


          var shift = 0;

          if (group.value.shift) {
            shift = Object(__WEBPACK_IMPORTED_MODULE_3__units__["a"
            /* calculateSize */
            ])(group.value.shift, options);
          }

          var width = Object(__WEBPACK_IMPORTED_MODULE_3__units__["a"
          /* calculateSize */
          ])(group.value.width, options);
          var height = Object(__WEBPACK_IMPORTED_MODULE_3__units__["a"
          /* calculateSize */
          ])(group.value.height, options); // Style the rule to the right size

          rule.style.borderRightWidth = width + "em";
          rule.style.borderTopWidth = height + "em";
          rule.style.bottom = shift + "em"; // Record the height and width

          rule.width = width;
          rule.height = height + shift;
          rule.depth = -shift; // Font size is the number large enough that the browser will
          // reserve at least `absHeight` space above the baseline.
          // The 1.125 factor was empirically determined

          rule.maxFontSize = height * 1.125 * options.sizeMultiplier;
          return rule;
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          // TODO(emily): Figure out if there's an actual way to draw black boxes
          // in MathML.
          var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mrow");
          return node;
        }
      });
      /***/
    },
    /* 123 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__units__ = __webpack_require__(19);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__ParseError__ = __webpack_require__(6);
      /* eslint no-console:0 */
      // Horizontal spacing commands
      // TODO: \hskip and \mskip should support plus and minus in lengths


      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "kern",
        names: ["\\kern", "\\mkern", "\\hskip", "\\mskip"],
        props: {
          numArgs: 1,
          argTypes: ["size"],
          allowedInText: true
        },
        handler: function handler(context, args) {
          var mathFunction = context.funcName[1] === 'm'; // \mkern, \mskip

          var muUnit = args[0].value.unit === 'mu';

          if (mathFunction) {
            if (!muUnit) {
              typeof console !== "undefined" && console.warn("In LaTeX, " + context.funcName + " supports only mu units, " + ("not " + args[0].value.unit + " units"));
            }

            if (context.parser.mode !== "math") {
              throw new __WEBPACK_IMPORTED_MODULE_4__ParseError__["a"
              /* default */
              ]("Can't use function '" + context.funcName + "' in text mode");
            }
          } else {
            // !mathFunction
            if (muUnit) {
              typeof console !== "undefined" && console.warn("In LaTeX, " + context.funcName + " does not support mu units");
            }
          }

          return {
            type: "kern",
            dimension: args[0].value
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeGlue(group.value.dimension, options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mspace");
          var dimension = Object(__WEBPACK_IMPORTED_MODULE_3__units__["a"
          /* calculateSize */
          ])(group.value.dimension, options);
          node.setAttribute("width", dimension + "em");
          return node;
        }
      });
      /***/
    },
    /* 124 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildMathML__ = __webpack_require__(2);

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "phantom",
        names: ["\\phantom"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var body = args[0];
          return {
            type: "phantom",
            value: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(body)
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          var elements = __WEBPACK_IMPORTED_MODULE_3__buildHTML__["a"
          /* buildExpression */
          ](group.value.value, options.withPhantom(), false); // \phantom isn't supposed to affect the elements it contains.
          // See "color" for more details.


          return new __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeFragment(elements);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var inner = __WEBPACK_IMPORTED_MODULE_4__buildMathML__["a"
          /* buildExpression */
          ](group.value.value, options);

          return new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mphantom", inner);
        }
      });
      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "hphantom",
        names: ["\\hphantom"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var body = args[0];
          return {
            type: "hphantom",
            value: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(body),
            body: body
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          var node = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan([], [__WEBPACK_IMPORTED_MODULE_3__buildHTML__["b"
          /* buildGroup */
          ](group.value.body, options.withPhantom())]);

          node.height = 0;
          node.depth = 0;

          if (node.children) {
            for (var i = 0; i < node.children.length; i++) {
              node.children[i].height = 0;
              node.children[i].depth = 0;
            }
          } // See smash for comment re: use of makeVList


          node = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "firstBaseline",
            children: [{
              type: "elem",
              elem: node
            }]
          }, options);
          return node;
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var inner = __WEBPACK_IMPORTED_MODULE_4__buildMathML__["a"
          /* buildExpression */
          ](group.value.value, options);

          var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mphantom", inner);
          node.setAttribute("height", "0px");
          return node;
        }
      });
      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "vphantom",
        names: ["\\vphantom"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var body = args[0];
          return {
            type: "vphantom",
            value: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(body),
            body: body
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          var inner = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["inner"], [__WEBPACK_IMPORTED_MODULE_3__buildHTML__["b"
          /* buildGroup */
          ](group.value.body, options.withPhantom())]);

          var fix = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["fix"], []);

          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mord", "rlap"], [inner, fix], options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var inner = __WEBPACK_IMPORTED_MODULE_4__buildMathML__["a"
          /* buildExpression */
          ](group.value.value, options);

          var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mphantom", inner);
          node.setAttribute("width", "0px");
          return node;
        }
      });
      /***/
    },
    /* 125 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__Style__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__buildMathML__ = __webpack_require__(2); // \mod-type functions


      var htmlModBuilder = function htmlModBuilder(group, options) {
        var inner = [];

        if (group.value.modType === "bmod") {
          // “\nonscript\mskip-\medmuskip\mkern5mu”, where \medmuskip is
          // 4mu plus 2mu minus 1mu, translates to 1mu space in
          // display/textstyle and 5mu space in script/scriptscriptstyle.
          if (!options.style.isTight()) {
            inner.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSpan(["mspace", "muspace"], [], options));
          } else {
            inner.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSpan(["mspace", "thickspace"], [], options));
          }
        } else if (options.style.size === __WEBPACK_IMPORTED_MODULE_3__Style__["a"
        /* default */
        ].DISPLAY.size) {
          inner.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mspace", "quad"], [], options));
        } else if (group.value.modType === "mod") {
          inner.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mspace", "twelvemuspace"], [], options));
        } else {
          inner.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mspace", "eightmuspace"], [], options));
        }

        if (group.value.modType === "pod" || group.value.modType === "pmod") {
          inner.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].mathsym("(", group.mode));
        }

        if (group.value.modType !== "pod") {
          var modInner = [__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].mathsym("m", group.mode), __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].mathsym("o", group.mode), __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].mathsym("d", group.mode)];

          if (group.value.modType === "bmod") {
            inner.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSpan(["mbin"], modInner, options)); // “\mkern5mu\nonscript\mskip-\medmuskip” as above

            if (!options.style.isTight()) {
              inner.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
              /* default */
              ].makeSpan(["mspace", "muspace"], [], options));
            } else {
              inner.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
              /* default */
              ].makeSpan(["mspace", "thickspace"], [], options));
            }
          } else {
            Array.prototype.push.apply(inner, modInner);
            inner.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSpan(["mspace", "sixmuspace"], [], options));
          }
        }

        if (group.value.value) {
          Array.prototype.push.apply(inner, __WEBPACK_IMPORTED_MODULE_4__buildHTML__["a"
          /* buildExpression */
          ](group.value.value, options, false));
        }

        if (group.value.modType === "pod" || group.value.modType === "pmod") {
          inner.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].mathsym(")", group.mode));
        }

        return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
        /* default */
        ].makeFragment(inner);
      };

      var mmlModBuilder = function mmlModBuilder(group, options) {
        var inner = [];

        if (group.value.modType === "pod" || group.value.modType === "pmod") {
          inner.push(new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mo", [__WEBPACK_IMPORTED_MODULE_5__buildMathML__["e"
          /* makeText */
          ]("(", group.mode)]));
        }

        if (group.value.modType !== "pod") {
          inner.push(new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mo", [__WEBPACK_IMPORTED_MODULE_5__buildMathML__["e"
          /* makeText */
          ]("mod", group.mode)]));
        }

        if (group.value.value) {
          var space = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mspace");
          space.setAttribute("width", "0.333333em");
          inner.push(space);
          inner = inner.concat(__WEBPACK_IMPORTED_MODULE_5__buildMathML__["a"
          /* buildExpression */
          ](group.value.value, options));
        }

        if (group.value.modType === "pod" || group.value.modType === "pmod") {
          inner.push(new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mo", [__WEBPACK_IMPORTED_MODULE_5__buildMathML__["e"
          /* makeText */
          ](")", group.mode)]));
        }

        return new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mo", inner);
      };

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "mod",
        names: ["\\bmod"],
        props: {
          numArgs: 0
        },
        handler: function handler(context, args) {
          return {
            type: "mod",
            modType: "bmod",
            value: null
          };
        },
        htmlBuilder: htmlModBuilder,
        mathmlBuilder: mmlModBuilder
      }); // Note: calling defineFunction with a type that's already been defined only
      // works because the same htmlBuilder and mathmlBuilder are being used.

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "mod",
        names: ["\\pod", "\\pmod", "\\mod"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var body = args[0];
          return {
            type: "mod",
            modType: context.funcName.substr(1),
            value: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(body)
          };
        },
        htmlBuilder: htmlModBuilder,
        mathmlBuilder: mmlModBuilder
      });
      /***/
    },
    /* 126 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__domTree__ = __webpack_require__(12);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__utils__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__Style__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__buildMathML__ = __webpack_require__(2); // Limits, symbols


      var htmlBuilder = function htmlBuilder(group, options) {
        // Operators are handled in the TeXbook pg. 443-444, rule 13(a).
        var supGroup = void 0;
        var subGroup = void 0;
        var hasLimits = false;

        if (group.type === "supsub") {
          // If we have limits, supsub will pass us its group to handle. Pull
          // out the superscript and subscript and set the group to the op in
          // its base.
          supGroup = group.value.sup;
          subGroup = group.value.sub;
          group = group.value.base;
          hasLimits = true;
        }

        var style = options.style; // Most operators have a large successor symbol, but these don't.

        var noSuccessor = ["\\smallint"];
        var large = false;

        if (style.size === __WEBPACK_IMPORTED_MODULE_5__Style__["a"
        /* default */
        ].DISPLAY.size && group.value.symbol && !__WEBPACK_IMPORTED_MODULE_4__utils__["a"
        /* default */
        ].contains(noSuccessor, group.value.body)) {
          // Most symbol operators get larger in displaystyle (rule 13)
          large = true;
        }

        var base = void 0;

        if (group.value.symbol) {
          // If this is a symbol, create the symbol.
          var fontName = large ? "Size2-Regular" : "Size1-Regular";
          base = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSymbol(group.value.body, fontName, "math", options, ["mop", "op-symbol", large ? "large-op" : "small-op"]);
        } else if (group.value.value) {
          // If this is a list, compose that list.
          var inner = __WEBPACK_IMPORTED_MODULE_6__buildHTML__["a"
          /* buildExpression */
          ](group.value.value, options, true);

          if (inner.length === 1 && inner[0] instanceof __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
          /* default */
          ].symbolNode) {
            base = inner[0];
            base.classes[0] = "mop"; // replace old mclass
          } else {
            base = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSpan(["mop"], inner, options);
          }
        } else {
          // Otherwise, this is a text operator. Build the text from the
          // operator's name.
          // TODO(emily): Add a space in the middle of some of these
          // operators, like \limsup
          var output = [];

          for (var i = 1; i < group.value.body.length; i++) {
            output.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].mathsym(group.value.body[i], group.mode));
          }

          base = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mop"], output, options);
        } // If content of op is a single symbol, shift it vertically.


        var baseShift = 0;
        var slant = 0;

        if (base instanceof __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
        /* default */
        ].symbolNode) {
          // Shift the symbol so its center lies on the axis (rule 13). It
          // appears that our fonts have the centers of the symbols already
          // almost on the axis, so these numbers are very small. Note we
          // don't actually apply this here, but instead it is used either in
          // the vlist creation or separately when there are no limits.
          baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight; // The slant of the symbol is just its italic correction.

          slant = base.italic;
        }

        if (hasLimits) {
          // IE 8 clips \int if it is in a display: inline-block. We wrap it
          // in a new span so it is an inline, and works.
          base = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan([], [base]);
          var sub = void 0;
          var sup = void 0; // We manually have to handle the superscripts and subscripts. This,
          // aside from the kern calculations, is copied from supsub.

          if (supGroup) {
            var elem = __WEBPACK_IMPORTED_MODULE_6__buildHTML__["b"
            /* buildGroup */
            ](supGroup, options.havingStyle(style.sup()), options);

            sup = {
              elem: elem,
              kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)
            };
          }

          if (subGroup) {
            var _elem = __WEBPACK_IMPORTED_MODULE_6__buildHTML__["b"
            /* buildGroup */
            ](subGroup, options.havingStyle(style.sub()), options);

            sub = {
              elem: _elem,
              kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - _elem.height)
            };
          } // Build the final group as a vlist of the possible subscript, base,
          // and possible superscript.


          var finalGroup = void 0;

          if (sup && sub) {
            var bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;
            finalGroup = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeVList({
              positionType: "bottom",
              positionData: bottom,
              children: [{
                type: "kern",
                size: options.fontMetrics().bigOpSpacing5
              }, {
                type: "elem",
                elem: sub.elem,
                marginLeft: -slant + "em"
              }, {
                type: "kern",
                size: sub.kern
              }, {
                type: "elem",
                elem: base
              }, {
                type: "kern",
                size: sup.kern
              }, {
                type: "elem",
                elem: sup.elem,
                marginLeft: slant + "em"
              }, {
                type: "kern",
                size: options.fontMetrics().bigOpSpacing5
              }]
            }, options);
          } else if (sub) {
            var top = base.height - baseShift; // Shift the limits by the slant of the symbol. Note
            // that we are supposed to shift the limits by 1/2 of the slant,
            // but since we are centering the limits adding a full slant of
            // margin will shift by 1/2 that.

            finalGroup = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeVList({
              positionType: "top",
              positionData: top,
              children: [{
                type: "kern",
                size: options.fontMetrics().bigOpSpacing5
              }, {
                type: "elem",
                elem: sub.elem,
                marginLeft: -slant + "em"
              }, {
                type: "kern",
                size: sub.kern
              }, {
                type: "elem",
                elem: base
              }]
            }, options);
          } else if (sup) {
            var _bottom = base.depth + baseShift;

            finalGroup = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeVList({
              positionType: "bottom",
              positionData: _bottom,
              children: [{
                type: "elem",
                elem: base
              }, {
                type: "kern",
                size: sup.kern
              }, {
                type: "elem",
                elem: sup.elem,
                marginLeft: slant + "em"
              }, {
                type: "kern",
                size: options.fontMetrics().bigOpSpacing5
              }]
            }, options);
          } else {
            // This case probably shouldn't occur (this would mean the
            // supsub was sending us a group with no superscript or
            // subscript) but be safe.
            return base;
          }

          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mop", "op-limits"], [finalGroup], options);
        } else {
          if (baseShift) {
            base.style.position = "relative";
            base.style.top = baseShift + "em";
          }

          return base;
        }
      };

      var mathmlBuilder = function mathmlBuilder(group, options) {
        var node = void 0; // TODO(emily): handle big operators using the `largeop` attribute

        if (group.value.symbol) {
          // This is a symbol. Just add the symbol.
          node = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
          /* default */
          ].MathNode("mo", [__WEBPACK_IMPORTED_MODULE_7__buildMathML__["e"
          /* makeText */
          ](group.value.body, group.mode)]);
        } else if (group.value.value) {
          // This is an operator with children. Add them.
          node = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
          /* default */
          ].MathNode("mo", __WEBPACK_IMPORTED_MODULE_7__buildMathML__["a"
          /* buildExpression */
          ](group.value.value, options));
        } else {
          // This is a text operator. Add all of the characters from the
          // operator's name.
          // TODO(emily): Add a space in the middle of some of these
          // operators, like \limsup.
          node = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
          /* default */
          ].MathNode("mi", [new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
          /* default */
          ].TextNode(group.value.body.slice(1))]); // Append an <mo>&ApplyFunction;</mo>.
          // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4

          var operator = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
          /* default */
          ].MathNode("mo", [__WEBPACK_IMPORTED_MODULE_7__buildMathML__["e"
          /* makeText */
          ]("\u2061", "text")]);
          return new __WEBPACK_IMPORTED_MODULE_2__domTree__["a"
          /* default */
          ].documentFragment([node, operator]);
        }

        return node;
      };

      var singleCharBigOps = {
        "\u220F": "\\prod",
        "\u2210": "\\coprod",
        "\u2211": "\\sum",
        "\u22C0": "\\bigwedge",
        "\u22C1": "\\bigvee",
        "\u22C2": "\\bigcap",
        "\u22C3": "\\bigcap",
        "\u2A00": "\\bigodot",
        "\u2A01": "\\bigoplus",
        "\u2A02": "\\bigotimes",
        "\u2A04": "\\biguplus",
        "\u2A06": "\\bigsqcup"
      };
      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "op",
        names: ["\\coprod", "\\bigvee", "\\bigwedge", "\\biguplus", "\\bigcap", "\\bigcup", "\\intop", "\\prod", "\\sum", "\\bigotimes", "\\bigoplus", "\\bigodot", "\\bigsqcup", "\\smallint", "\u220F", "\u2210", "\u2211", "\u22C0", "\u22C1", "\u22C2", "\u22C3", "\u2A00", "\u2A01", "\u2A02", "\u2A04", "\u2A06"],
        props: {
          numArgs: 0
        },
        handler: function handler(context, args) {
          var fName = context.funcName;

          if (fName.length === 1) {
            fName = singleCharBigOps[fName];
          }

          return {
            type: "op",
            limits: true,
            symbol: true,
            body: fName
          };
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      }); // Note: calling defineFunction with a type that's already been defined only
      // works because the same htmlBuilder and mathmlBuilder are being used.

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "op",
        names: ["\\mathop"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var body = args[0];
          return {
            type: "op",
            limits: false,
            symbol: false,
            value: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(body)
          };
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      });
      /***/
    },
    /* 127 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(18);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__domTree__ = __webpack_require__(12);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__buildMathML__ = __webpack_require__(2); // \operatorname
      // amsopn.dtx: \mathop{#1\kern\z@\operator@font#3}\newmcodes@


      Object(__WEBPACK_IMPORTED_MODULE_1__defineFunction__["b"
      /* default */
      ])({
        type: "operatorname",
        names: ["\\operatorname"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var body = args[0];
          return {
            type: "operatorname",
            value: Object(__WEBPACK_IMPORTED_MODULE_1__defineFunction__["c"
            /* ordargument */
            ])(body)
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          var output = [];

          if (group.value.value.length > 0) {
            var letter = "";
            var mode = "";
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
              for (var _iterator = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(group.value.value), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var child = _step.value; // In the amsopn package, \newmcodes@ changes four
                // characters, *-/:’, from math operators back into text.

                if ("*-/:".indexOf(child.value) !== -1) {
                  child.type = "textord";
                }
              } // Consolidate Greek letter function names into symbol characters.

            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }

            var temp = __WEBPACK_IMPORTED_MODULE_5__buildHTML__["a"
            /* buildExpression */
            ](group.value.value, options.withFontFamily("mathrm"), true); // All we want from temp are the letters. With them, we'll
            // create a text operator similar to \tan or \cos.


            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
              for (var _iterator2 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(temp), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                var _child = _step2.value;

                if (_child instanceof __WEBPACK_IMPORTED_MODULE_4__domTree__["a"
                /* default */
                ].symbolNode) {
                  letter = _child.value; // In the amsopn package, \newmcodes@ changes four
                  // characters, *-/:’, from math operators back into text.
                  // Given what is in temp, we have to address two of them.

                  letter = letter.replace(/\u2212/, "-"); // minus => hyphen

                  letter = letter.replace(/\u2217/, "*"); // Use math mode for Greek letters

                  mode = /[\u0391-\u03D7]/.test(letter) ? "math" : "text";
                  output.push(__WEBPACK_IMPORTED_MODULE_2__buildCommon__["a"
                  /* default */
                  ].mathsym(letter, mode));
                } else {
                  output.push(_child);
                }
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                  _iterator2.return();
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }
          }

          return __WEBPACK_IMPORTED_MODULE_2__buildCommon__["a"
          /* default */
          ].makeSpan(["mop"], output, options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          // The steps taken here are similar to the html version.
          var output = [];

          if (group.value.value.length > 0) {
            var temp = __WEBPACK_IMPORTED_MODULE_6__buildMathML__["a"
            /* buildExpression */
            ](group.value.value, options.withFontFamily("mathrm"));

            var word = temp.map(function (node) {
              return node.toText();
            }).join("");
            word = word.replace(/\u2212/g, "-");
            word = word.replace(/\u2217/g, "*");
            output = [new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
            /* default */
            ].TextNode(word)];
          }

          var identifier = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
          /* default */
          ].MathNode("mi", output);
          identifier.setAttribute("mathvariant", "normal"); // \u2061 is the same as &ApplyFunction;
          // ref: https://www.w3schools.com/charsets/ref_html_entities_a.asp

          var operator = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
          /* default */
          ].MathNode("mo", [__WEBPACK_IMPORTED_MODULE_6__buildMathML__["e"
          /* makeText */
          ]("\u2061", "text")]);
          return new __WEBPACK_IMPORTED_MODULE_4__domTree__["a"
          /* default */
          ].documentFragment([identifier, operator]);
        }
      });
      /***/
    },
    /* 128 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__delimiter__ = __webpack_require__(44);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__Style__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__buildMathML__ = __webpack_require__(2);

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "genfrac",
        names: ["\\dfrac", "\\frac", "\\tfrac", "\\dbinom", "\\binom", "\\tbinom", "\\\\atopfrac"],
        props: {
          numArgs: 2,
          greediness: 2
        },
        handler: function handler(context, args) {
          var numer = args[0];
          var denom = args[1];
          var hasBarLine = void 0;
          var leftDelim = null;
          var rightDelim = null;
          var size = "auto";

          switch (context.funcName) {
            case "\\dfrac":
            case "\\frac":
            case "\\tfrac":
              hasBarLine = true;
              break;

            case "\\\\atopfrac":
              hasBarLine = false;
              break;

            case "\\dbinom":
            case "\\binom":
            case "\\tbinom":
              hasBarLine = false;
              leftDelim = "(";
              rightDelim = ")";
              break;

            default:
              throw new Error("Unrecognized genfrac command");
          }

          switch (context.funcName) {
            case "\\dfrac":
            case "\\dbinom":
              size = "display";
              break;

            case "\\tfrac":
            case "\\tbinom":
              size = "text";
              break;
          }

          return {
            type: "genfrac",
            numer: numer,
            denom: denom,
            hasBarLine: hasBarLine,
            leftDelim: leftDelim,
            rightDelim: rightDelim,
            size: size
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).
          // Figure out what style this fraction should be in based on the
          // function used
          var style = options.style;

          if (group.value.size === "display") {
            style = __WEBPACK_IMPORTED_MODULE_4__Style__["a"
            /* default */
            ].DISPLAY;
          } else if (group.value.size === "text") {
            style = __WEBPACK_IMPORTED_MODULE_4__Style__["a"
            /* default */
            ].TEXT;
          }

          var nstyle = style.fracNum();
          var dstyle = style.fracDen();
          var newOptions = void 0;
          newOptions = options.havingStyle(nstyle);

          var numerm = __WEBPACK_IMPORTED_MODULE_5__buildHTML__["b"
          /* buildGroup */
          ](group.value.numer, newOptions, options);

          newOptions = options.havingStyle(dstyle);

          var denomm = __WEBPACK_IMPORTED_MODULE_5__buildHTML__["b"
          /* buildGroup */
          ](group.value.denom, newOptions, options);

          var rule = void 0;
          var ruleWidth = void 0;
          var ruleSpacing = void 0;

          if (group.value.hasBarLine) {
            rule = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeLineSpan("frac-line", options);
            ruleWidth = rule.height;
            ruleSpacing = rule.height;
          } else {
            rule = null;
            ruleWidth = 0;
            ruleSpacing = options.fontMetrics().defaultRuleThickness;
          } // Rule 15b


          var numShift = void 0;
          var clearance = void 0;
          var denomShift = void 0;

          if (style.size === __WEBPACK_IMPORTED_MODULE_4__Style__["a"
          /* default */
          ].DISPLAY.size) {
            numShift = options.fontMetrics().num1;

            if (ruleWidth > 0) {
              clearance = 3 * ruleSpacing;
            } else {
              clearance = 7 * ruleSpacing;
            }

            denomShift = options.fontMetrics().denom1;
          } else {
            if (ruleWidth > 0) {
              numShift = options.fontMetrics().num2;
              clearance = ruleSpacing;
            } else {
              numShift = options.fontMetrics().num3;
              clearance = 3 * ruleSpacing;
            }

            denomShift = options.fontMetrics().denom2;
          }

          var frac = void 0;

          if (!rule) {
            // Rule 15c
            var candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);

            if (candidateClearance < clearance) {
              numShift += 0.5 * (clearance - candidateClearance);
              denomShift += 0.5 * (clearance - candidateClearance);
            }

            frac = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeVList({
              positionType: "individualShift",
              children: [{
                type: "elem",
                elem: denomm,
                shift: denomShift
              }, {
                type: "elem",
                elem: numerm,
                shift: -numShift
              }]
            }, options);
          } else {
            // Rule 15d
            var axisHeight = options.fontMetrics().axisHeight;

            if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {
              numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));
            }

            if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {
              denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));
            }

            var midShift = -(axisHeight - 0.5 * ruleWidth);
            frac = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeVList({
              positionType: "individualShift",
              children: [{
                type: "elem",
                elem: denomm,
                shift: denomShift
              }, // The next line would ordinarily contain "shift: midShift".
              // But we put the rule into a a span that is 5 rules tall,
              // to overcome a Chrome rendering issue. Put another way,
              // we've replaced a kern of width = 2 * ruleWidth with a
              // bottom padding inside the SVG = 2 * ruleWidth.
              {
                type: "elem",
                elem: rule,
                shift: midShift + 2 * ruleWidth
              }, {
                type: "elem",
                elem: numerm,
                shift: -numShift
              }]
            }, options);
          } // Since we manually change the style sometimes (with \dfrac or \tfrac),
          // account for the possible size change here.


          newOptions = options.havingStyle(style);
          frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;
          frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier; // Rule 15e

          var delimSize = void 0;

          if (style.size === __WEBPACK_IMPORTED_MODULE_4__Style__["a"
          /* default */
          ].DISPLAY.size) {
            delimSize = options.fontMetrics().delim1;
          } else {
            delimSize = options.fontMetrics().delim2;
          }

          var leftDelim = void 0;
          var rightDelim = void 0;

          if (group.value.leftDelim == null) {
            leftDelim = __WEBPACK_IMPORTED_MODULE_5__buildHTML__["e"
            /* makeNullDelimiter */
            ](options, ["mopen"]);
          } else {
            leftDelim = __WEBPACK_IMPORTED_MODULE_2__delimiter__["a"
            /* default */
            ].customSizedDelim(group.value.leftDelim, delimSize, true, options.havingStyle(style), group.mode, ["mopen"]);
          }

          if (group.value.rightDelim == null) {
            rightDelim = __WEBPACK_IMPORTED_MODULE_5__buildHTML__["e"
            /* makeNullDelimiter */
            ](options, ["mclose"]);
          } else {
            rightDelim = __WEBPACK_IMPORTED_MODULE_2__delimiter__["a"
            /* default */
            ].customSizedDelim(group.value.rightDelim, delimSize, true, options.havingStyle(style), group.mode, ["mclose"]);
          }

          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mord"].concat(newOptions.sizingClasses(options)), [leftDelim, __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mfrac"], [frac]), rightDelim], options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var node = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
          /* default */
          ].MathNode("mfrac", [__WEBPACK_IMPORTED_MODULE_6__buildMathML__["b"
          /* buildGroup */
          ](group.value.numer, options), __WEBPACK_IMPORTED_MODULE_6__buildMathML__["b"
          /* buildGroup */
          ](group.value.denom, options)]);

          if (!group.value.hasBarLine) {
            node.setAttribute("linethickness", "0px");
          }

          if (group.value.leftDelim != null || group.value.rightDelim != null) {
            var withDelims = [];

            if (group.value.leftDelim != null) {
              var leftOp = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
              /* default */
              ].MathNode("mo", [new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
              /* default */
              ].TextNode(group.value.leftDelim)]);
              leftOp.setAttribute("fence", "true");
              withDelims.push(leftOp);
            }

            withDelims.push(node);

            if (group.value.rightDelim != null) {
              var rightOp = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
              /* default */
              ].MathNode("mo", [new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
              /* default */
              ].TextNode(group.value.rightDelim)]);
              rightOp.setAttribute("fence", "true");
              withDelims.push(rightOp);
            }

            var outerNode = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
            /* default */
            ].MathNode("mrow", withDelims);
            return outerNode;
          }

          return node;
        }
      });
      /***/
    },
    /* 129 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildMathML__ = __webpack_require__(2); // Horizontal overlap functions


      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "lap",
        names: ["\\mathllap", "\\mathrlap", "\\mathclap"],
        props: {
          numArgs: 1,
          allowedInText: true
        },
        handler: function handler(context, args) {
          var body = args[0];
          return {
            type: "lap",
            alignment: context.funcName.slice(5),
            body: body
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          // mathllap, mathrlap, mathclap
          var inner = void 0;

          if (group.value.alignment === "clap") {
            // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/
            inner = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSpan([], [__WEBPACK_IMPORTED_MODULE_3__buildHTML__["b"
            /* buildGroup */
            ](group.value.body, options)]); // wrap, since CSS will center a .clap > .inner > span

            inner = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSpan(["inner"], [inner], options);
          } else {
            inner = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSpan(["inner"], [__WEBPACK_IMPORTED_MODULE_3__buildHTML__["b"
            /* buildGroup */
            ](group.value.body, options)]);
          }

          var fix = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["fix"], []);

          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mord", group.value.alignment], [inner, fix], options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          // mathllap, mathrlap, mathclap
          var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mpadded", [__WEBPACK_IMPORTED_MODULE_4__buildMathML__["b"
          /* buildGroup */
          ](group.value.body, options)]);

          if (group.value.alignment !== "rlap") {
            var offset = group.value.alignment === "llap" ? "-1" : "-0.5";
            node.setAttribute("lspace", offset + "width");
          }

          node.setAttribute("width", "0px");
          return node;
        }
      });
      /***/
    },
    /* 130 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildMathML__ = __webpack_require__(2); // smash, with optional [tb], as in AMS


      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "smash",
        names: ["\\smash"],
        props: {
          numArgs: 1,
          numOptionalArgs: 1,
          allowedInText: true
        },
        handler: function handler(context, args, optArgs) {
          var smashHeight = false;
          var smashDepth = false;
          var tbArg = optArgs[0];

          if (tbArg) {
            // Optional [tb] argument is engaged.
            // ref: amsmath: \renewcommand{\smash}[1][tb]{%
            //               def\mb@t{\ht}\def\mb@b{\dp}\def\mb@tb{\ht\z@\z@\dp}%
            var letter = "";

            for (var i = 0; i < tbArg.value.length; ++i) {
              letter = tbArg.value[i].value;

              if (letter === "t") {
                smashHeight = true;
              } else if (letter === "b") {
                smashDepth = true;
              } else {
                smashHeight = false;
                smashDepth = false;
                break;
              }
            }
          } else {
            smashHeight = true;
            smashDepth = true;
          }

          var body = args[0];
          return {
            type: "smash",
            body: body,
            smashHeight: smashHeight,
            smashDepth: smashDepth
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          var node = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mord"], [__WEBPACK_IMPORTED_MODULE_3__buildHTML__["b"
          /* buildGroup */
          ](group.value.body, options)]);

          if (!group.value.smashHeight && !group.value.smashDepth) {
            return node;
          }

          if (group.value.smashHeight) {
            node.height = 0; // In order to influence makeVList, we have to reset the children.

            if (node.children) {
              for (var i = 0; i < node.children.length; i++) {
                node.children[i].height = 0;
              }
            }
          }

          if (group.value.smashDepth) {
            node.depth = 0;

            if (node.children) {
              for (var _i = 0; _i < node.children.length; _i++) {
                node.children[_i].depth = 0;
              }
            }
          } // At this point, we've reset the TeX-like height and depth values.
          // But the span still has an HTML line height.
          // makeVList applies "display: table-cell", which prevents the browser
          // from acting on that line height. So we'll call makeVList now.


          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "firstBaseline",
            children: [{
              type: "elem",
              elem: node
            }]
          }, options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mpadded", [__WEBPACK_IMPORTED_MODULE_4__buildMathML__["b"
          /* buildGroup */
          ](group.value.body, options)]);

          if (group.value.smashHeight) {
            node.setAttribute("height", "0px");
          }

          if (group.value.smashDepth) {
            node.setAttribute("depth", "0px");
          }

          return node;
        }
      });
      /***/
    },
    /* 131 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__delimiter__ = __webpack_require__(44);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__ParseError__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__utils__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__buildMathML__ = __webpack_require__(2); // Extra data needed for the delimiter handler down below


      var delimiterSizes = {
        "\\bigl": {
          mclass: "mopen",
          size: 1
        },
        "\\Bigl": {
          mclass: "mopen",
          size: 2
        },
        "\\biggl": {
          mclass: "mopen",
          size: 3
        },
        "\\Biggl": {
          mclass: "mopen",
          size: 4
        },
        "\\bigr": {
          mclass: "mclose",
          size: 1
        },
        "\\Bigr": {
          mclass: "mclose",
          size: 2
        },
        "\\biggr": {
          mclass: "mclose",
          size: 3
        },
        "\\Biggr": {
          mclass: "mclose",
          size: 4
        },
        "\\bigm": {
          mclass: "mrel",
          size: 1
        },
        "\\Bigm": {
          mclass: "mrel",
          size: 2
        },
        "\\biggm": {
          mclass: "mrel",
          size: 3
        },
        "\\Biggm": {
          mclass: "mrel",
          size: 4
        },
        "\\big": {
          mclass: "mord",
          size: 1
        },
        "\\Big": {
          mclass: "mord",
          size: 2
        },
        "\\bigg": {
          mclass: "mord",
          size: 3
        },
        "\\Bigg": {
          mclass: "mord",
          size: 4
        }
      };
      var delimiters = ["(", ")", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "\\lceil", "\\rceil", "<", ">", "\\langle", "\u27E8", "\\rangle", "\u27E9", "\\lt", "\\gt", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "\\lmoustache", "\\rmoustache", "/", "\\backslash", "|", "\\vert", "\\|", "\\Vert", "\\uparrow", "\\Uparrow", "\\downarrow", "\\Downarrow", "\\updownarrow", "\\Updownarrow", "."]; // Delimiter functions

      function checkDelimiter(delim, context) {
        if (__WEBPACK_IMPORTED_MODULE_5__utils__["a"
        /* default */
        ].contains(delimiters, delim.value)) {
          return delim;
        } else {
          throw new __WEBPACK_IMPORTED_MODULE_4__ParseError__["a"
          /* default */
          ]("Invalid delimiter: '" + delim.value + "' after '" + context.funcName + "'", delim);
        }
      }

      Object(__WEBPACK_IMPORTED_MODULE_1__defineFunction__["b"
      /* default */
      ])({
        type: "delimsizing",
        names: ["\\bigl", "\\Bigl", "\\biggl", "\\Biggl", "\\bigr", "\\Bigr", "\\biggr", "\\Biggr", "\\bigm", "\\Bigm", "\\biggm", "\\Biggm", "\\big", "\\Big", "\\bigg", "\\Bigg"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var delim = checkDelimiter(args[0], context);
          return {
            type: "delimsizing",
            size: delimiterSizes[context.funcName].size,
            mclass: delimiterSizes[context.funcName].mclass,
            value: delim.value
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          var delim = group.value.value;

          if (delim === ".") {
            // Empty delimiters still count as elements, even though they don't
            // show anything.
            return __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
            /* default */
            ].makeSpan([group.value.mclass]);
          } // Use delimiter.sizedDelim to generate the delimiter.


          return __WEBPACK_IMPORTED_MODULE_2__delimiter__["a"
          /* default */
          ].sizedDelim(delim, group.value.size, options, group.mode, [group.value.mclass]);
        },
        mathmlBuilder: function mathmlBuilder(group) {
          var children = [];

          if (group.value.value !== ".") {
            children.push(__WEBPACK_IMPORTED_MODULE_7__buildMathML__["e"
            /* makeText */
            ](group.value.value, group.mode));
          }

          var node = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
          /* default */
          ].MathNode("mo", children);

          if (group.value.mclass === "mopen" || group.value.mclass === "mclose") {
            // Only some of the delimsizing functions act as fences, and they
            // return "mopen" or "mclose" mclass.
            node.setAttribute("fence", "true");
          } else {
            // Explicitly disable fencing if it's not a fence, to override the
            // defaults.
            node.setAttribute("fence", "false");
          }

          return node;
        }
      });
      Object(__WEBPACK_IMPORTED_MODULE_1__defineFunction__["b"
      /* default */
      ])({
        type: "leftright",
        names: ["\\left", "\\right"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var delim = checkDelimiter(args[0], context);

          if (context.funcName === "\\left") {
            var parser = context.parser; // Parse out the implicit body

            ++parser.leftrightDepth; // parseExpression stops before '\\right'

            var body = parser.parseExpression(false);
            --parser.leftrightDepth; // Check the next token

            parser.expect("\\right", false);
            var right = parser.parseFunction();

            if (!right) {
              throw new __WEBPACK_IMPORTED_MODULE_4__ParseError__["a"
              /* default */
              ]('failed to parse function after \\right');
            }

            return {
              type: "leftright",
              body: body,
              left: delim.value,
              right: right.value.value
            };
          } else {
            // This is a little weird. We return this object which gets turned
            // into a ParseNode which gets returned by
            // `const right = parser.parseFunction();` up above.
            return {
              type: "leftright",
              value: delim.value
            };
          }
        },
        htmlBuilder: function htmlBuilder(group, options) {
          // Build the inner expression
          var inner = __WEBPACK_IMPORTED_MODULE_6__buildHTML__["a"
          /* buildExpression */
          ](group.value.body, options, true, [null, "mclose"]);

          var innerHeight = 0;
          var innerDepth = 0;
          var hadMiddle = false; // Calculate its height and depth

          for (var i = 0; i < inner.length; i++) {
            if (inner[i].isMiddle) {
              hadMiddle = true;
            } else {
              innerHeight = Math.max(inner[i].height, innerHeight);
              innerDepth = Math.max(inner[i].depth, innerDepth);
            }
          } // The size of delimiters is the same, regardless of what style we are
          // in. Thus, to correctly calculate the size of delimiter we need around
          // a group, we scale down the inner size based on the size.


          innerHeight *= options.sizeMultiplier;
          innerDepth *= options.sizeMultiplier;
          var leftDelim = void 0;

          if (group.value.left === ".") {
            // Empty delimiters in \left and \right make null delimiter spaces.
            leftDelim = __WEBPACK_IMPORTED_MODULE_6__buildHTML__["e"
            /* makeNullDelimiter */
            ](options, ["mopen"]);
          } else {
            // Otherwise, use leftRightDelim to generate the correct sized
            // delimiter.
            leftDelim = __WEBPACK_IMPORTED_MODULE_2__delimiter__["a"
            /* default */
            ].leftRightDelim(group.value.left, innerHeight, innerDepth, options, group.mode, ["mopen"]);
          } // Add it to the beginning of the expression


          inner.unshift(leftDelim); // Handle middle delimiters

          if (hadMiddle) {
            for (var _i = 1; _i < inner.length; _i++) {
              var middleDelim = inner[_i];

              if (middleDelim.isMiddle) {
                // Apply the options that were active when \middle was called
                inner[_i] = __WEBPACK_IMPORTED_MODULE_2__delimiter__["a"
                /* default */
                ].leftRightDelim(middleDelim.isMiddle.value, innerHeight, innerDepth, middleDelim.isMiddle.options, group.mode, []);
              }
            }
          }

          var rightDelim = void 0; // Same for the right delimiter

          if (group.value.right === ".") {
            rightDelim = __WEBPACK_IMPORTED_MODULE_6__buildHTML__["e"
            /* makeNullDelimiter */
            ](options, ["mclose"]);
          } else {
            rightDelim = __WEBPACK_IMPORTED_MODULE_2__delimiter__["a"
            /* default */
            ].leftRightDelim(group.value.right, innerHeight, innerDepth, options, group.mode, ["mclose"]);
          } // Add it to the end of the expression.


          inner.push(rightDelim);
          return __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
          /* default */
          ].makeSpan(["minner"], inner, options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var inner = __WEBPACK_IMPORTED_MODULE_7__buildMathML__["a"
          /* buildExpression */
          ](group.value.body, options);

          if (group.value.left !== ".") {
            var leftNode = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
            /* default */
            ].MathNode("mo", [__WEBPACK_IMPORTED_MODULE_7__buildMathML__["e"
            /* makeText */
            ](group.value.left, group.mode)]);
            leftNode.setAttribute("fence", "true");
            inner.unshift(leftNode);
          }

          if (group.value.right !== ".") {
            var rightNode = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
            /* default */
            ].MathNode("mo", [__WEBPACK_IMPORTED_MODULE_7__buildMathML__["e"
            /* makeText */
            ](group.value.right, group.mode)]);
            rightNode.setAttribute("fence", "true");
            inner.push(rightNode);
          }

          var outerNode = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
          /* default */
          ].MathNode("mrow", inner);
          return outerNode;
        }
      });
      Object(__WEBPACK_IMPORTED_MODULE_1__defineFunction__["b"
      /* default */
      ])({
        type: "middle",
        names: ["\\middle"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var delim = checkDelimiter(args[0], context);

          if (!context.parser.leftrightDepth) {
            throw new __WEBPACK_IMPORTED_MODULE_4__ParseError__["a"
            /* default */
            ]("\\middle without preceding \\left", delim);
          }

          return {
            type: "middle",
            value: delim.value
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          var middleDelim = void 0;

          if (group.value.value === ".") {
            middleDelim = __WEBPACK_IMPORTED_MODULE_6__buildHTML__["e"
            /* makeNullDelimiter */
            ](options, []);
          } else {
            middleDelim = __WEBPACK_IMPORTED_MODULE_2__delimiter__["a"
            /* default */
            ].sizedDelim(group.value.value, 1, options, group.mode, []);
            middleDelim.isMiddle = {
              value: group.value.value,
              options: options
            };
          }

          return middleDelim;
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var middleNode = new __WEBPACK_IMPORTED_MODULE_3__mathMLTree__["a"
          /* default */
          ].MathNode("mo", [__WEBPACK_IMPORTED_MODULE_7__buildMathML__["e"
          /* makeText */
          ](group.value.middle, group.mode)]);
          middleNode.setAttribute("fence", "true");
          return middleNode;
        }
      });
      /***/
    },
    /* 132 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__Style__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__sizing__ = __webpack_require__(60);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildMathML__ = __webpack_require__(2);

      var styleMap = {
        "display": __WEBPACK_IMPORTED_MODULE_2__Style__["a"
        /* default */
        ].DISPLAY,
        "text": __WEBPACK_IMPORTED_MODULE_2__Style__["a"
        /* default */
        ].TEXT,
        "script": __WEBPACK_IMPORTED_MODULE_2__Style__["a"
        /* default */
        ].SCRIPT,
        "scriptscript": __WEBPACK_IMPORTED_MODULE_2__Style__["a"
        /* default */
        ].SCRIPTSCRIPT
      };
      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "styling",
        names: ["\\displaystyle", "\\textstyle", "\\scriptstyle", "\\scriptscriptstyle"],
        props: {
          numArgs: 0,
          allowedInText: true
        },
        handler: function handler(context, args) {
          var breakOnTokenText = context.breakOnTokenText,
              funcName = context.funcName,
              parser = context.parser; // parse out the implicit body

          parser.consumeSpaces();
          var body = parser.parseExpression(true, breakOnTokenText);
          return {
            type: "styling",
            // Figure out what style to use by pulling out the style from
            // the function name
            style: funcName.slice(1, funcName.length - 5),
            value: body
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          // Style changes are handled in the TeXbook on pg. 442, Rule 3.
          var newStyle = styleMap[group.value.style];
          var newOptions = options.havingStyle(newStyle);
          return Object(__WEBPACK_IMPORTED_MODULE_3__sizing__["a"
          /* sizingGroup */
          ])(group.value.value, newOptions, options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          // Figure out what style we're changing to.
          // TODO(kevinb): dedupe this with buildHTML.js
          // This will be easier of handling of styling nodes is in the same file.
          var styleMap = {
            "display": __WEBPACK_IMPORTED_MODULE_2__Style__["a"
            /* default */
            ].DISPLAY,
            "text": __WEBPACK_IMPORTED_MODULE_2__Style__["a"
            /* default */
            ].TEXT,
            "script": __WEBPACK_IMPORTED_MODULE_2__Style__["a"
            /* default */
            ].SCRIPT,
            "scriptscript": __WEBPACK_IMPORTED_MODULE_2__Style__["a"
            /* default */
            ].SCRIPTSCRIPT
          };
          var newStyle = styleMap[group.value.style];
          var newOptions = options.havingStyle(newStyle);

          var inner = __WEBPACK_IMPORTED_MODULE_4__buildMathML__["a"
          /* buildExpression */
          ](group.value.value, newOptions);

          var node = new __WEBPACK_IMPORTED_MODULE_1__mathMLTree__["a"
          /* default */
          ].MathNode("mstyle", inner);
          var styleAttributes = {
            "display": ["0", "true"],
            "text": ["0", "false"],
            "script": ["1", "false"],
            "scriptscript": ["2", "false"]
          };
          var attr = styleAttributes[group.value.style];
          node.setAttribute("scriptlevel", attr[0]);
          node.setAttribute("displaystyle", attr[1]);
          return node;
        }
      });
      /***/
    },
    /* 133 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__ = __webpack_require__(134);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__ParseNode__ = __webpack_require__(14);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildMathML__ = __webpack_require__(2); // TODO(kevinb): implement \\sl and \\sc


      var htmlBuilder = function htmlBuilder(group, options) {
        var font = group.value.font;
        return __WEBPACK_IMPORTED_MODULE_3__buildHTML__["b"
        /* buildGroup */
        ](group.value.body, options.withFontFamily(font));
      };

      var mathmlBuilder = function mathmlBuilder(group, options) {
        var font = group.value.font;
        return __WEBPACK_IMPORTED_MODULE_4__buildMathML__["b"
        /* buildGroup */
        ](group.value.body, options.withFontFamily(font));
      };

      var fontAliases = {
        "\\Bbb": "\\mathbb",
        "\\bold": "\\mathbf",
        "\\frak": "\\mathfrak",
        "\\bm": "\\boldsymbol"
      };
      Object(__WEBPACK_IMPORTED_MODULE_1__defineFunction__["b"
      /* default */
      ])({
        type: "font",
        names: [// styles
        "\\mathrm", "\\mathit", "\\mathbf", "\\boldsymbol", // families
        "\\mathbb", "\\mathcal", "\\mathfrak", "\\mathscr", "\\mathsf", "\\mathtt", // aliases
        "\\Bbb", "\\bold", "\\frak", "\\bm"],
        props: {
          numArgs: 1,
          greediness: 2
        },
        handler: function handler(context, args) {
          var body = args[0];
          var func = context.funcName;

          if (func in fontAliases) {
            func = fontAliases[func];
          }

          return {
            type: "font",
            font: func.slice(1),
            body: body
          };
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      });
      var oldFontFuncsMap = {
        "\\rm": "mathrm",
        "\\sf": "mathsf",
        "\\tt": "mathtt",
        "\\bf": "mathbf",
        "\\it": "mathit"
      }; // Old font changing functions

      Object(__WEBPACK_IMPORTED_MODULE_1__defineFunction__["b"
      /* default */
      ])({
        type: "font",
        names: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default()(oldFontFuncsMap),
        props: {
          numArgs: 0,
          allowedInText: true
        },
        handler: function handler(context, args) {
          var parser = context.parser,
              funcName = context.funcName,
              breakOnTokenText = context.breakOnTokenText;
          parser.consumeSpaces();
          var body = parser.parseExpression(true, breakOnTokenText);
          var style = oldFontFuncsMap[funcName];
          return {
            type: "font",
            font: style,
            body: new __WEBPACK_IMPORTED_MODULE_2__ParseNode__["a"
            /* default */
            ]("ordgroup", body, parser.mode)
          };
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      });
      /***/
    },
    /* 134 */

    /***/
    function (module, exports, __webpack_require__) {
      module.exports = {
        "default": __webpack_require__(135),
        __esModule: true
      };
      /***/
    },
    /* 135 */

    /***/
    function (module, exports, __webpack_require__) {
      __webpack_require__(136);

      module.exports = __webpack_require__(8).Object.keys;
      /***/
    },
    /* 136 */

    /***/
    function (module, exports, __webpack_require__) {
      // 19.1.2.14 Object.keys(O)
      var toObject = __webpack_require__(29),
          $keys = __webpack_require__(39);

      __webpack_require__(46)('keys', function () {
        return function keys(it) {
          return $keys(toObject(it));
        };
      });
      /***/

    },
    /* 137 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__utils__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__stretchy__ = __webpack_require__(13);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__buildMathML__ = __webpack_require__(2);

      var htmlBuilder = function htmlBuilder(group, options) {
        // Accents are handled in the TeXbook pg. 443, rule 12.
        var base = group.value.base;
        var supsubGroup = void 0;

        if (group.type === "supsub") {
          // If our base is a character box, and we have superscripts and
          // subscripts, the supsub will defer to us. In particular, we want
          // to attach the superscripts and subscripts to the inner body (so
          // that the position of the superscripts and subscripts won't be
          // affected by the height of the accent). We accomplish this by
          // sticking the base of the accent into the base of the supsub, and
          // rendering that, while keeping track of where the accent is.
          // The supsub group is the group that was passed in
          var supsub = group; // The real accent group is the base of the supsub group

          group = supsub.value.base; // The character box is the base of the accent group

          base = group.value.base; // Stick the character box into the base of the supsub group

          supsub.value.base = base; // Rerender the supsub group with its new base, and store that
          // result.

          supsubGroup = __WEBPACK_IMPORTED_MODULE_5__buildHTML__["b"
          /* buildGroup */
          ](supsub, options);
        } // Build the base group


        var body = __WEBPACK_IMPORTED_MODULE_5__buildHTML__["b"
        /* buildGroup */
        ](base, options.havingCrampedStyle()); // Does the accent need to shift for the skew of a character?


        var mustShift = group.value.isShifty && __WEBPACK_IMPORTED_MODULE_3__utils__["a"
        /* default */
        ].isCharacterBox(base); // Calculate the skew of the accent. This is based on the line "If the
        // nucleus is not a single character, let s = 0; otherwise set s to the
        // kern amount for the nucleus followed by the \skewchar of its font."
        // Note that our skew metrics are just the kern between each character
        // and the skewchar.


        var skew = 0;

        if (mustShift) {
          // If the base is a character box, then we want the skew of the
          // innermost character. To do that, we find the innermost character:
          var baseChar = __WEBPACK_IMPORTED_MODULE_3__utils__["a"
          /* default */
          ].getBaseElem(base); // Then, we render its group to get the symbol inside it


          var baseGroup = __WEBPACK_IMPORTED_MODULE_5__buildHTML__["b"
          /* buildGroup */
          ](baseChar, options.havingCrampedStyle()); // Finally, we pull the skew off of the symbol.


          skew = baseGroup.skew; // Note that we now throw away baseGroup, because the layers we
          // removed with getBaseElem might contain things like \color which
          // we can't get rid of.
          // TODO(emily): Find a better way to get the skew
        } // calculate the amount of space between the body and the accent


        var clearance = Math.min(body.height, options.fontMetrics().xHeight); // Build the accent

        var accentBody = void 0;

        if (!group.value.isStretchy) {
          var accent = void 0;
          var width = void 0;

          if (group.value.label === "\\vec") {
            // Before version 0.9, \vec used the combining font glyph U+20D7.
            // But browsers, especially Safari, are not consistent in how they
            // render combining characters when not preceded by a character.
            // So now we use an SVG.
            // If Safari reforms, we should consider reverting to the glyph.
            accent = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].staticSvg("vec", options);
            width = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].svgData.vec[1];
          } else {
            accent = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
            /* default */
            ].makeSymbol(group.value.label, "Main-Regular", group.mode, options); // Remove the italic correction of the accent, because it only serves to
            // shift the accent over to a place we don't want.

            accent.italic = 0;
            width = accent.width;
          }

          accentBody = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["accent-body"], [accent]); // CSS defines `.katex .accent .accent-body { width: 0 }`
          // so that the accent doesn't contribute to the bounding box.
          // We need to shift the character by its width (effectively half
          // its width) to compensate.

          var left = -width / 2; // Shift the accent over by the skew.

          left += skew;
          accentBody.style.left = left + "em";
          accentBody = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "firstBaseline",
            children: [{
              type: "elem",
              elem: body
            }, {
              type: "kern",
              size: -clearance
            }, {
              type: "elem",
              elem: accentBody
            }]
          }, options);
        } else {
          accentBody = __WEBPACK_IMPORTED_MODULE_4__stretchy__["a"
          /* default */
          ].svgSpan(group, options);
          accentBody = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "firstBaseline",
            children: [{
              type: "elem",
              elem: body
            }, {
              type: "elem",
              elem: accentBody,
              wrapperClasses: ["svg-align"],
              wrapperStyle: skew > 0 ? {
                width: "calc(100% - " + 2 * skew + "em)",
                marginLeft: 2 * skew + "em"
              } : undefined
            }]
          }, options);
        }

        var accentWrap = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
        /* default */
        ].makeSpan(["mord", "accent"], [accentBody], options);

        if (supsubGroup) {
          // Here, we replace the "base" child of the supsub with our newly
          // generated accent.
          supsubGroup.children[0] = accentWrap; // Since we don't rerun the height calculation after replacing the
          // accent, we manually recalculate height.

          supsubGroup.height = Math.max(accentWrap.height, supsubGroup.height); // Accents should always be ords, even when their innards are not.

          supsubGroup.classes[0] = "mord";
          return supsubGroup;
        } else {
          return accentWrap;
        }
      };

      var mathmlBuilder = function mathmlBuilder(group, options) {
        var accentNode = void 0;

        if (group.value.isStretchy) {
          accentNode = __WEBPACK_IMPORTED_MODULE_4__stretchy__["a"
          /* default */
          ].mathMLnode(group.value.label);
        } else {
          accentNode = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mo", [__WEBPACK_IMPORTED_MODULE_6__buildMathML__["e"
          /* makeText */
          ](group.value.label, group.mode)]);
        }

        var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mover", [__WEBPACK_IMPORTED_MODULE_6__buildMathML__["b"
        /* buildGroup */
        ](group.value.base, options), accentNode]);
        node.setAttribute("accent", "true");
        return node;
      };

      var NON_STRETCHY_ACCENT_REGEX = new RegExp(["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring"].map(function (accent) {
        return "\\" + accent;
      }).join("|")); // Accents

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "accent",
        names: ["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring", "\\widehat", "\\widetilde", "\\overrightarrow", "\\overleftarrow", "\\Overrightarrow", "\\overleftrightarrow", "\\overgroup", "\\overlinesegment", "\\overleftharpoon", "\\overrightharpoon"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var base = args[0];
          var isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);
          var isShifty = !isStretchy || context.funcName === "\\widehat" || context.funcName === "\\widetilde";
          return {
            type: "accent",
            label: context.funcName,
            isStretchy: isStretchy,
            isShifty: isShifty,
            base: base
          };
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      }); // Text-mode accents

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "accent",
        names: ["\\'", "\\`", "\\^", "\\~", "\\=", "\\u", "\\.", '\\"', "\\r", "\\H", "\\v"],
        props: {
          numArgs: 1,
          allowedInText: true,
          allowedInMath: false
        },
        handler: function handler(context, args) {
          var base = args[0];
          return {
            type: "accent",
            label: context.funcName,
            isStretchy: false,
            isShifty: true,
            base: base
          };
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      });
      /***/
    },
    /* 138 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__stretchy__ = __webpack_require__(13);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__buildMathML__ = __webpack_require__(2); // Horizontal overlap functions


      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "accentUnder",
        names: ["\\underleftarrow", "\\underrightarrow", "\\underleftrightarrow", "\\undergroup", "\\underlinesegment", "\\utilde"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var base = args[0];
          return {
            type: "accentUnder",
            label: context.funcName,
            base: base
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          // Treat under accents much like underlines.
          var innerGroup = __WEBPACK_IMPORTED_MODULE_4__buildHTML__["b"
          /* buildGroup */
          ](group.value.base, options);

          var accentBody = __WEBPACK_IMPORTED_MODULE_3__stretchy__["a"
          /* default */
          ].svgSpan(group, options);

          var kern = group.value.label === "\\utilde" ? 0.12 : 0; // Generate the vlist, with the appropriate kerns

          var vlist = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "bottom",
            positionData: accentBody.height + kern,
            children: [{
              type: "elem",
              elem: accentBody,
              wrapperClasses: ["svg-align"]
            }, {
              type: "kern",
              size: kern
            }, {
              type: "elem",
              elem: innerGroup
            }]
          }, options);

          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mord", "accentunder"], [vlist], options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var accentNode = __WEBPACK_IMPORTED_MODULE_3__stretchy__["a"
          /* default */
          ].mathMLnode(group.value.label);

          var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("munder", [__WEBPACK_IMPORTED_MODULE_5__buildMathML__["b"
          /* buildGroup */
          ](group.value.body, options), accentNode]);
          node.setAttribute("accentunder", "true");
          return node;
        }
      });
      /***/
    },
    /* 139 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__ParseError__ = __webpack_require__(6);

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "verb",
        names: ["\\verb"],
        props: {
          numArgs: 0,
          allowedInText: true
        },
        handler: function handler(context, args, optArgs) {
          // \verb and \verb* are dealt with directly in Parser.js.
          // If we end up here, it's because of a failure to match the two delimiters
          // in the regex in Lexer.js.  LaTeX raises the following error when \verb is
          // terminated by end of line (or file).
          throw new __WEBPACK_IMPORTED_MODULE_3__ParseError__["a"
          /* default */
          ]("\\verb ended by end of line instead of matching delimiter");
        },
        htmlBuilder: function htmlBuilder(group, options) {
          var text = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeVerb(group, options);

          var body = []; // \verb enters text mode and therefore is sized like \textstyle

          var newOptions = options.havingStyle(options.style.text());

          for (var i = 0; i < text.length; i++) {
            if (text[i] === '\xA0') {
              // spaces appear as nonbreaking space
              // The space character isn't in the Typewriter-Regular font,
              // so we implement it as a kern of the same size as a character.
              // 0.525 is the width of a texttt character in LaTeX.
              // It automatically gets scaled by the font size.
              var rule = __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
              /* default */
              ].makeSpan(["mord", "rule"], [], newOptions);

              rule.style.marginLeft = "0.525em";
              body.push(rule);
            } else {
              body.push(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
              /* default */
              ].makeSymbol(text[i], "Typewriter-Regular", group.mode, newOptions, ["mathtt"]));
            }
          }

          __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].tryCombineChars(body);

          return __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeSpan(["mord", "text"].concat(newOptions.sizingClasses(options)), // tryCombinChars expects CombinableDomNode[] while makeSpan expects
          // DomChildNode[].
          // $FlowFixMe: CombinableDomNode[] is not compatible with DomChildNode[]
          body, newOptions);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var text = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].TextNode(__WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeVerb(group, options));
          var node = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mtext", [text]);
          node.setAttribute("mathvariant", __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].fontMap["mathtt"].variant);
          return node;
        }
      });
      /***/
    },
    /* 140 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildMathML__ = __webpack_require__(2);

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "href",
        names: ["\\href"],
        props: {
          numArgs: 2,
          argTypes: ["url", "original"]
        },
        handler: function handler(context, args) {
          var body = args[1];
          var href = args[0].value;
          return {
            type: "href",
            href: href,
            body: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(body)
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          var elements = __WEBPACK_IMPORTED_MODULE_3__buildHTML__["a"
          /* buildExpression */
          ](group.value.body, options, false);

          var href = group.value.href;
          return new __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeAnchor(href, [], elements, options);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var inner = __WEBPACK_IMPORTED_MODULE_4__buildMathML__["a"
          /* buildExpression */
          ](group.value.body, options);

          var math = new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mrow", inner);
          math.setAttribute("href", group.value.href);
          return math;
        }
      });
      /***/
    },
    /* 141 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineFunction__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__Style__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__buildMathML__ = __webpack_require__(2);

      var chooseMathStyle = function chooseMathStyle(group, options) {
        var style = options.style;

        if (style.size === __WEBPACK_IMPORTED_MODULE_3__Style__["a"
        /* default */
        ].DISPLAY.size) {
          return group.value.display;
        } else if (style.size === __WEBPACK_IMPORTED_MODULE_3__Style__["a"
        /* default */
        ].TEXT.size) {
          return group.value.text;
        } else if (style.size === __WEBPACK_IMPORTED_MODULE_3__Style__["a"
        /* default */
        ].SCRIPT.size) {
          return group.value.script;
        } else if (style.size === __WEBPACK_IMPORTED_MODULE_3__Style__["a"
        /* default */
        ].SCRIPTSCRIPT.size) {
          return group.value.scriptscript;
        }

        return group.value.text;
      };

      Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["b"
      /* default */
      ])({
        type: "mathchoice",
        names: ["\\mathchoice"],
        props: {
          numArgs: 4
        },
        handler: function handler(context, args) {
          return {
            type: "mathchoice",
            display: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(args[0]),
            text: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(args[1]),
            script: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(args[2]),
            scriptscript: Object(__WEBPACK_IMPORTED_MODULE_0__defineFunction__["c"
            /* ordargument */
            ])(args[3])
          };
        },
        htmlBuilder: function htmlBuilder(group, options) {
          var body = chooseMathStyle(group, options);

          var elements = __WEBPACK_IMPORTED_MODULE_4__buildHTML__["a"
          /* buildExpression */
          ](body, options, false);

          return new __WEBPACK_IMPORTED_MODULE_1__buildCommon__["a"
          /* default */
          ].makeFragment(elements);
        },
        mathmlBuilder: function mathmlBuilder(group, options) {
          var body = chooseMathStyle(group, options);

          var elements = __WEBPACK_IMPORTED_MODULE_5__buildMathML__["a"
          /* buildExpression */
          ](body, options, false);

          return new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mrow", elements);
        }
      });
      /***/
    },
    /* 142 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__defineEnvironment__ = __webpack_require__(61);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__environments_array_js__ = __webpack_require__(143);

      var environments = __WEBPACK_IMPORTED_MODULE_0__defineEnvironment__["a"
      /* _environments */
      ];
      /* harmony default export */

      __webpack_exports__["a"] = environments; // All environment definitions should be imported below

      /***/
    },
    /* 143 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__buildCommon__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__defineEnvironment__ = __webpack_require__(61);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__mathMLTree__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__ParseError__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__ParseNode__ = __webpack_require__(14);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__units__ = __webpack_require__(19);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__utils__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__stretchy__ = __webpack_require__(13);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_8__buildHTML__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_9__buildMathML__ = __webpack_require__(2); // Data stored in the ParseNode associated with the environment.

      /**
       * Parse the body of the environment, with rows delimited by \\ and
       * columns delimited by &, and create a nested list in row-major order
       * with one group per cell.  If given an optional argument style
       * ("text", "display", etc.), then each cell is cast into that style.
       */


      function parseArray(parser, result, style) {
        var row = [];
        var body = [row];
        var rowGaps = [];

        while (true) {
          // eslint-disable-line no-constant-condition
          var cell = parser.parseExpression(false, undefined);
          cell = new __WEBPACK_IMPORTED_MODULE_4__ParseNode__["a"
          /* default */
          ]("ordgroup", cell, parser.mode);

          if (style) {
            cell = new __WEBPACK_IMPORTED_MODULE_4__ParseNode__["a"
            /* default */
            ]("styling", {
              style: style,
              value: [cell]
            }, parser.mode);
          }

          row.push(cell);
          var next = parser.nextToken.text;

          if (next === "&") {
            parser.consume();
          } else if (next === "\\end") {
            // Arrays terminate newlines with `\crcr` which consumes a `\cr` if
            // the last line is empty.
            var lastRow = body[body.length - 1];

            if (body.length > 1 && lastRow.length === 1 && lastRow[0].value.value[0].value.length === 0) {
              body.pop();
            }

            break;
          } else if (next === "\\\\" || next === "\\cr") {
            var cr = parser.parseFunction();

            if (!cr) {
              throw new __WEBPACK_IMPORTED_MODULE_3__ParseError__["a"
              /* default */
              ]("Failed to parse function after " + next);
            }

            rowGaps.push(cr.value.size);
            row = [];
            body.push(row);
          } else {
            throw new __WEBPACK_IMPORTED_MODULE_3__ParseError__["a"
            /* default */
            ]("Expected & or \\\\ or \\end", parser.nextToken);
          }
        }

        result.body = body;
        result.rowGaps = rowGaps;
        return new __WEBPACK_IMPORTED_MODULE_4__ParseNode__["a"
        /* default */
        ](result.type, result, parser.mode);
      } // Decides on a style for cells in an array according to whether the given
      // environment name starts with the letter 'd'.


      function dCellStyle(envName) {
        if (envName.substr(0, 1) === "d") {
          return "display";
        } else {
          return "text";
        }
      }

      var htmlBuilder = function htmlBuilder(group, options) {
        var r = void 0;
        var c = void 0;
        var nr = group.value.body.length;
        var nc = 0;
        var body = new Array(nr); // Horizontal spacing

        var pt = 1 / options.fontMetrics().ptPerEm;
        var arraycolsep = 5 * pt; // \arraycolsep in article.cls
        // Vertical spacing

        var baselineskip = 12 * pt; // see size10.clo
        // Default \jot from ltmath.dtx
        // TODO(edemaine): allow overriding \jot via \setlength (#687)

        var jot = 3 * pt; // Default \arraystretch from lttab.dtx
        // TODO(gagern): may get redefined once we have user-defined macros

        var arraystretch = __WEBPACK_IMPORTED_MODULE_6__utils__["a"
        /* default */
        ].deflt(group.value.arraystretch, 1);

        var arrayskip = arraystretch * baselineskip;
        var arstrutHeight = 0.7 * arrayskip; // \strutbox in ltfsstrc.dtx and

        var arstrutDepth = 0.3 * arrayskip; // \@arstrutbox in lttab.dtx

        var totalHeight = 0;

        for (r = 0; r < group.value.body.length; ++r) {
          var inrow = group.value.body[r];
          var _height = arstrutHeight; // \@array adds an \@arstrut

          var _depth = arstrutDepth; // to each tow (via the template)

          if (nc < inrow.length) {
            nc = inrow.length;
          }

          var outrow = new Array(inrow.length);

          for (c = 0; c < inrow.length; ++c) {
            var elt = __WEBPACK_IMPORTED_MODULE_8__buildHTML__["b"
            /* buildGroup */
            ](inrow[c], options);

            if (_depth < elt.depth) {
              _depth = elt.depth;
            }

            if (_height < elt.height) {
              _height = elt.height;
            }

            outrow[c] = elt;
          }

          var gap = 0;

          if (group.value.rowGaps[r]) {
            gap = Object(__WEBPACK_IMPORTED_MODULE_5__units__["a"
            /* calculateSize */
            ])(group.value.rowGaps[r].value, options);

            if (gap > 0) {
              // \@argarraycr
              gap += arstrutDepth;

              if (_depth < gap) {
                _depth = gap; // \@xargarraycr
              }

              gap = 0;
            }
          } // In AMS multiline environments such as aligned and gathered, rows
          // correspond to lines that have additional \jot added to the
          // \baselineskip via \openup.


          if (group.value.addJot) {
            _depth += jot;
          }

          outrow.height = _height;
          outrow.depth = _depth;
          totalHeight += _height;
          outrow.pos = totalHeight;
          totalHeight += _depth + gap; // \@yargarraycr

          body[r] = outrow;
        }

        var offset = totalHeight / 2 + options.fontMetrics().axisHeight;
        var colDescriptions = group.value.cols || [];
        var cols = [];
        var colSep = void 0;
        var colDescrNum = void 0;

        for (c = 0, colDescrNum = 0; // Continue while either there are more columns or more column
        // descriptions, so trailing separators don't get lost.
        c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {
          var colDescr = colDescriptions[colDescrNum] || {};
          var firstSeparator = true;

          while (colDescr.type === "separator") {
            // If there is more than one separator in a row, add a space
            // between them.
            if (!firstSeparator) {
              colSep = __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
              /* default */
              ].makeSpan(["arraycolsep"], []);
              colSep.style.width = options.fontMetrics().doubleRuleSep + "em";
              cols.push(colSep);
            }

            if (colDescr.separator === "|") {
              var _separator = __WEBPACK_IMPORTED_MODULE_7__stretchy__["a"
              /* default */
              ].ruleSpan("vertical-separator", 0.05, options);

              _separator.style.height = totalHeight + "em";
              _separator.style.verticalAlign = -(totalHeight - offset) + "em";
              cols.push(_separator);
            } else {
              throw new __WEBPACK_IMPORTED_MODULE_3__ParseError__["a"
              /* default */
              ]("Invalid separator type: " + colDescr.separator);
            }

            colDescrNum++;
            colDescr = colDescriptions[colDescrNum] || {};
            firstSeparator = false;
          }

          if (c >= nc) {
            continue;
          }

          var sepwidth = void 0;

          if (c > 0 || group.value.hskipBeforeAndAfter) {
            sepwidth = __WEBPACK_IMPORTED_MODULE_6__utils__["a"
            /* default */
            ].deflt(colDescr.pregap, arraycolsep);

            if (sepwidth !== 0) {
              colSep = __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
              /* default */
              ].makeSpan(["arraycolsep"], []);
              colSep.style.width = sepwidth + "em";
              cols.push(colSep);
            }
          }

          var col = [];

          for (r = 0; r < nr; ++r) {
            var row = body[r];
            var elem = row[c];

            if (!elem) {
              continue;
            }

            var shift = row.pos - offset;
            elem.depth = row.depth;
            elem.height = row.height;
            col.push({
              type: "elem",
              elem: elem,
              shift: shift
            });
          }

          col = __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
          /* default */
          ].makeVList({
            positionType: "individualShift",
            children: col
          }, options);
          col = __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
          /* default */
          ].makeSpan(["col-align-" + (colDescr.align || "c")], [col]);
          cols.push(col);

          if (c < nc - 1 || group.value.hskipBeforeAndAfter) {
            sepwidth = __WEBPACK_IMPORTED_MODULE_6__utils__["a"
            /* default */
            ].deflt(colDescr.postgap, arraycolsep);

            if (sepwidth !== 0) {
              colSep = __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
              /* default */
              ].makeSpan(["arraycolsep"], []);
              colSep.style.width = sepwidth + "em";
              cols.push(colSep);
            }
          }
        }

        body = __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
        /* default */
        ].makeSpan(["mtable"], cols);
        return __WEBPACK_IMPORTED_MODULE_0__buildCommon__["a"
        /* default */
        ].makeSpan(["mord"], [body], options);
      };

      var mathmlBuilder = function mathmlBuilder(group, options) {
        return new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
        /* default */
        ].MathNode("mtable", group.value.body.map(function (row) {
          return new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
          /* default */
          ].MathNode("mtr", row.map(function (cell) {
            return new __WEBPACK_IMPORTED_MODULE_2__mathMLTree__["a"
            /* default */
            ].MathNode("mtd", [__WEBPACK_IMPORTED_MODULE_9__buildMathML__["b"
            /* buildGroup */
            ](cell, options)]);
          }));
        }));
      }; // Convinient function for aligned and alignedat environments.


      var alignedHandler = function alignedHandler(context, args) {
        var res = {
          type: "array",
          cols: [],
          addJot: true
        };
        res = parseArray(context.parser, res, "display"); // Determining number of columns.
        // 1. If the first argument is given, we use it as a number of columns,
        //    and makes sure that each row doesn't exceed that number.
        // 2. Otherwise, just count number of columns = maximum number
        //    of cells in each row ("aligned" mode -- isAligned will be true).
        //
        // At the same time, prepend empty group {} at beginning of every second
        // cell in each row (starting with second cell) so that operators become
        // binary.  This behavior is implemented in amsmath's \start@aligned.

        var numMaths = void 0;
        var numCols = 0;
        var emptyGroup = new __WEBPACK_IMPORTED_MODULE_4__ParseNode__["a"
        /* default */
        ]("ordgroup", [], context.mode);

        if (args[0] && args[0].value) {
          var arg0 = "";

          for (var i = 0; i < args[0].value.length; i++) {
            arg0 += args[0].value[i].value;
          }

          numMaths = Number(arg0);
          numCols = numMaths * 2;
        }

        var isAligned = !numCols;
        res.value.body.forEach(function (row) {
          for (var _i = 1; _i < row.length; _i += 2) {
            // Modify ordgroup node within styling node
            var ordgroup = row[_i].value.value[0];
            ordgroup.value.unshift(emptyGroup);
          }

          if (!isAligned) {
            // Case 1
            var curMaths = row.length / 2;

            if (numMaths < curMaths) {
              throw new __WEBPACK_IMPORTED_MODULE_3__ParseError__["a"
              /* default */
              ]("Too many math in a row: " + ("expected " + numMaths + ", but got " + curMaths), row);
            }
          } else if (numCols < row.length) {
            // Case 2
            numCols = row.length;
          }
        }); // Adjusting alignment.
        // In aligned mode, we add one \qquad between columns;
        // otherwise we add nothing.

        for (var _i2 = 0; _i2 < numCols; ++_i2) {
          var _align = "r";
          var _pregap = 0;

          if (_i2 % 2 === 1) {
            _align = "l";
          } else if (_i2 > 0 && isAligned) {
            // "aligned" mode.
            _pregap = 1; // add one \quad
          }

          res.value.cols[_i2] = {
            type: "align",
            align: _align,
            pregap: _pregap,
            postgap: 0
          };
        }

        return res;
      }; // Arrays are part of LaTeX, defined in lttab.dtx so its documentation
      // is part of the source2e.pdf file of LaTeX2e source documentation.
      // {darray} is an {array} environment where cells are set in \displaystyle,
      // as defined in nccmath.sty.


      Object(__WEBPACK_IMPORTED_MODULE_1__defineEnvironment__["b"
      /* default */
      ])({
        type: "array",
        names: ["array", "darray"],
        props: {
          numArgs: 1
        },
        handler: function handler(context, args) {
          var colalign = args[0];
          colalign = colalign.value.map ? colalign.value : [colalign];
          var cols = colalign.map(function (node) {
            var ca = node.value;

            if ("lcr".indexOf(ca) !== -1) {
              return {
                type: "align",
                align: ca
              };
            } else if (ca === "|") {
              return {
                type: "separator",
                separator: "|"
              };
            }

            throw new __WEBPACK_IMPORTED_MODULE_3__ParseError__["a"
            /* default */
            ]("Unknown column alignment: " + node.value, node);
          });
          var res = {
            type: "array",
            cols: cols,
            hskipBeforeAndAfter: true // \@preamble in lttab.dtx

          };
          res = parseArray(context.parser, res, dCellStyle(context.envName));
          return res;
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      }); // The matrix environments of amsmath builds on the array environment
      // of LaTeX, which is discussed above.

      Object(__WEBPACK_IMPORTED_MODULE_1__defineEnvironment__["b"
      /* default */
      ])({
        type: "array",
        names: ["matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix"],
        props: {
          numArgs: 0
        },
        handler: function handler(context) {
          var delimiters = {
            "matrix": null,
            "pmatrix": ["(", ")"],
            "bmatrix": ["[", "]"],
            "Bmatrix": ["\\{", "\\}"],
            "vmatrix": ["|", "|"],
            "Vmatrix": ["\\Vert", "\\Vert"]
          }[context.envName];
          var res = {
            type: "array",
            hskipBeforeAndAfter: false // \hskip -\arraycolsep in amsmath

          };
          res = parseArray(context.parser, res, dCellStyle(context.envName));

          if (delimiters) {
            res = new __WEBPACK_IMPORTED_MODULE_4__ParseNode__["a"
            /* default */
            ]("leftright", {
              body: [res],
              left: delimiters[0],
              right: delimiters[1]
            }, context.mode);
          }

          return res;
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      }); // A cases environment (in amsmath.sty) is almost equivalent to
      // \def\arraystretch{1.2}%
      // \left\{\begin{array}{@{}l@{\quad}l@{}} … \end{array}\right.
      // {dcases} is a {cases} environment where cells are set in \displaystyle,
      // as defined in mathtools.sty.

      Object(__WEBPACK_IMPORTED_MODULE_1__defineEnvironment__["b"
      /* default */
      ])({
        type: "array",
        names: ["cases", "dcases"],
        props: {
          numArgs: 0
        },
        handler: function handler(context) {
          var res = {
            type: "array",
            arraystretch: 1.2,
            cols: [{
              type: "align",
              align: "l",
              pregap: 0,
              // TODO(kevinb) get the current style.
              // For now we use the metrics for TEXT style which is what we were
              // doing before.  Before attempting to get the current style we
              // should look at TeX's behavior especially for \over and matrices.
              postgap: 1.0
              /* 1em quad */

            }, {
              type: "align",
              align: "l",
              pregap: 0,
              postgap: 0
            }]
          };
          res = parseArray(context.parser, res, dCellStyle(context.envName));
          res = new __WEBPACK_IMPORTED_MODULE_4__ParseNode__["a"
          /* default */
          ]("leftright", {
            body: [res],
            left: "\\{",
            right: "."
          }, context.mode);
          return res;
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      }); // An aligned environment is like the align* environment
      // except it operates within math mode.
      // Note that we assume \nomallineskiplimit to be zero,
      // so that \strut@ is the same as \strut.

      Object(__WEBPACK_IMPORTED_MODULE_1__defineEnvironment__["b"
      /* default */
      ])({
        type: "array",
        names: ["aligned"],
        props: {
          numArgs: 0
        },
        handler: alignedHandler,
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      }); // A gathered environment is like an array environment with one centered
      // column, but where rows are considered lines so get \jot line spacing
      // and contents are set in \displaystyle.

      Object(__WEBPACK_IMPORTED_MODULE_1__defineEnvironment__["b"
      /* default */
      ])({
        type: "array",
        names: ["gathered"],
        props: {
          numArgs: 0
        },
        handler: function handler(context) {
          var res = {
            type: "array",
            cols: [{
              type: "align",
              align: "c"
            }],
            addJot: true
          };
          res = parseArray(context.parser, res, "display");
          return res;
        },
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      }); // alignat environment is like an align environment, but one must explicitly
      // specify maximum number of columns in each row, and can adjust spacing between
      // each columns.

      Object(__WEBPACK_IMPORTED_MODULE_1__defineEnvironment__["b"
      /* default */
      ])({
        type: "array",
        names: ["alignedat"],
        // One for numbered and for unnumbered;
        // but, KaTeX doesn't supports math numbering yet,
        // they make no difference for now.
        props: {
          numArgs: 1
        },
        handler: alignedHandler,
        htmlBuilder: htmlBuilder,
        mathmlBuilder: mathmlBuilder
      });
      /***/
    },
    /* 144 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(35);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__Lexer__ = __webpack_require__(62);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__Token__ = __webpack_require__(27);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__macros__ = __webpack_require__(146);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__ParseError__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7_object_assign__ = __webpack_require__(147);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_object_assign__);
      /**
       * This file contains the “gullet” where macros are expanded
       * until only non-macro tokens remain.
       */


      var MacroExpander = function () {
        function MacroExpander(input, macros, mode) {
          __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, MacroExpander);

          this.lexer = new __WEBPACK_IMPORTED_MODULE_3__Lexer__["c"
          /* default */
          ](input);
          this.macros = __WEBPACK_IMPORTED_MODULE_7_object_assign___default()({}, __WEBPACK_IMPORTED_MODULE_5__macros__["a"
          /* default */
          ], macros);
          this.mode = mode;
          this.stack = []; // contains tokens in REVERSE order
        }
        /**
         * Switches between "text" and "math" modes.
         */


        __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(MacroExpander, [{
          key: "switchMode",
          value: function switchMode(newMode) {
            this.mode = newMode;
          }
          /**
           * Returns the topmost token on the stack, without expanding it.
           * Similar in behavior to TeX's `\futurelet`.
           */

        }, {
          key: "future",
          value: function future() {
            if (this.stack.length === 0) {
              this.pushToken(this.lexer.lex());
            }

            return this.stack[this.stack.length - 1];
          }
          /**
           * Remove and return the next unexpanded token.
           */

        }, {
          key: "popToken",
          value: function popToken() {
            this.future(); // ensure non-empty stack

            return this.stack.pop();
          }
          /**
           * Add a given token to the token stack.  In particular, this get be used
           * to put back a token returned from one of the other methods.
           */

        }, {
          key: "pushToken",
          value: function pushToken(token) {
            this.stack.push(token);
          }
          /**
           * Append an array of tokens to the token stack.
           */

        }, {
          key: "pushTokens",
          value: function pushTokens(tokens) {
            var _stack;

            (_stack = this.stack).push.apply(_stack, __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(tokens));
          }
          /**
           * Consume all following space tokens, without expansion.
           */

        }, {
          key: "consumeSpaces",
          value: function consumeSpaces() {
            for (;;) {
              var token = this.future();

              if (token.text === " ") {
                this.stack.pop();
              } else {
                break;
              }
            }
          }
          /**
           * Consume the specified number of arguments from the token stream,
           * and return the resulting array of arguments.
           */

        }, {
          key: "consumeArgs",
          value: function consumeArgs(numArgs) {
            var args = []; // obtain arguments, either single token or balanced {…} group

            for (var i = 0; i < numArgs; ++i) {
              this.consumeSpaces(); // ignore spaces before each argument

              var startOfArg = this.popToken();

              if (startOfArg.text === "{") {
                var arg = [];
                var depth = 1;

                while (depth !== 0) {
                  var tok = this.popToken();
                  arg.push(tok);

                  if (tok.text === "{") {
                    ++depth;
                  } else if (tok.text === "}") {
                    --depth;
                  } else if (tok.text === "EOF") {
                    throw new __WEBPACK_IMPORTED_MODULE_6__ParseError__["a"
                    /* default */
                    ]("End of input in macro argument", startOfArg);
                  }
                }

                arg.pop(); // remove last }

                arg.reverse(); // like above, to fit in with stack order

                args[i] = arg;
              } else if (startOfArg.text === "EOF") {
                throw new __WEBPACK_IMPORTED_MODULE_6__ParseError__["a"
                /* default */
                ]("End of input expecting macro argument");
              } else {
                args[i] = [startOfArg];
              }
            }

            return args;
          }
          /**
           * Expand the next token only once if possible.
           *
           * If the token is expanded, the resulting tokens will be pushed onto
           * the stack in reverse order and will be returned as an array,
           * also in reverse order.
           *
           * If not, the next token will be returned without removing it
           * from the stack.  This case can be detected by a `Token` return value
           * instead of an `Array` return value.
           *
           * In either case, the next token will be on the top of the stack,
           * or the stack will be empty.
           *
           * Used to implement `expandAfterFuture` and `expandNextToken`.
           *
           * At the moment, macro expansion doesn't handle delimited macros,
           * i.e. things like those defined by \def\foo#1\end{…}.
           * See the TeX book page 202ff. for details on how those should behave.
           */

        }, {
          key: "expandOnce",
          value: function expandOnce() {
            var topToken = this.popToken();
            var name = topToken.text;
            var isMacro = name.charAt(0) === "\\";

            if (isMacro && __WEBPACK_IMPORTED_MODULE_3__Lexer__["b"
            /* controlWordRegex */
            ].test(name)) {
              // Consume all spaces after \macro (but not \\, \', etc.)
              this.consumeSpaces();
            }

            if (!this.macros.hasOwnProperty(name)) {
              // Fully expanded
              this.pushToken(topToken);
              return topToken;
            }

            var _getExpansion2 = this._getExpansion(name),
                tokens = _getExpansion2.tokens,
                numArgs = _getExpansion2.numArgs;

            var expansion = tokens;

            if (numArgs) {
              var args = this.consumeArgs(numArgs); // paste arguments in place of the placeholders

              expansion = expansion.slice(); // make a shallow copy

              for (var i = expansion.length - 1; i >= 0; --i) {
                var tok = expansion[i];

                if (tok.text === "#") {
                  if (i === 0) {
                    throw new __WEBPACK_IMPORTED_MODULE_6__ParseError__["a"
                    /* default */
                    ]("Incomplete placeholder at end of macro body", tok);
                  }

                  tok = expansion[--i]; // next token on stack

                  if (tok.text === "#") {
                    // ## → #
                    expansion.splice(i + 1, 1); // drop first #
                  } else if (/^[1-9]$/.test(tok.text)) {
                    var _expansion; // replace the placeholder with the indicated argument


                    (_expansion = expansion).splice.apply(_expansion, [i, 2].concat(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(args[+tok.text - 1])));
                  } else {
                    throw new __WEBPACK_IMPORTED_MODULE_6__ParseError__["a"
                    /* default */
                    ]("Not a valid argument number", tok);
                  }
                }
              }
            } // Concatenate expansion onto top of stack.


            this.pushTokens(expansion);
            return expansion;
          }
          /**
           * Expand the next token only once (if possible), and return the resulting
           * top token on the stack (without removing anything from the stack).
           * Similar in behavior to TeX's `\expandafter\futurelet`.
           * Equivalent to expandOnce() followed by future().
           */

        }, {
          key: "expandAfterFuture",
          value: function expandAfterFuture() {
            this.expandOnce();
            return this.future();
          }
          /**
           * Recursively expand first token, then return first non-expandable token.
           */

        }, {
          key: "expandNextToken",
          value: function expandNextToken() {
            for (;;) {
              var expanded = this.expandOnce(); // expandOnce returns Token if and only if it's fully expanded.

              if (expanded instanceof __WEBPACK_IMPORTED_MODULE_4__Token__["a"
              /* Token */
              ]) {
                // \relax stops the expansion, but shouldn't get returned (a
                // null return value couldn't get implemented as a function).
                if (expanded.text === "\\relax") {
                  this.stack.pop();
                } else {
                  return this.stack.pop(); // === expanded
                }
              }
            } // Flow unable to figure out that this pathway is impossible.
            // https://github.com/facebook/flow/issues/4808


            throw new Error(); // eslint-disable-line no-unreachable
          }
          /**
           * Returns the expanded macro as a reversed array of tokens and a macro
           * argument count.
           * Caches macro expansions for those that were defined simple TeX strings.
           */

        }, {
          key: "_getExpansion",
          value: function _getExpansion(name) {
            var definition = this.macros[name];
            var expansion = typeof definition === "function" ? definition(this) : definition;

            if (typeof expansion === "string") {
              var numArgs = 0;

              if (expansion.indexOf("#") !== -1) {
                var stripped = expansion.replace(/##/g, "");

                while (stripped.indexOf("#" + (numArgs + 1)) !== -1) {
                  ++numArgs;
                }
              }

              var bodyLexer = new __WEBPACK_IMPORTED_MODULE_3__Lexer__["c"
              /* default */
              ](expansion);
              var tokens = [];
              var tok = bodyLexer.lex();

              while (tok.text !== "EOF") {
                tokens.push(tok);
                tok = bodyLexer.lex();
              }

              tokens.reverse(); // to fit in with stack using push and pop

              var expanded = {
                tokens: tokens,
                numArgs: numArgs
              }; // Cannot cache a macro defined using a function since it relies on
              // parser context.

              if (typeof definition !== "function") {
                this.macros[name] = expanded;
              }

              return expanded;
            }

            return expansion;
          }
        }]);

        return MacroExpander;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = MacroExpander;
      /***/
    },
    /* 145 */

    /***/
    function (module, exports) {
      function getRelocatable(re) {
        // In the future, this could use a WeakMap instead of an expando.
        if (!re.__matchAtRelocatable) {
          // Disjunctions are the lowest-precedence operator, so we can make any
          // pattern match the empty string by appending `|()` to it:
          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-patterns
          var source = re.source + '|()'; // We always make the new regex global.

          var flags = 'g' + (re.ignoreCase ? 'i' : '') + (re.multiline ? 'm' : '') + (re.unicode ? 'u' : '') // sticky (/.../y) doesn't make sense in conjunction with our relocation
          // logic, so we ignore it here.
          ;
          re.__matchAtRelocatable = new RegExp(source, flags);
        }

        return re.__matchAtRelocatable;
      }

      function matchAt(re, str, pos) {
        if (re.global || re.sticky) {
          throw new Error('matchAt(...): Only non-global regexes are supported');
        }

        var reloc = getRelocatable(re);
        reloc.lastIndex = pos;
        var match = reloc.exec(str); // Last capturing group is our sentinel that indicates whether the regex
        // matched at the given location.

        if (match[match.length - 1] == null) {
          // Original regex matched.
          match.length = match.length - 1;
          return match;
        } else {
          return null;
        }
      }

      module.exports = matchAt;
      /***/
    },
    /* 146 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export defineMacro */

      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__submodules_katex_fonts_fontMetricsData__ = __webpack_require__(59);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__symbols__ = __webpack_require__(28);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__utils__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__Token__ = __webpack_require__(27);
      /**
       * Predefined macros for KaTeX.
       * This can be used to define some commands in terms of others.
       */

      /**
       * Provides context to macros defined by functions. Implemented by
       * MacroExpander.
       */

      /** Macro tokens (in reverse order). */


      var builtinMacros = {};
      /* harmony default export */

      __webpack_exports__["a"] = builtinMacros; // This function might one day accept an additional argument and do more things.

      function defineMacro(name, body) {
        builtinMacros[name] = body;
      } //////////////////////////////////////////////////////////////////////
      // macro tools
      // LaTeX's \@firstoftwo{#1}{#2} expands to #1, skipping #2
      // TeX source: \long\def\@firstoftwo#1#2{#1}


      defineMacro("\\@firstoftwo", function (context) {
        var args = context.consumeArgs(2);
        return {
          tokens: args[0],
          numArgs: 0
        };
      }); // LaTeX's \@secondoftwo{#1}{#2} expands to #2, skipping #1
      // TeX source: \long\def\@secondoftwo#1#2{#2}

      defineMacro("\\@secondoftwo", function (context) {
        var args = context.consumeArgs(2);
        return {
          tokens: args[1],
          numArgs: 0
        };
      }); // LaTeX's \@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)
      // symbol.  If it matches #1, then the macro expands to #2; otherwise, #3.
      // Note, however, that it does not consume the next symbol in either case.

      defineMacro("\\@ifnextchar", function (context) {
        var args = context.consumeArgs(3); // symbol, if, else

        var nextToken = context.future();

        if (args[0].length === 1 && args[0][0].text === nextToken.text) {
          return {
            tokens: args[1],
            numArgs: 0
          };
        } else {
          return {
            tokens: args[2],
            numArgs: 0
          };
        }
      }); // LaTeX's \@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.
      // If it is `*`, then it consumes the symbol, and the macro expands to #1;
      // otherwise, the macro expands to #2 (without consuming the symbol).
      // TeX source: \def\@ifstar#1{\@ifnextchar *{\@firstoftwo{#1}}}

      defineMacro("\\@ifstar", "\\@ifnextchar *{\\@firstoftwo{#1}}"); // LaTeX's \TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode

      defineMacro("\\TextOrMath", function (context) {
        var args = context.consumeArgs(2);

        if (context.mode === 'text') {
          return {
            tokens: args[0],
            numArgs: 0
          };
        } else {
          return {
            tokens: args[1],
            numArgs: 0
          };
        }
      }); //////////////////////////////////////////////////////////////////////
      // Grouping
      // \let\bgroup={ \let\egroup=}

      defineMacro("\\bgroup", "{");
      defineMacro("\\egroup", "}");
      defineMacro("\\begingroup", "{");
      defineMacro("\\endgroup", "}"); // Symbols from latex.ltx:
      // \def\lq{`}
      // \def\rq{'}
      // \def\lbrack{[}
      // \def\rbrack{]}
      // \def \aa {\r a}
      // \def \AA {\r A}

      defineMacro("\\lq", "`");
      defineMacro("\\rq", "'");
      defineMacro("\\lbrack", "[");
      defineMacro("\\rbrack", "]");
      defineMacro("\\aa", "\\r a");
      defineMacro("\\AA", "\\r A"); // Unicode double-struck letters

      defineMacro("\u2102", "\\mathbb{C}");
      defineMacro("\u210D", "\\mathbb{H}");
      defineMacro("\u2115", "\\mathbb{N}");
      defineMacro("\u2119", "\\mathbb{P}");
      defineMacro("\u211A", "\\mathbb{Q}");
      defineMacro("\u211D", "\\mathbb{R}");
      defineMacro("\u2124", "\\mathbb{Z}"); // Unicode middle dot
      // The KaTeX fonts do not contain U+00B7. Instead, \cdotp displays
      // the dot at U+22C5 and gives it punct spacing.

      defineMacro("\xB7", "\\cdotp"); // \llap and \rlap render their contents in text mode

      defineMacro("\\llap", "\\mathllap{\\textrm{#1}}");
      defineMacro("\\rlap", "\\mathrlap{\\textrm{#1}}");
      defineMacro("\\clap", "\\mathclap{\\textrm{#1}}"); //////////////////////////////////////////////////////////////////////
      // amsmath.sty
      // http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf
      // Italic Greek capital letters.  AMS defines these with \DeclareMathSymbol,
      // but they are equivalent to \mathit{\Letter}.

      defineMacro("\\varGamma", "\\mathit{\\Gamma}");
      defineMacro("\\varDelta", "\\mathit{\\Delta}");
      defineMacro("\\varTheta", "\\mathit{\\Theta}");
      defineMacro("\\varLambda", "\\mathit{\\Lambda}");
      defineMacro("\\varXi", "\\mathit{\\Xi}");
      defineMacro("\\varPi", "\\mathit{\\Pi}");
      defineMacro("\\varSigma", "\\mathit{\\Sigma}");
      defineMacro("\\varUpsilon", "\\mathit{\\Upsilon}");
      defineMacro("\\varPhi", "\\mathit{\\Phi}");
      defineMacro("\\varPsi", "\\mathit{\\Psi}");
      defineMacro("\\varOmega", "\\mathit{\\Omega}"); // \def\overset#1#2{\binrel@{#2}\binrel@@{\mathop{\kern\z@#2}\limits^{#1}}}

      defineMacro("\\overset", "\\mathop{#2}\\limits^{#1}");
      defineMacro("\\underset", "\\mathop{#2}\\limits_{#1}"); // \newcommand{\boxed}[1]{\fbox{\m@th$\displaystyle#1$}}

      defineMacro("\\boxed", "\\fbox{\\displaystyle{#1}}"); // \def\iff{\DOTSB\;\Longleftrightarrow\;}
      // \def\implies{\DOTSB\;\Longrightarrow\;}
      // \def\impliedby{\DOTSB\;\Longleftarrow\;}

      defineMacro("\\iff", "\\DOTSB\\;\\Longleftrightarrow\\;");
      defineMacro("\\implies", "\\DOTSB\\;\\Longrightarrow\\;");
      defineMacro("\\impliedby", "\\DOTSB\\;\\Longleftarrow\\;"); // AMSMath's automatic \dots, based on \mdots@@ macro.

      var dotsByToken = {
        ',': '\\dotsc',
        '\\not': '\\dotsb',
        // \keybin@ checks for the following:
        '+': '\\dotsb',
        '=': '\\dotsb',
        '<': '\\dotsb',
        '>': '\\dotsb',
        '-': '\\dotsb',
        '*': '\\dotsb',
        ':': '\\dotsb',
        // Symbols whose definition starts with \DOTSB:
        '\\DOTSB': '\\dotsb',
        '\\coprod': '\\dotsb',
        '\\bigvee': '\\dotsb',
        '\\bigwedge': '\\dotsb',
        '\\biguplus': '\\dotsb',
        '\\bigcap': '\\dotsb',
        '\\bigcup': '\\dotsb',
        '\\prod': '\\dotsb',
        '\\sum': '\\dotsb',
        '\\bigotimes': '\\dotsb',
        '\\bigoplus': '\\dotsb',
        '\\bigodot': '\\dotsb',
        '\\bigsqcup': '\\dotsb',
        '\\implies': '\\dotsb',
        '\\impliedby': '\\dotsb',
        '\\And': '\\dotsb',
        '\\longrightarrow': '\\dotsb',
        '\\Longrightarrow': '\\dotsb',
        '\\longleftarrow': '\\dotsb',
        '\\Longleftarrow': '\\dotsb',
        '\\longleftrightarrow': '\\dotsb',
        '\\Longleftrightarrow': '\\dotsb',
        '\\mapsto': '\\dotsb',
        '\\longmapsto': '\\dotsb',
        '\\hookrightarrow': '\\dotsb',
        '\\iff': '\\dotsb',
        '\\doteq': '\\dotsb',
        // Symbols whose definition starts with \mathbin:
        '\\mathbin': '\\dotsb',
        '\\bmod': '\\dotsb',
        // Symbols whose definition starts with \mathrel:
        '\\mathrel': '\\dotsb',
        '\\relbar': '\\dotsb',
        '\\Relbar': '\\dotsb',
        '\\xrightarrow': '\\dotsb',
        '\\xleftarrow': '\\dotsb',
        // Symbols whose definition starts with \DOTSI:
        '\\DOTSI': '\\dotsi',
        '\\int': '\\dotsi',
        '\\oint': '\\dotsi',
        '\\iint': '\\dotsi',
        '\\iiint': '\\dotsi',
        '\\iiiint': '\\dotsi',
        '\\idotsint': '\\dotsi',
        // Symbols whose definition starts with \DOTSX:
        '\\DOTSX': '\\dotsx'
      };
      defineMacro("\\dots", function (context) {
        // TODO: If used in text mode, should expand to \textellipsis.
        // However, in KaTeX, \textellipsis and \ldots behave the same
        // (in text mode), and it's unlikely we'd see any of the math commands
        // that affect the behavior of \dots when in text mode.  So fine for now
        // (until we support \ifmmode ... \else ... \fi).
        var thedots = '\\dotso';
        var next = context.expandAfterFuture().text;

        if (next in dotsByToken) {
          thedots = dotsByToken[next];
        } else if (next.substr(0, 4) === '\\not') {
          thedots = '\\dotsb';
        } else if (next in __WEBPACK_IMPORTED_MODULE_1__symbols__["a"
        /* default */
        ].math) {
          if (__WEBPACK_IMPORTED_MODULE_2__utils__["a"
          /* default */
          ].contains(['bin', 'rel'], __WEBPACK_IMPORTED_MODULE_1__symbols__["a"
          /* default */
          ].math[next].group)) {
            thedots = '\\dotsb';
          }
        }

        return thedots;
      });
      var spaceAfterDots = {
        // \rightdelim@ checks for the following:
        ')': true,
        ']': true,
        '\\rbrack': true,
        '\\}': true,
        '\\rbrace': true,
        '\\rangle': true,
        '\\rceil': true,
        '\\rfloor': true,
        '\\rgroup': true,
        '\\rmoustache': true,
        '\\right': true,
        '\\bigr': true,
        '\\biggr': true,
        '\\Bigr': true,
        '\\Biggr': true,
        // \extra@ also tests for the following:
        '$': true,
        // \extrap@ checks for the following:
        ';': true,
        '.': true,
        ',': true
      };
      defineMacro("\\dotso", function (context) {
        var next = context.future().text;

        if (next in spaceAfterDots) {
          return "\\ldots\\,";
        } else {
          return "\\ldots";
        }
      });
      defineMacro("\\dotsc", function (context) {
        var next = context.future().text; // \dotsc uses \extra@ but not \extrap@, instead specially checking for
        // ';' and '.', but doesn't check for ','.

        if (next in spaceAfterDots && next !== ',') {
          return "\\ldots\\,";
        } else {
          return "\\ldots";
        }
      });
      defineMacro("\\cdots", function (context) {
        var next = context.future().text;

        if (next in spaceAfterDots) {
          return "\\@cdots\\,";
        } else {
          return "\\@cdots";
        }
      });
      defineMacro("\\dotsb", "\\cdots");
      defineMacro("\\dotsm", "\\cdots");
      defineMacro("\\dotsi", "\\!\\cdots"); // amsmath doesn't actually define \dotsx, but \dots followed by a macro
      // starting with \DOTSX implies \dotso, and then \extra@ detects this case
      // and forces the added `\,`.

      defineMacro("\\dotsx", "\\ldots\\,"); // \let\DOTSI\relax
      // \let\DOTSB\relax
      // \let\DOTSX\relax

      defineMacro("\\DOTSI", "\\relax");
      defineMacro("\\DOTSB", "\\relax");
      defineMacro("\\DOTSX", "\\relax"); // http://texdoc.net/texmf-dist/doc/latex/amsmath/amsmath.pdf

      defineMacro("\\thinspace", "\\,"); //   \let\thinspace\,

      defineMacro("\\medspace", "\\:"); //   \let\medspace\:

      defineMacro("\\thickspace", "\\;"); //   \let\thickspace\;
      //////////////////////////////////////////////////////////////////////
      // LaTeX source2e
      // \def\TeX{T\kern-.1667em\lower.5ex\hbox{E}\kern-.125emX\@}
      // TODO: Doesn't normally work in math mode because \@ fails.  KaTeX doesn't
      // support \@ yet, so that's omitted, and we add \text so that the result
      // doesn't look funny in math mode.

      defineMacro("\\TeX", "\\textrm{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}"); // \DeclareRobustCommand{\LaTeX}{L\kern-.36em%
      //         {\sbox\z@ T%
      //          \vbox to\ht\z@{\hbox{\check@mathfonts
      //                               \fontsize\sf@size\z@
      //                               \math@fontsfalse\selectfont
      //                               A}%
      //                         \vss}%
      //         }%
      //         \kern-.15em%
      //         \TeX}
      // This code aligns the top of the A with the T (from the perspective of TeX's
      // boxes, though visually the A appears to extend above slightly).
      // We compute the corresponding \raisebox when A is rendered at \scriptsize,
      // which is size3, which has a scale factor of 0.7 (see Options.js).

      var latexRaiseA = __WEBPACK_IMPORTED_MODULE_0__submodules_katex_fonts_fontMetricsData__["a"
      /* default */
      ]['Main-Regular']["T".charCodeAt(0)][1] - 0.7 * __WEBPACK_IMPORTED_MODULE_0__submodules_katex_fonts_fontMetricsData__["a"
      /* default */
      ]['Main-Regular']["A".charCodeAt(0)][1] + "em";
      defineMacro("\\LaTeX", "\\textrm{L\\kern-.36em\\raisebox{" + latexRaiseA + "}{\\scriptsize A}" + "\\kern-.15em\\TeX}"); // New KaTeX logo based on tweaking LaTeX logo

      defineMacro("\\KaTeX", "\\textrm{K\\kern-.17em\\raisebox{" + latexRaiseA + "}{\\scriptsize A}" + "\\kern-.15em\\TeX}"); // \DeclareRobustCommand\hspace{\@ifstar\@hspacer\@hspace}
      // \def\@hspace#1{\hskip  #1\relax}
      // KaTeX doesn't do line breaks, so \hspace and \hspace* are the same as \kern

      defineMacro("\\hspace", "\\@ifstar\\kern\\kern"); //////////////////////////////////////////////////////////////////////
      // mathtools.sty
      //\providecommand\ordinarycolon{:}

      defineMacro("\\ordinarycolon", ":"); //\def\vcentcolon{\mathrel{\mathop\ordinarycolon}}
      //TODO(edemaine): Not yet centered. Fix via \raisebox or #726

      defineMacro("\\vcentcolon", "\\mathrel{\\mathop\\ordinarycolon}"); // \providecommand*\dblcolon{\vcentcolon\mathrel{\mkern-.9mu}\vcentcolon}

      defineMacro("\\dblcolon", "\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon"); // \providecommand*\coloneqq{\vcentcolon\mathrel{\mkern-1.2mu}=}

      defineMacro("\\coloneqq", "\\vcentcolon\\mathrel{\\mkern-1.2mu}="); // \providecommand*\Coloneqq{\dblcolon\mathrel{\mkern-1.2mu}=}

      defineMacro("\\Coloneqq", "\\dblcolon\\mathrel{\\mkern-1.2mu}="); // \providecommand*\coloneq{\vcentcolon\mathrel{\mkern-1.2mu}\mathrel{-}}

      defineMacro("\\coloneq", "\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}"); // \providecommand*\Coloneq{\dblcolon\mathrel{\mkern-1.2mu}\mathrel{-}}

      defineMacro("\\Coloneq", "\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}"); // \providecommand*\eqqcolon{=\mathrel{\mkern-1.2mu}\vcentcolon}

      defineMacro("\\eqqcolon", "=\\mathrel{\\mkern-1.2mu}\\vcentcolon"); // \providecommand*\Eqqcolon{=\mathrel{\mkern-1.2mu}\dblcolon}

      defineMacro("\\Eqqcolon", "=\\mathrel{\\mkern-1.2mu}\\dblcolon"); // \providecommand*\eqcolon{\mathrel{-}\mathrel{\mkern-1.2mu}\vcentcolon}

      defineMacro("\\eqcolon", "\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon"); // \providecommand*\Eqcolon{\mathrel{-}\mathrel{\mkern-1.2mu}\dblcolon}

      defineMacro("\\Eqcolon", "\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon"); // \providecommand*\colonapprox{\vcentcolon\mathrel{\mkern-1.2mu}\approx}

      defineMacro("\\colonapprox", "\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx"); // \providecommand*\Colonapprox{\dblcolon\mathrel{\mkern-1.2mu}\approx}

      defineMacro("\\Colonapprox", "\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx"); // \providecommand*\colonsim{\vcentcolon\mathrel{\mkern-1.2mu}\sim}

      defineMacro("\\colonsim", "\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim"); // \providecommand*\Colonsim{\dblcolon\mathrel{\mkern-1.2mu}\sim}

      defineMacro("\\Colonsim", "\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim"); // Some Unicode characters are implemented with macros to mathtools functions.

      defineMacro("\u2254", "\\coloneqq"); // :=

      defineMacro("\u2255", "\\eqqcolon"); // =:

      defineMacro("\u2A74", "\\Coloneqq"); // ::=
      //////////////////////////////////////////////////////////////////////
      // colonequals.sty
      // Alternate names for mathtools's macros:

      defineMacro("\\ratio", "\\vcentcolon");
      defineMacro("\\coloncolon", "\\dblcolon");
      defineMacro("\\colonequals", "\\coloneqq");
      defineMacro("\\coloncolonequals", "\\Coloneqq");
      defineMacro("\\equalscolon", "\\eqqcolon");
      defineMacro("\\equalscoloncolon", "\\Eqqcolon");
      defineMacro("\\colonminus", "\\coloneq");
      defineMacro("\\coloncolonminus", "\\Coloneq");
      defineMacro("\\minuscolon", "\\eqcolon");
      defineMacro("\\minuscoloncolon", "\\Eqcolon"); // \colonapprox name is same in mathtools and colonequals.

      defineMacro("\\coloncolonapprox", "\\Colonapprox"); // \colonsim name is same in mathtools and colonequals.

      defineMacro("\\coloncolonsim", "\\Colonsim"); // Additional macros, implemented by analogy with mathtools definitions:

      defineMacro("\\simcolon", "\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon");
      defineMacro("\\simcoloncolon", "\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon");
      defineMacro("\\approxcolon", "\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon");
      defineMacro("\\approxcoloncolon", "\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon"); // Present in newtxmath, pxfonts and txfonts
      // TODO: The unicode character U+220C ∌ should be added to the font, and this
      //       macro turned into a propper defineSymbol in symbols.js. That way, the
      //       MathML result will be much cleaner.

      defineMacro("\\notni", "\\not\\ni");
      defineMacro("\\limsup", "\\DOTSB\\mathop{\\operatorname{lim\\,sup}}\\limits");
      defineMacro("\\liminf", "\\DOTSB\\mathop{\\operatorname{lim\\,inf}}\\limits");
      /***/
    },
    /* 147 */

    /***/
    function (module, exports, __webpack_require__) {
      "use strict";
      /*
      object-assign
      (c) Sindre Sorhus
      @license MIT
      */

      /* eslint-disable no-unused-vars */

      var getOwnPropertySymbols = Object.getOwnPropertySymbols;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      var propIsEnumerable = Object.prototype.propertyIsEnumerable;

      function toObject(val) {
        if (val === null || val === undefined) {
          throw new TypeError('Object.assign cannot be called with null or undefined');
        }

        return Object(val);
      }

      function shouldUseNative() {
        try {
          if (!Object.assign) {
            return false;
          } // Detect buggy property enumeration order in older V8 versions.
          // https://bugs.chromium.org/p/v8/issues/detail?id=4118


          var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

          test1[5] = 'de';

          if (Object.getOwnPropertyNames(test1)[0] === '5') {
            return false;
          } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


          var test2 = {};

          for (var i = 0; i < 10; i++) {
            test2['_' + String.fromCharCode(i)] = i;
          }

          var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
            return test2[n];
          });

          if (order2.join('') !== '0123456789') {
            return false;
          } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


          var test3 = {};
          'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
            test3[letter] = letter;
          });

          if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
            return false;
          }

          return true;
        } catch (err) {
          // We don't expect any of the above to throw, but better to be safe.
          return false;
        }
      }

      module.exports = shouldUseNative() ? Object.assign : function (target, source) {
        var from;
        var to = toObject(target);
        var symbols;

        for (var s = 1; s < arguments.length; s++) {
          from = Object(arguments[s]);

          for (var key in from) {
            if (hasOwnProperty.call(from, key)) {
              to[key] = from[key];
            }
          }

          if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);

            for (var i = 0; i < symbols.length; i++) {
              if (propIsEnumerable.call(from, symbols[i])) {
                to[symbols[i]] = from[symbols[i]];
              }
            }
          }
        }

        return to;
      };
      /***/
    },
    /* 148 */

    /***/
    function (module, exports) {
      // Mapping of Unicode accent characters to their LaTeX equivalent in text and
      // math mode (when they exist).
      // NOTE: This module needs to be written with Node-style modules (not
      // ES6 modules) so that unicodeMake.js (a Node application) can import it.
      module.exports = {
        "\u0301": {
          text: "\\'",
          math: '\\acute'
        },
        "\u0300": {
          text: '\\`',
          math: '\\grave'
        },
        "\u0308": {
          text: '\\"',
          math: '\\ddot'
        },
        "\u0303": {
          text: '\\~',
          math: '\\tilde'
        },
        "\u0304": {
          text: '\\=',
          math: '\\bar'
        },
        "\u0306": {
          text: "\\u",
          math: '\\breve'
        },
        "\u030C": {
          text: '\\v',
          math: '\\check'
        },
        "\u0302": {
          text: '\\^',
          math: '\\hat'
        },
        "\u0307": {
          text: '\\.',
          math: '\\dot'
        },
        "\u030A": {
          text: '\\r',
          math: '\\mathring'
        },
        "\u030B": {
          text: '\\H'
        }
      };
      /***/
    },
    /* 149 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict"; // This file is GENERATED by unicodeMake.js. DO NOT MODIFY.

      /* harmony default export */

      __webpack_exports__["a"] = {
        "\xE1": "a\u0301",
        // á = \'{a}
        "\xE0": "a\u0300",
        // à = \`{a}
        "\xE4": "a\u0308",
        // ä = \"{a}
        "\u01DF": "a\u0308\u0304",
        // ǟ = \"\={a}
        "\xE3": "a\u0303",
        // ã = \~{a}
        "\u0101": "a\u0304",
        // ā = \={a}
        "\u0103": "a\u0306",
        // ă = \u{a}
        "\u1EAF": "a\u0306\u0301",
        // ắ = \u\'{a}
        "\u1EB1": "a\u0306\u0300",
        // ằ = \u\`{a}
        "\u1EB5": "a\u0306\u0303",
        // ẵ = \u\~{a}
        "\u01CE": "a\u030C",
        // ǎ = \v{a}
        "\xE2": "a\u0302",
        // â = \^{a}
        "\u1EA5": "a\u0302\u0301",
        // ấ = \^\'{a}
        "\u1EA7": "a\u0302\u0300",
        // ầ = \^\`{a}
        "\u1EAB": "a\u0302\u0303",
        // ẫ = \^\~{a}
        "\u0227": "a\u0307",
        // ȧ = \.{a}
        "\u01E1": "a\u0307\u0304",
        // ǡ = \.\={a}
        "\xE5": "a\u030A",
        // å = \r{a}
        "\u01FB": "a\u030A\u0301",
        // ǻ = \r\'{a}
        "\u1E03": "b\u0307",
        // ḃ = \.{b}
        "\u0107": "c\u0301",
        // ć = \'{c}
        "\u010D": "c\u030C",
        // č = \v{c}
        "\u0109": "c\u0302",
        // ĉ = \^{c}
        "\u010B": "c\u0307",
        // ċ = \.{c}
        "\u010F": "d\u030C",
        // ď = \v{d}
        "\u1E0B": "d\u0307",
        // ḋ = \.{d}
        "\xE9": "e\u0301",
        // é = \'{e}
        "\xE8": "e\u0300",
        // è = \`{e}
        "\xEB": "e\u0308",
        // ë = \"{e}
        "\u1EBD": "e\u0303",
        // ẽ = \~{e}
        "\u0113": "e\u0304",
        // ē = \={e}
        "\u1E17": "e\u0304\u0301",
        // ḗ = \=\'{e}
        "\u1E15": "e\u0304\u0300",
        // ḕ = \=\`{e}
        "\u0115": "e\u0306",
        // ĕ = \u{e}
        "\u011B": "e\u030C",
        // ě = \v{e}
        "\xEA": "e\u0302",
        // ê = \^{e}
        "\u1EBF": "e\u0302\u0301",
        // ế = \^\'{e}
        "\u1EC1": "e\u0302\u0300",
        // ề = \^\`{e}
        "\u1EC5": "e\u0302\u0303",
        // ễ = \^\~{e}
        "\u0117": "e\u0307",
        // ė = \.{e}
        "\u1E1F": "f\u0307",
        // ḟ = \.{f}
        "\u01F5": "g\u0301",
        // ǵ = \'{g}
        "\u1E21": "g\u0304",
        // ḡ = \={g}
        "\u011F": "g\u0306",
        // ğ = \u{g}
        "\u01E7": "g\u030C",
        // ǧ = \v{g}
        "\u011D": "g\u0302",
        // ĝ = \^{g}
        "\u0121": "g\u0307",
        // ġ = \.{g}
        "\u1E27": "h\u0308",
        // ḧ = \"{h}
        "\u021F": "h\u030C",
        // ȟ = \v{h}
        "\u0125": "h\u0302",
        // ĥ = \^{h}
        "\u1E23": "h\u0307",
        // ḣ = \.{h}
        "\xED": "i\u0301",
        // í = \'{i}
        "\xEC": "i\u0300",
        // ì = \`{i}
        "\xEF": "i\u0308",
        // ï = \"{i}
        "\u1E2F": "i\u0308\u0301",
        // ḯ = \"\'{i}
        "\u0129": "i\u0303",
        // ĩ = \~{i}
        "\u012B": "i\u0304",
        // ī = \={i}
        "\u012D": "i\u0306",
        // ĭ = \u{i}
        "\u01D0": "i\u030C",
        // ǐ = \v{i}
        "\xEE": "i\u0302",
        // î = \^{i}
        "\u01F0": "j\u030C",
        // ǰ = \v{j}
        "\u0135": "j\u0302",
        // ĵ = \^{j}
        "\u1E31": "k\u0301",
        // ḱ = \'{k}
        "\u01E9": "k\u030C",
        // ǩ = \v{k}
        "\u013A": "l\u0301",
        // ĺ = \'{l}
        "\u013E": "l\u030C",
        // ľ = \v{l}
        "\u1E3F": "m\u0301",
        // ḿ = \'{m}
        "\u1E41": "m\u0307",
        // ṁ = \.{m}
        "\u0144": "n\u0301",
        // ń = \'{n}
        "\u01F9": "n\u0300",
        // ǹ = \`{n}
        "\xF1": "n\u0303",
        // ñ = \~{n}
        "\u0148": "n\u030C",
        // ň = \v{n}
        "\u1E45": "n\u0307",
        // ṅ = \.{n}
        "\xF3": "o\u0301",
        // ó = \'{o}
        "\xF2": "o\u0300",
        // ò = \`{o}
        "\xF6": "o\u0308",
        // ö = \"{o}
        "\u022B": "o\u0308\u0304",
        // ȫ = \"\={o}
        "\xF5": "o\u0303",
        // õ = \~{o}
        "\u1E4D": "o\u0303\u0301",
        // ṍ = \~\'{o}
        "\u1E4F": "o\u0303\u0308",
        // ṏ = \~\"{o}
        "\u022D": "o\u0303\u0304",
        // ȭ = \~\={o}
        "\u014D": "o\u0304",
        // ō = \={o}
        "\u1E53": "o\u0304\u0301",
        // ṓ = \=\'{o}
        "\u1E51": "o\u0304\u0300",
        // ṑ = \=\`{o}
        "\u014F": "o\u0306",
        // ŏ = \u{o}
        "\u01D2": "o\u030C",
        // ǒ = \v{o}
        "\xF4": "o\u0302",
        // ô = \^{o}
        "\u1ED1": "o\u0302\u0301",
        // ố = \^\'{o}
        "\u1ED3": "o\u0302\u0300",
        // ồ = \^\`{o}
        "\u1ED7": "o\u0302\u0303",
        // ỗ = \^\~{o}
        "\u022F": "o\u0307",
        // ȯ = \.{o}
        "\u0231": "o\u0307\u0304",
        // ȱ = \.\={o}
        "\u0151": "o\u030B",
        // ő = \H{o}
        "\u1E55": "p\u0301",
        // ṕ = \'{p}
        "\u1E57": "p\u0307",
        // ṗ = \.{p}
        "\u0155": "r\u0301",
        // ŕ = \'{r}
        "\u0159": "r\u030C",
        // ř = \v{r}
        "\u1E59": "r\u0307",
        // ṙ = \.{r}
        "\u015B": "s\u0301",
        // ś = \'{s}
        "\u1E65": "s\u0301\u0307",
        // ṥ = \'\.{s}
        "\u0161": "s\u030C",
        // š = \v{s}
        "\u1E67": "s\u030C\u0307",
        // ṧ = \v\.{s}
        "\u015D": "s\u0302",
        // ŝ = \^{s}
        "\u1E61": "s\u0307",
        // ṡ = \.{s}
        "\u1E97": "t\u0308",
        // ẗ = \"{t}
        "\u0165": "t\u030C",
        // ť = \v{t}
        "\u1E6B": "t\u0307",
        // ṫ = \.{t}
        "\xFA": "u\u0301",
        // ú = \'{u}
        "\xF9": "u\u0300",
        // ù = \`{u}
        "\xFC": "u\u0308",
        // ü = \"{u}
        "\u01D8": "u\u0308\u0301",
        // ǘ = \"\'{u}
        "\u01DC": "u\u0308\u0300",
        // ǜ = \"\`{u}
        "\u01D6": "u\u0308\u0304",
        // ǖ = \"\={u}
        "\u01DA": "u\u0308\u030C",
        // ǚ = \"\v{u}
        "\u0169": "u\u0303",
        // ũ = \~{u}
        "\u1E79": "u\u0303\u0301",
        // ṹ = \~\'{u}
        "\u016B": "u\u0304",
        // ū = \={u}
        "\u1E7B": "u\u0304\u0308",
        // ṻ = \=\"{u}
        "\u016D": "u\u0306",
        // ŭ = \u{u}
        "\u01D4": "u\u030C",
        // ǔ = \v{u}
        "\xFB": "u\u0302",
        // û = \^{u}
        "\u016F": "u\u030A",
        // ů = \r{u}
        "\u0171": "u\u030B",
        // ű = \H{u}
        "\u1E7D": "v\u0303",
        // ṽ = \~{v}
        "\u1E83": "w\u0301",
        // ẃ = \'{w}
        "\u1E81": "w\u0300",
        // ẁ = \`{w}
        "\u1E85": "w\u0308",
        // ẅ = \"{w}
        "\u0175": "w\u0302",
        // ŵ = \^{w}
        "\u1E87": "w\u0307",
        // ẇ = \.{w}
        "\u1E98": "w\u030A",
        // ẘ = \r{w}
        "\u1E8D": "x\u0308",
        // ẍ = \"{x}
        "\u1E8B": "x\u0307",
        // ẋ = \.{x}
        "\xFD": "y\u0301",
        // ý = \'{y}
        "\u1EF3": "y\u0300",
        // ỳ = \`{y}
        "\xFF": "y\u0308",
        // ÿ = \"{y}
        "\u1EF9": "y\u0303",
        // ỹ = \~{y}
        "\u0233": "y\u0304",
        // ȳ = \={y}
        "\u0177": "y\u0302",
        // ŷ = \^{y}
        "\u1E8F": "y\u0307",
        // ẏ = \.{y}
        "\u1E99": "y\u030A",
        // ẙ = \r{y}
        "\u017A": "z\u0301",
        // ź = \'{z}
        "\u017E": "z\u030C",
        // ž = \v{z}
        "\u1E91": "z\u0302",
        // ẑ = \^{z}
        "\u017C": "z\u0307",
        // ż = \.{z}
        "\xC1": "A\u0301",
        // Á = \'{A}
        "\xC0": "A\u0300",
        // À = \`{A}
        "\xC4": "A\u0308",
        // Ä = \"{A}
        "\u01DE": "A\u0308\u0304",
        // Ǟ = \"\={A}
        "\xC3": "A\u0303",
        // Ã = \~{A}
        "\u0100": "A\u0304",
        // Ā = \={A}
        "\u0102": "A\u0306",
        // Ă = \u{A}
        "\u1EAE": "A\u0306\u0301",
        // Ắ = \u\'{A}
        "\u1EB0": "A\u0306\u0300",
        // Ằ = \u\`{A}
        "\u1EB4": "A\u0306\u0303",
        // Ẵ = \u\~{A}
        "\u01CD": "A\u030C",
        // Ǎ = \v{A}
        "\xC2": "A\u0302",
        // Â = \^{A}
        "\u1EA4": "A\u0302\u0301",
        // Ấ = \^\'{A}
        "\u1EA6": "A\u0302\u0300",
        // Ầ = \^\`{A}
        "\u1EAA": "A\u0302\u0303",
        // Ẫ = \^\~{A}
        "\u0226": "A\u0307",
        // Ȧ = \.{A}
        "\u01E0": "A\u0307\u0304",
        // Ǡ = \.\={A}
        "\xC5": "A\u030A",
        // Å = \r{A}
        "\u01FA": "A\u030A\u0301",
        // Ǻ = \r\'{A}
        "\u1E02": "B\u0307",
        // Ḃ = \.{B}
        "\u0106": "C\u0301",
        // Ć = \'{C}
        "\u010C": "C\u030C",
        // Č = \v{C}
        "\u0108": "C\u0302",
        // Ĉ = \^{C}
        "\u010A": "C\u0307",
        // Ċ = \.{C}
        "\u010E": "D\u030C",
        // Ď = \v{D}
        "\u1E0A": "D\u0307",
        // Ḋ = \.{D}
        "\xC9": "E\u0301",
        // É = \'{E}
        "\xC8": "E\u0300",
        // È = \`{E}
        "\xCB": "E\u0308",
        // Ë = \"{E}
        "\u1EBC": "E\u0303",
        // Ẽ = \~{E}
        "\u0112": "E\u0304",
        // Ē = \={E}
        "\u1E16": "E\u0304\u0301",
        // Ḗ = \=\'{E}
        "\u1E14": "E\u0304\u0300",
        // Ḕ = \=\`{E}
        "\u0114": "E\u0306",
        // Ĕ = \u{E}
        "\u011A": "E\u030C",
        // Ě = \v{E}
        "\xCA": "E\u0302",
        // Ê = \^{E}
        "\u1EBE": "E\u0302\u0301",
        // Ế = \^\'{E}
        "\u1EC0": "E\u0302\u0300",
        // Ề = \^\`{E}
        "\u1EC4": "E\u0302\u0303",
        // Ễ = \^\~{E}
        "\u0116": "E\u0307",
        // Ė = \.{E}
        "\u1E1E": "F\u0307",
        // Ḟ = \.{F}
        "\u01F4": "G\u0301",
        // Ǵ = \'{G}
        "\u1E20": "G\u0304",
        // Ḡ = \={G}
        "\u011E": "G\u0306",
        // Ğ = \u{G}
        "\u01E6": "G\u030C",
        // Ǧ = \v{G}
        "\u011C": "G\u0302",
        // Ĝ = \^{G}
        "\u0120": "G\u0307",
        // Ġ = \.{G}
        "\u1E26": "H\u0308",
        // Ḧ = \"{H}
        "\u021E": "H\u030C",
        // Ȟ = \v{H}
        "\u0124": "H\u0302",
        // Ĥ = \^{H}
        "\u1E22": "H\u0307",
        // Ḣ = \.{H}
        "\xCD": "I\u0301",
        // Í = \'{I}
        "\xCC": "I\u0300",
        // Ì = \`{I}
        "\xCF": "I\u0308",
        // Ï = \"{I}
        "\u1E2E": "I\u0308\u0301",
        // Ḯ = \"\'{I}
        "\u0128": "I\u0303",
        // Ĩ = \~{I}
        "\u012A": "I\u0304",
        // Ī = \={I}
        "\u012C": "I\u0306",
        // Ĭ = \u{I}
        "\u01CF": "I\u030C",
        // Ǐ = \v{I}
        "\xCE": "I\u0302",
        // Î = \^{I}
        "\u0130": "I\u0307",
        // İ = \.{I}
        "\u0134": "J\u0302",
        // Ĵ = \^{J}
        "\u1E30": "K\u0301",
        // Ḱ = \'{K}
        "\u01E8": "K\u030C",
        // Ǩ = \v{K}
        "\u0139": "L\u0301",
        // Ĺ = \'{L}
        "\u013D": "L\u030C",
        // Ľ = \v{L}
        "\u1E3E": "M\u0301",
        // Ḿ = \'{M}
        "\u1E40": "M\u0307",
        // Ṁ = \.{M}
        "\u0143": "N\u0301",
        // Ń = \'{N}
        "\u01F8": "N\u0300",
        // Ǹ = \`{N}
        "\xD1": "N\u0303",
        // Ñ = \~{N}
        "\u0147": "N\u030C",
        // Ň = \v{N}
        "\u1E44": "N\u0307",
        // Ṅ = \.{N}
        "\xD3": "O\u0301",
        // Ó = \'{O}
        "\xD2": "O\u0300",
        // Ò = \`{O}
        "\xD6": "O\u0308",
        // Ö = \"{O}
        "\u022A": "O\u0308\u0304",
        // Ȫ = \"\={O}
        "\xD5": "O\u0303",
        // Õ = \~{O}
        "\u1E4C": "O\u0303\u0301",
        // Ṍ = \~\'{O}
        "\u1E4E": "O\u0303\u0308",
        // Ṏ = \~\"{O}
        "\u022C": "O\u0303\u0304",
        // Ȭ = \~\={O}
        "\u014C": "O\u0304",
        // Ō = \={O}
        "\u1E52": "O\u0304\u0301",
        // Ṓ = \=\'{O}
        "\u1E50": "O\u0304\u0300",
        // Ṑ = \=\`{O}
        "\u014E": "O\u0306",
        // Ŏ = \u{O}
        "\u01D1": "O\u030C",
        // Ǒ = \v{O}
        "\xD4": "O\u0302",
        // Ô = \^{O}
        "\u1ED0": "O\u0302\u0301",
        // Ố = \^\'{O}
        "\u1ED2": "O\u0302\u0300",
        // Ồ = \^\`{O}
        "\u1ED6": "O\u0302\u0303",
        // Ỗ = \^\~{O}
        "\u022E": "O\u0307",
        // Ȯ = \.{O}
        "\u0230": "O\u0307\u0304",
        // Ȱ = \.\={O}
        "\u0150": "O\u030B",
        // Ő = \H{O}
        "\u1E54": "P\u0301",
        // Ṕ = \'{P}
        "\u1E56": "P\u0307",
        // Ṗ = \.{P}
        "\u0154": "R\u0301",
        // Ŕ = \'{R}
        "\u0158": "R\u030C",
        // Ř = \v{R}
        "\u1E58": "R\u0307",
        // Ṙ = \.{R}
        "\u015A": "S\u0301",
        // Ś = \'{S}
        "\u1E64": "S\u0301\u0307",
        // Ṥ = \'\.{S}
        "\u0160": "S\u030C",
        // Š = \v{S}
        "\u1E66": "S\u030C\u0307",
        // Ṧ = \v\.{S}
        "\u015C": "S\u0302",
        // Ŝ = \^{S}
        "\u1E60": "S\u0307",
        // Ṡ = \.{S}
        "\u0164": "T\u030C",
        // Ť = \v{T}
        "\u1E6A": "T\u0307",
        // Ṫ = \.{T}
        "\xDA": "U\u0301",
        // Ú = \'{U}
        "\xD9": "U\u0300",
        // Ù = \`{U}
        "\xDC": "U\u0308",
        // Ü = \"{U}
        "\u01D7": "U\u0308\u0301",
        // Ǘ = \"\'{U}
        "\u01DB": "U\u0308\u0300",
        // Ǜ = \"\`{U}
        "\u01D5": "U\u0308\u0304",
        // Ǖ = \"\={U}
        "\u01D9": "U\u0308\u030C",
        // Ǚ = \"\v{U}
        "\u0168": "U\u0303",
        // Ũ = \~{U}
        "\u1E78": "U\u0303\u0301",
        // Ṹ = \~\'{U}
        "\u016A": "U\u0304",
        // Ū = \={U}
        "\u1E7A": "U\u0304\u0308",
        // Ṻ = \=\"{U}
        "\u016C": "U\u0306",
        // Ŭ = \u{U}
        "\u01D3": "U\u030C",
        // Ǔ = \v{U}
        "\xDB": "U\u0302",
        // Û = \^{U}
        "\u016E": "U\u030A",
        // Ů = \r{U}
        "\u0170": "U\u030B",
        // Ű = \H{U}
        "\u1E7C": "V\u0303",
        // Ṽ = \~{V}
        "\u1E82": "W\u0301",
        // Ẃ = \'{W}
        "\u1E80": "W\u0300",
        // Ẁ = \`{W}
        "\u1E84": "W\u0308",
        // Ẅ = \"{W}
        "\u0174": "W\u0302",
        // Ŵ = \^{W}
        "\u1E86": "W\u0307",
        // Ẇ = \.{W}
        "\u1E8C": "X\u0308",
        // Ẍ = \"{X}
        "\u1E8A": "X\u0307",
        // Ẋ = \.{X}
        "\xDD": "Y\u0301",
        // Ý = \'{Y}
        "\u1EF2": "Y\u0300",
        // Ỳ = \`{Y}
        "\u0178": "Y\u0308",
        // Ÿ = \"{Y}
        "\u1EF8": "Y\u0303",
        // Ỹ = \~{Y}
        "\u0232": "Y\u0304",
        // Ȳ = \={Y}
        "\u0176": "Y\u0302",
        // Ŷ = \^{Y}
        "\u1E8E": "Y\u0307",
        // Ẏ = \.{Y}
        "\u0179": "Z\u0301",
        // Ź = \'{Z}
        "\u017D": "Z\u030C",
        // Ž = \v{Z}
        "\u1E90": "Z\u0302",
        // Ẑ = \^{Z}
        "\u017B": "Z\u0307",
        // Ż = \.{Z}
        "\u03AC": "\u03B1\u0301",
        // ά = \'{α}
        "\u1F70": "\u03B1\u0300",
        // ὰ = \`{α}
        "\u1FB1": "\u03B1\u0304",
        // ᾱ = \={α}
        "\u1FB0": "\u03B1\u0306",
        // ᾰ = \u{α}
        "\u03AD": "\u03B5\u0301",
        // έ = \'{ε}
        "\u1F72": "\u03B5\u0300",
        // ὲ = \`{ε}
        "\u03AE": "\u03B7\u0301",
        // ή = \'{η}
        "\u1F74": "\u03B7\u0300",
        // ὴ = \`{η}
        "\u03AF": "\u03B9\u0301",
        // ί = \'{ι}
        "\u1F76": "\u03B9\u0300",
        // ὶ = \`{ι}
        "\u03CA": "\u03B9\u0308",
        // ϊ = \"{ι}
        "\u0390": "\u03B9\u0308\u0301",
        // ΐ = \"\'{ι}
        "\u1FD2": "\u03B9\u0308\u0300",
        // ῒ = \"\`{ι}
        "\u1FD1": "\u03B9\u0304",
        // ῑ = \={ι}
        "\u1FD0": "\u03B9\u0306",
        // ῐ = \u{ι}
        "\u03CC": "\u03BF\u0301",
        // ό = \'{ο}
        "\u1F78": "\u03BF\u0300",
        // ὸ = \`{ο}
        "\u03CD": "\u03C5\u0301",
        // ύ = \'{υ}
        "\u1F7A": "\u03C5\u0300",
        // ὺ = \`{υ}
        "\u03CB": "\u03C5\u0308",
        // ϋ = \"{υ}
        "\u03B0": "\u03C5\u0308\u0301",
        // ΰ = \"\'{υ}
        "\u1FE2": "\u03C5\u0308\u0300",
        // ῢ = \"\`{υ}
        "\u1FE1": "\u03C5\u0304",
        // ῡ = \={υ}
        "\u1FE0": "\u03C5\u0306",
        // ῠ = \u{υ}
        "\u03CE": "\u03C9\u0301",
        // ώ = \'{ω}
        "\u1F7C": "\u03C9\u0300",
        // ὼ = \`{ω}
        "\u038E": "\u03A5\u0301",
        // Ύ = \'{Υ}
        "\u1FEA": "\u03A5\u0300",
        // Ὺ = \`{Υ}
        "\u03AB": "\u03A5\u0308",
        // Ϋ = \"{Υ}
        "\u1FE9": "\u03A5\u0304",
        // Ῡ = \={Υ}
        "\u1FE8": "\u03A5\u0306",
        // Ῠ = \u{Υ}
        "\u038F": "\u03A9\u0301",
        // Ώ = \'{Ω}
        "\u1FFA": "\u03A9\u0300" // Ὼ = \`{Ω}

      };
      /***/
    }])["default"]
  );
});

/***/ }),
/* 28 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};

/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = function (originalModule) {
  if (!originalModule.webpackPolyfill) {
    var module = Object.create(originalModule); // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    Object.defineProperty(module, "exports", {
      enumerable: true
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {!function (e, t) {
   true ? module.exports = t(__webpack_require__(0)) : undefined;
}(global, function (e) {
  return function (e) {
    var t = {};

    function n(i) {
      if (t[i]) return t[i].exports;
      var r = t[i] = {
        i: i,
        l: !1,
        exports: {}
      };
      return e[i].call(r.exports, r, r.exports, n), r.l = !0, r.exports;
    }

    return n.m = e, n.c = t, n.d = function (e, t, i) {
      n.o(e, t) || Object.defineProperty(e, t, {
        enumerable: !0,
        get: i
      });
    }, n.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(e, "__esModule", {
        value: !0
      });
    }, n.t = function (e, t) {
      if (1 & t && (e = n(e)), 8 & t) return e;
      if (4 & t && "object" == typeof e && e && e.__esModule) return e;
      var i = Object.create(null);
      if (n.r(i), Object.defineProperty(i, "default", {
        enumerable: !0,
        value: e
      }), 2 & t && "string" != typeof e) for (var r in e) {
        n.d(i, r, function (t) {
          return e[t];
        }.bind(null, r));
      }
      return i;
    }, n.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };
      return n.d(t, "a", t), t;
    }, n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, n.p = "", n(n.s = 8);
  }([function (e, t, n) {
    e.exports = n(3)();
  }, function (t, n) {
    t.exports = e;
  }, function (e, t, n) {
    (e.exports = n(7)(!1)).push([e.i, "/*\n * MathQuill v0.10.1               http://mathquill.com\n * by Han, Jeanine, and Mary  maintainers@mathquill.com\n *\n * This Source Code Form is subject to the terms of the\n * Mozilla Public License, v. 2.0. If a copy of the MPL\n * was not distributed with this file, You can obtain\n * one at http://mozilla.org/MPL/2.0/.\n */\n@font-face {\n  /* Heavy fonts have been removed */\n  font-family: Symbola;\n}\n.mq-editable-field {\n  display: -moz-inline-box;\n  display: inline-block;\n}\n.mq-editable-field .mq-cursor {\n  border-left: 1px solid black;\n  margin-left: -1px;\n  position: relative;\n  z-index: 1;\n  padding: 0;\n  display: -moz-inline-box;\n  display: inline-block;\n}\n.mq-editable-field .mq-cursor.mq-blink {\n  visibility: hidden;\n}\n.mq-editable-field,\n.mq-math-mode .mq-editable-field {\n  border: 1px solid gray;\n}\n.mq-editable-field.mq-focused,\n.mq-math-mode .mq-editable-field.mq-focused {\n  -webkit-box-shadow: #8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;\n  -moz-box-shadow: #8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;\n  box-shadow: #8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;\n  border-color: #709AC0;\n  border-radius: 1px;\n}\n.mq-math-mode .mq-editable-field {\n  margin: 1px;\n}\n.mq-editable-field .mq-latex-command-input {\n  color: inherit;\n  font-family: \"Courier New\", monospace;\n  border: 1px solid gray;\n  padding-right: 1px;\n  margin-right: 1px;\n  margin-left: 2px;\n}\n.mq-editable-field .mq-latex-command-input.mq-empty {\n  background: transparent;\n}\n.mq-editable-field .mq-latex-command-input.mq-hasCursor {\n  border-color: ActiveBorder;\n}\n.mq-editable-field.mq-empty:after,\n.mq-editable-field.mq-text-mode:after,\n.mq-math-mode .mq-empty:after {\n  visibility: hidden;\n  content: 'c';\n}\n.mq-editable-field .mq-cursor:only-child:after,\n.mq-editable-field .mq-textarea + .mq-cursor:last-child:after {\n  visibility: hidden;\n  content: 'c';\n}\n.mq-editable-field .mq-text-mode .mq-cursor:only-child:after {\n  content: '';\n}\n.mq-editable-field.mq-text-mode {\n  overflow-x: auto;\n  overflow-y: hidden;\n}\n.mq-root-block,\n.mq-math-mode .mq-root-block {\n  display: -moz-inline-box;\n  display: inline-block;\n  width: 100%;\n  padding: 2px;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  white-space: nowrap;\n  overflow: hidden;\n  vertical-align: middle;\n}\n.mq-math-mode {\n  font-variant: normal;\n  font-weight: normal;\n  font-style: normal;\n  font-size: 115%;\n  line-height: 1;\n  display: -moz-inline-box;\n  display: inline-block;\n}\n.mq-math-mode .mq-non-leaf,\n.mq-math-mode .mq-scaled {\n  display: -moz-inline-box;\n  display: inline-block;\n}\n.mq-math-mode var,\n.mq-math-mode .mq-text-mode,\n.mq-math-mode .mq-nonSymbola {\n  font-family: \"Times New Roman\", Symbola, serif;\n  line-height: .9;\n}\n.mq-math-mode * {\n  font-size: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n  border-color: black;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n  box-sizing: border-box;\n}\n.mq-math-mode .mq-empty {\n  background: #ccc;\n}\n.mq-math-mode .mq-empty.mq-root-block {\n  background: transparent;\n}\n.mq-math-mode.mq-empty {\n  background: transparent;\n}\n.mq-math-mode .mq-text-mode {\n  display: inline-block;\n}\n.mq-math-mode .mq-text-mode.mq-hasCursor {\n  box-shadow: inset darkgray 0 .1em .2em;\n  padding: 0 .1em;\n  margin: 0 -0.1em;\n  min-width: 1ex;\n}\n.mq-math-mode .mq-font {\n  font: 1em \"Times New Roman\", Symbola, serif;\n}\n.mq-math-mode .mq-font * {\n  font-family: inherit;\n  font-style: inherit;\n}\n.mq-math-mode b,\n.mq-math-mode b.mq-font {\n  font-weight: bolder;\n}\n.mq-math-mode var,\n.mq-math-mode i,\n.mq-math-mode i.mq-font {\n  font-style: italic;\n}\n.mq-math-mode var.mq-f {\n  margin-right: 0.2em;\n  margin-left: 0.1em;\n}\n.mq-math-mode .mq-roman var.mq-f {\n  margin: 0;\n}\n.mq-math-mode big {\n  font-size: 200%;\n}\n.mq-math-mode .mq-int > big {\n  display: inline-block;\n  -webkit-transform: scaleX(0.7);\n  -moz-transform: scaleX(0.7);\n  -ms-transform: scaleX(0.7);\n  -o-transform: scaleX(0.7);\n  transform: scaleX(0.7);\n  vertical-align: -0.16em;\n}\n.mq-math-mode .mq-int > .mq-supsub {\n  font-size: 80%;\n  vertical-align: -1.1em;\n  padding-right: .2em;\n}\n.mq-math-mode .mq-int > .mq-supsub > .mq-sup > .mq-sup-inner {\n  vertical-align: 1.3em;\n}\n.mq-math-mode .mq-int > .mq-supsub > .mq-sub {\n  margin-left: -0.35em;\n}\n.mq-math-mode .mq-roman {\n  font-style: normal;\n}\n.mq-math-mode .mq-sans-serif {\n  font-family: sans-serif, Symbola, serif;\n}\n.mq-math-mode .mq-monospace {\n  font-family: monospace, Symbola, serif;\n}\n.mq-math-mode .mq-overline {\n  border-top: 1px solid black;\n  margin-top: 1px;\n}\n.mq-math-mode .mq-underline {\n  border-bottom: 1px solid black;\n  margin-bottom: 1px;\n}\n.mq-math-mode .mq-binary-operator {\n  padding: 0 0.2em;\n  display: -moz-inline-box;\n  display: inline-block;\n}\n.mq-math-mode .mq-supsub {\n  text-align: left;\n  font-size: 90%;\n  vertical-align: -0.5em;\n}\n.mq-math-mode .mq-supsub.mq-sup-only {\n  vertical-align: .5em;\n}\n.mq-math-mode .mq-supsub.mq-sup-only .mq-sup {\n  display: inline-block;\n  vertical-align: text-bottom;\n}\n.mq-math-mode .mq-supsub .mq-sup {\n  display: block;\n}\n.mq-math-mode .mq-supsub .mq-sub {\n  display: block;\n  float: left;\n}\n.mq-math-mode .mq-supsub .mq-binary-operator {\n  padding: 0 .1em;\n}\n.mq-math-mode .mq-supsub .mq-fraction {\n  font-size: 70%;\n}\n.mq-math-mode sup.mq-nthroot {\n  font-size: 80%;\n  vertical-align: 0.8em;\n  margin-right: -0.6em;\n  margin-left: .2em;\n  min-width: .5em;\n}\n.mq-math-mode .mq-paren {\n  padding: 0 .1em;\n  vertical-align: top;\n  -webkit-transform-origin: center .06em;\n  -moz-transform-origin: center .06em;\n  -ms-transform-origin: center .06em;\n  -o-transform-origin: center .06em;\n  transform-origin: center .06em;\n}\n.mq-math-mode .mq-paren.mq-ghost {\n  color: silver;\n}\n.mq-math-mode .mq-paren + span {\n  margin-top: .1em;\n  margin-bottom: .1em;\n}\n.mq-math-mode .mq-array {\n  vertical-align: middle;\n  text-align: center;\n}\n.mq-math-mode .mq-array > span {\n  display: block;\n}\n.mq-math-mode .mq-operator-name {\n  font-family: Symbola, \"Times New Roman\", serif;\n  line-height: .9;\n  font-style: normal;\n}\n.mq-math-mode var.mq-operator-name.mq-first {\n  padding-left: .2em;\n}\n.mq-math-mode var.mq-operator-name.mq-last,\n.mq-math-mode .mq-supsub.mq-after-operator-name {\n  padding-right: .2em;\n}\n.mq-math-mode .mq-fraction {\n  font-size: 90%;\n  text-align: center;\n  vertical-align: -0.4em;\n  padding: 0 .2em;\n}\n.mq-math-mode .mq-fraction,\n.mq-math-mode .mq-large-operator,\n.mq-math-mode x:-moz-any-link {\n  display: -moz-groupbox;\n}\n.mq-math-mode .mq-fraction,\n.mq-math-mode .mq-large-operator,\n.mq-math-mode x:-moz-any-link,\n.mq-math-mode x:default {\n  display: inline-block;\n}\n.mq-math-mode .mq-numerator,\n.mq-math-mode .mq-denominator {\n  display: block;\n}\n.mq-math-mode .mq-numerator {\n  padding: 0 0.1em;\n}\n.mq-math-mode .mq-denominator {\n  border-top: 1px solid;\n  float: right;\n  width: 100%;\n  padding: 0.1em;\n}\n.mq-math-mode .mq-sqrt-prefix {\n  padding-top: 0;\n  position: relative;\n  top: 0.1em;\n  vertical-align: top;\n  -webkit-transform-origin: top;\n  -moz-transform-origin: top;\n  -ms-transform-origin: top;\n  -o-transform-origin: top;\n  transform-origin: top;\n}\n.mq-math-mode .mq-sqrt-stem {\n  border-top: 1px solid;\n  margin-top: 1px;\n  padding-left: .15em;\n  padding-right: .2em;\n  margin-right: .1em;\n  padding-top: 1px;\n}\n.mq-math-mode .mq-vector-prefix {\n  display: block;\n  text-align: center;\n  line-height: .25em;\n  margin-bottom: -0.1em;\n  font-size: 0.75em;\n}\n.mq-math-mode .mq-vector-stem {\n  display: block;\n}\n.mq-math-mode .mq-large-operator {\n  vertical-align: -0.2em;\n  padding: .2em;\n  text-align: center;\n}\n.mq-math-mode .mq-large-operator .mq-from,\n.mq-math-mode .mq-large-operator big,\n.mq-math-mode .mq-large-operator .mq-to {\n  display: block;\n}\n.mq-math-mode .mq-large-operator .mq-from,\n.mq-math-mode .mq-large-operator .mq-to {\n  font-size: 80%;\n}\n.mq-math-mode .mq-large-operator .mq-from {\n  float: right;\n  /* take out of normal flow to manipulate baseline */\n  width: 100%;\n}\n.mq-math-mode,\n.mq-math-mode .mq-editable-field {\n  cursor: text;\n  font-family: Symbola, \"Times New Roman\", serif;\n}\n.mq-math-mode .mq-overarrow {\n  border-top: 1px solid black;\n  margin-top: 1px;\n  padding-top: 0.2em;\n}\n.mq-math-mode .mq-overarrow:before {\n  display: block;\n  position: relative;\n  top: -0.34em;\n  font-size: 0.5em;\n  line-height: 0em;\n  content: '\\27A4';\n  text-align: right;\n}\n.mq-math-mode .mq-overarrow.mq-arrow-left:before {\n  -moz-transform: scaleX(-1);\n  -o-transform: scaleX(-1);\n  -webkit-transform: scaleX(-1);\n  transform: scaleX(-1);\n  filter: FlipH;\n  -ms-filter: \"FlipH\";\n}\n.mq-math-mode .mq-selection,\n.mq-editable-field .mq-selection,\n.mq-math-mode .mq-selection .mq-non-leaf,\n.mq-editable-field .mq-selection .mq-non-leaf,\n.mq-math-mode .mq-selection .mq-scaled,\n.mq-editable-field .mq-selection .mq-scaled {\n  background: #B4D5FE !important;\n  background: Highlight !important;\n  color: HighlightText;\n  border-color: HighlightText;\n}\n.mq-math-mode .mq-selection .mq-matrixed,\n.mq-editable-field .mq-selection .mq-matrixed {\n  background: #39F !important;\n}\n.mq-math-mode .mq-selection .mq-matrixed-container,\n.mq-editable-field .mq-selection .mq-matrixed-container {\n  filter: progid:DXImageTransform.Microsoft.Chroma(color='#3399FF') !important;\n}\n.mq-math-mode .mq-selection.mq-blur,\n.mq-editable-field .mq-selection.mq-blur,\n.mq-math-mode .mq-selection.mq-blur .mq-non-leaf,\n.mq-editable-field .mq-selection.mq-blur .mq-non-leaf,\n.mq-math-mode .mq-selection.mq-blur .mq-scaled,\n.mq-editable-field .mq-selection.mq-blur .mq-scaled,\n.mq-math-mode .mq-selection.mq-blur .mq-matrixed,\n.mq-editable-field .mq-selection.mq-blur .mq-matrixed {\n  background: #D4D4D4 !important;\n  color: black;\n  border-color: black;\n}\n.mq-math-mode .mq-selection.mq-blur .mq-matrixed-container,\n.mq-editable-field .mq-selection.mq-blur .mq-matrixed-container {\n  filter: progid:DXImageTransform.Microsoft.Chroma(color='#D4D4D4') !important;\n}\n.mq-editable-field .mq-textarea,\n.mq-math-mode .mq-textarea {\n  position: relative;\n  -webkit-user-select: text;\n  -moz-user-select: text;\n  user-select: text;\n}\n.mq-editable-field .mq-textarea *,\n.mq-math-mode .mq-textarea *,\n.mq-editable-field .mq-selectable,\n.mq-math-mode .mq-selectable {\n  -webkit-user-select: text;\n  -moz-user-select: text;\n  user-select: text;\n  position: absolute;\n  clip: rect(1em 1em 1em 1em);\n  -webkit-transform: scale(0);\n  -moz-transform: scale(0);\n  -ms-transform: scale(0);\n  -o-transform: scale(0);\n  transform: scale(0);\n  resize: none;\n  width: 1px;\n  height: 1px;\n}\n.mq-math-mode .mq-matrixed {\n  background: white;\n  display: -moz-inline-box;\n  display: inline-block;\n}\n.mq-math-mode .mq-matrixed-container {\n  filter: progid:DXImageTransform.Microsoft.Chroma(color='white');\n  margin-top: -0.1em;\n}\n", ""]);
  }, function (e, t, n) {
    "use strict";

    var i = n(4);

    function r() {}

    function o() {}

    o.resetWarningCache = r, e.exports = function () {
      function e(e, t, n, r, o, s) {
        if (s !== i) {
          var a = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
          throw a.name = "Invariant Violation", a;
        }
      }

      function t() {
        return e;
      }

      e.isRequired = e;
      var n = {
        array: e,
        bool: e,
        func: e,
        number: e,
        object: e,
        string: e,
        symbol: e,
        any: e,
        arrayOf: t,
        element: e,
        elementType: e,
        instanceOf: t,
        node: e,
        objectOf: t,
        oneOf: t,
        oneOfType: t,
        shape: t,
        exact: t,
        checkPropTypes: o,
        resetWarningCache: r
      };
      return n.PropTypes = n, n;
    };
  }, function (e, t, n) {
    "use strict";

    e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  }, function (e, t, n) {
    var i = i || {};
    i.jQuery = n(6), function () {
      var e,
          t = i.jQuery,
          n = "mathquill-block-id",
          r = Math.min,
          o = Math.max;

      function s() {}

      var a = [].slice;

      function l(e) {
        var t = e.length - 1;
        return function () {
          var n = a.call(arguments, 0, t),
              i = a.call(arguments, t);
          return e.apply(this, n.concat([i]));
        };
      }

      var c = l(function (e, t) {
        return l(function (n, i) {
          if (e in n) return n[e].apply(n, t.concat(i));
        });
      });

      function u(e) {
        return l(function (t, n) {
          "function" != typeof t && (t = c(t));
          return e.call(this, function (e) {
            return t.apply(e, [e].concat(n));
          });
        });
      }

      function f(e) {
        var t = a.call(arguments, 1);
        return function () {
          return e.apply(this, t);
        };
      }

      function d(e, t) {
        if (!t) throw new Error("prayer failed: " + e);
      }

      var h = function (e, t, n) {
        function i(e) {
          return "object" == typeof e;
        }

        function r(e) {
          return "function" == typeof e;
        }

        function o() {}

        return function e(n, s) {
          function a() {
            var e = new l();
            return r(e.init) && e.init.apply(e, arguments), e;
          }

          function l() {}

          void 0 === s && (s = n, n = Object), a.Bare = l;
          var c,
              u = o.prototype = n.prototype,
              f = l.prototype = a.prototype = a.p = new o();
          return f.constructor = a, a.extend = function (t) {
            return e(a, t);
          }, (a.open = function (e) {
            if (c = {}, r(e) ? c = e.call(a, f, u, a, n) : i(e) && (c = e), i(c)) for (var o in c) {
              t.call(c, o) && (f[o] = c[o]);
            }
            return r(f.init) || (f.init = n), a;
          })(s);
        };
      }(0, {}.hasOwnProperty),
          p = -1,
          m = 1;

      function g(e) {
        d("a direction was passed", e === p || e === m);
      }

      var v = h(t, function (e) {
        e.insDirOf = function (e, t) {
          return e === p ? this.insertBefore(t.first()) : this.insertAfter(t.last());
        }, e.insAtDirEnd = function (e, t) {
          return e === p ? this.prependTo(t) : this.appendTo(t);
        };
      }),
          y = h(function (e) {
        e.parent = 0, e[p] = 0, e[m] = 0, e.init = function (e, t, n) {
          this.parent = e, this[p] = t, this[m] = n;
        }, this.copy = function (e) {
          return y(e.parent, e[p], e[m]);
        };
      }),
          b = h(function (e) {
        e[p] = 0, e[m] = 0, e.parent = 0;
        var t = 0;
        this.byId = {}, e.init = function () {
          this.id = t += 1, b.byId[this.id] = this, this.ends = {}, this.ends[p] = 0, this.ends[m] = 0;
        }, e.dispose = function () {
          delete b.byId[this.id];
        }, e.toString = function () {
          return "{{ MathQuill Node #" + this.id + " }}";
        }, e.jQ = v(), e.jQadd = function (e) {
          return this.jQ = this.jQ.add(e);
        }, e.jQize = function (e) {
          e = v(e || this.html());

          function t(e) {
            if (e.getAttribute) {
              var n = e.getAttribute("mathquill-command-id"),
                  i = e.getAttribute("mathquill-block-id");
              n && b.byId[n].jQadd(e), i && b.byId[i].jQadd(e);
            }

            for (e = e.firstChild; e; e = e.nextSibling) {
              t(e);
            }
          }

          for (var n = 0; n < e.length; n += 1) {
            t(e[n]);
          }

          return e;
        }, e.createDir = function (e, t) {
          g(e);
          return this.jQize(), this.jQ.insDirOf(e, t.jQ), t[e] = this.adopt(t.parent, t[p], t[m]), this;
        }, e.createLeftOf = function (e) {
          return this.createDir(p, e);
        }, e.selectChildren = function (e, t) {
          return C(e, t);
        }, e.bubble = u(function (e) {
          for (var t = this; t; t = t.parent) {
            if (!1 === e(t)) break;
          }

          return this;
        }), e.postOrder = u(function (e) {
          return function t(n) {
            n.eachChild(t), e(n);
          }(this), this;
        }), e.isEmpty = function () {
          return 0 === this.ends[p] && 0 === this.ends[m];
        }, e.children = function () {
          return q(this.ends[p], this.ends[m]);
        }, e.eachChild = function () {
          var e = this.children();
          return e.each.apply(e, arguments), this;
        }, e.foldChildren = function (e, t) {
          return this.children().fold(e, t);
        }, e.withDirAdopt = function (e, t, n, i) {
          return q(this, this).withDirAdopt(e, t, n, i), this;
        }, e.adopt = function (e, t, n) {
          return q(this, this).adopt(e, t, n), this;
        }, e.disown = function () {
          return q(this, this).disown(), this;
        }, e.remove = function () {
          return this.jQ.remove(), this.postOrder("dispose"), this.disown();
        };
      });

      function x(e, t, n) {
        d("a parent is always present", e), d("leftward is properly set up", t ? t[m] === n && t.parent === e : e.ends[p] === n), d("rightward is properly set up", n ? n[p] === t && n.parent === e : e.ends[m] === t);
      }

      var q = h(function (t) {
        t.init = function (t, n, i) {
          if (i === e && (i = p), g(i), d("no half-empty fragments", !t == !n), this.ends = {}, t) {
            d("withDir is passed to Fragment", t instanceof b), d("oppDir is passed to Fragment", n instanceof b), d("withDir and oppDir have the same parent", t.parent === n.parent), this.ends[i] = t, this.ends[-i] = n;
            var r = this.fold([], function (e, t) {
              return e.push.apply(e, t.jQ.get()), e;
            });
            this.jQ = this.jQ.add(r);
          }
        }, t.jQ = v(), t.withDirAdopt = function (e, t, n, i) {
          return e === p ? this.adopt(t, n, i) : this.adopt(t, i, n);
        }, t.adopt = function (e, t, n) {
          x(e, t, n);
          this.disowned = !1;
          var i = this.ends[p];
          if (!i) return this;
          var r = this.ends[m];
          return t || (e.ends[p] = i), n ? n[p] = r : e.ends[m] = r, this.ends[m][m] = n, this.each(function (n) {
            n[p] = t, n.parent = e, t && (t[m] = n), t = n;
          }), this;
        }, t.disown = function () {
          var e = this.ends[p];
          if (!e || this.disowned) return this;
          this.disowned = !0;
          var t = this.ends[m],
              n = e.parent;
          return x(n, e[p], e), x(n, t, t[m]), e[p] ? e[p][m] = t[m] : n.ends[p] = t[m], t[m] ? t[m][p] = e[p] : n.ends[m] = e[p], this;
        }, t.remove = function () {
          return this.jQ.remove(), this.each("postOrder", "dispose"), this.disown();
        }, t.each = u(function (e) {
          var t = this.ends[p];
          if (!t) return this;

          for (; t !== this.ends[m][m]; t = t[m]) {
            if (!1 === e(t)) break;
          }

          return this;
        }), t.fold = function (e, t) {
          return this.each(function (n) {
            e = t.call(this, e, n);
          }), e;
        };
      }),
          w = {},
          T = {},
          k = h(y, function (e) {
        e.init = function (e, t) {
          this.parent = e, this.options = t;
          var n = this.jQ = this._jQ = v('<span class="mq-cursor">&#8203;</span>');
          this.blink = function () {
            n.toggleClass("mq-blink");
          }, this.upDownCache = {};
        }, e.show = function () {
          return this.jQ = this._jQ.removeClass("mq-blink"), "intervalId" in this ? clearInterval(this.intervalId) : (this[m] ? this.selection && this.selection.ends[p][p] === this[p] ? this.jQ.insertBefore(this.selection.jQ) : this.jQ.insertBefore(this[m].jQ.first()) : this.jQ.appendTo(this.parent.jQ), this.parent.focus()), this.intervalId = setInterval(this.blink, 500), this;
        }, e.hide = function () {
          return "intervalId" in this && clearInterval(this.intervalId), delete this.intervalId, this.jQ.detach(), this.jQ = v(), this;
        }, e.withDirInsertAt = function (e, t, n, i) {
          var r = this.parent;
          this.parent = t, this[e] = n, this[-e] = i, r !== t && r.blur && r.blur(this);
        }, e.insDirOf = function (e, t) {
          return g(e), this.jQ.insDirOf(e, t.jQ), this.withDirInsertAt(e, t.parent, t[e], t), this.parent.jQ.addClass("mq-hasCursor"), this;
        }, e.insLeftOf = function (e) {
          return this.insDirOf(p, e);
        }, e.insRightOf = function (e) {
          return this.insDirOf(m, e);
        }, e.insAtDirEnd = function (e, t) {
          return g(e), this.jQ.insAtDirEnd(e, t.jQ), this.withDirInsertAt(e, t, 0, t.ends[e]), t.focus(), this;
        }, e.insAtLeftEnd = function (e) {
          return this.insAtDirEnd(p, e);
        }, e.insAtRightEnd = function (e) {
          return this.insAtDirEnd(m, e);
        }, e.jumpUpDown = function (e, t) {
          this.upDownCache[e.id] = y.copy(this);
          var n = this.upDownCache[t.id];
          if (n) n[m] ? this.insLeftOf(n[m]) : this.insAtRightEnd(n.parent);else {
            var i = this.offset().left;
            t.seek(i, this);
          }
        }, e.offset = function () {
          var e = this.jQ.removeClass("mq-cursor").offset();
          return this.jQ.addClass("mq-cursor"), e;
        }, e.unwrapGramp = function () {
          var e = this.parent.parent,
              t = e.parent,
              n = e[m],
              i = e[p];
          if (e.disown().eachChild(function (r) {
            r.isEmpty() || (r.children().adopt(t, i, n).each(function (t) {
              t.jQ.insertBefore(e.jQ.first());
            }), i = r.ends[m]);
          }), !this[m]) if (this[p]) this[m] = this[p][m];else for (; !this[m];) {
            if (this.parent = this.parent[m], !this.parent) {
              this[m] = e[m], this.parent = t;
              break;
            }

            this[m] = this.parent.ends[p];
          }
          this[m] ? this.insLeftOf(this[m]) : this.insAtRightEnd(t), e.jQ.remove(), e[p].siblingDeleted && e[p].siblingDeleted(this.options, m), e[m].siblingDeleted && e[m].siblingDeleted(this.options, p);
        }, e.startSelection = function () {
          for (var e = this.anticursor = y.copy(this), t = e.ancestors = {}, n = e; n.parent; n = n.parent) {
            t[n.parent.id] = n;
          }
        }, e.endSelection = function () {
          delete this.anticursor;
        }, e.select = function () {
          var e = this.anticursor;
          if (this[p] === e[p] && this.parent === e.parent) return !1;

          for (var t = this; t.parent; t = t.parent) {
            if (t.parent.id in e.ancestors) {
              var n = t.parent;
              break;
            }
          }

          d("cursor and anticursor in the same tree", n);
          var i,
              r,
              o = e.ancestors[n.id],
              s = m;
          if (t[p] !== o) for (var a = t; a; a = a[m]) {
            if (a[m] === o[m]) {
              s = p, i = t, r = o;
              break;
            }
          }
          return s === m && (i = o, r = t), i instanceof y && (i = i[m]), r instanceof y && (r = r[p]), this.hide().selection = n.selectChildren(i, r), this.insDirOf(s, this.selection.ends[s]), this.selectionChanged(), !0;
        }, e.clearSelection = function () {
          return this.selection && (this.selection.clear(), delete this.selection, this.selectionChanged()), this;
        }, e.deleteSelection = function () {
          this.selection && (this[p] = this.selection.ends[p][p], this[m] = this.selection.ends[m][m], this.selection.remove(), this.selectionChanged(), delete this.selection);
        }, e.replaceSelection = function () {
          var e = this.selection;
          return e && (this[p] = e.ends[p][p], this[m] = e.ends[m][m], delete this.selection), e;
        };
      }),
          C = h(q, function (e, t) {
        e.init = function () {
          t.init.apply(this, arguments), this.jQ = this.jQ.wrapAll('<span class="mq-selection"></span>').parent();
        }, e.adopt = function () {
          return this.jQ.replaceWith(this.jQ = this.jQ.children()), t.adopt.apply(this, arguments);
        }, e.clear = function () {
          return this.jQ.replaceWith(this.jQ[0].childNodes), this;
        }, e.join = function (e) {
          return this.fold("", function (t, n) {
            return t + n[e]();
          });
        };
      }),
          S = h(function (e) {
        e.init = function (e, t, n) {
          this.id = e.id, this.data = {}, this.root = e, this.container = t, this.options = n, e.controller = this, this.cursor = e.cursor = k(e, n);
        }, e.handle = function (e, t) {
          var n = this.options.handlers;

          if (n && n.fns[e]) {
            var i = n.APIClasses[this.KIND_OF_MQ](this);
            t === p || t === m ? n.fns[e](t, i) : n.fns[e](i);
          }
        };
        var t = [];
        this.onNotify = function (e) {
          t.push(e);
        }, e.notify = function () {
          for (var e = 0; e < t.length; e += 1) {
            t[e].apply(this.cursor, arguments);
          }

          return this;
        };
      }),
          j = {},
          E = h(),
          O = {},
          D = h(),
          A = {};

      function L() {
        i.console && console.warn('You are using the MathQuill API without specifying an interface version, which will fail in v1.0.0. Easiest fix is to do the following before doing anything else:\n\n    MathQuill = MathQuill.getInterface(1);\n    // now MathQuill.MathField() works like it used to\n\nSee also the "`dev` branch (2014–2015) → v0.10.0 Migration Guide" at\n  https://github.com/mathquill/mathquill/wiki/%60dev%60-branch-(2014%E2%80%932015)-%E2%86%92-v0.10.0-Migration-Guide');
      }

      function _(e) {
        return L(), Ne(e);
      }

      _.prototype = D.p, _.interfaceVersion = function (e) {
        if (1 !== e) throw "Only interface version 1 supported. You specified: " + e;
        return (L = function L() {
          i.console && console.warn('You called MathQuill.interfaceVersion(1); to specify the interface version, which will fail in v1.0.0. You can fix this easily by doing this before doing anything else:\n\n    MathQuill = MathQuill.getInterface(1);\n    // now MathQuill.MathField() works like it used to\n\nSee also the "`dev` branch (2014–2015) → v0.10.0 Migration Guide" at\n  https://github.com/mathquill/mathquill/wiki/%60dev%60-branch-(2014%E2%80%932015)-%E2%86%92-v0.10.0-Migration-Guide');
        })(), _;
      }, _.getInterface = M;
      var N = M.MIN = 1,
          Q = M.MAX = 2;

      function M(e) {
        if (!(N <= e && e <= Q)) throw "Only interface versions between " + N + " and " + Q + " supported. You specified: " + e;

        function r(e) {
          if (!e || !e.nodeType) return null;
          var t = v(e).children(".mq-root-block").attr(n),
              i = t && b.byId[t].controller;
          return i ? o[i.KIND_OF_MQ](i) : null;
        }

        var o = {};

        function a(e, t) {
          for (var n in t && t.handlers && (t.handlers = {
            fns: t.handlers,
            APIClasses: o
          }), t) {
            if (t.hasOwnProperty(n)) {
              var i = t[n],
                  r = O[n];
              e[n] = r ? r(i) : i;
            }
          }
        }

        r.L = p, r.R = m, r.config = function (e) {
          return a(E.p, e), this;
        }, r.registerEmbed = function (e, t) {
          if (!/^[a-z][a-z0-9]*$/i.test(e)) throw "Embed name must start with letter and be only letters and digits";
          A[e] = t;
        };
        var l = o.AbstractMathQuill = h(D, function (e) {
          e.init = function (e) {
            this.__controller = e, this.__options = e.options, this.id = e.id, this.data = e.data;
          }, e.__mathquillify = function (e) {
            var t = this.__controller,
                i = t.root,
                r = t.container;
            t.createTextarea();
            var o = r.addClass(e).contents().detach();
            i.jQ = v('<span class="mq-root-block"/>').attr(n, i.id).appendTo(r), this.latex(o.text()), this.revert = function () {
              return r.empty().unbind(".mathquill").removeClass("mq-editable-field mq-math-mode mq-text-mode").append(o);
            };
          }, e.config = function (e) {
            return a(this.__options, e), this;
          }, e.el = function () {
            return this.__controller.container[0];
          }, e.text = function () {
            return this.__controller.exportText();
          }, e.latex = function (e) {
            return arguments.length > 0 ? (this.__controller.renderLatexMath(e), this.__controller.blurred && this.__controller.cursor.hide().parent.blur(), this) : this.__controller.exportLatex();
          }, e.html = function () {
            return this.__controller.root.jQ.html().replace(/ mathquill-(?:command|block)-id="?\d+"?/g, "").replace(/<span class="?mq-cursor( mq-blink)?"?>.?<\/span>/i, "").replace(/ mq-hasCursor|mq-hasCursor ?/, "").replace(/ class=(""|(?= |>))/g, "");
          }, e.reflow = function () {
            return this.__controller.root.postOrder("reflow"), this;
          };
        });

        for (var c in r.prototype = l.prototype, o.EditableField = h(l, function (e, n) {
          e.__mathquillify = function () {
            return n.__mathquillify.apply(this, arguments), this.__controller.editable = !0, this.__controller.delegateMouseEvents(), this.__controller.editablesTextareaEvents(), this;
          }, e.focus = function () {
            return this.__controller.textarea.focus(), this;
          }, e.blur = function () {
            return this.__controller.textarea.blur(), this;
          }, e.write = function (e) {
            return this.__controller.writeLatex(e), this.__controller.scrollHoriz(), this.__controller.blurred && this.__controller.cursor.hide().parent.blur(), this;
          }, e.cmd = function (e) {
            var t = this.__controller.notify(),
                n = t.cursor;

            if (/^\\[a-z]+$/i.test(e)) {
              e = e.slice(1);
              var i = w[e];
              i && (e = i(e), n.selection && e.replaces(n.replaceSelection()), e.createLeftOf(n.show()), this.__controller.scrollHoriz());
            } else n.parent.write(n, e);

            return t.blurred && n.hide().parent.blur(), this;
          }, e.select = function () {
            var e = this.__controller;

            for (e.notify("move").cursor.insAtRightEnd(e.root); e.cursor[p];) {
              e.selectLeft();
            }

            return this;
          }, e.clearSelection = function () {
            return this.__controller.cursor.clearSelection(), this;
          }, e.moveToDirEnd = function (e) {
            return this.__controller.notify("move").cursor.insAtDirEnd(e, this.__controller.root), this;
          }, e.moveToLeftEnd = function () {
            return this.moveToDirEnd(p);
          }, e.moveToRightEnd = function () {
            return this.moveToDirEnd(m);
          }, e.keystroke = function (e) {
            e = e.replace(/^\s+|\s+$/g, "").split(/\s+/);

            for (var t = 0; t < e.length; t += 1) {
              this.__controller.keystroke(e[t], {
                preventDefault: s
              });
            }

            return this;
          }, e.typedText = function (e) {
            for (var t = 0; t < e.length; t += 1) {
              this.__controller.typedText(e.charAt(t));
            }

            return this;
          }, e.dropEmbedded = function (e, t, n) {
            var r = e - v(i).scrollLeft(),
                o = t - v(i).scrollTop(),
                s = document.elementFromPoint(r, o);
            this.__controller.seek(v(s), e, t), _e().setOptions(n).createLeftOf(this.__controller.cursor);
          }, e.clickAt = function (e, n, i) {
            i = i || document.elementFromPoint(e, n);
            var r = this.__controller,
                o = r.root;
            return t.contains(o.jQ[0], i) || (i = o.jQ[0]), r.seek(v(i), e + pageXOffset, n + pageYOffset), r.blurred && this.focus(), this;
          }, e.ignoreNextMousedown = function (e) {
            return this.__controller.cursor.options.ignoreNextMousedown = e, this;
          };
        }), r.EditableField = function () {
          throw "wtf don't call me, I'm 'abstract'";
        }, r.EditableField.prototype = o.EditableField.prototype, j) {
          !function (t, n) {
            var i = o[t] = n(o);
            r[t] = function (n, o) {
              var s = r(n);
              if (s instanceof i || !n || !n.nodeType) return s;
              var a = S(i.RootBlock(), v(n), E());
              return a.KIND_OF_MQ = t, i(a).__mathquillify(o, e);
            }, r[t].prototype = i.prototype;
          }(c, j[c]);
        }

        return r;
      }

      _.noConflict = function () {
        return i.MathQuill = R, _;
      };

      var R = i.MathQuill;

      function z(e) {
        for (var t = "moveOutOf deleteOutOf selectOutOf upOutOf downOutOf".split(" "), n = 0; n < t.length; n += 1) {
          !function (t) {
            e[t] = function (e) {
              this.controller.handle(t, e);
            };
          }(t[n]);
        }

        e.reflow = function () {
          this.controller.handle("reflow"), this.controller.handle("edited"), this.controller.handle("edit");
        };
      }

      i.MathQuill = _;

      var F = h(function (e, t, n) {
        function i(e, t) {
          throw "Parse Error: " + t + " at " + (e = e ? "'" + e + "'" : "EOF");
        }

        e.init = function (e) {
          this._ = e;
        }, e.parse = function (e) {
          return this.skip(s)._("" + e, function (e, t) {
            return t;
          }, i);
        }, e.or = function (e) {
          d("or is passed a parser", e instanceof n);
          var t = this;
          return n(function (n, i, r) {
            return t._(n, i, function (t) {
              return e._(n, i, r);
            });
          });
        }, e.then = function (e) {
          var t = this;
          return n(function (i, r, o) {
            return t._(i, function (t, i) {
              var s = e instanceof n ? e : e(i);
              return d("a parser is returned", s instanceof n), s._(t, r, o);
            }, o);
          });
        }, e.many = function () {
          var e = this;
          return n(function (t, n, i) {
            for (var r = []; e._(t, o, s);) {
              ;
            }

            return n(t, r);

            function o(e, n) {
              return t = e, r.push(n), !0;
            }

            function s() {
              return !1;
            }
          });
        }, e.times = function (e, t) {
          arguments.length < 2 && (t = e);
          var i = this;
          return n(function (n, r, o) {
            for (var s, a = [], l = !0, c = 0; c < e; c += 1) {
              if (!(l = i._(n, u, f))) return o(n, s);
            }

            for (; c < t && l; c += 1) {
              l = i._(n, u, d);
            }

            return r(n, a);

            function u(e, t) {
              return a.push(t), n = e, !0;
            }

            function f(e, t) {
              return s = t, n = e, !1;
            }

            function d(e, t) {
              return !1;
            }
          });
        }, e.result = function (e) {
          return this.then(o(e));
        }, e.atMost = function (e) {
          return this.times(0, e);
        }, e.atLeast = function (e) {
          var t = this;
          return t.times(e).then(function (e) {
            return t.many().map(function (t) {
              return e.concat(t);
            });
          });
        }, e.map = function (e) {
          return this.then(function (t) {
            return o(e(t));
          });
        }, e.skip = function (e) {
          return this.then(function (t) {
            return e.result(t);
          });
        };

        this.string = function (e) {
          var t = e.length,
              i = "expected '" + e + "'";
          return n(function (n, r, o) {
            var s = n.slice(0, t);
            return s === e ? r(n.slice(t), s) : o(n, i);
          });
        };

        var r = this.regex = function (e) {
          d("regexp parser is anchored", "^" === e.toString().charAt(1));
          var t = "expected " + e;
          return n(function (n, i, r) {
            var o = e.exec(n);

            if (o) {
              var s = o[0];
              return i(n.slice(s.length), s);
            }

            return r(n, t);
          });
        },
            o = n.succeed = function (e) {
          return n(function (t, n) {
            return n(t, e);
          });
        },
            s = (n.fail = function (e) {
          return n(function (t, n, i) {
            return i(t, e);
          });
        }, n.letter = r(/^[a-z]/i), n.letters = r(/^[a-z]*/i), n.digit = r(/^[0-9]/), n.digits = r(/^[0-9]*/), n.whitespace = r(/^\s+/), n.optWhitespace = r(/^\s*/), n.any = n(function (e, t, n) {
          return e ? t(e.slice(1), e.charAt(0)) : n(e, "expected any character");
        }), n.all = n(function (e, t, n) {
          return t("", e);
        }), n.eof = n(function (e, t, n) {
          return e ? n(e, "expected EOF") : t(e, e);
        }));
      }),
          H = function () {
        var e = {
          8: "Backspace",
          9: "Tab",
          10: "Enter",
          13: "Enter",
          16: "Shift",
          17: "Control",
          18: "Alt",
          20: "CapsLock",
          27: "Esc",
          32: "Spacebar",
          33: "PageUp",
          34: "PageDown",
          35: "End",
          36: "Home",
          37: "Left",
          38: "Up",
          39: "Right",
          40: "Down",
          45: "Insert",
          46: "Del",
          144: "NumLock"
        };
        return function (n, i) {
          var r,
              o = null,
              a = null,
              l = t(n),
              c = t(i.container || l),
              u = s;

          function f(e) {
            u = e, clearTimeout(r), r = setTimeout(e);
          }

          c.bind("keydown keypress input keyup focusout paste", function (e) {
            u(e);
          });
          var d = !1;

          function h() {
            var t, n, r, s, a;
            i.keystroke((r = (t = o).which || t.keyCode, s = e[r], a = [], t.ctrlKey && a.push("Ctrl"), t.originalEvent && t.originalEvent.metaKey && a.push("Meta"), t.altKey && a.push("Alt"), t.shiftKey && a.push("Shift"), n = s || String.fromCharCode(r), a.length || s ? (a.push(n), a.join("-")) : n), o);
          }

          function p() {
            if (!("selectionStart" in (e = l[0]) && e.selectionStart !== e.selectionEnd)) {
              var e,
                  t = l.val();
              1 === t.length ? (l.val(""), i.typedText(t)) : t && l[0].select && l[0].select();
            }
          }

          function m() {
            var e = l.val();
            l.val(""), e && i.paste(e);
          }

          return c.bind({
            keydown: function keydown(e) {
              o = e, a = null, d && f(function (e) {
                e && "focusout" === e.type || !l[0].select || l[0].select(), u = s, clearTimeout(r);
              }), h();
            },
            keypress: function keypress(e) {
              o && a && h(), a = e, f(p);
            },
            focusout: function focusout() {
              o = a = null;
            },
            paste: function paste(e) {
              l.focus(), f(m);
            }
          }), {
            select: function select(e) {
              u(), u = s, clearTimeout(r), l.val(e), e && l[0].select && l[0].select(), d = !!e;
            }
          };
        };
      }();

      S.open(function (e, t) {
        e.exportText = function () {
          return this.root.foldChildren("", function (e, t) {
            return e + t.text();
          });
        };
      }), S.open(function (e) {
        e.focusBlurEvents = function () {
          var e,
              t = this,
              n = t.root,
              r = t.cursor;

          function o() {
            clearTimeout(e), r.selection && r.selection.jQ.addClass("mq-blur"), s();
          }

          function s() {
            r.hide().parent.blur(), t.container.removeClass("mq-focused"), v(i).off("blur", o);
          }

          t.textarea.focus(function () {
            t.blurred = !1, clearTimeout(e), t.container.addClass("mq-focused"), r.parent || r.insAtRightEnd(n), r.selection ? (r.selection.jQ.removeClass("mq-blur"), t.selectionChanged()) : r.show();
          }).blur(function () {
            t.blurred = !0, e = setTimeout(function () {
              n.postOrder("intentionalBlur"), r.clearSelection().endSelection(), s();
            }), v(i).on("blur", o);
          }), t.blurred = !0, r.hide().parent.blur();
        };
      }), S.open(function (e) {
        e.keystroke = function (e, t) {
          this.cursor.parent.keystroke(e, t, this);
        };
      }), b.open(function (e) {
        e.keystroke = function (e, t, n) {
          var i = n.cursor;

          switch (e) {
            case "Ctrl-Shift-Backspace":
            case "Ctrl-Backspace":
              n.ctrlDeleteDir(p);
              break;

            case "Shift-Backspace":
            case "Backspace":
              n.backspace();
              break;

            case "Esc":
            case "Tab":
              return void n.escapeDir(m, e, t);

            case "Shift-Tab":
            case "Shift-Esc":
              return void n.escapeDir(p, e, t);

            case "End":
              n.notify("move").cursor.insAtRightEnd(i.parent);
              break;

            case "Ctrl-End":
              n.notify("move").cursor.insAtRightEnd(n.root);
              break;

            case "Shift-End":
              for (; i[m];) {
                n.selectRight();
              }

              break;

            case "Ctrl-Shift-End":
              for (; i[m] || i.parent !== n.root;) {
                n.selectRight();
              }

              break;

            case "Home":
              n.notify("move").cursor.insAtLeftEnd(i.parent);
              break;

            case "Ctrl-Home":
              n.notify("move").cursor.insAtLeftEnd(n.root);
              break;

            case "Shift-Home":
              for (; i[p];) {
                n.selectLeft();
              }

              break;

            case "Ctrl-Shift-Home":
              for (; i[p] || i.parent !== n.root;) {
                n.selectLeft();
              }

              break;

            case "Left":
              n.moveLeft();
              break;

            case "Shift-Left":
              n.selectLeft();
              break;

            case "Ctrl-Left":
              break;

            case "Right":
              n.moveRight();
              break;

            case "Shift-Right":
              n.selectRight();
              break;

            case "Ctrl-Right":
              break;

            case "Up":
              n.moveUp();
              break;

            case "Down":
              n.moveDown();
              break;

            case "Shift-Up":
              if (i[p]) for (; i[p];) {
                n.selectLeft();
              } else n.selectLeft();

            case "Shift-Down":
              if (i[m]) for (; i[m];) {
                n.selectRight();
              } else n.selectRight();

            case "Ctrl-Up":
            case "Ctrl-Down":
              break;

            case "Ctrl-Shift-Del":
            case "Ctrl-Del":
              n.ctrlDeleteDir(m);
              break;

            case "Shift-Del":
            case "Del":
              n.deleteForward();
              break;

            case "Meta-A":
            case "Ctrl-A":
              for (n.notify("move").cursor.insAtRightEnd(n.root); i[p];) {
                n.selectLeft();
              }

              break;

            default:
              return;
          }

          t.preventDefault(), n.scrollHoriz();
        }, e.moveOutOf = e.moveTowards = e.deleteOutOf = e.deleteTowards = e.unselectInto = e.selectOutOf = e.selectTowards = function () {
          d("overridden or never called on this node");
        };
      }), S.open(function (e) {
        function t(e, t) {
          var n = e.notify("upDown").cursor,
              i = t + "Into",
              r = t + "OutOf";
          return n[m][i] ? n.insAtLeftEnd(n[m][i]) : n[p][i] ? n.insAtRightEnd(n[p][i]) : n.parent.bubble(function (e) {
            var t = e[r];
            if (t && ("function" == typeof t && (t = e[r](n)), t instanceof b && n.jumpUpDown(e, t), !0 !== t)) return !1;
          }), e;
        }

        this.onNotify(function (e) {
          "move" !== e && "upDown" !== e || this.show().clearSelection();
        }), e.escapeDir = function (e, t, n) {
          g(e);
          var i = this.cursor;
          if (i.parent !== this.root && n.preventDefault(), i.parent !== this.root) return i.parent.moveOutOf(e, i), this.notify("move");
        }, O.leftRightIntoCmdGoes = function (e) {
          if (e && "up" !== e && "down" !== e) throw '"up" or "down" required for leftRightIntoCmdGoes option, got "' + e + '"';
          return e;
        }, e.moveDir = function (e) {
          g(e);
          var t = this.cursor,
              n = t.options.leftRightIntoCmdGoes;
          return t.selection ? t.insDirOf(e, t.selection.ends[e]) : t[e] ? t[e].moveTowards(e, t, n) : t.parent.moveOutOf(e, t, n), this.notify("move");
        }, e.moveLeft = function () {
          return this.moveDir(p);
        }, e.moveRight = function () {
          return this.moveDir(m);
        }, e.moveUp = function () {
          return t(this, "up");
        }, e.moveDown = function () {
          return t(this, "down");
        }, this.onNotify(function (e) {
          "upDown" !== e && (this.upDownCache = {});
        }), this.onNotify(function (e) {
          "edit" === e && this.show().deleteSelection();
        }), e.deleteDir = function (e) {
          g(e);
          var t = this.cursor,
              n = t.selection;
          return this.notify("edit"), n || (t[e] ? t[e].deleteTowards(e, t) : t.parent.deleteOutOf(e, t)), t[p].siblingDeleted && t[p].siblingDeleted(t.options, m), t[m].siblingDeleted && t[m].siblingDeleted(t.options, p), t.parent.bubble("reflow"), this;
        }, e.ctrlDeleteDir = function (e) {
          g(e);
          var t = this.cursor;
          return !t[p] || t.selection ? ctrlr.deleteDir() : (this.notify("edit"), q(t.parent.ends[p], t[p]).remove(), t.insAtDirEnd(p, t.parent), t[p].siblingDeleted && t[p].siblingDeleted(t.options, m), t[m].siblingDeleted && t[m].siblingDeleted(t.options, p), t.parent.bubble("reflow"), this);
        }, e.backspace = function () {
          return this.deleteDir(p);
        }, e.deleteForward = function () {
          return this.deleteDir(m);
        }, this.onNotify(function (e) {
          "select" !== e && this.endSelection();
        }), e.selectDir = function (e) {
          var t = this.notify("select").cursor,
              n = t.selection;
          g(e), t.anticursor || t.startSelection();
          var i = t[e];
          i ? n && n.ends[e] === i && t.anticursor[-e] !== i ? i.unselectInto(e, t) : i.selectTowards(e, t) : t.parent.selectOutOf(e, t), t.clearSelection(), t.select() || t.show();
        }, e.selectLeft = function () {
          return this.selectDir(p);
        }, e.selectRight = function () {
          return this.selectDir(m);
        };
      });

      var I = function () {
        function e(e) {
          for (var t = e[0] || U(), n = 1; n < e.length; n += 1) {
            e[n].children().adopt(t, t.ends[m], 0);
          }

          return t;
        }

        var t = F.string,
            n = F.regex,
            i = F.letter,
            r = F.any,
            o = F.optWhitespace,
            s = F.succeed,
            a = F.fail,
            l = i.map(function (e) {
          return ne(e);
        }),
            c = n(/^[^${}\\_^]/).map(function (e) {
          return W(e);
        }),
            u = n(/^[^\\a-eg-zA-Z]/).or(t("\\").then(n(/^[a-z]+/i).or(n(/^\s+/).result(" ")).or(r))).then(function (e) {
          var t = w[e];
          return t ? t(e).parser() : a("unknown command: \\" + e);
        }).or(l).or(c),
            f = t("{").then(function () {
          return h;
        }).skip(t("}")),
            d = o.then(f.or(u.map(function (e) {
          var t = U();
          return e.adopt(t, 0, 0), t;
        }))),
            h = d.many().map(e).skip(o),
            p = t("[").then(d.then(function (e) {
          return "]" !== e.join("latex") ? s(e) : a();
        }).many().map(e).skip(o)).skip(t("]")),
            g = h;
        return g.block = d, g.optBlock = p, g;
      }();

      S.open(function (e, t) {
        e.exportLatex = function () {
          return this.root.latex().replace(/(\\[a-z]+) (?![a-z])/gi, "$1");
        }, e.writeLatex = function (e) {
          var t = this.notify("edit").cursor,
              n = F.all,
              i = F.eof,
              r = I.skip(i).or(n.result(!1)).parse(e);
          r && !r.isEmpty() && (r.children().adopt(t.parent, t[p], t[m]), r.jQize().insertBefore(t.jQ), t[p] = r.ends[m], r.finalizeInsert(t.options, t), r.ends[m][m].siblingCreated && r.ends[m][m].siblingCreated(t.options, p), r.ends[p][p].siblingCreated && r.ends[p][p].siblingCreated(t.options, m), t.parent.bubble("reflow"));
          return this;
        }, e.renderLatexMath = function (e) {
          var t = this.root,
              n = this.cursor,
              i = F.all,
              r = F.eof,
              o = I.skip(r).or(i.result(!1)).parse(e);
          t.eachChild("postOrder", "dispose"), t.ends[p] = t.ends[m] = 0, o && o.children().adopt(t, 0, 0);
          var s = t.jQ;

          if (o) {
            var a = o.join("html");
            s.html(a), t.jQize(s.children()), t.finalizeInsert(n.options);
          } else s.empty();

          delete n.selection, n.insAtRightEnd(t);
        }, e.renderLatexText = function (e) {
          var t = this.root,
              n = this.cursor;
          t.jQ.children().slice(1).remove(), t.eachChild("postOrder", "dispose"), t.ends[p] = t.ends[m] = 0, delete n.selection, n.show().insAtRightEnd(t);
          var i = F.regex,
              r = F.string,
              o = F.eof,
              s = F.all,
              a = r("$").then(I).skip(r("$").or(o)).map(function (e) {
            var t = J(n);
            t.createBlocks();
            var i = t.ends[p];
            return e.children().adopt(i, 0, 0), t;
          }),
              l = r("\\$").result("$").or(i(/^[^$]/)).map(W),
              c = a.or(l).many().skip(o).or(s.result(!1)).parse(e);

          if (c) {
            for (var u = 0; u < c.length; u += 1) {
              c[u].adopt(t, t.ends[m], 0);
            }

            t.jQize().appendTo(t.jQ), t.finalizeInsert(n.options);
          }
        };
      }), S.open(function (t) {
        E.p.ignoreNextMousedown = s, t.delegateMouseEvents = function () {
          var t = this.root.jQ;
          this.container.bind("mousedown.mathquill", function (i) {
            var r,
                o = v(i.target).closest(".mq-root-block"),
                a = b.byId[o.attr(n) || t.attr(n)].controller,
                l = a.cursor,
                c = l.blink,
                u = a.textareaSpan,
                f = a.textarea;
            (i.preventDefault(), i.target.unselectable = !0, l.options.ignoreNextMousedown(i)) || (l.options.ignoreNextMousedown = s, a.blurred && (a.editable || o.prepend(u), f.focus()), l.blink = s, a.seek(v(i.target), i.pageX, i.pageY).cursor.startSelection(), o.mousemove(d), v(i.target.ownerDocument).mousemove(h).mouseup(function e(t) {
              l.blink = c, l.selection || (a.editable ? l.show() : u.detach()), o.unbind("mousemove", d), v(t.target.ownerDocument).unbind("mousemove", h).unbind("mouseup", e);
            }));

            function d(e) {
              r = v(e.target);
            }

            function h(t) {
              l.anticursor || l.startSelection(), a.seek(r, t.pageX, t.pageY).cursor.select(), r = e;
            }
          });
        };
      }), S.open(function (e) {
        e.seek = function (e, t, i) {
          var r = this.notify("select").cursor;

          if (e) {
            var o = e.attr(n) || e.attr("mathquill-command-id");

            if (!o) {
              var s = e.parent();
              o = s.attr(n) || s.attr("mathquill-command-id");
            }
          }

          var a = o ? b.byId[o] : this.root;
          return d("nodeId is the id of some Node that exists", a), r.clearSelection().show(), a.seek(t, r), this.scrollHoriz(), this;
        };
      }), S.open(function (e) {
        e.scrollHoriz = function () {
          var e = this.cursor,
              t = e.selection,
              n = this.root.jQ[0].getBoundingClientRect();

          if (t) {
            var i = t.jQ[0].getBoundingClientRect(),
                r = i.left - (n.left + 20),
                o = i.right - (n.right - 20);
            if (t.ends[p] === e[m]) {
              if (r < 0) a = r;else {
                if (!(o > 0)) return;
                if (i.left - o < n.left + 20) a = r;else a = o;
              }
            } else if (o > 0) a = o;else {
              if (!(r < 0)) return;
              if (i.right - r > n.right - 20) a = o;else a = r;
            }
          } else {
            var s = e.jQ[0].getBoundingClientRect().left;
            if (s > n.right - 20) var a = s - (n.right - 20);else {
              if (!(s < n.left + 20)) return;
              var a = s - (n.left + 20);
            }
          }

          this.root.jQ.stop().animate({
            scrollLeft: "+=" + a
          }, 100);
        };
      }), S.open(function (t) {
        E.p.substituteTextarea = function () {
          return v("<textarea autocapitalize=off autocomplete=off autocorrect=off spellcheck=false x-palm-disable-ste-all=true />")[0];
        }, t.createTextarea = function () {
          var e = this.textareaSpan = v('<span class="mq-textarea"></span>'),
              t = this.options.substituteTextarea();
          if (!t.nodeType) throw "substituteTextarea() must return a DOM element, got " + t;
          t = this.textarea = v(t).appendTo(e);
          var n = this;
          n.cursor.selectionChanged = function () {
            n.selectionChanged();
          }, n.container.bind("copy", function () {
            n.setTextareaSelection();
          });
        }, t.selectionChanged = function () {
          var t = this;
          ve(t.container[0]), t.textareaSelectionTimeout === e && (t.textareaSelectionTimeout = setTimeout(function () {
            t.setTextareaSelection();
          }));
        }, t.setTextareaSelection = function () {
          this.textareaSelectionTimeout = e;
          var t = "";
          this.cursor.selection && (t = this.cursor.selection.join("latex"), this.options.statelessClipboard && (t = "$" + t + "$")), this.selectFn(t);
        }, t.staticMathTextareaEvents = function () {
          var e = this,
              t = (e.root, e.cursor),
              n = e.textarea,
              i = e.textareaSpan;

          function r() {
            i.detach(), e.blurred = !0;
          }

          this.container.prepend('<span class="mq-selectable">$' + e.exportLatex() + "$</span>"), e.blurred = !0, n.bind("cut paste", !1).focus(function () {
            e.blurred = !1;
          }).blur(function () {
            t.selection && t.selection.clear(), setTimeout(r);
          }), e.selectFn = function (e) {
            n.val(e), e && n.select();
          };
        }, t.editablesTextareaEvents = function () {
          var e = this,
              t = (e.root, e.cursor),
              n = e.textarea,
              i = e.textareaSpan,
              r = H(n, this);
          this.selectFn = function (e) {
            r.select(e);
          }, this.container.prepend(i).on("cut", function (n) {
            t.selection && setTimeout(function () {
              e.notify("edit"), t.parent.bubble("reflow");
            });
          }), this.focusBlurEvents();
        }, t.typedText = function (e) {
          if ("\n" === e) return this.handle("enter");
          var t = this.notify().cursor;
          t.parent.write(t, e), this.scrollHoriz();
        }, t.paste = function (e) {
          this.options.statelessClipboard && (e = "$" === e.slice(0, 1) && "$" === e.slice(-1) ? e.slice(1, -1) : "\\text{" + e + "}"), this.writeLatex(e).cursor.show();
        };
      });
      var B = h(b, function (e, t) {
        e.finalizeInsert = function (e, t) {
          this.postOrder("finalizeTree", e), this.postOrder("contactWeld", t), this.postOrder("blur"), this.postOrder("reflow"), this[m].siblingCreated && this[m].siblingCreated(e, p), this[p].siblingCreated && this[p].siblingCreated(e, m), this.bubble("reflow");
        };
      }),
          P = h(B, function (e, t) {
        e.init = function (e, n, i) {
          t.init.call(this), this.ctrlSeq || (this.ctrlSeq = e), n && (this.htmlTemplate = n), i && (this.textTemplate = i);
        }, e.replaces = function (e) {
          e.disown(), this.replacedFragment = e;
        }, e.isEmpty = function () {
          return this.foldChildren(!0, function (e, t) {
            return e && t.isEmpty();
          });
        }, e.parser = function () {
          var e = I.block,
              t = this;
          return e.times(t.numBlocks()).map(function (e) {
            t.blocks = e;

            for (var n = 0; n < e.length; n += 1) {
              e[n].adopt(t, t.ends[m], 0);
            }

            return t;
          });
        }, e.createLeftOf = function (e) {
          var n = this.replacedFragment;
          this.createBlocks(), t.createLeftOf.call(this, e), n && (n.adopt(this.ends[p], 0, 0), n.jQ.appendTo(this.ends[p].jQ)), this.finalizeInsert(e.options), this.placeCursor(e);
        }, e.createBlocks = function () {
          for (var e = this.numBlocks(), t = this.blocks = Array(e), n = 0; n < e; n += 1) {
            (t[n] = U()).adopt(this, this.ends[m], 0);
          }
        }, e.placeCursor = function (e) {
          e.insAtRightEnd(this.foldChildren(this.ends[p], function (e, t) {
            return e.isEmpty() ? e : t;
          }));
        }, e.moveTowards = function (e, t, n) {
          var i = n && this[n + "Into"];
          t.insAtDirEnd(-e, i || this.ends[-e]);
        }, e.deleteTowards = function (e, t) {
          this.isEmpty() ? t[e] = this.remove()[e] : this.moveTowards(e, t, null);
        }, e.selectTowards = function (e, t) {
          t[-e] = this, t[e] = this[e];
        }, e.selectChildren = function () {
          return C(this, this);
        }, e.unselectInto = function (e, t) {
          t.insAtDirEnd(-e, t.anticursor.ancestors[this.id]);
        }, e.seek = function (e, t) {
          function n(e) {
            var t = {};
            return t[p] = e.jQ.offset().left, t[m] = t[p] + e.jQ.outerWidth(), t;
          }

          var i = this,
              r = n(i);
          if (e < r[p]) return t.insLeftOf(i);
          if (e > r[m]) return t.insRightOf(i);
          var o = r[p];
          i.eachChild(function (s) {
            var a = n(s);
            return e < a[p] ? (e - o < a[p] - e ? s[p] ? t.insAtRightEnd(s[p]) : t.insLeftOf(i) : t.insAtLeftEnd(s), !1) : e > a[m] ? void (s[m] ? o = a[m] : r[m] - e < e - a[m] ? t.insRightOf(i) : t.insAtRightEnd(s)) : (s.seek(e, t), !1);
          });
        }, e.numBlocks = function () {
          var e = this.htmlTemplate.match(/&\d+/g);
          return e ? e.length : 0;
        }, e.html = function () {
          var e = this.blocks,
              t = " mathquill-command-id=" + this.id,
              n = this.htmlTemplate.match(/<[^<>]+>|[^<>]+/g);
          d("no unmatched angle brackets", n.join("") === this.htmlTemplate);

          for (var i = 0, r = n[0]; r; r = n[i += 1]) {
            if ("/>" === r.slice(-2)) n[i] = r.slice(0, -2) + t + "/>";else if ("<" === r.charAt(0)) {
              d("not an unmatched top-level close tag", "/" !== r.charAt(1)), n[i] = r.slice(0, -1) + t + ">";
              var o = 1;

              do {
                d("no missing close tags", r = n[i += 1]), "</" === r.slice(0, 2) ? o -= 1 : "<" === r.charAt(0) && "/>" !== r.slice(-2) && (o += 1);
              } while (o > 0);
            }
          }

          return n.join("").replace(/>&(\d+)/g, function (t, n) {
            return " mathquill-block-id=" + e[n].id + ">" + e[n].join("html");
          });
        }, e.latex = function () {
          return this.foldChildren(this.ctrlSeq, function (e, t) {
            return e + "{" + (t.latex() || " ") + "}";
          });
        }, e.textTemplate = [""], e.text = function () {
          var e = this,
              t = 0;
          return e.foldChildren(e.textTemplate[t], function (n, i) {
            t += 1;
            var r = i.text();
            return n && "(" === e.textTemplate[t] && "(" === r[0] && ")" === r.slice(-1) ? n + r.slice(1, -1) + e.textTemplate[t] : n + i.text() + (e.textTemplate[t] || "");
          });
        };
      }),
          $ = h(P, function (e, t) {
        e.init = function (e, n, i) {
          i || (i = e && e.length > 1 ? e.slice(1) : e), t.init.call(this, e, n, [i]);
        }, e.parser = function () {
          return F.succeed(this);
        }, e.numBlocks = function () {
          return 0;
        }, e.replaces = function (e) {
          e.remove();
        }, e.createBlocks = s, e.moveTowards = function (e, t) {
          t.jQ.insDirOf(e, this.jQ), t[-e] = this, t[e] = this[e];
        }, e.deleteTowards = function (e, t) {
          t[e] = this.remove()[e];
        }, e.seek = function (e, t) {
          e - this.jQ.offset().left < this.jQ.outerWidth() / 2 ? t.insLeftOf(this) : t.insRightOf(this);
        }, e.latex = function () {
          return this.ctrlSeq;
        }, e.text = function () {
          return this.textTemplate;
        }, e.placeCursor = s, e.isEmpty = function () {
          return !0;
        };
      }),
          W = h($, function (e, t) {
        e.init = function (e, n) {
          t.init.call(this, e, "<span>" + (n || e) + "</span>");
        };
      }),
          X = h($, function (e, t) {
        e.init = function (e, n, i) {
          t.init.call(this, e, '<span class="mq-binary-operator">' + n + "</span>", i);
        };
      }),
          U = h(B, function (e, t) {
        e.join = function (e) {
          return this.foldChildren("", function (t, n) {
            return t + n[e]();
          });
        }, e.html = function () {
          return this.join("html");
        }, e.latex = function () {
          return this.join("latex");
        }, e.text = function () {
          return this.ends[p] === this.ends[m] && 0 !== this.ends[p] ? this.ends[p].text() : this.join("text");
        }, e.keystroke = function (e, n, i) {
          return !i.options.spaceBehavesLikeTab || "Spacebar" !== e && "Shift-Spacebar" !== e ? t.keystroke.apply(this, arguments) : (n.preventDefault(), void i.escapeDir("Shift-Spacebar" === e ? p : m, e, n));
        }, e.moveOutOf = function (e, t, n) {
          !(n && this.parent[n + "Into"]) && this[e] ? t.insAtDirEnd(-e, this[e]) : t.insDirOf(e, this.parent);
        }, e.selectOutOf = function (e, t) {
          t.insDirOf(e, this.parent);
        }, e.deleteOutOf = function (e, t) {
          t.unwrapGramp();
        }, e.seek = function (e, t) {
          var n = this.ends[m];
          if (!n || n.jQ.offset().left + n.jQ.outerWidth() < e) return t.insAtRightEnd(this);
          if (e < this.ends[p].jQ.offset().left) return t.insAtLeftEnd(this);

          for (; e < n.jQ.offset().left;) {
            n = n[p];
          }

          return n.seek(e, t);
        }, e.chToCmd = function (e) {
          var t;
          return e.match(/^[a-eg-zA-Z]$/) ? ne(e) : /^\d$/.test(e) ? ee(e) : (t = T[e] || w[e]) ? t(e) : W(e);
        }, e.write = function (e, t) {
          var n = this.chToCmd(t);
          e.selection && n.replaces(e.replaceSelection()), n.createLeftOf(e.show());
        }, e.focus = function () {
          return this.jQ.addClass("mq-hasCursor"), this.jQ.removeClass("mq-empty"), this;
        }, e.blur = function () {
          return this.jQ.removeClass("mq-hasCursor"), this.isEmpty() && this.jQ.addClass("mq-empty"), this;
        };
      });

      j.StaticMath = function (e) {
        return h(e.AbstractMathQuill, function (t, n) {
          this.RootBlock = U, t.__mathquillify = function () {
            return n.__mathquillify.call(this, "mq-math-mode"), this.__controller.delegateMouseEvents(), this.__controller.staticMathTextareaEvents(), this;
          }, t.init = function () {
            n.init.apply(this, arguments), this.__controller.root.postOrder("registerInnerField", this.innerFields = [], e.MathField);
          }, t.latex = function () {
            var t = n.latex.apply(this, arguments);
            return arguments.length > 0 && this.__controller.root.postOrder("registerInnerField", this.innerFields = [], e.MathField), t;
          };
        });
      };

      var Y = h(U, z);

      j.MathField = function (e) {
        return h(e.EditableField, function (e, t) {
          this.RootBlock = Y, e.__mathquillify = function (e, n) {
            return this.config(e), n > 1 && (this.__controller.root.reflow = s), t.__mathquillify.call(this, "mq-editable-field mq-math-mode"), delete this.__controller.root.reflow, this;
          };
        });
      };

      var G = h(b, function (e, t) {
        function n(e) {
          e.jQ[0].normalize();
          var t = e.jQ[0].firstChild;

          if (t) {
            d("only node in TextBlock span is Text node", 3 === t.nodeType);
            var n = V(t.data);
            return n.jQadd(t), e.children().disown(), n.adopt(e, 0, 0);
          }
        }

        e.ctrlSeq = "\\text", e.replaces = function (e) {
          e instanceof q ? this.replacedText = e.remove().jQ.text() : "string" == typeof e && (this.replacedText = e);
        }, e.jQadd = function (e) {
          t.jQadd.call(this, e), this.ends[p] && this.ends[p].jQadd(this.jQ[0].firstChild);
        }, e.createLeftOf = function (e) {
          if (t.createLeftOf.call(this, e), this[m].siblingCreated && this[m].siblingCreated(e.options, p), this[p].siblingCreated && this[p].siblingCreated(e.options, m), this.bubble("reflow"), e.insAtRightEnd(this), this.replacedText) for (var n = 0; n < this.replacedText.length; n += 1) {
            this.write(e, this.replacedText.charAt(n));
          }
        }, e.parser = function () {
          var e = this,
              t = F.string,
              n = F.regex;
          return F.optWhitespace.then(t("{")).then(n(/^[^}]*/)).skip(t("}")).map(function (t) {
            return 0 === t.length ? q() : (V(t).adopt(e, 0, 0), e);
          });
        }, e.textContents = function () {
          return this.foldChildren("", function (e, t) {
            return e + t.text;
          });
        }, e.text = function () {
          return '"' + this.textContents() + '"';
        }, e.latex = function () {
          var e = this.textContents();
          return 0 === e.length ? "" : "\\text{" + e + "}";
        }, e.html = function () {
          return '<span class="mq-text-mode" mathquill-command-id=' + this.id + ">" + this.textContents() + "</span>";
        }, e.moveTowards = function (e, t) {
          t.insAtDirEnd(-e, this);
        }, e.moveOutOf = function (e, t) {
          t.insDirOf(e, this);
        }, e.unselectInto = e.moveTowards, e.selectTowards = P.prototype.selectTowards, e.deleteTowards = P.prototype.deleteTowards, e.selectOutOf = function (e, t) {
          t.insDirOf(e, this);
        }, e.deleteOutOf = function (e, t) {
          this.isEmpty() && t.insRightOf(this);
        }, e.write = function (e, n) {
          if (e.show().deleteSelection(), "$" !== n) e[p] ? e[p].appendText(n) : V(n).createLeftOf(e);else if (this.isEmpty()) e.insRightOf(this), W("\\$", "$").createLeftOf(e);else if (e[m]) {
            if (e[p]) {
              var i = G(),
                  r = this.ends[p];
              r.disown().jQ.detach(), r.adopt(i, 0, 0), e.insLeftOf(this), t.createLeftOf.call(i, e);
            } else e.insLeftOf(this);
          } else e.insRightOf(this);
        }, e.seek = function (e, t) {
          t.hide();
          var i = n(this),
              r = this.jQ.width() / this.text.length,
              o = Math.round((e - this.jQ.offset().left) / r);
          o <= 0 ? t.insAtLeftEnd(this) : o >= i.text.length ? t.insAtRightEnd(this) : t.insLeftOf(i.splitRight(o));

          for (var s = e - t.show().offset().left, a = s && s < 0 ? p : m, l = a; t[a] && s * l > 0;) {
            t[a].moveTowards(a, t), l = s, s = e - t.offset().left;
          }

          if (a * s < -a * l && t[-a].moveTowards(-a, t), t.anticursor) {
            if (t.anticursor.parent === this) {
              var c = t[p] && t[p].text.length;
              if (this.anticursorPosition === c) t.anticursor = y.copy(t);else {
                if (this.anticursorPosition < c) {
                  var u = t[p].splitRight(this.anticursorPosition);
                  t[p] = u;
                } else u = t[m].splitRight(this.anticursorPosition - c);

                t.anticursor = y(this, u[p], u);
              }
            }
          } else this.anticursorPosition = t[p] && t[p].text.length;
        }, e.blur = function (e) {
          U.prototype.blur.call(this), e && ("" === this.textContents() ? (this.remove(), e[p] === this ? e[p] = this[p] : e[m] === this && (e[m] = this[m])) : n(this));
        }, e.focus = U.prototype.focus;
      }),
          V = h(b, function (e, t) {
        function n(e, t) {
          return t.charAt(e === p ? 0 : -1 + t.length);
        }

        e.init = function (e) {
          t.init.call(this), this.text = e;
        }, e.jQadd = function (e) {
          this.dom = e, this.jQ = v(e);
        }, e.jQize = function () {
          return this.jQadd(document.createTextNode(this.text));
        }, e.appendText = function (e) {
          this.text += e, this.dom.appendData(e);
        }, e.prependText = function (e) {
          this.text = e + this.text, this.dom.insertData(0, e);
        }, e.insTextAtDirEnd = function (e, t) {
          g(t), t === m ? this.appendText(e) : this.prependText(e);
        }, e.splitRight = function (e) {
          var t = V(this.text.slice(e)).adopt(this.parent, this, this[m]);
          return t.jQadd(this.dom.splitText(e)), this.text = this.text.slice(0, e), t;
        }, e.moveTowards = function (e, t) {
          g(e);
          var i = n(-e, this.text),
              r = this[-e];
          return r ? r.insTextAtDirEnd(i, e) : V(i).createDir(-e, t), this.deleteTowards(e, t);
        }, e.latex = function () {
          return this.text;
        }, e.deleteTowards = function (e, t) {
          this.text.length > 1 ? e === m ? (this.dom.deleteData(0, 1), this.text = this.text.slice(1)) : (this.dom.deleteData(-1 + this.text.length, 1), this.text = this.text.slice(0, -1)) : (this.remove(), this.jQ.remove(), t[e] = this[e]);
        }, e.selectTowards = function (e, t) {
          g(e);
          var i = t.anticursor,
              r = n(-e, this.text);

          if (i[e] === this) {
            var o = V(r).createDir(e, t);
            i[e] = o, t.insDirOf(e, o);
          } else {
            var s = this[-e];
            if (s) s.insTextAtDirEnd(r, e);else (o = V(r).createDir(-e, t)).jQ.insDirOf(-e, t.selection.jQ);
            1 === this.text.length && i[-e] === this && (i[-e] = this[-e]);
          }

          return this.deleteTowards(e, t);
        };
      });

      function K(e, t, n) {
        return h(G, {
          ctrlSeq: e,
          htmlTemplate: "<" + t + " " + n + ">&0</" + t + ">"
        });
      }

      T.$ = w.text = w.textnormal = w.textrm = w.textup = w.textmd = G, w.em = w.italic = w.italics = w.emph = w.textit = w.textsl = K("\\textit", "i", 'class="mq-text-mode"'), w.strong = w.bold = w.textbf = K("\\textbf", "b", 'class="mq-text-mode"'), w.sf = w.textsf = K("\\textsf", "span", 'class="mq-sans-serif mq-text-mode"'), w.tt = w.texttt = K("\\texttt", "span", 'class="mq-monospace mq-text-mode"'), w.textsc = K("\\textsc", "span", 'style="font-variant:small-caps" class="mq-text-mode"'), w.uppercase = K("\\uppercase", "span", 'style="text-transform:uppercase" class="mq-text-mode"'), w.lowercase = K("\\lowercase", "span", 'style="text-transform:lowercase" class="mq-text-mode"');
      var J = h(P, function (e, t) {
        e.init = function (e) {
          t.init.call(this, "$"), this.cursor = e;
        }, e.htmlTemplate = '<span class="mq-math-mode">&0</span>', e.createBlocks = function () {
          t.createBlocks.call(this), this.ends[p].cursor = this.cursor, this.ends[p].write = function (e, t) {
            "$" !== t ? U.prototype.write.call(this, e, t) : this.isEmpty() ? (e.insRightOf(this.parent), this.parent.deleteTowards(dir, e), W("\\$", "$").createLeftOf(e.show())) : e[m] ? e[p] ? U.prototype.write.call(this, e, t) : e.insLeftOf(this.parent) : e.insRightOf(this.parent);
          };
        }, e.latex = function () {
          return "$" + this.ends[p].latex() + "$";
        };
      }),
          Z = h(Y, function (e, t) {
        e.keystroke = function (e) {
          if ("Spacebar" !== e && "Shift-Spacebar" !== e) return t.keystroke.apply(this, arguments);
        }, e.write = function (e, t) {
          var n;
          (e.show().deleteSelection(), "$" === t) ? J(e).createLeftOf(e) : ("<" === t ? n = "&lt;" : ">" === t && (n = "&gt;"), W(t, n).createLeftOf(e));
        };
      });
      j.TextField = function (e) {
        return h(e.EditableField, function (e, t) {
          this.RootBlock = Z, e.__mathquillify = function () {
            return t.__mathquillify.call(this, "mq-editable-field mq-text-mode");
          }, e.latex = function (e) {
            return arguments.length > 0 ? (this.__controller.renderLatexText(e), this.__controller.blurred && this.__controller.cursor.hide().parent.blur(), this) : this.__controller.exportLatex();
          };
        });
      }, w.notin = w.cong = w.equiv = w.oplus = w.otimes = h(X, function (e, t) {
        e.init = function (e) {
          t.init.call(this, "\\" + e + " ", "&" + e + ";");
        };
      }), w["≠"] = w.ne = w.neq = f(X, "\\ne ", "&ne;"), w.ast = w.star = w.loast = w.lowast = f(X, "\\ast ", "&lowast;"), w.therefor = w.therefore = f(X, "\\therefore ", "&there4;"), w.cuz = w.because = f(X, "\\because ", "&#8757;"), w.prop = w.propto = f(X, "\\propto ", "&prop;"), w["≈"] = w.asymp = w.approx = f(X, "\\approx ", "&asymp;"), w.isin = w.in = f(X, "\\in ", "&isin;"), w.ni = w.contains = f(X, "\\ni ", "&ni;"), w.notni = w.niton = w.notcontains = w.doesnotcontain = f(X, "\\not\\ni ", "&#8716;"), w.sub = w.subset = f(X, "\\subset ", "&sub;"), w.sup = w.supset = w.superset = f(X, "\\supset ", "&sup;"), w.nsub = w.notsub = w.nsubset = w.notsubset = f(X, "\\not\\subset ", "&#8836;"), w.nsup = w.notsup = w.nsupset = w.notsupset = w.nsuperset = w.notsuperset = f(X, "\\not\\supset ", "&#8837;"), w.sube = w.subeq = w.subsete = w.subseteq = f(X, "\\subseteq ", "&sube;"), w.supe = w.supeq = w.supsete = w.supseteq = w.supersete = w.superseteq = f(X, "\\supseteq ", "&supe;"), w.nsube = w.nsubeq = w.notsube = w.notsubeq = w.nsubsete = w.nsubseteq = w.notsubsete = w.notsubseteq = f(X, "\\not\\subseteq ", "&#8840;"), w.nsupe = w.nsupeq = w.notsupe = w.notsupeq = w.nsupsete = w.nsupseteq = w.notsupsete = w.notsupseteq = w.nsupersete = w.nsuperseteq = w.notsupersete = w.notsuperseteq = f(X, "\\not\\supseteq ", "&#8841;"), w.N = w.naturals = w.Naturals = f(W, "\\mathbb{N}", "&#8469;"), w.P = w.primes = w.Primes = w.projective = w.Projective = w.probability = w.Probability = f(W, "\\mathbb{P}", "&#8473;"), w.Z = w.integers = w.Integers = f(W, "\\mathbb{Z}", "&#8484;"), w.Q = w.rationals = w.Rationals = f(W, "\\mathbb{Q}", "&#8474;"), w.R = w.reals = w.Reals = f(W, "\\mathbb{R}", "&#8477;"), w.C = w.complex = w.Complex = w.complexes = w.Complexes = w.complexplane = w.Complexplane = w.ComplexPlane = f(W, "\\mathbb{C}", "&#8450;"), w.H = w.Hamiltonian = w.quaternions = w.Quaternions = f(W, "\\mathbb{H}", "&#8461;"), w.quad = w.emsp = f(W, "\\quad ", "    "), w.qquad = f(W, "\\qquad ", "        "), w.diamond = f(W, "\\diamond ", "&#9671;"), w.bigtriangleup = f(W, "\\bigtriangleup ", "&#9651;"), w.ominus = f(W, "\\ominus ", "&#8854;"), w.uplus = f(W, "\\uplus ", "&#8846;"), w.bigtriangledown = f(W, "\\bigtriangledown ", "&#9661;"), w.sqcap = f(W, "\\sqcap ", "&#8851;"), w.triangleleft = f(W, "\\triangleleft ", "&#8882;"), w.sqcup = f(W, "\\sqcup ", "&#8852;"), w.triangleright = f(W, "\\triangleright ", "&#8883;"), w.odot = w.circledot = f(W, "\\odot ", "&#8857;"), w.bigcirc = f(W, "\\bigcirc ", "&#9711;"), w.dagger = f(W, "\\dagger ", "&#0134;"), w.ddagger = f(W, "\\ddagger ", "&#135;"), w.wr = f(W, "\\wr ", "&#8768;"), w.amalg = f(W, "\\amalg ", "&#8720;"), w.models = f(W, "\\models ", "&#8872;"), w.prec = f(W, "\\prec ", "&#8826;"), w.succ = f(W, "\\succ ", "&#8827;"), w.preceq = f(W, "\\preceq ", "&#8828;"), w.succeq = f(W, "\\succeq ", "&#8829;"), w.simeq = f(W, "\\simeq ", "&#8771;"), w.mid = f(W, "\\mid ", "&#8739;"), w.ll = f(W, "\\ll ", "&#8810;"), w.gg = f(W, "\\gg ", "&#8811;"), w.parallel = f(W, "\\parallel ", "&#8741;"), w.nparallel = f(W, "\\nparallel ", "&#8742;"), w.bowtie = f(W, "\\bowtie ", "&#8904;"), w.sqsubset = f(W, "\\sqsubset ", "&#8847;"), w.sqsupset = f(W, "\\sqsupset ", "&#8848;"), w.smile = f(W, "\\smile ", "&#8995;"), w.sqsubseteq = f(W, "\\sqsubseteq ", "&#8849;"), w.sqsupseteq = f(W, "\\sqsupseteq ", "&#8850;"), w.doteq = f(W, "\\doteq ", "&#8784;"), w.frown = f(W, "\\frown ", "&#8994;"), w.vdash = f(W, "\\vdash ", "&#8870;"), w.dashv = f(W, "\\dashv ", "&#8867;"), w.nless = f(W, "\\nless ", "&#8814;"), w.ngtr = f(W, "\\ngtr ", "&#8815;"), w.longleftarrow = f(W, "\\longleftarrow ", "&#8592;"), w.longrightarrow = f(W, "\\longrightarrow ", "&#8594;"), w.Longleftarrow = f(W, "\\Longleftarrow ", "&#8656;"), w.Longrightarrow = f(W, "\\Longrightarrow ", "&#8658;"), w.longleftrightarrow = f(W, "\\longleftrightarrow ", "&#8596;"), w.updownarrow = f(W, "\\updownarrow ", "&#8597;"), w.Longleftrightarrow = f(W, "\\Longleftrightarrow ", "&#8660;"), w.Updownarrow = f(W, "\\Updownarrow ", "&#8661;"), w.mapsto = f(W, "\\mapsto ", "&#8614;"), w.nearrow = f(W, "\\nearrow ", "&#8599;"), w.hookleftarrow = f(W, "\\hookleftarrow ", "&#8617;"), w.hookrightarrow = f(W, "\\hookrightarrow ", "&#8618;"), w.searrow = f(W, "\\searrow ", "&#8600;"), w.leftharpoonup = f(W, "\\leftharpoonup ", "&#8636;"), w.rightharpoonup = f(W, "\\rightharpoonup ", "&#8640;"), w.swarrow = f(W, "\\swarrow ", "&#8601;"), w.leftharpoondown = f(W, "\\leftharpoondown ", "&#8637;"), w.rightharpoondown = f(W, "\\rightharpoondown ", "&#8641;"), w.nwarrow = f(W, "\\nwarrow ", "&#8598;"), w.ldots = f(W, "\\ldots ", "&#8230;"), w.cdots = f(W, "\\cdots ", "&#8943;"), w.vdots = f(W, "\\vdots ", "&#8942;"), w.ddots = f(W, "\\ddots ", "&#8945;"), w.surd = f(W, "\\surd ", "&#8730;"), w.triangle = f(W, "\\triangle ", "&#9651;"), w.ell = f(W, "\\ell ", "&#8467;"), w.top = f(W, "\\top ", "&#8868;"), w.flat = f(W, "\\flat ", "&#9837;"), w.natural = f(W, "\\natural ", "&#9838;"), w.sharp = f(W, "\\sharp ", "&#9839;"), w.wp = f(W, "\\wp ", "&#8472;"), w.bot = f(W, "\\bot ", "&#8869;"), w.clubsuit = f(W, "\\clubsuit ", "&#9827;"), w.diamondsuit = f(W, "\\diamondsuit ", "&#9826;"), w.heartsuit = f(W, "\\heartsuit ", "&#9825;"), w.spadesuit = f(W, "\\spadesuit ", "&#9824;"), w.parallelogram = f(W, "\\parallelogram ", "&#9649;"), w.square = f(W, "\\square ", "&#11036;"), w.oint = f(W, "\\oint ", "&#8750;"), w.bigcap = f(W, "\\bigcap ", "&#8745;"), w.bigcup = f(W, "\\bigcup ", "&#8746;"), w.bigsqcup = f(W, "\\bigsqcup ", "&#8852;"), w.bigvee = f(W, "\\bigvee ", "&#8744;"), w.bigwedge = f(W, "\\bigwedge ", "&#8743;"), w.bigodot = f(W, "\\bigodot ", "&#8857;"), w.bigotimes = f(W, "\\bigotimes ", "&#8855;"), w.bigoplus = f(W, "\\bigoplus ", "&#8853;"), w.biguplus = f(W, "\\biguplus ", "&#8846;"), w.lfloor = f(W, "\\lfloor ", "&#8970;"), w.rfloor = f(W, "\\rfloor ", "&#8971;"), w.lceil = f(W, "\\lceil ", "&#8968;"), w.rceil = f(W, "\\rceil ", "&#8969;"), w.opencurlybrace = w.lbrace = f(W, "\\lbrace ", "{"), w.closecurlybrace = w.rbrace = f(W, "\\rbrace ", "}"), w.lbrack = f(W, "["), w.rbrack = f(W, "]"), w.slash = f(W, "/"), w.vert = f(W, "|"), w.perp = w.perpendicular = f(W, "\\perp ", "&perp;"), w.nabla = w.del = f(W, "\\nabla ", "&nabla;"), w.hbar = f(W, "\\hbar ", "&#8463;"), w.AA = w.Angstrom = w.angstrom = f(W, "\\text\\AA ", "&#8491;"), w.ring = w.circ = w.circle = f(W, "\\circ ", "&#8728;"), w.bull = w.bullet = f(W, "\\bullet ", "&bull;"), w.setminus = w.smallsetminus = f(W, "\\setminus ", "&#8726;"), w.not = w["¬"] = w.neg = f(W, "\\neg ", "&not;"), w["…"] = w.dots = w.ellip = w.hellip = w.ellipsis = w.hellipsis = f(W, "\\dots ", "&hellip;"), w.converges = w.darr = w.dnarr = w.dnarrow = w.downarrow = f(W, "\\downarrow ", "&darr;"), w.dArr = w.dnArr = w.dnArrow = w.Downarrow = f(W, "\\Downarrow ", "&dArr;"), w.diverges = w.uarr = w.uparrow = f(W, "\\uparrow ", "&uarr;"), w.uArr = w.Uparrow = f(W, "\\Uparrow ", "&uArr;"), w.to = f(X, "\\to ", "&rarr;"), w.rarr = w.rightarrow = f(W, "\\rightarrow ", "&rarr;"), w.implies = f(X, "\\Rightarrow ", "&rArr;"), w.rArr = w.Rightarrow = f(W, "\\Rightarrow ", "&rArr;"), w.gets = f(X, "\\gets ", "&larr;"), w.larr = w.leftarrow = f(W, "\\leftarrow ", "&larr;"), w.impliedby = f(X, "\\Leftarrow ", "&lArr;"), w.lArr = w.Leftarrow = f(W, "\\Leftarrow ", "&lArr;"), w.harr = w.lrarr = w.leftrightarrow = f(W, "\\leftrightarrow ", "&harr;"), w.iff = f(X, "\\Leftrightarrow ", "&hArr;"), w.hArr = w.lrArr = w.Leftrightarrow = f(W, "\\Leftrightarrow ", "&hArr;"), w.Re = w.Real = w.real = f(W, "\\Re ", "&real;"), w.Im = w.imag = w.image = w.imagin = w.imaginary = w.Imaginary = f(W, "\\Im ", "&image;"), w.part = w.partial = f(W, "\\partial ", "&part;"), w.infty = w.infin = w.infinity = f(W, "\\infty ", "&infin;"), w.alef = w.alefsym = w.aleph = w.alephsym = f(W, "\\aleph ", "&alefsym;"), w.xist = w.xists = w.exist = w.exists = f(W, "\\exists ", "&exist;"), w.nexists = w.nexist = f(W, "\\nexists ", "&#8708;"), w.and = w.land = w.wedge = f(W, "\\wedge ", "&and;"), w.or = w.lor = w.vee = f(W, "\\vee ", "&or;"), w.o = w.O = w.empty = w.emptyset = w.oslash = w.Oslash = w.nothing = w.varnothing = f(X, "\\varnothing ", "&empty;"), w.cup = w.union = f(X, "\\cup ", "&cup;"), w.cap = w.intersect = w.intersection = f(X, "\\cap ", "&cap;"), w.deg = w.degree = f(W, "\\degree ", "&deg;"), w.ang = w.angle = f(W, "\\angle ", "&ang;"), w.measuredangle = f(W, "\\measuredangle ", "&#8737;");
      var ee = h(W, function (e, t) {
        e.createLeftOf = function (e) {
          e.options.autoSubscriptNumerals && e.parent !== e.parent.parent.sub && (e[p] instanceof te && !1 !== e[p].isItalic || e[p] instanceof qe && e[p][p] instanceof te && !1 !== e[p][p].isItalic) ? (w._().createLeftOf(e), t.createLeftOf.call(this, e), e.insRightOf(e.parent.parent)) : t.createLeftOf.call(this, e);
        };
      }),
          te = h($, function (e, t) {
        e.init = function (e, n) {
          t.init.call(this, e, "<var>" + (n || e) + "</var>");
        }, e.text = function () {
          var e = this.ctrlSeq;
          return !this[p] || this[p] instanceof te || this[p] instanceof X || "\\ " === this[p].ctrlSeq || (e = "*" + e), !this[m] || this[m] instanceof X || this[m] instanceof qe || (e += "*"), e;
        };
      });
      E.p.autoCommands = {
        _maxLength: 0
      }, O.autoCommands = function (e) {
        if (!/^[a-z]+(?: [a-z]+)*$/i.test(e)) throw '"' + e + '" not a space-delimited list of only letters';

        for (var t = e.split(" "), n = {}, i = 0, r = 0; r < t.length; r += 1) {
          var s = t[r];
          if (s.length < 2) throw 'autocommand "' + s + '" not minimum length of 2';
          if (w[s] === se) throw '"' + s + '" is a built-in operator name';
          n[s] = 1, i = o(i, s.length);
        }

        return n._maxLength = i, n;
      };
      var ne = h(te, function (e, t) {
        function n(e) {
          return !e || e instanceof X || e instanceof Te;
        }

        e.init = function (e) {
          return t.init.call(this, this.letter = e);
        }, e.createLeftOf = function (e) {
          t.createLeftOf.apply(this, arguments);
          var n = e.options.autoCommands,
              i = n._maxLength;

          if (i > 0) {
            for (var r = "", o = this, s = 0; o instanceof ne && o.ctrlSeq === o.letter && s < i;) {
              r = o.letter + r, o = o[p], s += 1;
            }

            for (; r.length;) {
              if (n.hasOwnProperty(r)) {
                for (s = 1, o = this; s < r.length; s += 1, o = o[p]) {
                  ;
                }

                return q(o, this).remove(), e[p] = o[p], w[r](r).createLeftOf(e);
              }

              r = r.slice(1);
            }
          }
        }, e.italicize = function (e) {
          return this.isItalic = e, this.jQ.toggleClass("mq-operator-name", !e), this;
        }, e.finalizeTree = e.siblingDeleted = e.siblingCreated = function (e, t) {
          t !== p && this[m] instanceof ne || this.autoUnItalicize(e);
        }, e.autoUnItalicize = function (e) {
          var t = e.autoOperatorNames;

          if (0 !== t._maxLength) {
            for (var i = this.letter, o = this[p]; o instanceof ne; o = o[p]) {
              i = o.letter + i;
            }

            for (var s = this[m]; s instanceof ne; s = s[m]) {
              i += s.letter;
            }

            q(o[m] || this.parent.ends[p], s[p] || this.parent.ends[m]).each(function (e) {
              e.italicize(!0).jQ.removeClass("mq-first mq-last mq-followed-by-supsub"), e.ctrlSeq = e.letter;
            });

            e: for (var a = 0, l = o[m] || this.parent.ends[p]; a < i.length; a += 1, l = l[m]) {
              for (var c = r(t._maxLength, i.length - a); c > 0; c -= 1) {
                var u = i.slice(a, a + c);

                if (t.hasOwnProperty(u)) {
                  for (var f = 0, d = l; f < c; f += 1, d = d[m]) {
                    d.italicize(!1);
                    var h = d;
                  }

                  var g = ie.hasOwnProperty(u);
                  if (l.ctrlSeq = (g ? "\\" : "\\operatorname{") + l.ctrlSeq, h.ctrlSeq += g ? " " : "}", oe.hasOwnProperty(u) && h[p][p][p].jQ.addClass("mq-last"), n(l[p]) || l.jQ.addClass("mq-first"), !n(h[m])) if (h[m] instanceof qe) {
                    var v = h[m];
                    (v.siblingCreated = v.siblingDeleted = function () {
                      v.jQ.toggleClass("mq-after-operator-name", !(v[m] instanceof Oe));
                    })();
                  } else h.jQ.toggleClass("mq-last", !(h[m] instanceof Oe));
                  a += c - 1, l = h;
                  continue e;
                }
              }
            }
          }
        };
      }),
          ie = {},
          re = E.p.autoOperatorNames = {
        _maxLength: 9
      },
          oe = {
        limsup: 1,
        liminf: 1,
        projlim: 1,
        injlim: 1
      };
      !function () {
        for (var e = "arg deg det dim exp gcd hom inf ker lg lim ln log max min sup limsup liminf injlim projlim Pr".split(" "), t = 0; t < e.length; t += 1) {
          ie[e[t]] = re[e[t]] = 1;
        }

        var n = "sin cos tan arcsin arccos arctan sinh cosh tanh sec csc cot coth".split(" ");

        for (t = 0; t < n.length; t += 1) {
          ie[n[t]] = 1;
        }

        var i = "sin cos tan sec cosec csc cotan cot ctg".split(" ");

        for (t = 0; t < i.length; t += 1) {
          re[i[t]] = re["arc" + i[t]] = re[i[t] + "h"] = re["ar" + i[t] + "h"] = re["arc" + i[t] + "h"] = 1;
        }

        var r = "gcf hcf lcm proj span".split(" ");

        for (t = 0; t < r.length; t += 1) {
          re[r[t]] = 1;
        }
      }(), O.autoOperatorNames = function (e) {
        if (!/^[a-z]+(?: [a-z]+)*$/i.test(e)) throw '"' + e + '" not a space-delimited list of only letters';

        for (var t = e.split(" "), n = {}, i = 0, r = 0; r < t.length; r += 1) {
          var s = t[r];
          if (s.length < 2) throw '"' + s + '" not minimum length of 2';
          n[s] = 1, i = o(i, s.length);
        }

        return n._maxLength = i, n;
      };
      var se = h($, function (e, t) {
        e.init = function (e) {
          this.ctrlSeq = e;
        }, e.createLeftOf = function (e) {
          for (var t = this.ctrlSeq, n = 0; n < t.length; n += 1) {
            ne(t.charAt(n)).createLeftOf(e);
          }
        }, e.parser = function () {
          for (var e = this.ctrlSeq, t = U(), n = 0; n < e.length; n += 1) {
            ne(e.charAt(n)).adopt(t, t.ends[m], 0);
          }

          return F.succeed(t.children());
        };
      });

      for (var ae in re) {
        re.hasOwnProperty(ae) && (w[ae] = se);
      }

      w.operatorname = h(P, function (e) {
        e.createLeftOf = s, e.numBlocks = function () {
          return 1;
        }, e.parser = function () {
          return I.block.map(function (e) {
            return e.children();
          });
        };
      }), w.f = h(ne, function (e, t) {
        e.init = function () {
          $.p.init.call(this, this.letter = "f", '<var class="mq-f">f</var>');
        }, e.italicize = function (e) {
          return this.jQ.html("f").toggleClass("mq-f", e), t.italicize.apply(this, arguments);
        };
      }), w[" "] = w.space = f(W, "\\ ", "&nbsp;"), w["'"] = w.prime = f(W, "'", "&prime;"), w.backslash = f(W, "\\backslash ", "\\"), T["\\"] || (T["\\"] = w.backslash), w.$ = f(W, "\\$", "$");
      var le = h($, function (e, t) {
        e.init = function (e, n) {
          t.init.call(this, e, '<span class="mq-nonSymbola">' + (n || e) + "</span>");
        };
      });
      w["@"] = le, w["&"] = f(le, "\\&", "&amp;"), w["%"] = f(le, "\\%", "%"), w.alpha = w.beta = w.gamma = w.delta = w.zeta = w.eta = w.theta = w.iota = w.kappa = w.mu = w.nu = w.xi = w.rho = w.sigma = w.tau = w.chi = w.psi = w.omega = h(te, function (e, t) {
        e.init = function (e) {
          t.init.call(this, "\\" + e + " ", "&" + e + ";");
        };
      }), w.phi = f(te, "\\phi ", "&#981;"), w.phiv = w.varphi = f(te, "\\varphi ", "&phi;"), w.epsilon = f(te, "\\epsilon ", "&#1013;"), w.epsiv = w.varepsilon = f(te, "\\varepsilon ", "&epsilon;"), w.piv = w.varpi = f(te, "\\varpi ", "&piv;"), w.sigmaf = w.sigmav = w.varsigma = f(te, "\\varsigma ", "&sigmaf;"), w.thetav = w.vartheta = w.thetasym = f(te, "\\vartheta ", "&thetasym;"), w.upsilon = w.upsi = f(te, "\\upsilon ", "&upsilon;"), w.gammad = w.Gammad = w.digamma = f(te, "\\digamma ", "&#989;"), w.kappav = w.varkappa = f(te, "\\varkappa ", "&#1008;"), w.rhov = w.varrho = f(te, "\\varrho ", "&#1009;"), w.pi = w["π"] = f(le, "\\pi ", "&pi;"), w.lambda = f(le, "\\lambda ", "&lambda;"), w.Upsilon = w.Upsi = w.upsih = w.Upsih = f($, "\\Upsilon ", '<var style="font-family: serif">&upsih;</var>'), w.Gamma = w.Delta = w.Theta = w.Lambda = w.Xi = w.Pi = w.Sigma = w.Phi = w.Psi = w.Omega = w.forall = h(W, function (e, t) {
        e.init = function (e) {
          t.init.call(this, "\\" + e + " ", "&" + e + ";");
        };
      });
      var ce = h(P, function (e) {
        e.init = function (e) {
          this.latex = e;
        }, e.createLeftOf = function (e) {
          var t = I.parse(this.latex);
          t.children().adopt(e.parent, e[p], e[m]), e[p] = t.ends[m], t.jQize().insertBefore(e.jQ), t.finalizeInsert(e.options, e), t.ends[m][m].siblingCreated && t.ends[m][m].siblingCreated(e.options, p), t.ends[p][p].siblingCreated && t.ends[p][p].siblingCreated(e.options, m), e.parent.bubble("reflow");
        }, e.parser = function () {
          var e = I.parse(this.latex).children();
          return F.succeed(e);
        };
      });
      w["¹"] = f(ce, "^1"), w["²"] = f(ce, "^2"), w["³"] = f(ce, "^3"), w["¼"] = f(ce, "\\frac14"), w["½"] = f(ce, "\\frac12"), w["¾"] = f(ce, "\\frac34");
      var ue = h(X, function (e) {
        e.init = W.prototype.init, e.contactWeld = e.siblingCreated = e.siblingDeleted = function (e, t) {
          if (t !== m) return this.jQ[0].className = !this[p] || this[p] instanceof X || /^[,;:\(\[]$/.test(this[p].ctrlSeq) ? "" : "mq-binary-operator", this;
        };
      });
      w["+"] = f(ue, "+", "+"), w["–"] = w["-"] = f(ue, "-", "&minus;"), w["±"] = w.pm = w.plusmn = w.plusminus = f(ue, "\\pm ", "&plusmn;"), w.mp = w.mnplus = w.minusplus = f(ue, "\\mp ", "&#8723;"), T["*"] = w.sdot = w.cdot = f(X, "\\cdot ", "&middot;", "*");
      var fe = h(X, function (e, t) {
        e.init = function (e, n) {
          this.data = e, this.strict = n;
          var i = n ? "Strict" : "";
          t.init.call(this, e["ctrlSeq" + i], e["html" + i], e["text" + i]);
        }, e.swap = function (e) {
          this.strict = e;
          var t = e ? "Strict" : "";
          this.ctrlSeq = this.data["ctrlSeq" + t], this.jQ.html(this.data["html" + t]), this.textTemplate = [this.data["text" + t]];
        }, e.deleteTowards = function (e, n) {
          if (e === p && !this.strict) return this.swap(!0), void this.bubble("reflow");
          t.deleteTowards.apply(this, arguments);
        };
      }),
          de = {
        ctrlSeq: "\\le ",
        html: "&le;",
        text: "≤",
        ctrlSeqStrict: "<",
        htmlStrict: "&lt;",
        textStrict: "<"
      },
          he = {
        ctrlSeq: "\\ge ",
        html: "&ge;",
        text: "≥",
        ctrlSeqStrict: ">",
        htmlStrict: "&gt;",
        textStrict: ">"
      };
      w["<"] = w.lt = f(fe, de, !0), w[">"] = w.gt = f(fe, he, !0), w["≤"] = w.le = w.leq = f(fe, de, !1), w["≥"] = w.ge = w.geq = f(fe, he, !1);
      var pe = h(X, function (e, t) {
        e.init = function () {
          t.init.call(this, "=", "=");
        }, e.createLeftOf = function (e) {
          if (e[p] instanceof fe && e[p].strict) return e[p].swap(!1), void e[p].bubble("reflow");
          t.createLeftOf.apply(this, arguments);
        };
      });
      w["="] = pe, w["×"] = w.times = f(X, "\\times ", "&times;", "[x]"), w["÷"] = w.div = w.divide = w.divides = f(X, "\\div ", "&divide;", "[/]"), T["~"] = w.sim = f(X, "\\sim ", "~", "~");
      var me,
          ge,
          ve = s,
          ye = document.createElement("div").style;

      for (var be in {
        transform: 1,
        WebkitTransform: 1,
        MozTransform: 1,
        OTransform: 1,
        msTransform: 1
      }) {
        if (be in ye) {
          ge = be;
          break;
        }
      }

      ge ? me = function me(e, t, n) {
        e.css(ge, "scale(" + t + "," + n + ")");
      } : "filter" in ye ? (ve = function ve(e) {
        e.className = e.className;
      }, me = function me(e, t, n) {
        t /= 1 + (n - 1) / 2, e.css("fontSize", n + "em"), e.hasClass("mq-matrixed-container") || e.addClass("mq-matrixed-container").wrapInner('<span class="mq-matrixed"></span>');
        var r = e.children().css("filter", "progid:DXImageTransform.Microsoft.Matrix(M11=" + t + ",SizingMethod='auto expand')");

        function o() {
          e.css("marginRight", (r.width() - 1) * (t - 1) / t + "px");
        }

        o();
        var s = setInterval(o);
        v(i).load(function () {
          clearTimeout(s), o();
        });
      }) : me = function me(e, t, n) {
        e.css("fontSize", n + "em");
      };
      var xe = h(P, function (e, t) {
        e.init = function (e, n, i) {
          t.init.call(this, e, "<" + n + " " + i + ">&0</" + n + ">");
        };
      });
      w.mathrm = f(xe, "\\mathrm", "span", 'class="mq-roman mq-font"'), w.mathit = f(xe, "\\mathit", "i", 'class="mq-font"'), w.mathbf = f(xe, "\\mathbf", "b", 'class="mq-font"'), w.mathsf = f(xe, "\\mathsf", "span", 'class="mq-sans-serif mq-font"'), w.mathtt = f(xe, "\\mathtt", "span", 'class="mq-monospace mq-font"'), w.underline = f(xe, "\\underline", "span", 'class="mq-non-leaf mq-underline"'), w.overline = w.bar = f(xe, "\\overline", "span", 'class="mq-non-leaf mq-overline"'), w.overrightarrow = f(xe, "\\overrightarrow", "span", 'class="mq-non-leaf mq-overarrow mq-arrow-right"'), w.overleftarrow = f(xe, "\\overleftarrow", "span", 'class="mq-non-leaf mq-overarrow mq-arrow-left"');
      w.textcolor = h(P, function (e, t) {
        e.setColor = function (e) {
          this.color = e, this.htmlTemplate = '<span class="mq-textcolor" style="color:' + e + '">&0</span>';
        }, e.latex = function () {
          return "\\textcolor{" + this.color + "}{" + this.blocks[0].latex() + "}";
        }, e.parser = function () {
          var e = this,
              n = F.optWhitespace,
              i = F.string,
              r = F.regex;
          return n.then(i("{")).then(r(/^[#\w\s.,()%-]*/)).skip(i("}")).then(function (n) {
            return e.setColor(n), t.parser.call(e);
          });
        };
      }), w.class = h(P, function (e, t) {
        e.parser = function () {
          var e = this,
              n = F.string,
              i = F.regex;
          return F.optWhitespace.then(n("{")).then(i(/^[-\w\s\\\xA0-\xFF]*/)).skip(n("}")).then(function (n) {
            return e.htmlTemplate = '<span class="mq-class ' + n + '">&0</span>', t.parser.call(e);
          });
        };
      });
      var qe = h(P, function (e, t) {
        e.ctrlSeq = "_{...}^{...}", e.createLeftOf = function (e) {
          if (e[p] || !e.options.supSubsRequireOperand) return t.createLeftOf.apply(this, arguments);
        }, e.contactWeld = function (e) {
          for (var t = p; t; t = t === p && m) {
            if (this[t] instanceof qe) {
              for (var n = "sub"; n; n = "sub" === n && "sup") {
                var i = this[n],
                    r = this[t][n];

                if (i) {
                  if (r) {
                    if (i.isEmpty()) s = y(r, 0, r.ends[p]);else {
                      i.jQ.children().insAtDirEnd(-t, r.jQ);
                      var o = i.children().disown(),
                          s = y(r, o.ends[m], r.ends[p]);
                      t === p ? o.adopt(r, r.ends[m], 0) : o.adopt(r, 0, r.ends[p]);
                    }
                  } else this[t].addBlock(i.disown());

                  this.placeCursor = function (e, n) {
                    return function (i) {
                      i.insAtDirEnd(-t, e || n);
                    };
                  }(r, i);
                }
              }

              this.remove(), e && e[p] === this && (t === m && s ? s[p] ? e.insRightOf(s[p]) : e.insAtLeftEnd(s.parent) : e.insRightOf(this[t]));
              break;
            }
          }
        }, E.p.charsThatBreakOutOfSupSub = "", e.finalizeTree = function () {
          this.ends[p].write = function (e, t) {
            if (e.options.autoSubscriptNumerals && this === this.parent.sub) {
              if ("_" === t) return;
              var n = this.chToCmd(t);
              return n instanceof $ ? e.deleteSelection() : e.clearSelection().insRightOf(this.parent), n.createLeftOf(e.show());
            }

            e[p] && !e[m] && !e.selection && e.options.charsThatBreakOutOfSupSub.indexOf(t) > -1 && e.insRightOf(this.parent), U.p.write.apply(this, arguments);
          };
        }, e.moveTowards = function (e, n, i) {
          n.options.autoSubscriptNumerals && !this.sup ? n.insDirOf(e, this) : t.moveTowards.apply(this, arguments);
        }, e.deleteTowards = function (e, n) {
          if (n.options.autoSubscriptNumerals && this.sub) {
            var i = this.sub.ends[-e];
            i instanceof $ ? i.remove() : i && i.deleteTowards(e, n.insAtDirEnd(-e, this.sub)), this.sub.isEmpty() && (this.sub.deleteOutOf(p, n.insAtLeftEnd(this.sub)), this.sup && n.insDirOf(-e, this));
          } else t.deleteTowards.apply(this, arguments);
        }, e.latex = function () {
          function e(e, t) {
            var n = t && t.latex();
            return t ? e + (1 === n.length ? n : "{" + (n || " ") + "}") : "";
          }

          return e("_", this.sub) + e("^", this.sup);
        }, e.addBlock = function (e) {
          "sub" === this.supsub ? (this.sup = this.upInto = this.sub.upOutOf = e, e.adopt(this, this.sub, 0).downOutOf = this.sub, e.jQ = v('<span class="mq-sup"/>').append(e.jQ.children()).attr(n, e.id).prependTo(this.jQ)) : (this.sub = this.downInto = this.sup.downOutOf = e, e.adopt(this, 0, this.sup).upOutOf = this.sup, e.jQ = v('<span class="mq-sub"></span>').append(e.jQ.children()).attr(n, e.id).appendTo(this.jQ.removeClass("mq-sup-only")), this.jQ.append('<span style="display:inline-block;width:0">&#8203;</span>'));

          for (var t = 0; t < 2; t += 1) {
            !function (e, t, n, i) {
              e[t].deleteOutOf = function (r, o) {
                if (o.insDirOf(this[r] ? -r : r, this.parent), !this.isEmpty()) {
                  var s = this.ends[r];
                  this.children().disown().withDirAdopt(r, o.parent, o[r], o[-r]).jQ.insDirOf(-r, o.jQ), o[-r] = s;
                }

                e.supsub = n, delete e[t], delete e[i + "Into"], e[n][i + "OutOf"] = we, delete e[n].deleteOutOf, "sub" === t && v(e.jQ.addClass("mq-sup-only")[0].lastChild).remove(), this.remove();
              };
            }(this, "sub sup".split(" ")[t], "sup sub".split(" ")[t], "down up".split(" ")[t]);
          }
        };
      });

      function we(e) {
        var t = this.parent,
            n = e;

        do {
          if (n[m]) return e.insLeftOf(t);
          n = n.parent.parent;
        } while (n !== t);

        e.insRightOf(t);
      }

      w.subscript = w._ = h(qe, function (e, t) {
        e.supsub = "sub", e.htmlTemplate = '<span class="mq-supsub mq-non-leaf"><span class="mq-sub">&0</span><span style="display:inline-block;width:0">&#8203;</span></span>', e.textTemplate = ["_"], e.finalizeTree = function () {
          this.downInto = this.sub = this.ends[p], this.sub.upOutOf = we, t.finalizeTree.call(this);
        };
      }), w.superscript = w.supscript = w["^"] = h(qe, function (e, t) {
        e.supsub = "sup", e.htmlTemplate = '<span class="mq-supsub mq-non-leaf mq-sup-only"><span class="mq-sup">&0</span></span>', e.textTemplate = ["^"], e.finalizeTree = function () {
          this.upInto = this.sup = this.ends[m], this.sup.downOutOf = we, t.finalizeTree.call(this);
        };
      });
      var Te = h(P, function (e, t) {
        e.init = function (e, t) {
          var n = '<span class="mq-large-operator mq-non-leaf"><span class="mq-to"><span>&1</span></span><big>' + t + '</big><span class="mq-from"><span>&0</span></span></span>';
          $.prototype.init.call(this, e, n);
        }, e.createLeftOf = function (e) {
          t.createLeftOf.apply(this, arguments), e.options.sumStartsWithNEquals && (ne("n").createLeftOf(e), pe().createLeftOf(e));
        }, e.latex = function () {
          function e(e) {
            return 1 === e.length ? e : "{" + (e || " ") + "}";
          }

          return this.ctrlSeq + "_" + e(this.ends[p].latex()) + "^" + e(this.ends[m].latex());
        }, e.parser = function () {
          for (var e = F.string, t = F.optWhitespace, n = F.succeed, i = I.block, r = this, o = r.blocks = [U(), U()], s = 0; s < o.length; s += 1) {
            o[s].adopt(r, r.ends[m], 0);
          }

          return t.then(e("_").or(e("^"))).then(function (e) {
            var t = o["_" === e ? 0 : 1];
            return i.then(function (e) {
              return e.children().adopt(t, t.ends[m], 0), n(r);
            });
          }).many().result(r);
        }, e.finalizeTree = function () {
          this.downInto = this.ends[p], this.upInto = this.ends[m], this.ends[p].upOutOf = this.ends[m], this.ends[m].downOutOf = this.ends[p];
        };
      });
      w["∑"] = w.sum = w.summation = f(Te, "\\sum ", "&sum;"), w["∏"] = w.prod = w.product = f(Te, "\\prod ", "&prod;"), w.coprod = w.coproduct = f(Te, "\\coprod ", "&#8720;"), w["∫"] = w.int = w.integral = h(Te, function (e, t) {
        e.init = function () {
          $.prototype.init.call(this, "\\int ", '<span class="mq-int mq-non-leaf"><big>&int;</big><span class="mq-supsub mq-non-leaf"><span class="mq-sup"><span class="mq-sup-inner">&1</span></span><span class="mq-sub">&0</span><span style="display:inline-block;width:0">&#8203</span></span></span>');
        }, e.createLeftOf = P.p.createLeftOf;
      });
      var ke = w.frac = w.dfrac = w.cfrac = w.fraction = h(P, function (e, t) {
        e.ctrlSeq = "\\frac", e.htmlTemplate = '<span class="mq-fraction mq-non-leaf"><span class="mq-numerator">&0</span><span class="mq-denominator">&1</span><span style="display:inline-block;width:0">&#8203;</span></span>', e.textTemplate = ["(", ")/(", ")"], e.finalizeTree = function () {
          this.upInto = this.ends[m].upOutOf = this.ends[p], this.downInto = this.ends[p].downOutOf = this.ends[m];
        };
      }),
          Ce = w.over = T["/"] = h(ke, function (e, t) {
        e.createLeftOf = function (e) {
          if (!this.replacedFragment) {
            for (var n = e[p]; n && !(n instanceof X || n instanceof (w.text || s) || n instanceof Te || "\\ " === n.ctrlSeq || /^[,;:]$/.test(n.ctrlSeq));) {
              n = n[p];
            }

            n instanceof Te && n[m] instanceof qe && (n = n[m])[m] instanceof qe && n[m].ctrlSeq != n.ctrlSeq && (n = n[m]), n !== e[p] && (this.replaces(q(n[m] || e.parent.ends[p], e[p])), e[p] = n);
          }

          t.createLeftOf.call(this, e);
        };
      }),
          Se = w.sqrt = w["√"] = h(P, function (e, t) {
        e.ctrlSeq = "\\sqrt", e.htmlTemplate = '<span class="mq-non-leaf"><span class="mq-scaled mq-sqrt-prefix">&radic;</span><span class="mq-non-leaf mq-sqrt-stem">&0</span></span>', e.textTemplate = ["sqrt(", ")"], e.parser = function () {
          return I.optBlock.then(function (e) {
            return I.block.map(function (t) {
              var n = je();
              return n.blocks = [e, t], e.adopt(n, 0, 0), t.adopt(n, e, 0), n;
            });
          }).or(t.parser.call(this));
        }, e.reflow = function () {
          var e = this.ends[m].jQ;
          me(e.prev(), 1, e.innerHeight() / +e.css("fontSize").slice(0, -2) - .1);
        };
      }),
          je = (w.vec = h(P, function (e, t) {
        e.ctrlSeq = "\\vec", e.htmlTemplate = '<span class="mq-non-leaf"><span class="mq-vector-prefix">&rarr;</span><span class="mq-vector-stem">&0</span></span>', e.textTemplate = ["vec(", ")"];
      }), w.nthroot = h(Se, function (e, t) {
        e.htmlTemplate = '<sup class="mq-nthroot mq-non-leaf">&0</sup><span class="mq-scaled"><span class="mq-sqrt-prefix mq-scaled">&radic;</span><span class="mq-sqrt-stem mq-non-leaf">&1</span></span>', e.textTemplate = ["sqrt[", "](", ")"], e.latex = function () {
          return "\\sqrt[" + this.ends[p].latex() + "]{" + this.ends[m].latex() + "}";
        };
      }));

      function Ee(e, t) {
        e.jQadd = function () {
          t.jQadd.apply(this, arguments), this.delimjQs = this.jQ.children(":first").add(this.jQ.children(":last")), this.contentjQ = this.jQ.children(":eq(1)");
        }, e.reflow = function () {
          var e = this.contentjQ.outerHeight() / parseFloat(this.contentjQ.css("fontSize"));
          me(this.delimjQs, r(1 + .2 * (e - 1), 1.2), 1.2 * e);
        };
      }

      var Oe = h(h(P, Ee), function (t, n) {
        t.init = function (t, i, r, o, s) {
          n.init.call(this, "\\left" + o, e, [i, r]), this.side = t, this.sides = {}, this.sides[p] = {
            ch: i,
            ctrlSeq: o
          }, this.sides[m] = {
            ch: r,
            ctrlSeq: s
          };
        }, t.numBlocks = function () {
          return 1;
        }, t.html = function () {
          return this.htmlTemplate = '<span class="mq-non-leaf"><span class="mq-scaled mq-paren' + (this.side === m ? " mq-ghost" : "") + '">' + this.sides[p].ch + '</span><span class="mq-non-leaf">&0</span><span class="mq-scaled mq-paren' + (this.side === p ? " mq-ghost" : "") + '">' + this.sides[m].ch + "</span></span>", n.html.call(this);
        }, t.latex = function () {
          return "\\left" + this.sides[p].ctrlSeq + this.ends[p].latex() + "\\right" + this.sides[m].ctrlSeq;
        }, t.oppBrack = function (e, t, n) {
          return t instanceof Oe && t.side && t.side !== -n && ("|" === this.sides[this.side].ch || t.side === -this.side) && (!e.restrictMismatchedBrackets || De[this.sides[this.side].ch] === t.sides[t.side].ch || {
            "(": "]",
            "[": ")"
          }[this.sides[p].ch] === t.sides[m].ch) && t;
        }, t.closeOpposing = function (e) {
          e.side = 0, e.sides[this.side] = this.sides[this.side], e.delimjQs.eq(this.side === p ? 0 : 1).removeClass("mq-ghost").html(this.sides[this.side].ch);
        }, t.createLeftOf = function (e) {
          if (!this.replacedFragment) var t = e.options,
              i = this.oppBrack(t, e[p], p) || this.oppBrack(t, e[m], m) || this.oppBrack(t, e.parent.parent);

          if (i) {
            var r = this.side = -i.side;
            this.closeOpposing(i), i === e.parent.parent && e[r] && (q(e[r], e.parent.ends[r], -r).disown().withDirAdopt(-r, i.parent, i, i[r]).jQ.insDirOf(r, i.jQ), i.bubble("reflow"));
          } else r = (i = this).side, i.replacedFragment ? i.side = 0 : e[-r] && (i.replaces(q(e[-r], e.parent.ends[-r], r)), e[-r] = 0), n.createLeftOf.call(i, e);

          r === p ? e.insAtLeftEnd(i.ends[p]) : e.insRightOf(i);
        }, t.placeCursor = s, t.unwrap = function () {
          this.ends[p].children().disown().adopt(this.parent, this, this[m]).jQ.insertAfter(this.jQ), this.remove();
        }, t.deleteSide = function (e, t, n) {
          var i = this.parent,
              r = this[e],
              o = i.ends[e];
          if (e === this.side) return this.unwrap(), void (r ? n.insDirOf(-e, r) : n.insAtDirEnd(e, i));
          var s = n.options,
              a = !this.side;

          if (this.side = -e, this.oppBrack(s, this.ends[p].ends[this.side], e)) {
            this.closeOpposing(this.ends[p].ends[this.side]);
            var l = this.ends[p].ends[e];
            this.unwrap(), l.siblingCreated && l.siblingCreated(n.options, e), r ? n.insDirOf(-e, r) : n.insAtDirEnd(e, i);
          } else {
            if (this.oppBrack(s, this.parent.parent, e)) this.parent.parent.closeOpposing(this), this.parent.parent.unwrap();else {
              if (t && a) return this.unwrap(), void (r ? n.insDirOf(-e, r) : n.insAtDirEnd(e, i));
              this.sides[e] = {
                ch: De[this.sides[this.side].ch],
                ctrlSeq: De[this.sides[this.side].ctrlSeq]
              }, this.delimjQs.removeClass("mq-ghost").eq(e === p ? 0 : 1).addClass("mq-ghost").html(this.sides[e].ch);
            }

            if (r) {
              l = this.ends[p].ends[e];
              q(r, o, -e).disown().withDirAdopt(-e, this.ends[p], l, 0).jQ.insAtDirEnd(e, this.ends[p].jQ.removeClass("mq-empty")), l.siblingCreated && l.siblingCreated(n.options, e), n.insDirOf(-e, r);
            } else t ? n.insDirOf(e, this) : n.insAtDirEnd(e, this.ends[p]);
          }
        }, t.deleteTowards = function (e, t) {
          this.deleteSide(-e, !1, t);
        }, t.finalizeTree = function () {
          this.ends[p].deleteOutOf = function (e, t) {
            this.parent.deleteSide(e, !0, t);
          }, this.finalizeTree = this.intentionalBlur = function () {
            this.delimjQs.eq(this.side === p ? 1 : 0).removeClass("mq-ghost"), this.side = 0;
          };
        }, t.siblingCreated = function (e, t) {
          t === -this.side && this.finalizeTree();
        };
      }),
          De = {
        "(": ")",
        ")": "(",
        "[": "]",
        "]": "[",
        "{": "}",
        "}": "{",
        "\\{": "\\}",
        "\\}": "\\{",
        "&lang;": "&rang;",
        "&rang;": "&lang;",
        "\\langle ": "\\rangle ",
        "\\rangle ": "\\langle ",
        "|": "|"
      };

      function Ae(e, t) {
        t = t || e;
        var n = De[e],
            i = De[t];
        T[e] = f(Oe, p, e, n, t, i), T[n] = f(Oe, m, e, n, t, i);
      }

      Ae("("), Ae("["), Ae("{", "\\{"), w.langle = f(Oe, p, "&lang;", "&rang;", "\\langle ", "\\rangle "), w.rangle = f(Oe, m, "&lang;", "&rang;", "\\langle ", "\\rangle "), T["|"] = f(Oe, p, "|", "|", "|", "|"), w.left = h(P, function (e) {
        e.parser = function () {
          var e = F.regex,
              t = F.string,
              n = (F.succeed, F.optWhitespace);
          return n.then(e(/^(?:[([|]|\\\{)/)).then(function (i) {
            var r = "\\" === i.charAt(0) ? i.slice(1) : i;
            return I.then(function (o) {
              return t("\\right").skip(n).then(e(/^(?:[\])|]|\\\})/)).map(function (e) {
                var t = "\\" === e.charAt(0) ? e.slice(1) : e,
                    n = Oe(0, r, t, i, e);
                return n.blocks = [o], o.adopt(n, 0, 0), n;
              });
            });
          });
        };
      }), w.right = h(P, function (e) {
        e.parser = function () {
          return F.fail("unmatched \\right");
        };
      });
      var Le = w.binom = w.binomial = h(h(P, Ee), function (e, t) {
        e.ctrlSeq = "\\binom", e.htmlTemplate = '<span class="mq-non-leaf"><span class="mq-paren mq-scaled">(</span><span class="mq-non-leaf"><span class="mq-array mq-non-leaf"><span>&0</span><span>&1</span></span></span><span class="mq-paren mq-scaled">)</span></span>', e.textTemplate = ["choose(", ",", ")"];
      });
      w.choose = h(Le, function (e) {
        e.createLeftOf = Ce.prototype.createLeftOf;
      });
      w.editable = w.MathQuillMathField = h(P, function (e, t) {
        e.ctrlSeq = "\\MathQuillMathField", e.htmlTemplate = '<span class="mq-editable-field"><span class="mq-root-block">&0</span></span>', e.parser = function () {
          var e = this,
              n = F.string,
              i = F.regex,
              r = F.succeed;
          return n("[").then(i(/^[a-z][a-z0-9]*/i)).skip(n("]")).map(function (t) {
            e.name = t;
          }).or(r()).then(t.parser.call(e));
        }, e.finalizeTree = function () {
          var e = S(this.ends[p], this.jQ, E());
          e.KIND_OF_MQ = "MathField", e.editable = !0, e.createTextarea(), e.editablesTextareaEvents(), e.cursor.insAtRightEnd(e.root), z(e.root);
        }, e.registerInnerField = function (e, t) {
          e.push(e[this.name] = t(this.ends[p].controller));
        }, e.latex = function () {
          return this.ends[p].latex();
        }, e.text = function () {
          return this.ends[p].text();
        };
      });

      var _e = w.embed = h($, function (e, t) {
        e.setOptions = function (e) {
          function t() {
            return "";
          }

          return this.text = e.text || t, this.htmlTemplate = e.htmlString || "", this.latex = e.latex || t, this;
        }, e.parser = function () {
          var e = this;
          return string = F.string, regex = F.regex, succeed = F.succeed, string("{").then(regex(/^[a-z][a-z0-9]*/i)).skip(string("}")).then(function (t) {
            return string("[").then(regex(/^[-\w\s]*/)).skip(string("]")).or(succeed()).map(function (n) {
              return e.setOptions(A[t](n));
            });
          });
        };
      }),
          Ne = (T["\\"] = h(P, function (e, t) {
        e.ctrlSeq = "\\", e.replaces = function (e) {
          this._replacedFragment = e.disown(), this.isEmpty = function () {
            return !1;
          };
        }, e.htmlTemplate = '<span class="mq-latex-command-input mq-non-leaf">\\<span>&0</span></span>', e.textTemplate = ["\\"], e.createBlocks = function () {
          t.createBlocks.call(this), this.ends[p].focus = function () {
            return this.parent.jQ.addClass("mq-hasCursor"), this.isEmpty() && this.parent.jQ.removeClass("mq-empty"), this;
          }, this.ends[p].blur = function () {
            return this.parent.jQ.removeClass("mq-hasCursor"), this.isEmpty() && this.parent.jQ.addClass("mq-empty"), this;
          }, this.ends[p].write = function (e, t) {
            e.show().deleteSelection(), t.match(/[a-z]/i) ? W(t).createLeftOf(e) : (this.parent.renderCommand(e), "\\" === t && this.isEmpty() || this.parent.parent.write(e, t));
          }, this.ends[p].keystroke = function (e, n, i) {
            return "Tab" === e || "Enter" === e || "Spacebar" === e ? (this.parent.renderCommand(i.cursor), void n.preventDefault()) : t.keystroke.apply(this, arguments);
          };
        }, e.createLeftOf = function (e) {
          if (t.createLeftOf.call(this, e), this._replacedFragment) {
            var n = this.jQ[0];
            this.jQ = this._replacedFragment.jQ.addClass("mq-blur").bind("mousedown mousemove", function (e) {
              return v(e.target = n).trigger(e), !1;
            }).insertBefore(this.jQ).add(this.jQ);
          }
        }, e.latex = function () {
          return "\\" + this.ends[p].latex() + " ";
        }, e.renderCommand = function (e) {
          this.jQ = this.jQ.last(), this.remove(), this[m] ? e.insLeftOf(this[m]) : e.insAtRightEnd(this.parent);
          var t = this.ends[p].latex();
          t || (t = " ");
          var n = w[t];
          n ? (n = n(t), this._replacedFragment && n.replaces(this._replacedFragment), n.createLeftOf(e)) : ((n = G()).replaces(t), n.createLeftOf(e), e.insRightOf(n), this._replacedFragment && this._replacedFragment.remove());
        };
      }), M(1));

      for (var Qe in Ne) {
        !function (e, t) {
          "function" == typeof t ? (_[e] = function () {
            return L(), t.apply(this, arguments);
          }, _[e].prototype = t.prototype) : _[e] = t;
        }(Qe, Ne[Qe]);
      }
    }(), e.exports = i.MathQuill;
  }, function (e, t, n) {
    var i, r, o;
    /*!
     * jQuery JavaScript Library v1.12.4
     * http://jquery.com/
     *
     * Includes Sizzle.js
     * http://sizzlejs.com/
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license
     * http://jquery.org/license
     *
     * Date: 2016-05-20T17:17Z
     */

    /*!
     * jQuery JavaScript Library v1.12.4
     * http://jquery.com/
     *
     * Includes Sizzle.js
     * http://sizzlejs.com/
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license
     * http://jquery.org/license
     *
     * Date: 2016-05-20T17:17Z
     */

    r = "undefined" != typeof window ? window : this, o = function o(n, r) {
      var o = [],
          s = n.document,
          a = o.slice,
          l = o.concat,
          c = o.push,
          u = o.indexOf,
          f = {},
          d = f.toString,
          h = f.hasOwnProperty,
          p = {},
          m = function m(e, t) {
        return new m.fn.init(e, t);
      },
          g = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
          v = /^-ms-/,
          y = /-([\da-z])/gi,
          b = function b(e, t) {
        return t.toUpperCase();
      };

      function x(e) {
        var t = !!e && "length" in e && e.length,
            n = m.type(e);
        return "function" !== n && !m.isWindow(e) && ("array" === n || 0 === t || "number" == typeof t && t > 0 && t - 1 in e);
      }

      m.fn = m.prototype = {
        jquery: "1.12.4",
        constructor: m,
        selector: "",
        length: 0,
        toArray: function toArray() {
          return a.call(this);
        },
        get: function get(e) {
          return null != e ? e < 0 ? this[e + this.length] : this[e] : a.call(this);
        },
        pushStack: function pushStack(e) {
          var t = m.merge(this.constructor(), e);
          return t.prevObject = this, t.context = this.context, t;
        },
        each: function each(e) {
          return m.each(this, e);
        },
        map: function map(e) {
          return this.pushStack(m.map(this, function (t, n) {
            return e.call(t, n, t);
          }));
        },
        slice: function slice() {
          return this.pushStack(a.apply(this, arguments));
        },
        first: function first() {
          return this.eq(0);
        },
        last: function last() {
          return this.eq(-1);
        },
        eq: function eq(e) {
          var t = this.length,
              n = +e + (e < 0 ? t : 0);
          return this.pushStack(n >= 0 && n < t ? [this[n]] : []);
        },
        end: function end() {
          return this.prevObject || this.constructor();
        },
        push: c,
        sort: o.sort,
        splice: o.splice
      }, m.extend = m.fn.extend = function () {
        var e,
            t,
            n,
            i,
            r,
            o,
            s = arguments[0] || {},
            a = 1,
            l = arguments.length,
            c = !1;

        for ("boolean" == typeof s && (c = s, s = arguments[a] || {}, a++), "object" == typeof s || m.isFunction(s) || (s = {}), a === l && (s = this, a--); a < l; a++) {
          if (null != (r = arguments[a])) for (i in r) {
            e = s[i], s !== (n = r[i]) && (c && n && (m.isPlainObject(n) || (t = m.isArray(n))) ? (t ? (t = !1, o = e && m.isArray(e) ? e : []) : o = e && m.isPlainObject(e) ? e : {}, s[i] = m.extend(c, o, n)) : void 0 !== n && (s[i] = n));
          }
        }

        return s;
      }, m.extend({
        expando: "jQuery" + ("1.12.4" + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function error(e) {
          throw new Error(e);
        },
        noop: function noop() {},
        isFunction: function isFunction(e) {
          return "function" === m.type(e);
        },
        isArray: Array.isArray || function (e) {
          return "array" === m.type(e);
        },
        isWindow: function isWindow(e) {
          return null != e && e == e.window;
        },
        isNumeric: function isNumeric(e) {
          var t = e && e.toString();
          return !m.isArray(e) && t - parseFloat(t) + 1 >= 0;
        },
        isEmptyObject: function isEmptyObject(e) {
          var t;

          for (t in e) {
            return !1;
          }

          return !0;
        },
        isPlainObject: function isPlainObject(e) {
          var t;
          if (!e || "object" !== m.type(e) || e.nodeType || m.isWindow(e)) return !1;

          try {
            if (e.constructor && !h.call(e, "constructor") && !h.call(e.constructor.prototype, "isPrototypeOf")) return !1;
          } catch (e) {
            return !1;
          }

          if (!p.ownFirst) for (t in e) {
            return h.call(e, t);
          }

          for (t in e) {
            ;
          }

          return void 0 === t || h.call(e, t);
        },
        type: function type(e) {
          return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? f[d.call(e)] || "object" : typeof e;
        },
        globalEval: function globalEval(e) {
          e && m.trim(e) && (n.execScript || function (e) {
            n.eval.call(n, e);
          })(e);
        },
        camelCase: function camelCase(e) {
          return e.replace(v, "ms-").replace(y, b);
        },
        nodeName: function nodeName(e, t) {
          return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
        },
        each: function each(e, t) {
          var n,
              i = 0;
          if (x(e)) for (n = e.length; i < n && !1 !== t.call(e[i], i, e[i]); i++) {
            ;
          } else for (i in e) {
            if (!1 === t.call(e[i], i, e[i])) break;
          }
          return e;
        },
        trim: function trim(e) {
          return null == e ? "" : (e + "").replace(g, "");
        },
        makeArray: function makeArray(e, t) {
          var n = t || [];
          return null != e && (x(Object(e)) ? m.merge(n, "string" == typeof e ? [e] : e) : c.call(n, e)), n;
        },
        inArray: function inArray(e, t, n) {
          var i;

          if (t) {
            if (u) return u.call(t, e, n);

            for (i = t.length, n = n ? n < 0 ? Math.max(0, i + n) : n : 0; n < i; n++) {
              if (n in t && t[n] === e) return n;
            }
          }

          return -1;
        },
        merge: function merge(e, t) {
          for (var n = +t.length, i = 0, r = e.length; i < n;) {
            e[r++] = t[i++];
          }

          if (n != n) for (; void 0 !== t[i];) {
            e[r++] = t[i++];
          }
          return e.length = r, e;
        },
        grep: function grep(e, t, n) {
          for (var i = [], r = 0, o = e.length, s = !n; r < o; r++) {
            !t(e[r], r) !== s && i.push(e[r]);
          }

          return i;
        },
        map: function map(e, t, n) {
          var i,
              r,
              o = 0,
              s = [];
          if (x(e)) for (i = e.length; o < i; o++) {
            null != (r = t(e[o], o, n)) && s.push(r);
          } else for (o in e) {
            null != (r = t(e[o], o, n)) && s.push(r);
          }
          return l.apply([], s);
        },
        guid: 1,
        proxy: function proxy(e, t) {
          var n, i, r;
          if ("string" == typeof t && (r = e[t], t = e, e = r), m.isFunction(e)) return n = a.call(arguments, 2), (i = function i() {
            return e.apply(t || this, n.concat(a.call(arguments)));
          }).guid = e.guid = e.guid || m.guid++, i;
        },
        now: function now() {
          return +new Date();
        },
        support: p
      }), "function" == typeof Symbol && (m.fn[Symbol.iterator] = o[Symbol.iterator]), m.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (e, t) {
        f["[object " + t + "]"] = t.toLowerCase();
      });

      var q =
      /*!
       * Sizzle CSS Selector Engine v2.2.1
       * http://sizzlejs.com/
       *
       * Copyright jQuery Foundation and other contributors
       * Released under the MIT license
       * http://jquery.org/license
       *
       * Date: 2015-10-17
       */
      function (e) {
        var t,
            n,
            i,
            r,
            o,
            s,
            a,
            l,
            c,
            u,
            f,
            d,
            h,
            p,
            m,
            g,
            v,
            y,
            b,
            x = "sizzle" + 1 * new Date(),
            q = e.document,
            w = 0,
            T = 0,
            k = oe(),
            C = oe(),
            S = oe(),
            j = function j(e, t) {
          return e === t && (f = !0), 0;
        },
            E = 1 << 31,
            O = {}.hasOwnProperty,
            D = [],
            A = D.pop,
            L = D.push,
            _ = D.push,
            N = D.slice,
            Q = function Q(e, t) {
          for (var n = 0, i = e.length; n < i; n++) {
            if (e[n] === t) return n;
          }

          return -1;
        },
            M = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            R = "[\\x20\\t\\r\\n\\f]",
            z = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
            F = "\\[" + R + "*(" + z + ")(?:" + R + "*([*^$|!~]?=)" + R + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + z + "))|)" + R + "*\\]",
            H = ":(" + z + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + F + ")*)|.*)\\)|)",
            I = new RegExp(R + "+", "g"),
            B = new RegExp("^" + R + "+|((?:^|[^\\\\])(?:\\\\.)*)" + R + "+$", "g"),
            P = new RegExp("^" + R + "*," + R + "*"),
            $ = new RegExp("^" + R + "*([>+~]|" + R + ")" + R + "*"),
            W = new RegExp("=" + R + "*([^\\]'\"]*?)" + R + "*\\]", "g"),
            X = new RegExp(H),
            U = new RegExp("^" + z + "$"),
            Y = {
          ID: new RegExp("^#(" + z + ")"),
          CLASS: new RegExp("^\\.(" + z + ")"),
          TAG: new RegExp("^(" + z + "|[*])"),
          ATTR: new RegExp("^" + F),
          PSEUDO: new RegExp("^" + H),
          CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + R + "*(even|odd|(([+-]|)(\\d*)n|)" + R + "*(?:([+-]|)" + R + "*(\\d+)|))" + R + "*\\)|)", "i"),
          bool: new RegExp("^(?:" + M + ")$", "i"),
          needsContext: new RegExp("^" + R + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + R + "*((?:-\\d)?\\d*)" + R + "*\\)|)(?=[^-]|$)", "i")
        },
            G = /^(?:input|select|textarea|button)$/i,
            V = /^h\d$/i,
            K = /^[^{]+\{\s*\[native \w/,
            J = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            Z = /[+~]/,
            ee = /'|\\/g,
            te = new RegExp("\\\\([\\da-f]{1,6}" + R + "?|(" + R + ")|.)", "ig"),
            ne = function ne(e, t, n) {
          var i = "0x" + t - 65536;
          return i != i || n ? t : i < 0 ? String.fromCharCode(i + 65536) : String.fromCharCode(i >> 10 | 55296, 1023 & i | 56320);
        },
            ie = function ie() {
          d();
        };

        try {
          _.apply(D = N.call(q.childNodes), q.childNodes), D[q.childNodes.length].nodeType;
        } catch (e) {
          _ = {
            apply: D.length ? function (e, t) {
              L.apply(e, N.call(t));
            } : function (e, t) {
              for (var n = e.length, i = 0; e[n++] = t[i++];) {
                ;
              }

              e.length = n - 1;
            }
          };
        }

        function re(e, t, i, r) {
          var o,
              a,
              c,
              u,
              f,
              p,
              v,
              y,
              w = t && t.ownerDocument,
              T = t ? t.nodeType : 9;
          if (i = i || [], "string" != typeof e || !e || 1 !== T && 9 !== T && 11 !== T) return i;

          if (!r && ((t ? t.ownerDocument || t : q) !== h && d(t), t = t || h, m)) {
            if (11 !== T && (p = J.exec(e))) if (o = p[1]) {
              if (9 === T) {
                if (!(c = t.getElementById(o))) return i;
                if (c.id === o) return i.push(c), i;
              } else if (w && (c = w.getElementById(o)) && b(t, c) && c.id === o) return i.push(c), i;
            } else {
              if (p[2]) return _.apply(i, t.getElementsByTagName(e)), i;
              if ((o = p[3]) && n.getElementsByClassName && t.getElementsByClassName) return _.apply(i, t.getElementsByClassName(o)), i;
            }

            if (n.qsa && !S[e + " "] && (!g || !g.test(e))) {
              if (1 !== T) w = t, y = e;else if ("object" !== t.nodeName.toLowerCase()) {
                for ((u = t.getAttribute("id")) ? u = u.replace(ee, "\\$&") : t.setAttribute("id", u = x), a = (v = s(e)).length, f = U.test(u) ? "#" + u : "[id='" + u + "']"; a--;) {
                  v[a] = f + " " + me(v[a]);
                }

                y = v.join(","), w = Z.test(e) && he(t.parentNode) || t;
              }
              if (y) try {
                return _.apply(i, w.querySelectorAll(y)), i;
              } catch (e) {} finally {
                u === x && t.removeAttribute("id");
              }
            }
          }

          return l(e.replace(B, "$1"), t, i, r);
        }

        function oe() {
          var e = [];
          return function t(n, r) {
            return e.push(n + " ") > i.cacheLength && delete t[e.shift()], t[n + " "] = r;
          };
        }

        function se(e) {
          return e[x] = !0, e;
        }

        function ae(e) {
          var t = h.createElement("div");

          try {
            return !!e(t);
          } catch (e) {
            return !1;
          } finally {
            t.parentNode && t.parentNode.removeChild(t), t = null;
          }
        }

        function le(e, t) {
          for (var n = e.split("|"), r = n.length; r--;) {
            i.attrHandle[n[r]] = t;
          }
        }

        function ce(e, t) {
          var n = t && e,
              i = n && 1 === e.nodeType && 1 === t.nodeType && (~t.sourceIndex || E) - (~e.sourceIndex || E);
          if (i) return i;
          if (n) for (; n = n.nextSibling;) {
            if (n === t) return -1;
          }
          return e ? 1 : -1;
        }

        function ue(e) {
          return function (t) {
            return "input" === t.nodeName.toLowerCase() && t.type === e;
          };
        }

        function fe(e) {
          return function (t) {
            var n = t.nodeName.toLowerCase();
            return ("input" === n || "button" === n) && t.type === e;
          };
        }

        function de(e) {
          return se(function (t) {
            return t = +t, se(function (n, i) {
              for (var r, o = e([], n.length, t), s = o.length; s--;) {
                n[r = o[s]] && (n[r] = !(i[r] = n[r]));
              }
            });
          });
        }

        function he(e) {
          return e && void 0 !== e.getElementsByTagName && e;
        }

        for (t in n = re.support = {}, o = re.isXML = function (e) {
          var t = e && (e.ownerDocument || e).documentElement;
          return !!t && "HTML" !== t.nodeName;
        }, d = re.setDocument = function (e) {
          var t,
              r,
              s = e ? e.ownerDocument || e : q;
          return s !== h && 9 === s.nodeType && s.documentElement ? (p = (h = s).documentElement, m = !o(h), (r = h.defaultView) && r.top !== r && (r.addEventListener ? r.addEventListener("unload", ie, !1) : r.attachEvent && r.attachEvent("onunload", ie)), n.attributes = ae(function (e) {
            return e.className = "i", !e.getAttribute("className");
          }), n.getElementsByTagName = ae(function (e) {
            return e.appendChild(h.createComment("")), !e.getElementsByTagName("*").length;
          }), n.getElementsByClassName = K.test(h.getElementsByClassName), n.getById = ae(function (e) {
            return p.appendChild(e).id = x, !h.getElementsByName || !h.getElementsByName(x).length;
          }), n.getById ? (i.find.ID = function (e, t) {
            if (void 0 !== t.getElementById && m) {
              var n = t.getElementById(e);
              return n ? [n] : [];
            }
          }, i.filter.ID = function (e) {
            var t = e.replace(te, ne);
            return function (e) {
              return e.getAttribute("id") === t;
            };
          }) : (delete i.find.ID, i.filter.ID = function (e) {
            var t = e.replace(te, ne);
            return function (e) {
              var n = void 0 !== e.getAttributeNode && e.getAttributeNode("id");
              return n && n.value === t;
            };
          }), i.find.TAG = n.getElementsByTagName ? function (e, t) {
            return void 0 !== t.getElementsByTagName ? t.getElementsByTagName(e) : n.qsa ? t.querySelectorAll(e) : void 0;
          } : function (e, t) {
            var n,
                i = [],
                r = 0,
                o = t.getElementsByTagName(e);

            if ("*" === e) {
              for (; n = o[r++];) {
                1 === n.nodeType && i.push(n);
              }

              return i;
            }

            return o;
          }, i.find.CLASS = n.getElementsByClassName && function (e, t) {
            if (void 0 !== t.getElementsByClassName && m) return t.getElementsByClassName(e);
          }, v = [], g = [], (n.qsa = K.test(h.querySelectorAll)) && (ae(function (e) {
            p.appendChild(e).innerHTML = "<a id='" + x + "'></a><select id='" + x + "-\r\\' msallowcapture=''><option selected=''></option></select>", e.querySelectorAll("[msallowcapture^='']").length && g.push("[*^$]=" + R + "*(?:''|\"\")"), e.querySelectorAll("[selected]").length || g.push("\\[" + R + "*(?:value|" + M + ")"), e.querySelectorAll("[id~=" + x + "-]").length || g.push("~="), e.querySelectorAll(":checked").length || g.push(":checked"), e.querySelectorAll("a#" + x + "+*").length || g.push(".#.+[+~]");
          }), ae(function (e) {
            var t = h.createElement("input");
            t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), e.querySelectorAll("[name=d]").length && g.push("name" + R + "*[*^$|!~]?="), e.querySelectorAll(":enabled").length || g.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), g.push(",.*:");
          })), (n.matchesSelector = K.test(y = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.oMatchesSelector || p.msMatchesSelector)) && ae(function (e) {
            n.disconnectedMatch = y.call(e, "div"), y.call(e, "[s!='']:x"), v.push("!=", H);
          }), g = g.length && new RegExp(g.join("|")), v = v.length && new RegExp(v.join("|")), t = K.test(p.compareDocumentPosition), b = t || K.test(p.contains) ? function (e, t) {
            var n = 9 === e.nodeType ? e.documentElement : e,
                i = t && t.parentNode;
            return e === i || !(!i || 1 !== i.nodeType || !(n.contains ? n.contains(i) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(i)));
          } : function (e, t) {
            if (t) for (; t = t.parentNode;) {
              if (t === e) return !0;
            }
            return !1;
          }, j = t ? function (e, t) {
            if (e === t) return f = !0, 0;
            var i = !e.compareDocumentPosition - !t.compareDocumentPosition;
            return i || (1 & (i = (e.ownerDocument || e) === (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !n.sortDetached && t.compareDocumentPosition(e) === i ? e === h || e.ownerDocument === q && b(q, e) ? -1 : t === h || t.ownerDocument === q && b(q, t) ? 1 : u ? Q(u, e) - Q(u, t) : 0 : 4 & i ? -1 : 1);
          } : function (e, t) {
            if (e === t) return f = !0, 0;
            var n,
                i = 0,
                r = e.parentNode,
                o = t.parentNode,
                s = [e],
                a = [t];
            if (!r || !o) return e === h ? -1 : t === h ? 1 : r ? -1 : o ? 1 : u ? Q(u, e) - Q(u, t) : 0;
            if (r === o) return ce(e, t);

            for (n = e; n = n.parentNode;) {
              s.unshift(n);
            }

            for (n = t; n = n.parentNode;) {
              a.unshift(n);
            }

            for (; s[i] === a[i];) {
              i++;
            }

            return i ? ce(s[i], a[i]) : s[i] === q ? -1 : a[i] === q ? 1 : 0;
          }, h) : h;
        }, re.matches = function (e, t) {
          return re(e, null, null, t);
        }, re.matchesSelector = function (e, t) {
          if ((e.ownerDocument || e) !== h && d(e), t = t.replace(W, "='$1']"), n.matchesSelector && m && !S[t + " "] && (!v || !v.test(t)) && (!g || !g.test(t))) try {
            var i = y.call(e, t);
            if (i || n.disconnectedMatch || e.document && 11 !== e.document.nodeType) return i;
          } catch (e) {}
          return re(t, h, null, [e]).length > 0;
        }, re.contains = function (e, t) {
          return (e.ownerDocument || e) !== h && d(e), b(e, t);
        }, re.attr = function (e, t) {
          (e.ownerDocument || e) !== h && d(e);
          var r = i.attrHandle[t.toLowerCase()],
              o = r && O.call(i.attrHandle, t.toLowerCase()) ? r(e, t, !m) : void 0;
          return void 0 !== o ? o : n.attributes || !m ? e.getAttribute(t) : (o = e.getAttributeNode(t)) && o.specified ? o.value : null;
        }, re.error = function (e) {
          throw new Error("Syntax error, unrecognized expression: " + e);
        }, re.uniqueSort = function (e) {
          var t,
              i = [],
              r = 0,
              o = 0;

          if (f = !n.detectDuplicates, u = !n.sortStable && e.slice(0), e.sort(j), f) {
            for (; t = e[o++];) {
              t === e[o] && (r = i.push(o));
            }

            for (; r--;) {
              e.splice(i[r], 1);
            }
          }

          return u = null, e;
        }, r = re.getText = function (e) {
          var t,
              n = "",
              i = 0,
              o = e.nodeType;

          if (o) {
            if (1 === o || 9 === o || 11 === o) {
              if ("string" == typeof e.textContent) return e.textContent;

              for (e = e.firstChild; e; e = e.nextSibling) {
                n += r(e);
              }
            } else if (3 === o || 4 === o) return e.nodeValue;
          } else for (; t = e[i++];) {
            n += r(t);
          }

          return n;
        }, (i = re.selectors = {
          cacheLength: 50,
          createPseudo: se,
          match: Y,
          attrHandle: {},
          find: {},
          relative: {
            ">": {
              dir: "parentNode",
              first: !0
            },
            " ": {
              dir: "parentNode"
            },
            "+": {
              dir: "previousSibling",
              first: !0
            },
            "~": {
              dir: "previousSibling"
            }
          },
          preFilter: {
            ATTR: function ATTR(e) {
              return e[1] = e[1].replace(te, ne), e[3] = (e[3] || e[4] || e[5] || "").replace(te, ne), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4);
            },
            CHILD: function CHILD(e) {
              return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || re.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && re.error(e[0]), e;
            },
            PSEUDO: function PSEUDO(e) {
              var t,
                  n = !e[6] && e[2];
              return Y.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && X.test(n) && (t = s(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3));
            }
          },
          filter: {
            TAG: function TAG(e) {
              var t = e.replace(te, ne).toLowerCase();
              return "*" === e ? function () {
                return !0;
              } : function (e) {
                return e.nodeName && e.nodeName.toLowerCase() === t;
              };
            },
            CLASS: function CLASS(e) {
              var t = k[e + " "];
              return t || (t = new RegExp("(^|" + R + ")" + e + "(" + R + "|$)")) && k(e, function (e) {
                return t.test("string" == typeof e.className && e.className || void 0 !== e.getAttribute && e.getAttribute("class") || "");
              });
            },
            ATTR: function ATTR(e, t, n) {
              return function (i) {
                var r = re.attr(i, e);
                return null == r ? "!=" === t : !t || (r += "", "=" === t ? r === n : "!=" === t ? r !== n : "^=" === t ? n && 0 === r.indexOf(n) : "*=" === t ? n && r.indexOf(n) > -1 : "$=" === t ? n && r.slice(-n.length) === n : "~=" === t ? (" " + r.replace(I, " ") + " ").indexOf(n) > -1 : "|=" === t && (r === n || r.slice(0, n.length + 1) === n + "-"));
              };
            },
            CHILD: function CHILD(e, t, n, i, r) {
              var o = "nth" !== e.slice(0, 3),
                  s = "last" !== e.slice(-4),
                  a = "of-type" === t;
              return 1 === i && 0 === r ? function (e) {
                return !!e.parentNode;
              } : function (t, n, l) {
                var c,
                    u,
                    f,
                    d,
                    h,
                    p,
                    m = o !== s ? "nextSibling" : "previousSibling",
                    g = t.parentNode,
                    v = a && t.nodeName.toLowerCase(),
                    y = !l && !a,
                    b = !1;

                if (g) {
                  if (o) {
                    for (; m;) {
                      for (d = t; d = d[m];) {
                        if (a ? d.nodeName.toLowerCase() === v : 1 === d.nodeType) return !1;
                      }

                      p = m = "only" === e && !p && "nextSibling";
                    }

                    return !0;
                  }

                  if (p = [s ? g.firstChild : g.lastChild], s && y) {
                    for (b = (h = (c = (u = (f = (d = g)[x] || (d[x] = {}))[d.uniqueID] || (f[d.uniqueID] = {}))[e] || [])[0] === w && c[1]) && c[2], d = h && g.childNodes[h]; d = ++h && d && d[m] || (b = h = 0) || p.pop();) {
                      if (1 === d.nodeType && ++b && d === t) {
                        u[e] = [w, h, b];
                        break;
                      }
                    }
                  } else if (y && (b = h = (c = (u = (f = (d = t)[x] || (d[x] = {}))[d.uniqueID] || (f[d.uniqueID] = {}))[e] || [])[0] === w && c[1]), !1 === b) for (; (d = ++h && d && d[m] || (b = h = 0) || p.pop()) && ((a ? d.nodeName.toLowerCase() !== v : 1 !== d.nodeType) || !++b || (y && ((u = (f = d[x] || (d[x] = {}))[d.uniqueID] || (f[d.uniqueID] = {}))[e] = [w, b]), d !== t));) {
                    ;
                  }

                  return (b -= r) === i || b % i == 0 && b / i >= 0;
                }
              };
            },
            PSEUDO: function PSEUDO(e, t) {
              var n,
                  r = i.pseudos[e] || i.setFilters[e.toLowerCase()] || re.error("unsupported pseudo: " + e);
              return r[x] ? r(t) : r.length > 1 ? (n = [e, e, "", t], i.setFilters.hasOwnProperty(e.toLowerCase()) ? se(function (e, n) {
                for (var i, o = r(e, t), s = o.length; s--;) {
                  e[i = Q(e, o[s])] = !(n[i] = o[s]);
                }
              }) : function (e) {
                return r(e, 0, n);
              }) : r;
            }
          },
          pseudos: {
            not: se(function (e) {
              var t = [],
                  n = [],
                  i = a(e.replace(B, "$1"));
              return i[x] ? se(function (e, t, n, r) {
                for (var o, s = i(e, null, r, []), a = e.length; a--;) {
                  (o = s[a]) && (e[a] = !(t[a] = o));
                }
              }) : function (e, r, o) {
                return t[0] = e, i(t, null, o, n), t[0] = null, !n.pop();
              };
            }),
            has: se(function (e) {
              return function (t) {
                return re(e, t).length > 0;
              };
            }),
            contains: se(function (e) {
              return e = e.replace(te, ne), function (t) {
                return (t.textContent || t.innerText || r(t)).indexOf(e) > -1;
              };
            }),
            lang: se(function (e) {
              return U.test(e || "") || re.error("unsupported lang: " + e), e = e.replace(te, ne).toLowerCase(), function (t) {
                var n;

                do {
                  if (n = m ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return (n = n.toLowerCase()) === e || 0 === n.indexOf(e + "-");
                } while ((t = t.parentNode) && 1 === t.nodeType);

                return !1;
              };
            }),
            target: function target(t) {
              var n = e.location && e.location.hash;
              return n && n.slice(1) === t.id;
            },
            root: function root(e) {
              return e === p;
            },
            focus: function focus(e) {
              return e === h.activeElement && (!h.hasFocus || h.hasFocus()) && !!(e.type || e.href || ~e.tabIndex);
            },
            enabled: function enabled(e) {
              return !1 === e.disabled;
            },
            disabled: function disabled(e) {
              return !0 === e.disabled;
            },
            checked: function checked(e) {
              var t = e.nodeName.toLowerCase();
              return "input" === t && !!e.checked || "option" === t && !!e.selected;
            },
            selected: function selected(e) {
              return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected;
            },
            empty: function empty(e) {
              for (e = e.firstChild; e; e = e.nextSibling) {
                if (e.nodeType < 6) return !1;
              }

              return !0;
            },
            parent: function parent(e) {
              return !i.pseudos.empty(e);
            },
            header: function header(e) {
              return V.test(e.nodeName);
            },
            input: function input(e) {
              return G.test(e.nodeName);
            },
            button: function button(e) {
              var t = e.nodeName.toLowerCase();
              return "input" === t && "button" === e.type || "button" === t;
            },
            text: function text(e) {
              var t;
              return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase());
            },
            first: de(function () {
              return [0];
            }),
            last: de(function (e, t) {
              return [t - 1];
            }),
            eq: de(function (e, t, n) {
              return [n < 0 ? n + t : n];
            }),
            even: de(function (e, t) {
              for (var n = 0; n < t; n += 2) {
                e.push(n);
              }

              return e;
            }),
            odd: de(function (e, t) {
              for (var n = 1; n < t; n += 2) {
                e.push(n);
              }

              return e;
            }),
            lt: de(function (e, t, n) {
              for (var i = n < 0 ? n + t : n; --i >= 0;) {
                e.push(i);
              }

              return e;
            }),
            gt: de(function (e, t, n) {
              for (var i = n < 0 ? n + t : n; ++i < t;) {
                e.push(i);
              }

              return e;
            })
          }
        }).pseudos.nth = i.pseudos.eq, {
          radio: !0,
          checkbox: !0,
          file: !0,
          password: !0,
          image: !0
        }) {
          i.pseudos[t] = ue(t);
        }

        for (t in {
          submit: !0,
          reset: !0
        }) {
          i.pseudos[t] = fe(t);
        }

        function pe() {}

        function me(e) {
          for (var t = 0, n = e.length, i = ""; t < n; t++) {
            i += e[t].value;
          }

          return i;
        }

        function ge(e, t, n) {
          var i = t.dir,
              r = n && "parentNode" === i,
              o = T++;
          return t.first ? function (t, n, o) {
            for (; t = t[i];) {
              if (1 === t.nodeType || r) return e(t, n, o);
            }
          } : function (t, n, s) {
            var a,
                l,
                c,
                u = [w, o];

            if (s) {
              for (; t = t[i];) {
                if ((1 === t.nodeType || r) && e(t, n, s)) return !0;
              }
            } else for (; t = t[i];) {
              if (1 === t.nodeType || r) {
                if ((a = (l = (c = t[x] || (t[x] = {}))[t.uniqueID] || (c[t.uniqueID] = {}))[i]) && a[0] === w && a[1] === o) return u[2] = a[2];
                if (l[i] = u, u[2] = e(t, n, s)) return !0;
              }
            }
          };
        }

        function ve(e) {
          return e.length > 1 ? function (t, n, i) {
            for (var r = e.length; r--;) {
              if (!e[r](t, n, i)) return !1;
            }

            return !0;
          } : e[0];
        }

        function ye(e, t, n, i, r) {
          for (var o, s = [], a = 0, l = e.length, c = null != t; a < l; a++) {
            (o = e[a]) && (n && !n(o, i, r) || (s.push(o), c && t.push(a)));
          }

          return s;
        }

        function be(e, t, n, i, r, o) {
          return i && !i[x] && (i = be(i)), r && !r[x] && (r = be(r, o)), se(function (o, s, a, l) {
            var c,
                u,
                f,
                d = [],
                h = [],
                p = s.length,
                m = o || function (e, t, n) {
              for (var i = 0, r = t.length; i < r; i++) {
                re(e, t[i], n);
              }

              return n;
            }(t || "*", a.nodeType ? [a] : a, []),
                g = !e || !o && t ? m : ye(m, d, e, a, l),
                v = n ? r || (o ? e : p || i) ? [] : s : g;

            if (n && n(g, v, a, l), i) for (c = ye(v, h), i(c, [], a, l), u = c.length; u--;) {
              (f = c[u]) && (v[h[u]] = !(g[h[u]] = f));
            }

            if (o) {
              if (r || e) {
                if (r) {
                  for (c = [], u = v.length; u--;) {
                    (f = v[u]) && c.push(g[u] = f);
                  }

                  r(null, v = [], c, l);
                }

                for (u = v.length; u--;) {
                  (f = v[u]) && (c = r ? Q(o, f) : d[u]) > -1 && (o[c] = !(s[c] = f));
                }
              }
            } else v = ye(v === s ? v.splice(p, v.length) : v), r ? r(null, s, v, l) : _.apply(s, v);
          });
        }

        function xe(e) {
          for (var t, n, r, o = e.length, s = i.relative[e[0].type], a = s || i.relative[" "], l = s ? 1 : 0, u = ge(function (e) {
            return e === t;
          }, a, !0), f = ge(function (e) {
            return Q(t, e) > -1;
          }, a, !0), d = [function (e, n, i) {
            var r = !s && (i || n !== c) || ((t = n).nodeType ? u(e, n, i) : f(e, n, i));
            return t = null, r;
          }]; l < o; l++) {
            if (n = i.relative[e[l].type]) d = [ge(ve(d), n)];else {
              if ((n = i.filter[e[l].type].apply(null, e[l].matches))[x]) {
                for (r = ++l; r < o && !i.relative[e[r].type]; r++) {
                  ;
                }

                return be(l > 1 && ve(d), l > 1 && me(e.slice(0, l - 1).concat({
                  value: " " === e[l - 2].type ? "*" : ""
                })).replace(B, "$1"), n, l < r && xe(e.slice(l, r)), r < o && xe(e = e.slice(r)), r < o && me(e));
              }

              d.push(n);
            }
          }

          return ve(d);
        }

        return pe.prototype = i.filters = i.pseudos, i.setFilters = new pe(), s = re.tokenize = function (e, t) {
          var n,
              r,
              o,
              s,
              a,
              l,
              c,
              u = C[e + " "];
          if (u) return t ? 0 : u.slice(0);

          for (a = e, l = [], c = i.preFilter; a;) {
            for (s in n && !(r = P.exec(a)) || (r && (a = a.slice(r[0].length) || a), l.push(o = [])), n = !1, (r = $.exec(a)) && (n = r.shift(), o.push({
              value: n,
              type: r[0].replace(B, " ")
            }), a = a.slice(n.length)), i.filter) {
              !(r = Y[s].exec(a)) || c[s] && !(r = c[s](r)) || (n = r.shift(), o.push({
                value: n,
                type: s,
                matches: r
              }), a = a.slice(n.length));
            }

            if (!n) break;
          }

          return t ? a.length : a ? re.error(e) : C(e, l).slice(0);
        }, a = re.compile = function (e, t) {
          var n,
              r = [],
              o = [],
              a = S[e + " "];

          if (!a) {
            for (t || (t = s(e)), n = t.length; n--;) {
              (a = xe(t[n]))[x] ? r.push(a) : o.push(a);
            }

            (a = S(e, function (e, t) {
              var n = t.length > 0,
                  r = e.length > 0,
                  o = function o(_o, s, a, l, u) {
                var f,
                    p,
                    g,
                    v = 0,
                    y = "0",
                    b = _o && [],
                    x = [],
                    q = c,
                    T = _o || r && i.find.TAG("*", u),
                    k = w += null == q ? 1 : Math.random() || .1,
                    C = T.length;

                for (u && (c = s === h || s || u); y !== C && null != (f = T[y]); y++) {
                  if (r && f) {
                    for (p = 0, s || f.ownerDocument === h || (d(f), a = !m); g = e[p++];) {
                      if (g(f, s || h, a)) {
                        l.push(f);
                        break;
                      }
                    }

                    u && (w = k);
                  }

                  n && ((f = !g && f) && v--, _o && b.push(f));
                }

                if (v += y, n && y !== v) {
                  for (p = 0; g = t[p++];) {
                    g(b, x, s, a);
                  }

                  if (_o) {
                    if (v > 0) for (; y--;) {
                      b[y] || x[y] || (x[y] = A.call(l));
                    }
                    x = ye(x);
                  }

                  _.apply(l, x), u && !_o && x.length > 0 && v + t.length > 1 && re.uniqueSort(l);
                }

                return u && (w = k, c = q), b;
              };

              return n ? se(o) : o;
            }(o, r))).selector = e;
          }

          return a;
        }, l = re.select = function (e, t, r, o) {
          var l,
              c,
              u,
              f,
              d,
              h = "function" == typeof e && e,
              p = !o && s(e = h.selector || e);

          if (r = r || [], 1 === p.length) {
            if ((c = p[0] = p[0].slice(0)).length > 2 && "ID" === (u = c[0]).type && n.getById && 9 === t.nodeType && m && i.relative[c[1].type]) {
              if (!(t = (i.find.ID(u.matches[0].replace(te, ne), t) || [])[0])) return r;
              h && (t = t.parentNode), e = e.slice(c.shift().value.length);
            }

            for (l = Y.needsContext.test(e) ? 0 : c.length; l-- && (u = c[l], !i.relative[f = u.type]);) {
              if ((d = i.find[f]) && (o = d(u.matches[0].replace(te, ne), Z.test(c[0].type) && he(t.parentNode) || t))) {
                if (c.splice(l, 1), !(e = o.length && me(c))) return _.apply(r, o), r;
                break;
              }
            }
          }

          return (h || a(e, p))(o, t, !m, r, !t || Z.test(e) && he(t.parentNode) || t), r;
        }, n.sortStable = x.split("").sort(j).join("") === x, n.detectDuplicates = !!f, d(), n.sortDetached = ae(function (e) {
          return 1 & e.compareDocumentPosition(h.createElement("div"));
        }), ae(function (e) {
          return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href");
        }) || le("type|href|height|width", function (e, t, n) {
          if (!n) return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2);
        }), n.attributes && ae(function (e) {
          return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value");
        }) || le("value", function (e, t, n) {
          if (!n && "input" === e.nodeName.toLowerCase()) return e.defaultValue;
        }), ae(function (e) {
          return null == e.getAttribute("disabled");
        }) || le(M, function (e, t, n) {
          var i;
          if (!n) return !0 === e[t] ? t.toLowerCase() : (i = e.getAttributeNode(t)) && i.specified ? i.value : null;
        }), re;
      }(n);

      m.find = q, m.expr = q.selectors, m.expr[":"] = m.expr.pseudos, m.uniqueSort = m.unique = q.uniqueSort, m.text = q.getText, m.isXMLDoc = q.isXML, m.contains = q.contains;

      var w = function w(e, t, n) {
        for (var i = [], r = void 0 !== n; (e = e[t]) && 9 !== e.nodeType;) {
          if (1 === e.nodeType) {
            if (r && m(e).is(n)) break;
            i.push(e);
          }
        }

        return i;
      },
          T = function T(e, t) {
        for (var n = []; e; e = e.nextSibling) {
          1 === e.nodeType && e !== t && n.push(e);
        }

        return n;
      },
          k = m.expr.match.needsContext,
          C = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,
          S = /^.[^:#\[\.,]*$/;

      function j(e, t, n) {
        if (m.isFunction(t)) return m.grep(e, function (e, i) {
          return !!t.call(e, i, e) !== n;
        });
        if (t.nodeType) return m.grep(e, function (e) {
          return e === t !== n;
        });

        if ("string" == typeof t) {
          if (S.test(t)) return m.filter(t, e, n);
          t = m.filter(t, e);
        }

        return m.grep(e, function (e) {
          return m.inArray(e, t) > -1 !== n;
        });
      }

      m.filter = function (e, t, n) {
        var i = t[0];
        return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === i.nodeType ? m.find.matchesSelector(i, e) ? [i] : [] : m.find.matches(e, m.grep(t, function (e) {
          return 1 === e.nodeType;
        }));
      }, m.fn.extend({
        find: function find(e) {
          var t,
              n = [],
              i = this,
              r = i.length;
          if ("string" != typeof e) return this.pushStack(m(e).filter(function () {
            for (t = 0; t < r; t++) {
              if (m.contains(i[t], this)) return !0;
            }
          }));

          for (t = 0; t < r; t++) {
            m.find(e, i[t], n);
          }

          return (n = this.pushStack(r > 1 ? m.unique(n) : n)).selector = this.selector ? this.selector + " " + e : e, n;
        },
        filter: function filter(e) {
          return this.pushStack(j(this, e || [], !1));
        },
        not: function not(e) {
          return this.pushStack(j(this, e || [], !0));
        },
        is: function is(e) {
          return !!j(this, "string" == typeof e && k.test(e) ? m(e) : e || [], !1).length;
        }
      });
      var E,
          O = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;
      (m.fn.init = function (e, t, n) {
        var i, r;
        if (!e) return this;

        if (n = n || E, "string" == typeof e) {
          if (!(i = "<" === e.charAt(0) && ">" === e.charAt(e.length - 1) && e.length >= 3 ? [null, e, null] : O.exec(e)) || !i[1] && t) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);

          if (i[1]) {
            if (t = t instanceof m ? t[0] : t, m.merge(this, m.parseHTML(i[1], t && t.nodeType ? t.ownerDocument || t : s, !0)), C.test(i[1]) && m.isPlainObject(t)) for (i in t) {
              m.isFunction(this[i]) ? this[i](t[i]) : this.attr(i, t[i]);
            }
            return this;
          }

          if ((r = s.getElementById(i[2])) && r.parentNode) {
            if (r.id !== i[2]) return E.find(e);
            this.length = 1, this[0] = r;
          }

          return this.context = s, this.selector = e, this;
        }

        return e.nodeType ? (this.context = this[0] = e, this.length = 1, this) : m.isFunction(e) ? void 0 !== n.ready ? n.ready(e) : e(m) : (void 0 !== e.selector && (this.selector = e.selector, this.context = e.context), m.makeArray(e, this));
      }).prototype = m.fn, E = m(s);
      var D = /^(?:parents|prev(?:Until|All))/,
          A = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
      };

      function L(e, t) {
        do {
          e = e[t];
        } while (e && 1 !== e.nodeType);

        return e;
      }

      m.fn.extend({
        has: function has(e) {
          var t,
              n = m(e, this),
              i = n.length;
          return this.filter(function () {
            for (t = 0; t < i; t++) {
              if (m.contains(this, n[t])) return !0;
            }
          });
        },
        closest: function closest(e, t) {
          for (var n, i = 0, r = this.length, o = [], s = k.test(e) || "string" != typeof e ? m(e, t || this.context) : 0; i < r; i++) {
            for (n = this[i]; n && n !== t; n = n.parentNode) {
              if (n.nodeType < 11 && (s ? s.index(n) > -1 : 1 === n.nodeType && m.find.matchesSelector(n, e))) {
                o.push(n);
                break;
              }
            }
          }

          return this.pushStack(o.length > 1 ? m.uniqueSort(o) : o);
        },
        index: function index(e) {
          return e ? "string" == typeof e ? m.inArray(this[0], m(e)) : m.inArray(e.jquery ? e[0] : e, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        },
        add: function add(e, t) {
          return this.pushStack(m.uniqueSort(m.merge(this.get(), m(e, t))));
        },
        addBack: function addBack(e) {
          return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
        }
      }), m.each({
        parent: function parent(e) {
          var t = e.parentNode;
          return t && 11 !== t.nodeType ? t : null;
        },
        parents: function parents(e) {
          return w(e, "parentNode");
        },
        parentsUntil: function parentsUntil(e, t, n) {
          return w(e, "parentNode", n);
        },
        next: function next(e) {
          return L(e, "nextSibling");
        },
        prev: function prev(e) {
          return L(e, "previousSibling");
        },
        nextAll: function nextAll(e) {
          return w(e, "nextSibling");
        },
        prevAll: function prevAll(e) {
          return w(e, "previousSibling");
        },
        nextUntil: function nextUntil(e, t, n) {
          return w(e, "nextSibling", n);
        },
        prevUntil: function prevUntil(e, t, n) {
          return w(e, "previousSibling", n);
        },
        siblings: function siblings(e) {
          return T((e.parentNode || {}).firstChild, e);
        },
        children: function children(e) {
          return T(e.firstChild);
        },
        contents: function contents(e) {
          return m.nodeName(e, "iframe") ? e.contentDocument || e.contentWindow.document : m.merge([], e.childNodes);
        }
      }, function (e, t) {
        m.fn[e] = function (n, i) {
          var r = m.map(this, t, n);
          return "Until" !== e.slice(-5) && (i = n), i && "string" == typeof i && (r = m.filter(i, r)), this.length > 1 && (A[e] || (r = m.uniqueSort(r)), D.test(e) && (r = r.reverse())), this.pushStack(r);
        };
      });

      var _,
          N,
          Q = /\S+/g;

      function M() {
        s.addEventListener ? (s.removeEventListener("DOMContentLoaded", R), n.removeEventListener("load", R)) : (s.detachEvent("onreadystatechange", R), n.detachEvent("onload", R));
      }

      function R() {
        (s.addEventListener || "load" === n.event.type || "complete" === s.readyState) && (M(), m.ready());
      }

      for (N in m.Callbacks = function (e) {
        e = "string" == typeof e ? function (e) {
          var t = {};
          return m.each(e.match(Q) || [], function (e, n) {
            t[n] = !0;
          }), t;
        }(e) : m.extend({}, e);

        var t,
            n,
            i,
            r,
            o = [],
            s = [],
            a = -1,
            l = function l() {
          for (r = e.once, i = t = !0; s.length; a = -1) {
            for (n = s.shift(); ++a < o.length;) {
              !1 === o[a].apply(n[0], n[1]) && e.stopOnFalse && (a = o.length, n = !1);
            }
          }

          e.memory || (n = !1), t = !1, r && (o = n ? [] : "");
        },
            c = {
          add: function add() {
            return o && (n && !t && (a = o.length - 1, s.push(n)), function t(n) {
              m.each(n, function (n, i) {
                m.isFunction(i) ? e.unique && c.has(i) || o.push(i) : i && i.length && "string" !== m.type(i) && t(i);
              });
            }(arguments), n && !t && l()), this;
          },
          remove: function remove() {
            return m.each(arguments, function (e, t) {
              for (var n; (n = m.inArray(t, o, n)) > -1;) {
                o.splice(n, 1), n <= a && a--;
              }
            }), this;
          },
          has: function has(e) {
            return e ? m.inArray(e, o) > -1 : o.length > 0;
          },
          empty: function empty() {
            return o && (o = []), this;
          },
          disable: function disable() {
            return r = s = [], o = n = "", this;
          },
          disabled: function disabled() {
            return !o;
          },
          lock: function lock() {
            return r = !0, n || c.disable(), this;
          },
          locked: function locked() {
            return !!r;
          },
          fireWith: function fireWith(e, n) {
            return r || (n = [e, (n = n || []).slice ? n.slice() : n], s.push(n), t || l()), this;
          },
          fire: function fire() {
            return c.fireWith(this, arguments), this;
          },
          fired: function fired() {
            return !!i;
          }
        };

        return c;
      }, m.extend({
        Deferred: function Deferred(e) {
          var t = [["resolve", "done", m.Callbacks("once memory"), "resolved"], ["reject", "fail", m.Callbacks("once memory"), "rejected"], ["notify", "progress", m.Callbacks("memory")]],
              n = "pending",
              i = {
            state: function state() {
              return n;
            },
            always: function always() {
              return r.done(arguments).fail(arguments), this;
            },
            then: function then() {
              var e = arguments;
              return m.Deferred(function (n) {
                m.each(t, function (t, o) {
                  var s = m.isFunction(e[t]) && e[t];
                  r[o[1]](function () {
                    var e = s && s.apply(this, arguments);
                    e && m.isFunction(e.promise) ? e.promise().progress(n.notify).done(n.resolve).fail(n.reject) : n[o[0] + "With"](this === i ? n.promise() : this, s ? [e] : arguments);
                  });
                }), e = null;
              }).promise();
            },
            promise: function promise(e) {
              return null != e ? m.extend(e, i) : i;
            }
          },
              r = {};
          return i.pipe = i.then, m.each(t, function (e, o) {
            var s = o[2],
                a = o[3];
            i[o[1]] = s.add, a && s.add(function () {
              n = a;
            }, t[1 ^ e][2].disable, t[2][2].lock), r[o[0]] = function () {
              return r[o[0] + "With"](this === r ? i : this, arguments), this;
            }, r[o[0] + "With"] = s.fireWith;
          }), i.promise(r), e && e.call(r, r), r;
        },
        when: function when(e) {
          var t,
              n,
              i,
              r = 0,
              o = a.call(arguments),
              s = o.length,
              l = 1 !== s || e && m.isFunction(e.promise) ? s : 0,
              c = 1 === l ? e : m.Deferred(),
              u = function u(e, n, i) {
            return function (r) {
              n[e] = this, i[e] = arguments.length > 1 ? a.call(arguments) : r, i === t ? c.notifyWith(n, i) : --l || c.resolveWith(n, i);
            };
          };

          if (s > 1) for (t = new Array(s), n = new Array(s), i = new Array(s); r < s; r++) {
            o[r] && m.isFunction(o[r].promise) ? o[r].promise().progress(u(r, n, t)).done(u(r, i, o)).fail(c.reject) : --l;
          }
          return l || c.resolveWith(i, o), c.promise();
        }
      }), m.fn.ready = function (e) {
        return m.ready.promise().done(e), this;
      }, m.extend({
        isReady: !1,
        readyWait: 1,
        holdReady: function holdReady(e) {
          e ? m.readyWait++ : m.ready(!0);
        },
        ready: function ready(e) {
          (!0 === e ? --m.readyWait : m.isReady) || (m.isReady = !0, !0 !== e && --m.readyWait > 0 || (_.resolveWith(s, [m]), m.fn.triggerHandler && (m(s).triggerHandler("ready"), m(s).off("ready"))));
        }
      }), m.ready.promise = function (e) {
        if (!_) if (_ = m.Deferred(), "complete" === s.readyState || "loading" !== s.readyState && !s.documentElement.doScroll) n.setTimeout(m.ready);else if (s.addEventListener) s.addEventListener("DOMContentLoaded", R), n.addEventListener("load", R);else {
          s.attachEvent("onreadystatechange", R), n.attachEvent("onload", R);
          var t = !1;

          try {
            t = null == n.frameElement && s.documentElement;
          } catch (e) {}

          t && t.doScroll && function e() {
            if (!m.isReady) {
              try {
                t.doScroll("left");
              } catch (t) {
                return n.setTimeout(e, 50);
              }

              M(), m.ready();
            }
          }();
        }
        return _.promise(e);
      }, m.ready.promise(), m(p)) {
        break;
      }

      p.ownFirst = "0" === N, p.inlineBlockNeedsLayout = !1, m(function () {
        var e, t, n, i;
        (n = s.getElementsByTagName("body")[0]) && n.style && (t = s.createElement("div"), (i = s.createElement("div")).style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", n.appendChild(i).appendChild(t), void 0 !== t.style.zoom && (t.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1", p.inlineBlockNeedsLayout = e = 3 === t.offsetWidth, e && (n.style.zoom = 1)), n.removeChild(i));
      }), function () {
        var e = s.createElement("div");
        p.deleteExpando = !0;

        try {
          delete e.test;
        } catch (e) {
          p.deleteExpando = !1;
        }

        e = null;
      }();

      var z,
          F = function F(e) {
        var t = m.noData[(e.nodeName + " ").toLowerCase()],
            n = +e.nodeType || 1;
        return (1 === n || 9 === n) && (!t || !0 !== t && e.getAttribute("classid") === t);
      },
          H = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
          I = /([A-Z])/g;

      function B(e, t, n) {
        if (void 0 === n && 1 === e.nodeType) {
          var i = "data-" + t.replace(I, "-$1").toLowerCase();

          if ("string" == typeof (n = e.getAttribute(i))) {
            try {
              n = "true" === n || "false" !== n && ("null" === n ? null : +n + "" === n ? +n : H.test(n) ? m.parseJSON(n) : n);
            } catch (e) {}

            m.data(e, t, n);
          } else n = void 0;
        }

        return n;
      }

      function P(e) {
        var t;

        for (t in e) {
          if (("data" !== t || !m.isEmptyObject(e[t])) && "toJSON" !== t) return !1;
        }

        return !0;
      }

      function $(e, t, n, i) {
        if (F(e)) {
          var r,
              s,
              a = m.expando,
              l = e.nodeType,
              c = l ? m.cache : e,
              u = l ? e[a] : e[a] && a;
          if (u && c[u] && (i || c[u].data) || void 0 !== n || "string" != typeof t) return u || (u = l ? e[a] = o.pop() || m.guid++ : a), c[u] || (c[u] = l ? {} : {
            toJSON: m.noop
          }), "object" != typeof t && "function" != typeof t || (i ? c[u] = m.extend(c[u], t) : c[u].data = m.extend(c[u].data, t)), s = c[u], i || (s.data || (s.data = {}), s = s.data), void 0 !== n && (s[m.camelCase(t)] = n), "string" == typeof t ? null == (r = s[t]) && (r = s[m.camelCase(t)]) : r = s, r;
        }
      }

      function W(e, t, n) {
        if (F(e)) {
          var i,
              r,
              o = e.nodeType,
              s = o ? m.cache : e,
              a = o ? e[m.expando] : m.expando;

          if (s[a]) {
            if (t && (i = n ? s[a] : s[a].data)) {
              r = (t = m.isArray(t) ? t.concat(m.map(t, m.camelCase)) : t in i ? [t] : (t = m.camelCase(t)) in i ? [t] : t.split(" ")).length;

              for (; r--;) {
                delete i[t[r]];
              }

              if (n ? !P(i) : !m.isEmptyObject(i)) return;
            }

            (n || (delete s[a].data, P(s[a]))) && (o ? m.cleanData([e], !0) : p.deleteExpando || s != s.window ? delete s[a] : s[a] = void 0);
          }
        }
      }

      m.extend({
        cache: {},
        noData: {
          "applet ": !0,
          "embed ": !0,
          "object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
        },
        hasData: function hasData(e) {
          return !!(e = e.nodeType ? m.cache[e[m.expando]] : e[m.expando]) && !P(e);
        },
        data: function data(e, t, n) {
          return $(e, t, n);
        },
        removeData: function removeData(e, t) {
          return W(e, t);
        },
        _data: function _data(e, t, n) {
          return $(e, t, n, !0);
        },
        _removeData: function _removeData(e, t) {
          return W(e, t, !0);
        }
      }), m.fn.extend({
        data: function data(e, t) {
          var n,
              i,
              r,
              o = this[0],
              s = o && o.attributes;

          if (void 0 === e) {
            if (this.length && (r = m.data(o), 1 === o.nodeType && !m._data(o, "parsedAttrs"))) {
              for (n = s.length; n--;) {
                s[n] && 0 === (i = s[n].name).indexOf("data-") && B(o, i = m.camelCase(i.slice(5)), r[i]);
              }

              m._data(o, "parsedAttrs", !0);
            }

            return r;
          }

          return "object" == typeof e ? this.each(function () {
            m.data(this, e);
          }) : arguments.length > 1 ? this.each(function () {
            m.data(this, e, t);
          }) : o ? B(o, e, m.data(o, e)) : void 0;
        },
        removeData: function removeData(e) {
          return this.each(function () {
            m.removeData(this, e);
          });
        }
      }), m.extend({
        queue: function queue(e, t, n) {
          var i;
          if (e) return t = (t || "fx") + "queue", i = m._data(e, t), n && (!i || m.isArray(n) ? i = m._data(e, t, m.makeArray(n)) : i.push(n)), i || [];
        },
        dequeue: function dequeue(e, t) {
          t = t || "fx";

          var n = m.queue(e, t),
              i = n.length,
              r = n.shift(),
              o = m._queueHooks(e, t);

          "inprogress" === r && (r = n.shift(), i--), r && ("fx" === t && n.unshift("inprogress"), delete o.stop, r.call(e, function () {
            m.dequeue(e, t);
          }, o)), !i && o && o.empty.fire();
        },
        _queueHooks: function _queueHooks(e, t) {
          var n = t + "queueHooks";
          return m._data(e, n) || m._data(e, n, {
            empty: m.Callbacks("once memory").add(function () {
              m._removeData(e, t + "queue"), m._removeData(e, n);
            })
          });
        }
      }), m.fn.extend({
        queue: function queue(e, t) {
          var n = 2;
          return "string" != typeof e && (t = e, e = "fx", n--), arguments.length < n ? m.queue(this[0], e) : void 0 === t ? this : this.each(function () {
            var n = m.queue(this, e, t);
            m._queueHooks(this, e), "fx" === e && "inprogress" !== n[0] && m.dequeue(this, e);
          });
        },
        dequeue: function dequeue(e) {
          return this.each(function () {
            m.dequeue(this, e);
          });
        },
        clearQueue: function clearQueue(e) {
          return this.queue(e || "fx", []);
        },
        promise: function promise(e, t) {
          var n,
              i = 1,
              r = m.Deferred(),
              o = this,
              s = this.length,
              a = function a() {
            --i || r.resolveWith(o, [o]);
          };

          for ("string" != typeof e && (t = e, e = void 0), e = e || "fx"; s--;) {
            (n = m._data(o[s], e + "queueHooks")) && n.empty && (i++, n.empty.add(a));
          }

          return a(), r.promise(t);
        }
      }), p.shrinkWrapBlocks = function () {
        return null != z ? z : (z = !1, (t = s.getElementsByTagName("body")[0]) && t.style ? (e = s.createElement("div"), (n = s.createElement("div")).style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", t.appendChild(n).appendChild(e), void 0 !== e.style.zoom && (e.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1", e.appendChild(s.createElement("div")).style.width = "5px", z = 3 !== e.offsetWidth), t.removeChild(n), z) : void 0);
        var e, t, n;
      };

      var X = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
          U = new RegExp("^(?:([+-])=|)(" + X + ")([a-z%]*)$", "i"),
          Y = ["Top", "Right", "Bottom", "Left"],
          G = function G(e, t) {
        return e = t || e, "none" === m.css(e, "display") || !m.contains(e.ownerDocument, e);
      };

      function V(e, t, n, i) {
        var r,
            o = 1,
            s = 20,
            a = i ? function () {
          return i.cur();
        } : function () {
          return m.css(e, t, "");
        },
            l = a(),
            c = n && n[3] || (m.cssNumber[t] ? "" : "px"),
            u = (m.cssNumber[t] || "px" !== c && +l) && U.exec(m.css(e, t));

        if (u && u[3] !== c) {
          c = c || u[3], n = n || [], u = +l || 1;

          do {
            u /= o = o || ".5", m.style(e, t, u + c);
          } while (o !== (o = a() / l) && 1 !== o && --s);
        }

        return n && (u = +u || +l || 0, r = n[1] ? u + (n[1] + 1) * n[2] : +n[2], i && (i.unit = c, i.start = u, i.end = r)), r;
      }

      var K,
          J,
          Z,
          ee = function ee(e, t, n, i, r, o, s) {
        var a = 0,
            l = e.length,
            c = null == n;
        if ("object" === m.type(n)) for (a in r = !0, n) {
          ee(e, t, a, n[a], !0, o, s);
        } else if (void 0 !== i && (r = !0, m.isFunction(i) || (s = !0), c && (s ? (t.call(e, i), t = null) : (c = t, t = function t(e, _t2, n) {
          return c.call(m(e), n);
        })), t)) for (; a < l; a++) {
          t(e[a], n, s ? i : i.call(e[a], a, t(e[a], n)));
        }
        return r ? e : c ? t.call(e) : l ? t(e[0], n) : o;
      },
          te = /^(?:checkbox|radio)$/i,
          ne = /<([\w:-]+)/,
          ie = /^$|\/(?:java|ecma)script/i,
          re = /^\s+/,
          oe = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|dialog|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|picture|progress|section|summary|template|time|video";

      function se(e) {
        var t = oe.split("|"),
            n = e.createDocumentFragment();
        if (n.createElement) for (; t.length;) {
          n.createElement(t.pop());
        }
        return n;
      }

      K = s.createElement("div"), J = s.createDocumentFragment(), Z = s.createElement("input"), K.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", p.leadingWhitespace = 3 === K.firstChild.nodeType, p.tbody = !K.getElementsByTagName("tbody").length, p.htmlSerialize = !!K.getElementsByTagName("link").length, p.html5Clone = "<:nav></:nav>" !== s.createElement("nav").cloneNode(!0).outerHTML, Z.type = "checkbox", Z.checked = !0, J.appendChild(Z), p.appendChecked = Z.checked, K.innerHTML = "<textarea>x</textarea>", p.noCloneChecked = !!K.cloneNode(!0).lastChild.defaultValue, J.appendChild(K), (Z = s.createElement("input")).setAttribute("type", "radio"), Z.setAttribute("checked", "checked"), Z.setAttribute("name", "t"), K.appendChild(Z), p.checkClone = K.cloneNode(!0).cloneNode(!0).lastChild.checked, p.noCloneEvent = !!K.addEventListener, K[m.expando] = 1, p.attributes = !K.getAttribute(m.expando);
      var ae = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        legend: [1, "<fieldset>", "</fieldset>"],
        area: [1, "<map>", "</map>"],
        param: [1, "<object>", "</object>"],
        thead: [1, "<table>", "</table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: p.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"]
      };

      function le(e, t) {
        var n,
            i,
            r = 0,
            o = void 0 !== e.getElementsByTagName ? e.getElementsByTagName(t || "*") : void 0 !== e.querySelectorAll ? e.querySelectorAll(t || "*") : void 0;
        if (!o) for (o = [], n = e.childNodes || e; null != (i = n[r]); r++) {
          !t || m.nodeName(i, t) ? o.push(i) : m.merge(o, le(i, t));
        }
        return void 0 === t || t && m.nodeName(e, t) ? m.merge([e], o) : o;
      }

      function ce(e, t) {
        for (var n, i = 0; null != (n = e[i]); i++) {
          m._data(n, "globalEval", !t || m._data(t[i], "globalEval"));
        }
      }

      ae.optgroup = ae.option, ae.tbody = ae.tfoot = ae.colgroup = ae.caption = ae.thead, ae.th = ae.td;
      var ue = /<|&#?\w+;/,
          fe = /<tbody/i;

      function de(e) {
        te.test(e.type) && (e.defaultChecked = e.checked);
      }

      function he(e, t, n, i, r) {
        for (var o, s, a, l, c, u, f, d = e.length, h = se(t), g = [], v = 0; v < d; v++) {
          if ((s = e[v]) || 0 === s) if ("object" === m.type(s)) m.merge(g, s.nodeType ? [s] : s);else if (ue.test(s)) {
            for (l = l || h.appendChild(t.createElement("div")), c = (ne.exec(s) || ["", ""])[1].toLowerCase(), f = ae[c] || ae._default, l.innerHTML = f[1] + m.htmlPrefilter(s) + f[2], o = f[0]; o--;) {
              l = l.lastChild;
            }

            if (!p.leadingWhitespace && re.test(s) && g.push(t.createTextNode(re.exec(s)[0])), !p.tbody) for (o = (s = "table" !== c || fe.test(s) ? "<table>" !== f[1] || fe.test(s) ? 0 : l : l.firstChild) && s.childNodes.length; o--;) {
              m.nodeName(u = s.childNodes[o], "tbody") && !u.childNodes.length && s.removeChild(u);
            }

            for (m.merge(g, l.childNodes), l.textContent = ""; l.firstChild;) {
              l.removeChild(l.firstChild);
            }

            l = h.lastChild;
          } else g.push(t.createTextNode(s));
        }

        for (l && h.removeChild(l), p.appendChecked || m.grep(le(g, "input"), de), v = 0; s = g[v++];) {
          if (i && m.inArray(s, i) > -1) r && r.push(s);else if (a = m.contains(s.ownerDocument, s), l = le(h.appendChild(s), "script"), a && ce(l), n) for (o = 0; s = l[o++];) {
            ie.test(s.type || "") && n.push(s);
          }
        }

        return l = null, h;
      }

      !function () {
        var e,
            t,
            i = s.createElement("div");

        for (e in {
          submit: !0,
          change: !0,
          focusin: !0
        }) {
          t = "on" + e, (p[e] = t in n) || (i.setAttribute(t, "t"), p[e] = !1 === i.attributes[t].expando);
        }

        i = null;
      }();
      var pe = /^(?:input|select|textarea)$/i,
          me = /^key/,
          ge = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
          ve = /^(?:focusinfocus|focusoutblur)$/,
          ye = /^([^.]*)(?:\.(.+)|)/;

      function be() {
        return !0;
      }

      function xe() {
        return !1;
      }

      function qe() {
        try {
          return s.activeElement;
        } catch (e) {}
      }

      function we(e, t, n, i, r, o) {
        var s, a;

        if ("object" == typeof t) {
          for (a in "string" != typeof n && (i = i || n, n = void 0), t) {
            we(e, a, n, i, t[a], o);
          }

          return e;
        }

        if (null == i && null == r ? (r = n, i = n = void 0) : null == r && ("string" == typeof n ? (r = i, i = void 0) : (r = i, i = n, n = void 0)), !1 === r) r = xe;else if (!r) return e;
        return 1 === o && (s = r, (r = function r(e) {
          return m().off(e), s.apply(this, arguments);
        }).guid = s.guid || (s.guid = m.guid++)), e.each(function () {
          m.event.add(this, t, r, i, n);
        });
      }

      m.event = {
        global: {},
        add: function add(e, t, n, i, r) {
          var o,
              s,
              a,
              l,
              c,
              u,
              f,
              d,
              h,
              p,
              g,
              v = m._data(e);

          if (v) {
            for (n.handler && (n = (l = n).handler, r = l.selector), n.guid || (n.guid = m.guid++), (s = v.events) || (s = v.events = {}), (u = v.handle) || ((u = v.handle = function (e) {
              return void 0 === m || e && m.event.triggered === e.type ? void 0 : m.event.dispatch.apply(u.elem, arguments);
            }).elem = e), a = (t = (t || "").match(Q) || [""]).length; a--;) {
              h = g = (o = ye.exec(t[a]) || [])[1], p = (o[2] || "").split(".").sort(), h && (c = m.event.special[h] || {}, h = (r ? c.delegateType : c.bindType) || h, c = m.event.special[h] || {}, f = m.extend({
                type: h,
                origType: g,
                data: i,
                handler: n,
                guid: n.guid,
                selector: r,
                needsContext: r && m.expr.match.needsContext.test(r),
                namespace: p.join(".")
              }, l), (d = s[h]) || ((d = s[h] = []).delegateCount = 0, c.setup && !1 !== c.setup.call(e, i, p, u) || (e.addEventListener ? e.addEventListener(h, u, !1) : e.attachEvent && e.attachEvent("on" + h, u))), c.add && (c.add.call(e, f), f.handler.guid || (f.handler.guid = n.guid)), r ? d.splice(d.delegateCount++, 0, f) : d.push(f), m.event.global[h] = !0);
            }

            e = null;
          }
        },
        remove: function remove(e, t, n, i, r) {
          var o,
              s,
              a,
              l,
              c,
              u,
              f,
              d,
              h,
              p,
              g,
              v = m.hasData(e) && m._data(e);

          if (v && (u = v.events)) {
            for (c = (t = (t || "").match(Q) || [""]).length; c--;) {
              if (h = g = (a = ye.exec(t[c]) || [])[1], p = (a[2] || "").split(".").sort(), h) {
                for (f = m.event.special[h] || {}, d = u[h = (i ? f.delegateType : f.bindType) || h] || [], a = a[2] && new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)"), l = o = d.length; o--;) {
                  s = d[o], !r && g !== s.origType || n && n.guid !== s.guid || a && !a.test(s.namespace) || i && i !== s.selector && ("**" !== i || !s.selector) || (d.splice(o, 1), s.selector && d.delegateCount--, f.remove && f.remove.call(e, s));
                }

                l && !d.length && (f.teardown && !1 !== f.teardown.call(e, p, v.handle) || m.removeEvent(e, h, v.handle), delete u[h]);
              } else for (h in u) {
                m.event.remove(e, h + t[c], n, i, !0);
              }
            }

            m.isEmptyObject(u) && (delete v.handle, m._removeData(e, "events"));
          }
        },
        trigger: function trigger(e, t, i, r) {
          var o,
              a,
              l,
              c,
              u,
              f,
              d,
              p = [i || s],
              g = h.call(e, "type") ? e.type : e,
              v = h.call(e, "namespace") ? e.namespace.split(".") : [];

          if (l = f = i = i || s, 3 !== i.nodeType && 8 !== i.nodeType && !ve.test(g + m.event.triggered) && (g.indexOf(".") > -1 && (v = g.split("."), g = v.shift(), v.sort()), a = g.indexOf(":") < 0 && "on" + g, (e = e[m.expando] ? e : new m.Event(g, "object" == typeof e && e)).isTrigger = r ? 2 : 3, e.namespace = v.join("."), e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + v.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, e.result = void 0, e.target || (e.target = i), t = null == t ? [e] : m.makeArray(t, [e]), u = m.event.special[g] || {}, r || !u.trigger || !1 !== u.trigger.apply(i, t))) {
            if (!r && !u.noBubble && !m.isWindow(i)) {
              for (c = u.delegateType || g, ve.test(c + g) || (l = l.parentNode); l; l = l.parentNode) {
                p.push(l), f = l;
              }

              f === (i.ownerDocument || s) && p.push(f.defaultView || f.parentWindow || n);
            }

            for (d = 0; (l = p[d++]) && !e.isPropagationStopped();) {
              e.type = d > 1 ? c : u.bindType || g, (o = (m._data(l, "events") || {})[e.type] && m._data(l, "handle")) && o.apply(l, t), (o = a && l[a]) && o.apply && F(l) && (e.result = o.apply(l, t), !1 === e.result && e.preventDefault());
            }

            if (e.type = g, !r && !e.isDefaultPrevented() && (!u._default || !1 === u._default.apply(p.pop(), t)) && F(i) && a && i[g] && !m.isWindow(i)) {
              (f = i[a]) && (i[a] = null), m.event.triggered = g;

              try {
                i[g]();
              } catch (e) {}

              m.event.triggered = void 0, f && (i[a] = f);
            }

            return e.result;
          }
        },
        dispatch: function dispatch(e) {
          e = m.event.fix(e);
          var t,
              n,
              i,
              r,
              o,
              s,
              l = a.call(arguments),
              c = (m._data(this, "events") || {})[e.type] || [],
              u = m.event.special[e.type] || {};

          if (l[0] = e, e.delegateTarget = this, !u.preDispatch || !1 !== u.preDispatch.call(this, e)) {
            for (s = m.event.handlers.call(this, e, c), t = 0; (r = s[t++]) && !e.isPropagationStopped();) {
              for (e.currentTarget = r.elem, n = 0; (o = r.handlers[n++]) && !e.isImmediatePropagationStopped();) {
                e.rnamespace && !e.rnamespace.test(o.namespace) || (e.handleObj = o, e.data = o.data, void 0 !== (i = ((m.event.special[o.origType] || {}).handle || o.handler).apply(r.elem, l)) && !1 === (e.result = i) && (e.preventDefault(), e.stopPropagation()));
              }
            }

            return u.postDispatch && u.postDispatch.call(this, e), e.result;
          }
        },
        handlers: function handlers(e, t) {
          var n,
              i,
              r,
              o,
              s = [],
              a = t.delegateCount,
              l = e.target;
          if (a && l.nodeType && ("click" !== e.type || isNaN(e.button) || e.button < 1)) for (; l != this; l = l.parentNode || this) {
            if (1 === l.nodeType && (!0 !== l.disabled || "click" !== e.type)) {
              for (i = [], n = 0; n < a; n++) {
                void 0 === i[r = (o = t[n]).selector + " "] && (i[r] = o.needsContext ? m(r, this).index(l) > -1 : m.find(r, this, null, [l]).length), i[r] && i.push(o);
              }

              i.length && s.push({
                elem: l,
                handlers: i
              });
            }
          }
          return a < t.length && s.push({
            elem: this,
            handlers: t.slice(a)
          }), s;
        },
        fix: function fix(e) {
          if (e[m.expando]) return e;
          var t,
              n,
              i,
              r = e.type,
              o = e,
              a = this.fixHooks[r];

          for (a || (this.fixHooks[r] = a = ge.test(r) ? this.mouseHooks : me.test(r) ? this.keyHooks : {}), i = a.props ? this.props.concat(a.props) : this.props, e = new m.Event(o), t = i.length; t--;) {
            e[n = i[t]] = o[n];
          }

          return e.target || (e.target = o.srcElement || s), 3 === e.target.nodeType && (e.target = e.target.parentNode), e.metaKey = !!e.metaKey, a.filter ? a.filter(e, o) : e;
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
          props: "char charCode key keyCode".split(" "),
          filter: function filter(e, t) {
            return null == e.which && (e.which = null != t.charCode ? t.charCode : t.keyCode), e;
          }
        },
        mouseHooks: {
          props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
          filter: function filter(e, t) {
            var n,
                i,
                r,
                o = t.button,
                a = t.fromElement;
            return null == e.pageX && null != t.clientX && (r = (i = e.target.ownerDocument || s).documentElement, n = i.body, e.pageX = t.clientX + (r && r.scrollLeft || n && n.scrollLeft || 0) - (r && r.clientLeft || n && n.clientLeft || 0), e.pageY = t.clientY + (r && r.scrollTop || n && n.scrollTop || 0) - (r && r.clientTop || n && n.clientTop || 0)), !e.relatedTarget && a && (e.relatedTarget = a === e.target ? t.toElement : a), e.which || void 0 === o || (e.which = 1 & o ? 1 : 2 & o ? 3 : 4 & o ? 2 : 0), e;
          }
        },
        special: {
          load: {
            noBubble: !0
          },
          focus: {
            trigger: function trigger() {
              if (this !== qe() && this.focus) try {
                return this.focus(), !1;
              } catch (e) {}
            },
            delegateType: "focusin"
          },
          blur: {
            trigger: function trigger() {
              if (this === qe() && this.blur) return this.blur(), !1;
            },
            delegateType: "focusout"
          },
          click: {
            trigger: function trigger() {
              if (m.nodeName(this, "input") && "checkbox" === this.type && this.click) return this.click(), !1;
            },
            _default: function _default(e) {
              return m.nodeName(e.target, "a");
            }
          },
          beforeunload: {
            postDispatch: function postDispatch(e) {
              void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result);
            }
          }
        },
        simulate: function simulate(e, t, n) {
          var i = m.extend(new m.Event(), n, {
            type: e,
            isSimulated: !0
          });
          m.event.trigger(i, null, t), i.isDefaultPrevented() && n.preventDefault();
        }
      }, m.removeEvent = s.removeEventListener ? function (e, t, n) {
        e.removeEventListener && e.removeEventListener(t, n);
      } : function (e, t, n) {
        var i = "on" + t;
        e.detachEvent && (void 0 === e[i] && (e[i] = null), e.detachEvent(i, n));
      }, m.Event = function (e, t) {
        if (!(this instanceof m.Event)) return new m.Event(e, t);
        e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? be : xe) : this.type = e, t && m.extend(this, t), this.timeStamp = e && e.timeStamp || m.now(), this[m.expando] = !0;
      }, m.Event.prototype = {
        constructor: m.Event,
        isDefaultPrevented: xe,
        isPropagationStopped: xe,
        isImmediatePropagationStopped: xe,
        preventDefault: function preventDefault() {
          var e = this.originalEvent;
          this.isDefaultPrevented = be, e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1);
        },
        stopPropagation: function stopPropagation() {
          var e = this.originalEvent;
          this.isPropagationStopped = be, e && !this.isSimulated && (e.stopPropagation && e.stopPropagation(), e.cancelBubble = !0);
        },
        stopImmediatePropagation: function stopImmediatePropagation() {
          var e = this.originalEvent;
          this.isImmediatePropagationStopped = be, e && e.stopImmediatePropagation && e.stopImmediatePropagation(), this.stopPropagation();
        }
      }, m.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
      }, function (e, t) {
        m.event.special[e] = {
          delegateType: t,
          bindType: t,
          handle: function handle(e) {
            var n,
                i = e.relatedTarget,
                r = e.handleObj;
            return i && (i === this || m.contains(this, i)) || (e.type = r.origType, n = r.handler.apply(this, arguments), e.type = t), n;
          }
        };
      }), p.submit || (m.event.special.submit = {
        setup: function setup() {
          if (m.nodeName(this, "form")) return !1;
          m.event.add(this, "click._submit keypress._submit", function (e) {
            var t = e.target,
                n = m.nodeName(t, "input") || m.nodeName(t, "button") ? m.prop(t, "form") : void 0;
            n && !m._data(n, "submit") && (m.event.add(n, "submit._submit", function (e) {
              e._submitBubble = !0;
            }), m._data(n, "submit", !0));
          });
        },
        postDispatch: function postDispatch(e) {
          e._submitBubble && (delete e._submitBubble, this.parentNode && !e.isTrigger && m.event.simulate("submit", this.parentNode, e));
        },
        teardown: function teardown() {
          if (m.nodeName(this, "form")) return !1;
          m.event.remove(this, "._submit");
        }
      }), p.change || (m.event.special.change = {
        setup: function setup() {
          if (pe.test(this.nodeName)) return "checkbox" !== this.type && "radio" !== this.type || (m.event.add(this, "propertychange._change", function (e) {
            "checked" === e.originalEvent.propertyName && (this._justChanged = !0);
          }), m.event.add(this, "click._change", function (e) {
            this._justChanged && !e.isTrigger && (this._justChanged = !1), m.event.simulate("change", this, e);
          })), !1;
          m.event.add(this, "beforeactivate._change", function (e) {
            var t = e.target;
            pe.test(t.nodeName) && !m._data(t, "change") && (m.event.add(t, "change._change", function (e) {
              !this.parentNode || e.isSimulated || e.isTrigger || m.event.simulate("change", this.parentNode, e);
            }), m._data(t, "change", !0));
          });
        },
        handle: function handle(e) {
          var t = e.target;
          if (this !== t || e.isSimulated || e.isTrigger || "radio" !== t.type && "checkbox" !== t.type) return e.handleObj.handler.apply(this, arguments);
        },
        teardown: function teardown() {
          return m.event.remove(this, "._change"), !pe.test(this.nodeName);
        }
      }), p.focusin || m.each({
        focus: "focusin",
        blur: "focusout"
      }, function (e, t) {
        var n = function n(e) {
          m.event.simulate(t, e.target, m.event.fix(e));
        };

        m.event.special[t] = {
          setup: function setup() {
            var i = this.ownerDocument || this,
                r = m._data(i, t);

            r || i.addEventListener(e, n, !0), m._data(i, t, (r || 0) + 1);
          },
          teardown: function teardown() {
            var i = this.ownerDocument || this,
                r = m._data(i, t) - 1;
            r ? m._data(i, t, r) : (i.removeEventListener(e, n, !0), m._removeData(i, t));
          }
        };
      }), m.fn.extend({
        on: function on(e, t, n, i) {
          return we(this, e, t, n, i);
        },
        one: function one(e, t, n, i) {
          return we(this, e, t, n, i, 1);
        },
        off: function off(e, t, n) {
          var i, r;
          if (e && e.preventDefault && e.handleObj) return i = e.handleObj, m(e.delegateTarget).off(i.namespace ? i.origType + "." + i.namespace : i.origType, i.selector, i.handler), this;

          if ("object" == typeof e) {
            for (r in e) {
              this.off(r, t, e[r]);
            }

            return this;
          }

          return !1 !== t && "function" != typeof t || (n = t, t = void 0), !1 === n && (n = xe), this.each(function () {
            m.event.remove(this, e, n, t);
          });
        },
        trigger: function trigger(e, t) {
          return this.each(function () {
            m.event.trigger(e, t, this);
          });
        },
        triggerHandler: function triggerHandler(e, t) {
          var n = this[0];
          if (n) return m.event.trigger(e, t, n, !0);
        }
      });
      var Te = / jQuery\d+="(?:null|\d+)"/g,
          ke = new RegExp("<(?:" + oe + ")[\\s/>]", "i"),
          Ce = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
          Se = /<script|<style|<link/i,
          je = /checked\s*(?:[^=]|=\s*.checked.)/i,
          Ee = /^true\/(.*)/,
          Oe = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
          De = se(s).appendChild(s.createElement("div"));

      function Ae(e, t) {
        return m.nodeName(e, "table") && m.nodeName(11 !== t.nodeType ? t : t.firstChild, "tr") ? e.getElementsByTagName("tbody")[0] || e.appendChild(e.ownerDocument.createElement("tbody")) : e;
      }

      function Le(e) {
        return e.type = (null !== m.find.attr(e, "type")) + "/" + e.type, e;
      }

      function _e(e) {
        var t = Ee.exec(e.type);
        return t ? e.type = t[1] : e.removeAttribute("type"), e;
      }

      function Ne(e, t) {
        if (1 === t.nodeType && m.hasData(e)) {
          var n,
              i,
              r,
              o = m._data(e),
              s = m._data(t, o),
              a = o.events;

          if (a) for (n in delete s.handle, s.events = {}, a) {
            for (i = 0, r = a[n].length; i < r; i++) {
              m.event.add(t, n, a[n][i]);
            }
          }
          s.data && (s.data = m.extend({}, s.data));
        }
      }

      function Qe(e, t) {
        var n, i, r;

        if (1 === t.nodeType) {
          if (n = t.nodeName.toLowerCase(), !p.noCloneEvent && t[m.expando]) {
            for (i in (r = m._data(t)).events) {
              m.removeEvent(t, i, r.handle);
            }

            t.removeAttribute(m.expando);
          }

          "script" === n && t.text !== e.text ? (Le(t).text = e.text, _e(t)) : "object" === n ? (t.parentNode && (t.outerHTML = e.outerHTML), p.html5Clone && e.innerHTML && !m.trim(t.innerHTML) && (t.innerHTML = e.innerHTML)) : "input" === n && te.test(e.type) ? (t.defaultChecked = t.checked = e.checked, t.value !== e.value && (t.value = e.value)) : "option" === n ? t.defaultSelected = t.selected = e.defaultSelected : "input" !== n && "textarea" !== n || (t.defaultValue = e.defaultValue);
        }
      }

      function Me(e, t, n, i) {
        t = l.apply([], t);
        var r,
            o,
            s,
            a,
            c,
            u,
            f = 0,
            d = e.length,
            h = d - 1,
            g = t[0],
            v = m.isFunction(g);
        if (v || d > 1 && "string" == typeof g && !p.checkClone && je.test(g)) return e.each(function (r) {
          var o = e.eq(r);
          v && (t[0] = g.call(this, r, o.html())), Me(o, t, n, i);
        });

        if (d && (r = (u = he(t, e[0].ownerDocument, !1, e, i)).firstChild, 1 === u.childNodes.length && (u = r), r || i)) {
          for (s = (a = m.map(le(u, "script"), Le)).length; f < d; f++) {
            o = u, f !== h && (o = m.clone(o, !0, !0), s && m.merge(a, le(o, "script"))), n.call(e[f], o, f);
          }

          if (s) for (c = a[a.length - 1].ownerDocument, m.map(a, _e), f = 0; f < s; f++) {
            o = a[f], ie.test(o.type || "") && !m._data(o, "globalEval") && m.contains(c, o) && (o.src ? m._evalUrl && m._evalUrl(o.src) : m.globalEval((o.text || o.textContent || o.innerHTML || "").replace(Oe, "")));
          }
          u = r = null;
        }

        return e;
      }

      function Re(e, t, n) {
        for (var i, r = t ? m.filter(t, e) : e, o = 0; null != (i = r[o]); o++) {
          n || 1 !== i.nodeType || m.cleanData(le(i)), i.parentNode && (n && m.contains(i.ownerDocument, i) && ce(le(i, "script")), i.parentNode.removeChild(i));
        }

        return e;
      }

      m.extend({
        htmlPrefilter: function htmlPrefilter(e) {
          return e.replace(Ce, "<$1></$2>");
        },
        clone: function clone(e, t, n) {
          var i,
              r,
              o,
              s,
              a,
              l = m.contains(e.ownerDocument, e);
          if (p.html5Clone || m.isXMLDoc(e) || !ke.test("<" + e.nodeName + ">") ? o = e.cloneNode(!0) : (De.innerHTML = e.outerHTML, De.removeChild(o = De.firstChild)), !(p.noCloneEvent && p.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || m.isXMLDoc(e))) for (i = le(o), a = le(e), s = 0; null != (r = a[s]); ++s) {
            i[s] && Qe(r, i[s]);
          }
          if (t) if (n) for (a = a || le(e), i = i || le(o), s = 0; null != (r = a[s]); s++) {
            Ne(r, i[s]);
          } else Ne(e, o);
          return (i = le(o, "script")).length > 0 && ce(i, !l && le(e, "script")), i = a = r = null, o;
        },
        cleanData: function cleanData(e, t) {
          for (var n, i, r, s, a = 0, l = m.expando, c = m.cache, u = p.attributes, f = m.event.special; null != (n = e[a]); a++) {
            if ((t || F(n)) && (s = (r = n[l]) && c[r])) {
              if (s.events) for (i in s.events) {
                f[i] ? m.event.remove(n, i) : m.removeEvent(n, i, s.handle);
              }
              c[r] && (delete c[r], u || void 0 === n.removeAttribute ? n[l] = void 0 : n.removeAttribute(l), o.push(r));
            }
          }
        }
      }), m.fn.extend({
        domManip: Me,
        detach: function detach(e) {
          return Re(this, e, !0);
        },
        remove: function remove(e) {
          return Re(this, e);
        },
        text: function text(e) {
          return ee(this, function (e) {
            return void 0 === e ? m.text(this) : this.empty().append((this[0] && this[0].ownerDocument || s).createTextNode(e));
          }, null, e, arguments.length);
        },
        append: function append() {
          return Me(this, arguments, function (e) {
            1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || Ae(this, e).appendChild(e);
          });
        },
        prepend: function prepend() {
          return Me(this, arguments, function (e) {
            if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
              var t = Ae(this, e);
              t.insertBefore(e, t.firstChild);
            }
          });
        },
        before: function before() {
          return Me(this, arguments, function (e) {
            this.parentNode && this.parentNode.insertBefore(e, this);
          });
        },
        after: function after() {
          return Me(this, arguments, function (e) {
            this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
          });
        },
        empty: function empty() {
          for (var e, t = 0; null != (e = this[t]); t++) {
            for (1 === e.nodeType && m.cleanData(le(e, !1)); e.firstChild;) {
              e.removeChild(e.firstChild);
            }

            e.options && m.nodeName(e, "select") && (e.options.length = 0);
          }

          return this;
        },
        clone: function clone(e, t) {
          return e = null != e && e, t = null == t ? e : t, this.map(function () {
            return m.clone(this, e, t);
          });
        },
        html: function html(e) {
          return ee(this, function (e) {
            var t = this[0] || {},
                n = 0,
                i = this.length;
            if (void 0 === e) return 1 === t.nodeType ? t.innerHTML.replace(Te, "") : void 0;

            if ("string" == typeof e && !Se.test(e) && (p.htmlSerialize || !ke.test(e)) && (p.leadingWhitespace || !re.test(e)) && !ae[(ne.exec(e) || ["", ""])[1].toLowerCase()]) {
              e = m.htmlPrefilter(e);

              try {
                for (; n < i; n++) {
                  1 === (t = this[n] || {}).nodeType && (m.cleanData(le(t, !1)), t.innerHTML = e);
                }

                t = 0;
              } catch (e) {}
            }

            t && this.empty().append(e);
          }, null, e, arguments.length);
        },
        replaceWith: function replaceWith() {
          var e = [];
          return Me(this, arguments, function (t) {
            var n = this.parentNode;
            m.inArray(this, e) < 0 && (m.cleanData(le(this)), n && n.replaceChild(t, this));
          }, e);
        }
      }), m.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
      }, function (e, t) {
        m.fn[e] = function (e) {
          for (var n, i = 0, r = [], o = m(e), s = o.length - 1; i <= s; i++) {
            n = i === s ? this : this.clone(!0), m(o[i])[t](n), c.apply(r, n.get());
          }

          return this.pushStack(r);
        };
      });
      var ze,
          Fe = {
        HTML: "block",
        BODY: "block"
      };

      function He(e, t) {
        var n = m(t.createElement(e)).appendTo(t.body),
            i = m.css(n[0], "display");
        return n.detach(), i;
      }

      function Ie(e) {
        var t = s,
            n = Fe[e];
        return n || ("none" !== (n = He(e, t)) && n || ((t = ((ze = (ze || m("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement))[0].contentWindow || ze[0].contentDocument).document).write(), t.close(), n = He(e, t), ze.detach()), Fe[e] = n), n;
      }

      var Be = /^margin/,
          Pe = new RegExp("^(" + X + ")(?!px)[a-z%]+$", "i"),
          $e = function $e(e, t, n, i) {
        var r,
            o,
            s = {};

        for (o in t) {
          s[o] = e.style[o], e.style[o] = t[o];
        }

        for (o in r = n.apply(e, i || []), t) {
          e.style[o] = s[o];
        }

        return r;
      },
          We = s.documentElement;

      !function () {
        var e,
            t,
            i,
            r,
            o,
            a,
            l = s.createElement("div"),
            c = s.createElement("div");

        function u() {
          var u,
              f,
              d = s.documentElement;
          d.appendChild(l), c.style.cssText = "-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%", e = i = a = !1, t = o = !0, n.getComputedStyle && (f = n.getComputedStyle(c), e = "1%" !== (f || {}).top, a = "2px" === (f || {}).marginLeft, i = "4px" === (f || {
            width: "4px"
          }).width, c.style.marginRight = "50%", t = "4px" === (f || {
            marginRight: "4px"
          }).marginRight, (u = c.appendChild(s.createElement("div"))).style.cssText = c.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", u.style.marginRight = u.style.width = "0", c.style.width = "1px", o = !parseFloat((n.getComputedStyle(u) || {}).marginRight), c.removeChild(u)), c.style.display = "none", (r = 0 === c.getClientRects().length) && (c.style.display = "", c.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", c.childNodes[0].style.borderCollapse = "separate", (u = c.getElementsByTagName("td"))[0].style.cssText = "margin:0;border:0;padding:0;display:none", (r = 0 === u[0].offsetHeight) && (u[0].style.display = "", u[1].style.display = "none", r = 0 === u[0].offsetHeight)), d.removeChild(l);
        }

        c.style && (c.style.cssText = "float:left;opacity:.5", p.opacity = "0.5" === c.style.opacity, p.cssFloat = !!c.style.cssFloat, c.style.backgroundClip = "content-box", c.cloneNode(!0).style.backgroundClip = "", p.clearCloneStyle = "content-box" === c.style.backgroundClip, (l = s.createElement("div")).style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute", c.innerHTML = "", l.appendChild(c), p.boxSizing = "" === c.style.boxSizing || "" === c.style.MozBoxSizing || "" === c.style.WebkitBoxSizing, m.extend(p, {
          reliableHiddenOffsets: function reliableHiddenOffsets() {
            return null == e && u(), r;
          },
          boxSizingReliable: function boxSizingReliable() {
            return null == e && u(), i;
          },
          pixelMarginRight: function pixelMarginRight() {
            return null == e && u(), t;
          },
          pixelPosition: function pixelPosition() {
            return null == e && u(), e;
          },
          reliableMarginRight: function reliableMarginRight() {
            return null == e && u(), o;
          },
          reliableMarginLeft: function reliableMarginLeft() {
            return null == e && u(), a;
          }
        }));
      }();
      var Xe,
          Ue,
          Ye = /^(top|right|bottom|left)$/;

      function Ge(e, t) {
        return {
          get: function get() {
            if (!e()) return (this.get = t).apply(this, arguments);
            delete this.get;
          }
        };
      }

      n.getComputedStyle ? (Xe = function Xe(e) {
        var t = e.ownerDocument.defaultView;
        return t && t.opener || (t = n), t.getComputedStyle(e);
      }, Ue = function Ue(e, t, n) {
        var i,
            r,
            o,
            s,
            a = e.style;
        return "" !== (s = (n = n || Xe(e)) ? n.getPropertyValue(t) || n[t] : void 0) && void 0 !== s || m.contains(e.ownerDocument, e) || (s = m.style(e, t)), n && !p.pixelMarginRight() && Pe.test(s) && Be.test(t) && (i = a.width, r = a.minWidth, o = a.maxWidth, a.minWidth = a.maxWidth = a.width = s, s = n.width, a.width = i, a.minWidth = r, a.maxWidth = o), void 0 === s ? s : s + "";
      }) : We.currentStyle && (Xe = function Xe(e) {
        return e.currentStyle;
      }, Ue = function Ue(e, t, n) {
        var i,
            r,
            o,
            s,
            a = e.style;
        return null == (s = (n = n || Xe(e)) ? n[t] : void 0) && a && a[t] && (s = a[t]), Pe.test(s) && !Ye.test(t) && (i = a.left, (o = (r = e.runtimeStyle) && r.left) && (r.left = e.currentStyle.left), a.left = "fontSize" === t ? "1em" : s, s = a.pixelLeft + "px", a.left = i, o && (r.left = o)), void 0 === s ? s : s + "" || "auto";
      });
      var Ve = /alpha\([^)]*\)/i,
          Ke = /opacity\s*=\s*([^)]*)/i,
          Je = /^(none|table(?!-c[ea]).+)/,
          Ze = new RegExp("^(" + X + ")(.*)$", "i"),
          et = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
      },
          tt = {
        letterSpacing: "0",
        fontWeight: "400"
      },
          nt = ["Webkit", "O", "Moz", "ms"],
          it = s.createElement("div").style;

      function rt(e) {
        if (e in it) return e;

        for (var t = e.charAt(0).toUpperCase() + e.slice(1), n = nt.length; n--;) {
          if ((e = nt[n] + t) in it) return e;
        }
      }

      function ot(e, t) {
        for (var n, i, r, o = [], s = 0, a = e.length; s < a; s++) {
          (i = e[s]).style && (o[s] = m._data(i, "olddisplay"), n = i.style.display, t ? (o[s] || "none" !== n || (i.style.display = ""), "" === i.style.display && G(i) && (o[s] = m._data(i, "olddisplay", Ie(i.nodeName)))) : (r = G(i), (n && "none" !== n || !r) && m._data(i, "olddisplay", r ? n : m.css(i, "display"))));
        }

        for (s = 0; s < a; s++) {
          (i = e[s]).style && (t && "none" !== i.style.display && "" !== i.style.display || (i.style.display = t ? o[s] || "" : "none"));
        }

        return e;
      }

      function st(e, t, n) {
        var i = Ze.exec(t);
        return i ? Math.max(0, i[1] - (n || 0)) + (i[2] || "px") : t;
      }

      function at(e, t, n, i, r) {
        for (var o = n === (i ? "border" : "content") ? 4 : "width" === t ? 1 : 0, s = 0; o < 4; o += 2) {
          "margin" === n && (s += m.css(e, n + Y[o], !0, r)), i ? ("content" === n && (s -= m.css(e, "padding" + Y[o], !0, r)), "margin" !== n && (s -= m.css(e, "border" + Y[o] + "Width", !0, r))) : (s += m.css(e, "padding" + Y[o], !0, r), "padding" !== n && (s += m.css(e, "border" + Y[o] + "Width", !0, r)));
        }

        return s;
      }

      function lt(e, t, n) {
        var i = !0,
            r = "width" === t ? e.offsetWidth : e.offsetHeight,
            o = Xe(e),
            s = p.boxSizing && "border-box" === m.css(e, "boxSizing", !1, o);

        if (r <= 0 || null == r) {
          if (((r = Ue(e, t, o)) < 0 || null == r) && (r = e.style[t]), Pe.test(r)) return r;
          i = s && (p.boxSizingReliable() || r === e.style[t]), r = parseFloat(r) || 0;
        }

        return r + at(e, t, n || (s ? "border" : "content"), i, o) + "px";
      }

      function ct(e, t, n, i, r) {
        return new ct.prototype.init(e, t, n, i, r);
      }

      m.extend({
        cssHooks: {
          opacity: {
            get: function get(e, t) {
              if (t) {
                var n = Ue(e, "opacity");
                return "" === n ? "1" : n;
              }
            }
          }
        },
        cssNumber: {
          animationIterationCount: !0,
          columnCount: !0,
          fillOpacity: !0,
          flexGrow: !0,
          flexShrink: !0,
          fontWeight: !0,
          lineHeight: !0,
          opacity: !0,
          order: !0,
          orphans: !0,
          widows: !0,
          zIndex: !0,
          zoom: !0
        },
        cssProps: {
          float: p.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function style(e, t, n, i) {
          if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
            var r,
                o,
                s,
                a = m.camelCase(t),
                l = e.style;
            if (t = m.cssProps[a] || (m.cssProps[a] = rt(a) || a), s = m.cssHooks[t] || m.cssHooks[a], void 0 === n) return s && "get" in s && void 0 !== (r = s.get(e, !1, i)) ? r : l[t];
            if ("string" === (o = typeof n) && (r = U.exec(n)) && r[1] && (n = V(e, t, r), o = "number"), null != n && n == n && ("number" === o && (n += r && r[3] || (m.cssNumber[a] ? "" : "px")), p.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"), !(s && "set" in s && void 0 === (n = s.set(e, n, i))))) try {
              l[t] = n;
            } catch (e) {}
          }
        },
        css: function css(e, t, n, i) {
          var r,
              o,
              s,
              a = m.camelCase(t);
          return t = m.cssProps[a] || (m.cssProps[a] = rt(a) || a), (s = m.cssHooks[t] || m.cssHooks[a]) && "get" in s && (o = s.get(e, !0, n)), void 0 === o && (o = Ue(e, t, i)), "normal" === o && t in tt && (o = tt[t]), "" === n || n ? (r = parseFloat(o), !0 === n || isFinite(r) ? r || 0 : o) : o;
        }
      }), m.each(["height", "width"], function (e, t) {
        m.cssHooks[t] = {
          get: function get(e, n, i) {
            if (n) return Je.test(m.css(e, "display")) && 0 === e.offsetWidth ? $e(e, et, function () {
              return lt(e, t, i);
            }) : lt(e, t, i);
          },
          set: function set(e, n, i) {
            var r = i && Xe(e);
            return st(0, n, i ? at(e, t, i, p.boxSizing && "border-box" === m.css(e, "boxSizing", !1, r), r) : 0);
          }
        };
      }), p.opacity || (m.cssHooks.opacity = {
        get: function get(e, t) {
          return Ke.test((t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : t ? "1" : "";
        },
        set: function set(e, t) {
          var n = e.style,
              i = e.currentStyle,
              r = m.isNumeric(t) ? "alpha(opacity=" + 100 * t + ")" : "",
              o = i && i.filter || n.filter || "";
          n.zoom = 1, (t >= 1 || "" === t) && "" === m.trim(o.replace(Ve, "")) && n.removeAttribute && (n.removeAttribute("filter"), "" === t || i && !i.filter) || (n.filter = Ve.test(o) ? o.replace(Ve, r) : o + " " + r);
        }
      }), m.cssHooks.marginRight = Ge(p.reliableMarginRight, function (e, t) {
        if (t) return $e(e, {
          display: "inline-block"
        }, Ue, [e, "marginRight"]);
      }), m.cssHooks.marginLeft = Ge(p.reliableMarginLeft, function (e, t) {
        if (t) return (parseFloat(Ue(e, "marginLeft")) || (m.contains(e.ownerDocument, e) ? e.getBoundingClientRect().left - $e(e, {
          marginLeft: 0
        }, function () {
          return e.getBoundingClientRect().left;
        }) : 0)) + "px";
      }), m.each({
        margin: "",
        padding: "",
        border: "Width"
      }, function (e, t) {
        m.cssHooks[e + t] = {
          expand: function expand(n) {
            for (var i = 0, r = {}, o = "string" == typeof n ? n.split(" ") : [n]; i < 4; i++) {
              r[e + Y[i] + t] = o[i] || o[i - 2] || o[0];
            }

            return r;
          }
        }, Be.test(e) || (m.cssHooks[e + t].set = st);
      }), m.fn.extend({
        css: function css(e, t) {
          return ee(this, function (e, t, n) {
            var i,
                r,
                o = {},
                s = 0;

            if (m.isArray(t)) {
              for (i = Xe(e), r = t.length; s < r; s++) {
                o[t[s]] = m.css(e, t[s], !1, i);
              }

              return o;
            }

            return void 0 !== n ? m.style(e, t, n) : m.css(e, t);
          }, e, t, arguments.length > 1);
        },
        show: function show() {
          return ot(this, !0);
        },
        hide: function hide() {
          return ot(this);
        },
        toggle: function toggle(e) {
          return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function () {
            G(this) ? m(this).show() : m(this).hide();
          });
        }
      }), m.Tween = ct, ct.prototype = {
        constructor: ct,
        init: function init(e, t, n, i, r, o) {
          this.elem = e, this.prop = n, this.easing = r || m.easing._default, this.options = t, this.start = this.now = this.cur(), this.end = i, this.unit = o || (m.cssNumber[n] ? "" : "px");
        },
        cur: function cur() {
          var e = ct.propHooks[this.prop];
          return e && e.get ? e.get(this) : ct.propHooks._default.get(this);
        },
        run: function run(e) {
          var t,
              n = ct.propHooks[this.prop];
          return this.options.duration ? this.pos = t = m.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : ct.propHooks._default.set(this), this;
        }
      }, ct.prototype.init.prototype = ct.prototype, ct.propHooks = {
        _default: {
          get: function get(e) {
            var t;
            return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = m.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0;
          },
          set: function set(e) {
            m.fx.step[e.prop] ? m.fx.step[e.prop](e) : 1 !== e.elem.nodeType || null == e.elem.style[m.cssProps[e.prop]] && !m.cssHooks[e.prop] ? e.elem[e.prop] = e.now : m.style(e.elem, e.prop, e.now + e.unit);
          }
        }
      }, ct.propHooks.scrollTop = ct.propHooks.scrollLeft = {
        set: function set(e) {
          e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
        }
      }, m.easing = {
        linear: function linear(e) {
          return e;
        },
        swing: function swing(e) {
          return .5 - Math.cos(e * Math.PI) / 2;
        },
        _default: "swing"
      }, m.fx = ct.prototype.init, m.fx.step = {};
      var ut,
          ft,
          dt = /^(?:toggle|show|hide)$/,
          ht = /queueHooks$/;

      function pt() {
        return n.setTimeout(function () {
          ut = void 0;
        }), ut = m.now();
      }

      function mt(e, t) {
        var n,
            i = {
          height: e
        },
            r = 0;

        for (t = t ? 1 : 0; r < 4; r += 2 - t) {
          i["margin" + (n = Y[r])] = i["padding" + n] = e;
        }

        return t && (i.opacity = i.width = e), i;
      }

      function gt(e, t, n) {
        for (var i, r = (vt.tweeners[t] || []).concat(vt.tweeners["*"]), o = 0, s = r.length; o < s; o++) {
          if (i = r[o].call(n, t, e)) return i;
        }
      }

      function vt(e, t, n) {
        var i,
            r,
            o = 0,
            s = vt.prefilters.length,
            a = m.Deferred().always(function () {
          delete l.elem;
        }),
            l = function l() {
          if (r) return !1;

          for (var t = ut || pt(), n = Math.max(0, c.startTime + c.duration - t), i = 1 - (n / c.duration || 0), o = 0, s = c.tweens.length; o < s; o++) {
            c.tweens[o].run(i);
          }

          return a.notifyWith(e, [c, i, n]), i < 1 && s ? n : (a.resolveWith(e, [c]), !1);
        },
            c = a.promise({
          elem: e,
          props: m.extend({}, t),
          opts: m.extend(!0, {
            specialEasing: {},
            easing: m.easing._default
          }, n),
          originalProperties: t,
          originalOptions: n,
          startTime: ut || pt(),
          duration: n.duration,
          tweens: [],
          createTween: function createTween(t, n) {
            var i = m.Tween(e, c.opts, t, n, c.opts.specialEasing[t] || c.opts.easing);
            return c.tweens.push(i), i;
          },
          stop: function stop(t) {
            var n = 0,
                i = t ? c.tweens.length : 0;
            if (r) return this;

            for (r = !0; n < i; n++) {
              c.tweens[n].run(1);
            }

            return t ? (a.notifyWith(e, [c, 1, 0]), a.resolveWith(e, [c, t])) : a.rejectWith(e, [c, t]), this;
          }
        }),
            u = c.props;

        for (!function (e, t) {
          var n, i, r, o, s;

          for (n in e) {
            if (r = t[i = m.camelCase(n)], o = e[n], m.isArray(o) && (r = o[1], o = e[n] = o[0]), n !== i && (e[i] = o, delete e[n]), (s = m.cssHooks[i]) && ("expand" in s)) for (n in o = s.expand(o), delete e[i], o) {
              (n in e) || (e[n] = o[n], t[n] = r);
            } else t[i] = r;
          }
        }(u, c.opts.specialEasing); o < s; o++) {
          if (i = vt.prefilters[o].call(c, e, u, c.opts)) return m.isFunction(i.stop) && (m._queueHooks(c.elem, c.opts.queue).stop = m.proxy(i.stop, i)), i;
        }

        return m.map(u, gt, c), m.isFunction(c.opts.start) && c.opts.start.call(e, c), m.fx.timer(m.extend(l, {
          elem: e,
          anim: c,
          queue: c.opts.queue
        })), c.progress(c.opts.progress).done(c.opts.done, c.opts.complete).fail(c.opts.fail).always(c.opts.always);
      }

      m.Animation = m.extend(vt, {
        tweeners: {
          "*": [function (e, t) {
            var n = this.createTween(e, t);
            return V(n.elem, e, U.exec(t), n), n;
          }]
        },
        tweener: function tweener(e, t) {
          m.isFunction(e) ? (t = e, e = ["*"]) : e = e.match(Q);

          for (var n, i = 0, r = e.length; i < r; i++) {
            n = e[i], vt.tweeners[n] = vt.tweeners[n] || [], vt.tweeners[n].unshift(t);
          }
        },
        prefilters: [function (e, t, n) {
          var i,
              r,
              o,
              s,
              a,
              l,
              c,
              u = this,
              f = {},
              d = e.style,
              h = e.nodeType && G(e),
              g = m._data(e, "fxshow");

          for (i in n.queue || (null == (a = m._queueHooks(e, "fx")).unqueued && (a.unqueued = 0, l = a.empty.fire, a.empty.fire = function () {
            a.unqueued || l();
          }), a.unqueued++, u.always(function () {
            u.always(function () {
              a.unqueued--, m.queue(e, "fx").length || a.empty.fire();
            });
          })), 1 === e.nodeType && ("height" in t || "width" in t) && (n.overflow = [d.overflow, d.overflowX, d.overflowY], "inline" === ("none" === (c = m.css(e, "display")) ? m._data(e, "olddisplay") || Ie(e.nodeName) : c) && "none" === m.css(e, "float") && (p.inlineBlockNeedsLayout && "inline" !== Ie(e.nodeName) ? d.zoom = 1 : d.display = "inline-block")), n.overflow && (d.overflow = "hidden", p.shrinkWrapBlocks() || u.always(function () {
            d.overflow = n.overflow[0], d.overflowX = n.overflow[1], d.overflowY = n.overflow[2];
          })), t) {
            if (r = t[i], dt.exec(r)) {
              if (delete t[i], o = o || "toggle" === r, r === (h ? "hide" : "show")) {
                if ("show" !== r || !g || void 0 === g[i]) continue;
                h = !0;
              }

              f[i] = g && g[i] || m.style(e, i);
            } else c = void 0;
          }

          if (m.isEmptyObject(f)) "inline" === ("none" === c ? Ie(e.nodeName) : c) && (d.display = c);else for (i in g ? "hidden" in g && (h = g.hidden) : g = m._data(e, "fxshow", {}), o && (g.hidden = !h), h ? m(e).show() : u.done(function () {
            m(e).hide();
          }), u.done(function () {
            var t;

            for (t in m._removeData(e, "fxshow"), f) {
              m.style(e, t, f[t]);
            }
          }), f) {
            s = gt(h ? g[i] : 0, i, u), i in g || (g[i] = s.start, h && (s.end = s.start, s.start = "width" === i || "height" === i ? 1 : 0));
          }
        }],
        prefilter: function prefilter(e, t) {
          t ? vt.prefilters.unshift(e) : vt.prefilters.push(e);
        }
      }), m.speed = function (e, t, n) {
        var i = e && "object" == typeof e ? m.extend({}, e) : {
          complete: n || !n && t || m.isFunction(e) && e,
          duration: e,
          easing: n && t || t && !m.isFunction(t) && t
        };
        return i.duration = m.fx.off ? 0 : "number" == typeof i.duration ? i.duration : i.duration in m.fx.speeds ? m.fx.speeds[i.duration] : m.fx.speeds._default, null != i.queue && !0 !== i.queue || (i.queue = "fx"), i.old = i.complete, i.complete = function () {
          m.isFunction(i.old) && i.old.call(this), i.queue && m.dequeue(this, i.queue);
        }, i;
      }, m.fn.extend({
        fadeTo: function fadeTo(e, t, n, i) {
          return this.filter(G).css("opacity", 0).show().end().animate({
            opacity: t
          }, e, n, i);
        },
        animate: function animate(e, t, n, i) {
          var r = m.isEmptyObject(e),
              o = m.speed(t, n, i),
              s = function s() {
            var t = vt(this, m.extend({}, e), o);
            (r || m._data(this, "finish")) && t.stop(!0);
          };

          return s.finish = s, r || !1 === o.queue ? this.each(s) : this.queue(o.queue, s);
        },
        stop: function stop(e, t, n) {
          var i = function i(e) {
            var t = e.stop;
            delete e.stop, t(n);
          };

          return "string" != typeof e && (n = t, t = e, e = void 0), t && !1 !== e && this.queue(e || "fx", []), this.each(function () {
            var t = !0,
                r = null != e && e + "queueHooks",
                o = m.timers,
                s = m._data(this);

            if (r) s[r] && s[r].stop && i(s[r]);else for (r in s) {
              s[r] && s[r].stop && ht.test(r) && i(s[r]);
            }

            for (r = o.length; r--;) {
              o[r].elem !== this || null != e && o[r].queue !== e || (o[r].anim.stop(n), t = !1, o.splice(r, 1));
            }

            !t && n || m.dequeue(this, e);
          });
        },
        finish: function finish(e) {
          return !1 !== e && (e = e || "fx"), this.each(function () {
            var t,
                n = m._data(this),
                i = n[e + "queue"],
                r = n[e + "queueHooks"],
                o = m.timers,
                s = i ? i.length : 0;

            for (n.finish = !0, m.queue(this, e, []), r && r.stop && r.stop.call(this, !0), t = o.length; t--;) {
              o[t].elem === this && o[t].queue === e && (o[t].anim.stop(!0), o.splice(t, 1));
            }

            for (t = 0; t < s; t++) {
              i[t] && i[t].finish && i[t].finish.call(this);
            }

            delete n.finish;
          });
        }
      }), m.each(["toggle", "show", "hide"], function (e, t) {
        var n = m.fn[t];

        m.fn[t] = function (e, i, r) {
          return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(mt(t, !0), e, i, r);
        };
      }), m.each({
        slideDown: mt("show"),
        slideUp: mt("hide"),
        slideToggle: mt("toggle"),
        fadeIn: {
          opacity: "show"
        },
        fadeOut: {
          opacity: "hide"
        },
        fadeToggle: {
          opacity: "toggle"
        }
      }, function (e, t) {
        m.fn[e] = function (e, n, i) {
          return this.animate(t, e, n, i);
        };
      }), m.timers = [], m.fx.tick = function () {
        var e,
            t = m.timers,
            n = 0;

        for (ut = m.now(); n < t.length; n++) {
          (e = t[n])() || t[n] !== e || t.splice(n--, 1);
        }

        t.length || m.fx.stop(), ut = void 0;
      }, m.fx.timer = function (e) {
        m.timers.push(e), e() ? m.fx.start() : m.timers.pop();
      }, m.fx.interval = 13, m.fx.start = function () {
        ft || (ft = n.setInterval(m.fx.tick, m.fx.interval));
      }, m.fx.stop = function () {
        n.clearInterval(ft), ft = null;
      }, m.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
      }, m.fn.delay = function (e, t) {
        return e = m.fx && m.fx.speeds[e] || e, t = t || "fx", this.queue(t, function (t, i) {
          var r = n.setTimeout(t, e);

          i.stop = function () {
            n.clearTimeout(r);
          };
        });
      }, function () {
        var e,
            t = s.createElement("input"),
            n = s.createElement("div"),
            i = s.createElement("select"),
            r = i.appendChild(s.createElement("option"));
        (n = s.createElement("div")).setAttribute("className", "t"), n.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", e = n.getElementsByTagName("a")[0], t.setAttribute("type", "checkbox"), n.appendChild(t), (e = n.getElementsByTagName("a")[0]).style.cssText = "top:1px", p.getSetAttribute = "t" !== n.className, p.style = /top/.test(e.getAttribute("style")), p.hrefNormalized = "/a" === e.getAttribute("href"), p.checkOn = !!t.value, p.optSelected = r.selected, p.enctype = !!s.createElement("form").enctype, i.disabled = !0, p.optDisabled = !r.disabled, (t = s.createElement("input")).setAttribute("value", ""), p.input = "" === t.getAttribute("value"), t.value = "t", t.setAttribute("type", "radio"), p.radioValue = "t" === t.value;
      }();
      var yt = /\r/g,
          bt = /[\x20\t\r\n\f]+/g;
      m.fn.extend({
        val: function val(e) {
          var t,
              n,
              i,
              r = this[0];
          return arguments.length ? (i = m.isFunction(e), this.each(function (n) {
            var r;
            1 === this.nodeType && (null == (r = i ? e.call(this, n, m(this).val()) : e) ? r = "" : "number" == typeof r ? r += "" : m.isArray(r) && (r = m.map(r, function (e) {
              return null == e ? "" : e + "";
            })), (t = m.valHooks[this.type] || m.valHooks[this.nodeName.toLowerCase()]) && "set" in t && void 0 !== t.set(this, r, "value") || (this.value = r));
          })) : r ? (t = m.valHooks[r.type] || m.valHooks[r.nodeName.toLowerCase()]) && "get" in t && void 0 !== (n = t.get(r, "value")) ? n : "string" == typeof (n = r.value) ? n.replace(yt, "") : null == n ? "" : n : void 0;
        }
      }), m.extend({
        valHooks: {
          option: {
            get: function get(e) {
              var t = m.find.attr(e, "value");
              return null != t ? t : m.trim(m.text(e)).replace(bt, " ");
            }
          },
          select: {
            get: function get(e) {
              for (var t, n, i = e.options, r = e.selectedIndex, o = "select-one" === e.type || r < 0, s = o ? null : [], a = o ? r + 1 : i.length, l = r < 0 ? a : o ? r : 0; l < a; l++) {
                if (((n = i[l]).selected || l === r) && (p.optDisabled ? !n.disabled : null === n.getAttribute("disabled")) && (!n.parentNode.disabled || !m.nodeName(n.parentNode, "optgroup"))) {
                  if (t = m(n).val(), o) return t;
                  s.push(t);
                }
              }

              return s;
            },
            set: function set(e, t) {
              for (var n, i, r = e.options, o = m.makeArray(t), s = r.length; s--;) {
                if (i = r[s], m.inArray(m.valHooks.option.get(i), o) > -1) try {
                  i.selected = n = !0;
                } catch (e) {
                  i.scrollHeight;
                } else i.selected = !1;
              }

              return n || (e.selectedIndex = -1), r;
            }
          }
        }
      }), m.each(["radio", "checkbox"], function () {
        m.valHooks[this] = {
          set: function set(e, t) {
            if (m.isArray(t)) return e.checked = m.inArray(m(e).val(), t) > -1;
          }
        }, p.checkOn || (m.valHooks[this].get = function (e) {
          return null === e.getAttribute("value") ? "on" : e.value;
        });
      });
      var xt,
          qt,
          wt = m.expr.attrHandle,
          Tt = /^(?:checked|selected)$/i,
          kt = p.getSetAttribute,
          Ct = p.input;
      m.fn.extend({
        attr: function attr(e, t) {
          return ee(this, m.attr, e, t, arguments.length > 1);
        },
        removeAttr: function removeAttr(e) {
          return this.each(function () {
            m.removeAttr(this, e);
          });
        }
      }), m.extend({
        attr: function attr(e, t, n) {
          var i,
              r,
              o = e.nodeType;
          if (3 !== o && 8 !== o && 2 !== o) return void 0 === e.getAttribute ? m.prop(e, t, n) : (1 === o && m.isXMLDoc(e) || (t = t.toLowerCase(), r = m.attrHooks[t] || (m.expr.match.bool.test(t) ? qt : xt)), void 0 !== n ? null === n ? void m.removeAttr(e, t) : r && "set" in r && void 0 !== (i = r.set(e, n, t)) ? i : (e.setAttribute(t, n + ""), n) : r && "get" in r && null !== (i = r.get(e, t)) ? i : null == (i = m.find.attr(e, t)) ? void 0 : i);
        },
        attrHooks: {
          type: {
            set: function set(e, t) {
              if (!p.radioValue && "radio" === t && m.nodeName(e, "input")) {
                var n = e.value;
                return e.setAttribute("type", t), n && (e.value = n), t;
              }
            }
          }
        },
        removeAttr: function removeAttr(e, t) {
          var n,
              i,
              r = 0,
              o = t && t.match(Q);
          if (o && 1 === e.nodeType) for (; n = o[r++];) {
            i = m.propFix[n] || n, m.expr.match.bool.test(n) ? Ct && kt || !Tt.test(n) ? e[i] = !1 : e[m.camelCase("default-" + n)] = e[i] = !1 : m.attr(e, n, ""), e.removeAttribute(kt ? n : i);
          }
        }
      }), qt = {
        set: function set(e, t, n) {
          return !1 === t ? m.removeAttr(e, n) : Ct && kt || !Tt.test(n) ? e.setAttribute(!kt && m.propFix[n] || n, n) : e[m.camelCase("default-" + n)] = e[n] = !0, n;
        }
      }, m.each(m.expr.match.bool.source.match(/\w+/g), function (e, t) {
        var n = wt[t] || m.find.attr;
        Ct && kt || !Tt.test(t) ? wt[t] = function (e, t, i) {
          var r, o;
          return i || (o = wt[t], wt[t] = r, r = null != n(e, t, i) ? t.toLowerCase() : null, wt[t] = o), r;
        } : wt[t] = function (e, t, n) {
          if (!n) return e[m.camelCase("default-" + t)] ? t.toLowerCase() : null;
        };
      }), Ct && kt || (m.attrHooks.value = {
        set: function set(e, t, n) {
          if (!m.nodeName(e, "input")) return xt && xt.set(e, t, n);
          e.defaultValue = t;
        }
      }), kt || (xt = {
        set: function set(e, t, n) {
          var i = e.getAttributeNode(n);
          if (i || e.setAttributeNode(i = e.ownerDocument.createAttribute(n)), i.value = t += "", "value" === n || t === e.getAttribute(n)) return t;
        }
      }, wt.id = wt.name = wt.coords = function (e, t, n) {
        var i;
        if (!n) return (i = e.getAttributeNode(t)) && "" !== i.value ? i.value : null;
      }, m.valHooks.button = {
        get: function get(e, t) {
          var n = e.getAttributeNode(t);
          if (n && n.specified) return n.value;
        },
        set: xt.set
      }, m.attrHooks.contenteditable = {
        set: function set(e, t, n) {
          xt.set(e, "" !== t && t, n);
        }
      }, m.each(["width", "height"], function (e, t) {
        m.attrHooks[t] = {
          set: function set(e, n) {
            if ("" === n) return e.setAttribute(t, "auto"), n;
          }
        };
      })), p.style || (m.attrHooks.style = {
        get: function get(e) {
          return e.style.cssText || void 0;
        },
        set: function set(e, t) {
          return e.style.cssText = t + "";
        }
      });
      var St = /^(?:input|select|textarea|button|object)$/i,
          jt = /^(?:a|area)$/i;
      m.fn.extend({
        prop: function prop(e, t) {
          return ee(this, m.prop, e, t, arguments.length > 1);
        },
        removeProp: function removeProp(e) {
          return e = m.propFix[e] || e, this.each(function () {
            try {
              this[e] = void 0, delete this[e];
            } catch (e) {}
          });
        }
      }), m.extend({
        prop: function prop(e, t, n) {
          var i,
              r,
              o = e.nodeType;
          if (3 !== o && 8 !== o && 2 !== o) return 1 === o && m.isXMLDoc(e) || (t = m.propFix[t] || t, r = m.propHooks[t]), void 0 !== n ? r && "set" in r && void 0 !== (i = r.set(e, n, t)) ? i : e[t] = n : r && "get" in r && null !== (i = r.get(e, t)) ? i : e[t];
        },
        propHooks: {
          tabIndex: {
            get: function get(e) {
              var t = m.find.attr(e, "tabindex");
              return t ? parseInt(t, 10) : St.test(e.nodeName) || jt.test(e.nodeName) && e.href ? 0 : -1;
            }
          }
        },
        propFix: {
          for: "htmlFor",
          class: "className"
        }
      }), p.hrefNormalized || m.each(["href", "src"], function (e, t) {
        m.propHooks[t] = {
          get: function get(e) {
            return e.getAttribute(t, 4);
          }
        };
      }), p.optSelected || (m.propHooks.selected = {
        get: function get(e) {
          var t = e.parentNode;
          return t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex), null;
        },
        set: function set(e) {
          var t = e.parentNode;
          t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex);
        }
      }), m.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
        m.propFix[this.toLowerCase()] = this;
      }), p.enctype || (m.propFix.enctype = "encoding");
      var Et = /[\t\r\n\f]/g;

      function Ot(e) {
        return m.attr(e, "class") || "";
      }

      m.fn.extend({
        addClass: function addClass(e) {
          var t,
              n,
              i,
              r,
              o,
              s,
              a,
              l = 0;
          if (m.isFunction(e)) return this.each(function (t) {
            m(this).addClass(e.call(this, t, Ot(this)));
          });
          if ("string" == typeof e && e) for (t = e.match(Q) || []; n = this[l++];) {
            if (r = Ot(n), i = 1 === n.nodeType && (" " + r + " ").replace(Et, " ")) {
              for (s = 0; o = t[s++];) {
                i.indexOf(" " + o + " ") < 0 && (i += o + " ");
              }

              r !== (a = m.trim(i)) && m.attr(n, "class", a);
            }
          }
          return this;
        },
        removeClass: function removeClass(e) {
          var t,
              n,
              i,
              r,
              o,
              s,
              a,
              l = 0;
          if (m.isFunction(e)) return this.each(function (t) {
            m(this).removeClass(e.call(this, t, Ot(this)));
          });
          if (!arguments.length) return this.attr("class", "");
          if ("string" == typeof e && e) for (t = e.match(Q) || []; n = this[l++];) {
            if (r = Ot(n), i = 1 === n.nodeType && (" " + r + " ").replace(Et, " ")) {
              for (s = 0; o = t[s++];) {
                for (; i.indexOf(" " + o + " ") > -1;) {
                  i = i.replace(" " + o + " ", " ");
                }
              }

              r !== (a = m.trim(i)) && m.attr(n, "class", a);
            }
          }
          return this;
        },
        toggleClass: function toggleClass(e, t) {
          var n = typeof e;
          return "boolean" == typeof t && "string" === n ? t ? this.addClass(e) : this.removeClass(e) : m.isFunction(e) ? this.each(function (n) {
            m(this).toggleClass(e.call(this, n, Ot(this), t), t);
          }) : this.each(function () {
            var t, i, r, o;
            if ("string" === n) for (i = 0, r = m(this), o = e.match(Q) || []; t = o[i++];) {
              r.hasClass(t) ? r.removeClass(t) : r.addClass(t);
            } else void 0 !== e && "boolean" !== n || ((t = Ot(this)) && m._data(this, "__className__", t), m.attr(this, "class", t || !1 === e ? "" : m._data(this, "__className__") || ""));
          });
        },
        hasClass: function hasClass(e) {
          var t,
              n,
              i = 0;

          for (t = " " + e + " "; n = this[i++];) {
            if (1 === n.nodeType && (" " + Ot(n) + " ").replace(Et, " ").indexOf(t) > -1) return !0;
          }

          return !1;
        }
      }), m.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (e, t) {
        m.fn[t] = function (e, n) {
          return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t);
        };
      }), m.fn.extend({
        hover: function hover(e, t) {
          return this.mouseenter(e).mouseleave(t || e);
        }
      });
      var Dt = n.location,
          At = m.now(),
          Lt = /\?/,
          _t = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
      m.parseJSON = function (e) {
        if (n.JSON && n.JSON.parse) return n.JSON.parse(e + "");
        var t,
            i = null,
            r = m.trim(e + "");
        return r && !m.trim(r.replace(_t, function (e, n, r, o) {
          return t && n && (i = 0), 0 === i ? e : (t = r || n, i += !o - !r, "");
        })) ? Function("return " + r)() : m.error("Invalid JSON: " + e);
      }, m.parseXML = function (e) {
        var t;
        if (!e || "string" != typeof e) return null;

        try {
          n.DOMParser ? t = new n.DOMParser().parseFromString(e, "text/xml") : ((t = new n.ActiveXObject("Microsoft.XMLDOM")).async = "false", t.loadXML(e));
        } catch (e) {
          t = void 0;
        }

        return t && t.documentElement && !t.getElementsByTagName("parsererror").length || m.error("Invalid XML: " + e), t;
      };
      var Nt = /#.*$/,
          Qt = /([?&])_=[^&]*/,
          Mt = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
          Rt = /^(?:GET|HEAD)$/,
          zt = /^\/\//,
          Ft = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
          Ht = {},
          It = {},
          Bt = "*/".concat("*"),
          Pt = Dt.href,
          $t = Ft.exec(Pt.toLowerCase()) || [];

      function Wt(e) {
        return function (t, n) {
          "string" != typeof t && (n = t, t = "*");
          var i,
              r = 0,
              o = t.toLowerCase().match(Q) || [];
          if (m.isFunction(n)) for (; i = o[r++];) {
            "+" === i.charAt(0) ? (i = i.slice(1) || "*", (e[i] = e[i] || []).unshift(n)) : (e[i] = e[i] || []).push(n);
          }
        };
      }

      function Xt(e, t, n, i) {
        var r = {},
            o = e === It;

        function s(a) {
          var l;
          return r[a] = !0, m.each(e[a] || [], function (e, a) {
            var c = a(t, n, i);
            return "string" != typeof c || o || r[c] ? o ? !(l = c) : void 0 : (t.dataTypes.unshift(c), s(c), !1);
          }), l;
        }

        return s(t.dataTypes[0]) || !r["*"] && s("*");
      }

      function Ut(e, t) {
        var n,
            i,
            r = m.ajaxSettings.flatOptions || {};

        for (i in t) {
          void 0 !== t[i] && ((r[i] ? e : n || (n = {}))[i] = t[i]);
        }

        return n && m.extend(!0, e, n), e;
      }

      function Yt(e) {
        return e.style && e.style.display || m.css(e, "display");
      }

      m.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
          url: Pt,
          type: "GET",
          isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test($t[1]),
          global: !0,
          processData: !0,
          async: !0,
          contentType: "application/x-www-form-urlencoded; charset=UTF-8",
          accepts: {
            "*": Bt,
            text: "text/plain",
            html: "text/html",
            xml: "application/xml, text/xml",
            json: "application/json, text/javascript"
          },
          contents: {
            xml: /\bxml\b/,
            html: /\bhtml/,
            json: /\bjson\b/
          },
          responseFields: {
            xml: "responseXML",
            text: "responseText",
            json: "responseJSON"
          },
          converters: {
            "* text": String,
            "text html": !0,
            "text json": m.parseJSON,
            "text xml": m.parseXML
          },
          flatOptions: {
            url: !0,
            context: !0
          }
        },
        ajaxSetup: function ajaxSetup(e, t) {
          return t ? Ut(Ut(e, m.ajaxSettings), t) : Ut(m.ajaxSettings, e);
        },
        ajaxPrefilter: Wt(Ht),
        ajaxTransport: Wt(It),
        ajax: function ajax(e, t) {
          "object" == typeof e && (t = e, e = void 0), t = t || {};
          var i,
              r,
              o,
              s,
              a,
              l,
              c,
              u,
              f = m.ajaxSetup({}, t),
              d = f.context || f,
              h = f.context && (d.nodeType || d.jquery) ? m(d) : m.event,
              p = m.Deferred(),
              g = m.Callbacks("once memory"),
              v = f.statusCode || {},
              y = {},
              b = {},
              x = 0,
              q = "canceled",
              w = {
            readyState: 0,
            getResponseHeader: function getResponseHeader(e) {
              var t;

              if (2 === x) {
                if (!u) for (u = {}; t = Mt.exec(s);) {
                  u[t[1].toLowerCase()] = t[2];
                }
                t = u[e.toLowerCase()];
              }

              return null == t ? null : t;
            },
            getAllResponseHeaders: function getAllResponseHeaders() {
              return 2 === x ? s : null;
            },
            setRequestHeader: function setRequestHeader(e, t) {
              var n = e.toLowerCase();
              return x || (e = b[n] = b[n] || e, y[e] = t), this;
            },
            overrideMimeType: function overrideMimeType(e) {
              return x || (f.mimeType = e), this;
            },
            statusCode: function statusCode(e) {
              var t;
              if (e) if (x < 2) for (t in e) {
                v[t] = [v[t], e[t]];
              } else w.always(e[w.status]);
              return this;
            },
            abort: function abort(e) {
              var t = e || q;
              return c && c.abort(t), T(0, t), this;
            }
          };
          if (p.promise(w).complete = g.add, w.success = w.done, w.error = w.fail, f.url = ((e || f.url || Pt) + "").replace(Nt, "").replace(zt, $t[1] + "//"), f.type = t.method || t.type || f.method || f.type, f.dataTypes = m.trim(f.dataType || "*").toLowerCase().match(Q) || [""], null == f.crossDomain && (i = Ft.exec(f.url.toLowerCase()), f.crossDomain = !(!i || i[1] === $t[1] && i[2] === $t[2] && (i[3] || ("http:" === i[1] ? "80" : "443")) === ($t[3] || ("http:" === $t[1] ? "80" : "443")))), f.data && f.processData && "string" != typeof f.data && (f.data = m.param(f.data, f.traditional)), Xt(Ht, f, t, w), 2 === x) return w;

          for (r in (l = m.event && f.global) && 0 == m.active++ && m.event.trigger("ajaxStart"), f.type = f.type.toUpperCase(), f.hasContent = !Rt.test(f.type), o = f.url, f.hasContent || (f.data && (o = f.url += (Lt.test(o) ? "&" : "?") + f.data, delete f.data), !1 === f.cache && (f.url = Qt.test(o) ? o.replace(Qt, "$1_=" + At++) : o + (Lt.test(o) ? "&" : "?") + "_=" + At++)), f.ifModified && (m.lastModified[o] && w.setRequestHeader("If-Modified-Since", m.lastModified[o]), m.etag[o] && w.setRequestHeader("If-None-Match", m.etag[o])), (f.data && f.hasContent && !1 !== f.contentType || t.contentType) && w.setRequestHeader("Content-Type", f.contentType), w.setRequestHeader("Accept", f.dataTypes[0] && f.accepts[f.dataTypes[0]] ? f.accepts[f.dataTypes[0]] + ("*" !== f.dataTypes[0] ? ", " + Bt + "; q=0.01" : "") : f.accepts["*"]), f.headers) {
            w.setRequestHeader(r, f.headers[r]);
          }

          if (f.beforeSend && (!1 === f.beforeSend.call(d, w, f) || 2 === x)) return w.abort();

          for (r in q = "abort", {
            success: 1,
            error: 1,
            complete: 1
          }) {
            w[r](f[r]);
          }

          if (c = Xt(It, f, t, w)) {
            if (w.readyState = 1, l && h.trigger("ajaxSend", [w, f]), 2 === x) return w;
            f.async && f.timeout > 0 && (a = n.setTimeout(function () {
              w.abort("timeout");
            }, f.timeout));

            try {
              x = 1, c.send(y, T);
            } catch (e) {
              if (!(x < 2)) throw e;
              T(-1, e);
            }
          } else T(-1, "No Transport");

          function T(e, t, i, r) {
            var u,
                y,
                b,
                q,
                T,
                k = t;
            2 !== x && (x = 2, a && n.clearTimeout(a), c = void 0, s = r || "", w.readyState = e > 0 ? 4 : 0, u = e >= 200 && e < 300 || 304 === e, i && (q = function (e, t, n) {
              for (var i, r, o, s, a = e.contents, l = e.dataTypes; "*" === l[0];) {
                l.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type"));
              }

              if (r) for (s in a) {
                if (a[s] && a[s].test(r)) {
                  l.unshift(s);
                  break;
                }
              }
              if (l[0] in n) o = l[0];else {
                for (s in n) {
                  if (!l[0] || e.converters[s + " " + l[0]]) {
                    o = s;
                    break;
                  }

                  i || (i = s);
                }

                o = o || i;
              }
              if (o) return o !== l[0] && l.unshift(o), n[o];
            }(f, w, i)), q = function (e, t, n, i) {
              var r,
                  o,
                  s,
                  a,
                  l,
                  c = {},
                  u = e.dataTypes.slice();
              if (u[1]) for (s in e.converters) {
                c[s.toLowerCase()] = e.converters[s];
              }

              for (o = u.shift(); o;) {
                if (e.responseFields[o] && (n[e.responseFields[o]] = t), !l && i && e.dataFilter && (t = e.dataFilter(t, e.dataType)), l = o, o = u.shift()) if ("*" === o) o = l;else if ("*" !== l && l !== o) {
                  if (!(s = c[l + " " + o] || c["* " + o])) for (r in c) {
                    if ((a = r.split(" "))[1] === o && (s = c[l + " " + a[0]] || c["* " + a[0]])) {
                      !0 === s ? s = c[r] : !0 !== c[r] && (o = a[0], u.unshift(a[1]));
                      break;
                    }
                  }
                  if (!0 !== s) if (s && e.throws) t = s(t);else try {
                    t = s(t);
                  } catch (e) {
                    return {
                      state: "parsererror",
                      error: s ? e : "No conversion from " + l + " to " + o
                    };
                  }
                }
              }

              return {
                state: "success",
                data: t
              };
            }(f, q, w, u), u ? (f.ifModified && ((T = w.getResponseHeader("Last-Modified")) && (m.lastModified[o] = T), (T = w.getResponseHeader("etag")) && (m.etag[o] = T)), 204 === e || "HEAD" === f.type ? k = "nocontent" : 304 === e ? k = "notmodified" : (k = q.state, y = q.data, u = !(b = q.error))) : (b = k, !e && k || (k = "error", e < 0 && (e = 0))), w.status = e, w.statusText = (t || k) + "", u ? p.resolveWith(d, [y, k, w]) : p.rejectWith(d, [w, k, b]), w.statusCode(v), v = void 0, l && h.trigger(u ? "ajaxSuccess" : "ajaxError", [w, f, u ? y : b]), g.fireWith(d, [w, k]), l && (h.trigger("ajaxComplete", [w, f]), --m.active || m.event.trigger("ajaxStop")));
          }

          return w;
        },
        getJSON: function getJSON(e, t, n) {
          return m.get(e, t, n, "json");
        },
        getScript: function getScript(e, t) {
          return m.get(e, void 0, t, "script");
        }
      }), m.each(["get", "post"], function (e, t) {
        m[t] = function (e, n, i, r) {
          return m.isFunction(n) && (r = r || i, i = n, n = void 0), m.ajax(m.extend({
            url: e,
            type: t,
            dataType: r,
            data: n,
            success: i
          }, m.isPlainObject(e) && e));
        };
      }), m._evalUrl = function (e) {
        return m.ajax({
          url: e,
          type: "GET",
          dataType: "script",
          cache: !0,
          async: !1,
          global: !1,
          throws: !0
        });
      }, m.fn.extend({
        wrapAll: function wrapAll(e) {
          if (m.isFunction(e)) return this.each(function (t) {
            m(this).wrapAll(e.call(this, t));
          });

          if (this[0]) {
            var t = m(e, this[0].ownerDocument).eq(0).clone(!0);
            this[0].parentNode && t.insertBefore(this[0]), t.map(function () {
              for (var e = this; e.firstChild && 1 === e.firstChild.nodeType;) {
                e = e.firstChild;
              }

              return e;
            }).append(this);
          }

          return this;
        },
        wrapInner: function wrapInner(e) {
          return m.isFunction(e) ? this.each(function (t) {
            m(this).wrapInner(e.call(this, t));
          }) : this.each(function () {
            var t = m(this),
                n = t.contents();
            n.length ? n.wrapAll(e) : t.append(e);
          });
        },
        wrap: function wrap(e) {
          var t = m.isFunction(e);
          return this.each(function (n) {
            m(this).wrapAll(t ? e.call(this, n) : e);
          });
        },
        unwrap: function unwrap() {
          return this.parent().each(function () {
            m.nodeName(this, "body") || m(this).replaceWith(this.childNodes);
          }).end();
        }
      }), m.expr.filters.hidden = function (e) {
        return p.reliableHiddenOffsets() ? e.offsetWidth <= 0 && e.offsetHeight <= 0 && !e.getClientRects().length : function (e) {
          if (!m.contains(e.ownerDocument || s, e)) return !0;

          for (; e && 1 === e.nodeType;) {
            if ("none" === Yt(e) || "hidden" === e.type) return !0;
            e = e.parentNode;
          }

          return !1;
        }(e);
      }, m.expr.filters.visible = function (e) {
        return !m.expr.filters.hidden(e);
      };
      var Gt = /%20/g,
          Vt = /\[\]$/,
          Kt = /\r?\n/g,
          Jt = /^(?:submit|button|image|reset|file)$/i,
          Zt = /^(?:input|select|textarea|keygen)/i;

      function en(e, t, n, i) {
        var r;
        if (m.isArray(t)) m.each(t, function (t, r) {
          n || Vt.test(e) ? i(e, r) : en(e + "[" + ("object" == typeof r && null != r ? t : "") + "]", r, n, i);
        });else if (n || "object" !== m.type(t)) i(e, t);else for (r in t) {
          en(e + "[" + r + "]", t[r], n, i);
        }
      }

      m.param = function (e, t) {
        var n,
            i = [],
            r = function r(e, t) {
          t = m.isFunction(t) ? t() : null == t ? "" : t, i[i.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t);
        };

        if (void 0 === t && (t = m.ajaxSettings && m.ajaxSettings.traditional), m.isArray(e) || e.jquery && !m.isPlainObject(e)) m.each(e, function () {
          r(this.name, this.value);
        });else for (n in e) {
          en(n, e[n], t, r);
        }
        return i.join("&").replace(Gt, "+");
      }, m.fn.extend({
        serialize: function serialize() {
          return m.param(this.serializeArray());
        },
        serializeArray: function serializeArray() {
          return this.map(function () {
            var e = m.prop(this, "elements");
            return e ? m.makeArray(e) : this;
          }).filter(function () {
            var e = this.type;
            return this.name && !m(this).is(":disabled") && Zt.test(this.nodeName) && !Jt.test(e) && (this.checked || !te.test(e));
          }).map(function (e, t) {
            var n = m(this).val();
            return null == n ? null : m.isArray(n) ? m.map(n, function (e) {
              return {
                name: t.name,
                value: e.replace(Kt, "\r\n")
              };
            }) : {
              name: t.name,
              value: n.replace(Kt, "\r\n")
            };
          }).get();
        }
      }), m.ajaxSettings.xhr = void 0 !== n.ActiveXObject ? function () {
        return this.isLocal ? sn() : s.documentMode > 8 ? on() : /^(get|post|head|put|delete|options)$/i.test(this.type) && on() || sn();
      } : on;
      var tn = 0,
          nn = {},
          rn = m.ajaxSettings.xhr();

      function on() {
        try {
          return new n.XMLHttpRequest();
        } catch (e) {}
      }

      function sn() {
        try {
          return new n.ActiveXObject("Microsoft.XMLHTTP");
        } catch (e) {}
      }

      n.attachEvent && n.attachEvent("onunload", function () {
        for (var e in nn) {
          nn[e](void 0, !0);
        }
      }), p.cors = !!rn && "withCredentials" in rn, (rn = p.ajax = !!rn) && m.ajaxTransport(function (e) {
        var _t3;

        if (!e.crossDomain || p.cors) return {
          send: function send(i, r) {
            var o,
                s = e.xhr(),
                a = ++tn;
            if (s.open(e.type, e.url, e.async, e.username, e.password), e.xhrFields) for (o in e.xhrFields) {
              s[o] = e.xhrFields[o];
            }

            for (o in e.mimeType && s.overrideMimeType && s.overrideMimeType(e.mimeType), e.crossDomain || i["X-Requested-With"] || (i["X-Requested-With"] = "XMLHttpRequest"), i) {
              void 0 !== i[o] && s.setRequestHeader(o, i[o] + "");
            }

            s.send(e.hasContent && e.data || null), _t3 = function t(n, i) {
              var o, l, c;
              if (_t3 && (i || 4 === s.readyState)) if (delete nn[a], _t3 = void 0, s.onreadystatechange = m.noop, i) 4 !== s.readyState && s.abort();else {
                c = {}, o = s.status, "string" == typeof s.responseText && (c.text = s.responseText);

                try {
                  l = s.statusText;
                } catch (e) {
                  l = "";
                }

                o || !e.isLocal || e.crossDomain ? 1223 === o && (o = 204) : o = c.text ? 200 : 404;
              }
              c && r(o, l, c, s.getAllResponseHeaders());
            }, e.async ? 4 === s.readyState ? n.setTimeout(_t3) : s.onreadystatechange = nn[a] = _t3 : _t3();
          },
          abort: function abort() {
            _t3 && _t3(void 0, !0);
          }
        };
      }), m.ajaxSetup({
        accepts: {
          script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
          script: /\b(?:java|ecma)script\b/
        },
        converters: {
          "text script": function textScript(e) {
            return m.globalEval(e), e;
          }
        }
      }), m.ajaxPrefilter("script", function (e) {
        void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET", e.global = !1);
      }), m.ajaxTransport("script", function (e) {
        if (e.crossDomain) {
          var t,
              n = s.head || m("head")[0] || s.documentElement;
          return {
            send: function send(i, r) {
              (t = s.createElement("script")).async = !0, e.scriptCharset && (t.charset = e.scriptCharset), t.src = e.url, t.onload = t.onreadystatechange = function (e, n) {
                (n || !t.readyState || /loaded|complete/.test(t.readyState)) && (t.onload = t.onreadystatechange = null, t.parentNode && t.parentNode.removeChild(t), t = null, n || r(200, "success"));
              }, n.insertBefore(t, n.firstChild);
            },
            abort: function abort() {
              t && t.onload(void 0, !0);
            }
          };
        }
      });
      var an = [],
          ln = /(=)\?(?=&|$)|\?\?/;
      m.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function jsonpCallback() {
          var e = an.pop() || m.expando + "_" + At++;
          return this[e] = !0, e;
        }
      }), m.ajaxPrefilter("json jsonp", function (e, t, i) {
        var r,
            o,
            s,
            a = !1 !== e.jsonp && (ln.test(e.url) ? "url" : "string" == typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && ln.test(e.data) && "data");
        if (a || "jsonp" === e.dataTypes[0]) return r = e.jsonpCallback = m.isFunction(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback, a ? e[a] = e[a].replace(ln, "$1" + r) : !1 !== e.jsonp && (e.url += (Lt.test(e.url) ? "&" : "?") + e.jsonp + "=" + r), e.converters["script json"] = function () {
          return s || m.error(r + " was not called"), s[0];
        }, e.dataTypes[0] = "json", o = n[r], n[r] = function () {
          s = arguments;
        }, i.always(function () {
          void 0 === o ? m(n).removeProp(r) : n[r] = o, e[r] && (e.jsonpCallback = t.jsonpCallback, an.push(r)), s && m.isFunction(o) && o(s[0]), s = o = void 0;
        }), "script";
      }), m.parseHTML = function (e, t, n) {
        if (!e || "string" != typeof e) return null;
        "boolean" == typeof t && (n = t, t = !1), t = t || s;
        var i = C.exec(e),
            r = !n && [];
        return i ? [t.createElement(i[1])] : (i = he([e], t, r), r && r.length && m(r).remove(), m.merge([], i.childNodes));
      };
      var cn = m.fn.load;

      function un(e) {
        return m.isWindow(e) ? e : 9 === e.nodeType && (e.defaultView || e.parentWindow);
      }

      m.fn.load = function (e, t, n) {
        if ("string" != typeof e && cn) return cn.apply(this, arguments);
        var i,
            r,
            o,
            s = this,
            a = e.indexOf(" ");
        return a > -1 && (i = m.trim(e.slice(a, e.length)), e = e.slice(0, a)), m.isFunction(t) ? (n = t, t = void 0) : t && "object" == typeof t && (r = "POST"), s.length > 0 && m.ajax({
          url: e,
          type: r || "GET",
          dataType: "html",
          data: t
        }).done(function (e) {
          o = arguments, s.html(i ? m("<div>").append(m.parseHTML(e)).find(i) : e);
        }).always(n && function (e, t) {
          s.each(function () {
            n.apply(this, o || [e.responseText, t, e]);
          });
        }), this;
      }, m.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) {
        m.fn[t] = function (e) {
          return this.on(t, e);
        };
      }), m.expr.filters.animated = function (e) {
        return m.grep(m.timers, function (t) {
          return e === t.elem;
        }).length;
      }, m.offset = {
        setOffset: function setOffset(e, t, n) {
          var i,
              r,
              o,
              s,
              a,
              l,
              c = m.css(e, "position"),
              u = m(e),
              f = {};
          "static" === c && (e.style.position = "relative"), a = u.offset(), o = m.css(e, "top"), l = m.css(e, "left"), ("absolute" === c || "fixed" === c) && m.inArray("auto", [o, l]) > -1 ? (s = (i = u.position()).top, r = i.left) : (s = parseFloat(o) || 0, r = parseFloat(l) || 0), m.isFunction(t) && (t = t.call(e, n, m.extend({}, a))), null != t.top && (f.top = t.top - a.top + s), null != t.left && (f.left = t.left - a.left + r), "using" in t ? t.using.call(e, f) : u.css(f);
        }
      }, m.fn.extend({
        offset: function offset(e) {
          if (arguments.length) return void 0 === e ? this : this.each(function (t) {
            m.offset.setOffset(this, e, t);
          });
          var t,
              n,
              i = {
            top: 0,
            left: 0
          },
              r = this[0],
              o = r && r.ownerDocument;
          return o ? (t = o.documentElement, m.contains(t, r) ? (void 0 !== r.getBoundingClientRect && (i = r.getBoundingClientRect()), n = un(o), {
            top: i.top + (n.pageYOffset || t.scrollTop) - (t.clientTop || 0),
            left: i.left + (n.pageXOffset || t.scrollLeft) - (t.clientLeft || 0)
          }) : i) : void 0;
        },
        position: function position() {
          if (this[0]) {
            var e,
                t,
                n = {
              top: 0,
              left: 0
            },
                i = this[0];
            return "fixed" === m.css(i, "position") ? t = i.getBoundingClientRect() : (e = this.offsetParent(), t = this.offset(), m.nodeName(e[0], "html") || (n = e.offset()), n.top += m.css(e[0], "borderTopWidth", !0), n.left += m.css(e[0], "borderLeftWidth", !0)), {
              top: t.top - n.top - m.css(i, "marginTop", !0),
              left: t.left - n.left - m.css(i, "marginLeft", !0)
            };
          }
        },
        offsetParent: function offsetParent() {
          return this.map(function () {
            for (var e = this.offsetParent; e && !m.nodeName(e, "html") && "static" === m.css(e, "position");) {
              e = e.offsetParent;
            }

            return e || We;
          });
        }
      }), m.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
      }, function (e, t) {
        var n = /Y/.test(t);

        m.fn[e] = function (i) {
          return ee(this, function (e, i, r) {
            var o = un(e);
            if (void 0 === r) return o ? t in o ? o[t] : o.document.documentElement[i] : e[i];
            o ? o.scrollTo(n ? m(o).scrollLeft() : r, n ? r : m(o).scrollTop()) : e[i] = r;
          }, e, i, arguments.length, null);
        };
      }), m.each(["top", "left"], function (e, t) {
        m.cssHooks[t] = Ge(p.pixelPosition, function (e, n) {
          if (n) return n = Ue(e, t), Pe.test(n) ? m(e).position()[t] + "px" : n;
        });
      }), m.each({
        Height: "height",
        Width: "width"
      }, function (e, t) {
        m.each({
          padding: "inner" + e,
          content: t,
          "": "outer" + e
        }, function (n, i) {
          m.fn[i] = function (i, r) {
            var o = arguments.length && (n || "boolean" != typeof i),
                s = n || (!0 === i || !0 === r ? "margin" : "border");
            return ee(this, function (t, n, i) {
              var r;
              return m.isWindow(t) ? t.document.documentElement["client" + e] : 9 === t.nodeType ? (r = t.documentElement, Math.max(t.body["scroll" + e], r["scroll" + e], t.body["offset" + e], r["offset" + e], r["client" + e])) : void 0 === i ? m.css(t, n, s) : m.style(t, n, i, s);
            }, t, o ? i : void 0, o, null);
          };
        });
      }), m.fn.extend({
        bind: function bind(e, t, n) {
          return this.on(e, null, t, n);
        },
        unbind: function unbind(e, t) {
          return this.off(e, null, t);
        },
        delegate: function delegate(e, t, n, i) {
          return this.on(t, e, n, i);
        },
        undelegate: function undelegate(e, t, n) {
          return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n);
        }
      }), m.fn.size = function () {
        return this.length;
      }, m.fn.andSelf = m.fn.addBack, void 0 === (i = function () {
        return m;
      }.apply(t, [])) || (e.exports = i);
      var fn = n.jQuery,
          dn = n.$;
      return m.noConflict = function (e) {
        return n.$ === m && (n.$ = dn), e && n.jQuery === m && (n.jQuery = fn), m;
      }, r || (n.jQuery = n.$ = m), m;
    }, "object" == typeof e.exports ? e.exports = r.document ? o(r, !0) : function (e) {
      if (!e.document) throw new Error("jQuery requires a window with a document");
      return o(e);
    } : o(r);
  }, function (e, t) {
    e.exports = function (e) {
      var t = [];
      return t.toString = function () {
        return this.map(function (t) {
          var n = function (e, t) {
            var n = e[1] || "",
                i = e[3];
            if (!i) return n;

            if (t && "function" == typeof btoa) {
              var r = (s = i, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(s)))) + " */"),
                  o = i.sources.map(function (e) {
                return "/*# sourceURL=" + i.sourceRoot + e + " */";
              });
              return [n].concat(o).concat([r]).join("\n");
            }

            var s;
            return [n].join("\n");
          }(t, e);

          return t[2] ? "@media " + t[2] + "{" + n + "}" : n;
        }).join("");
      }, t.i = function (e, n) {
        "string" == typeof e && (e = [[null, e, ""]]);

        for (var i = {}, r = 0; r < this.length; r++) {
          var o = this[r][0];
          "number" == typeof o && (i[o] = !0);
        }

        for (r = 0; r < e.length; r++) {
          var s = e[r];
          "number" == typeof s[0] && i[s[0]] || (n && !s[2] ? s[2] = n : n && (s[2] = "(" + s[2] + ") and (" + n + ")"), t.push(s));
        }
      }, t;
    };
  }, function (e, t, n) {
    "use strict";

    n.r(t);
    var i = n(1),
        r = n.n(i),
        o = n(0),
        s = n.n(o),
        a = n(5);
    a.getInterface(2);

    function l(e) {
      return (l = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e;
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
      })(e);
    }

    function c(e, t, n) {
      return t in e ? Object.defineProperty(e, t, {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : e[t] = n, e;
    }

    function u(e, t) {
      for (var n = 0; n < t.length; n++) {
        var i = t[n];
        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);
      }
    }

    function f(e, t) {
      return !t || "object" !== l(t) && "function" != typeof t ? function (e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
      }(e) : t;
    }

    function d(e) {
      return (d = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
        return e.__proto__ || Object.getPrototypeOf(e);
      })(e);
    }

    function h(e, t) {
      return (h = Object.setPrototypeOf || function (e, t) {
        return e.__proto__ = t, e;
      })(e, t);
    }

    var p = function (e) {
      function t(e) {
        var n;
        return function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, t), (n = f(this, d(t).call(this, e))).element = null, n.mathField = null, n.ignoreEditEvents = 4, n;
      }

      var n, i, o;
      return function (e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
          constructor: {
            value: e,
            writable: !0,
            configurable: !0
          }
        }), t && h(e, t);
      }(t, r.a.Component), n = t, (i = [{
        key: "componentDidMount",
        value: function value() {
          var e = this,
              t = {
            restrictMismatchedBrackets: !0,
            handlers: {}
          };
          this.props.config && (t = function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = null != arguments[t] ? arguments[t] : {},
                  i = Object.keys(n);
              "function" == typeof Object.getOwnPropertySymbols && (i = i.concat(Object.getOwnPropertySymbols(n).filter(function (e) {
                return Object.getOwnPropertyDescriptor(n, e).enumerable;
              }))), i.forEach(function (t) {
                c(e, t, n[t]);
              });
            }

            return e;
          }({
            config: t
          }, this.props.config)), t.handlers.edit = function (t) {
            e.ignoreEditEvents > 0 ? e.ignoreEditEvents -= 1 : e.props.onChange && e.props.onChange(t.latex());
          }, this.mathField = a.MathField(this.element, t), this.mathField.latex(this.props.latex || ""), this.props.className && this.element.classList.add(this.props.className), this.props.mathquillDidMount && this.props.mathquillDidMount(this.mathField);
        }
      }, {
        key: "render",
        value: function value() {
          var e = this;
          return r.a.createElement("div", {
            ref: function ref(t) {
              e.element = t;
            }
          });
        }
      }]) && u(n.prototype, i), o && u(n, o), t;
    }();

    p.propTypes = {
      latex: s.a.string,
      onChange: s.a.func,
      config: s.a.object,
      mathquillDidMount: s.a.func
    };
    var m = p,
        g = n(2),
        v = n.n(g);

    function y() {
      if (null == document.getElementById("react-mathquill-styles")) {
        var e = document.createElement("style");
        e.setAttribute("id", "react-mathquill-styles"), e.innerHTML = v.a[0][1], document.getElementsByTagName("head")[0].appendChild(e);
      }
    }

    n.d(t, "addStyles", function () {
      return y;
    });
    t.default = m;
  }]);
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6)))

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./src/index.css
var src = __webpack_require__(35);

// EXTERNAL MODULE: ./src/perseus-redux.js + 22 modules
var perseus_redux = __webpack_require__(17);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__(4);

// CONCATENATED MODULE: ./src/components/demo.js
// When this library gets loaded, window.PerseusRedux will be created.
// We want to access that global object, not anything else to avoid
// multiple copies of Redux getting loaded accidentally
// Use the version of React provided by perseus-redux
var React=window.PerseusRedux.React;var defaultQuestion={question:{content:"What kind of matrix has a nullspace of $dim=\\vec 9$?\n\n$\\begin{bmatrix}2\\\\3\\\\4\\end{bmatrix}$\n\nfollow [[☃ matrix 1]] me\n\n[[☃ radio 1]]\n\n|| **Table title** ||\nheader 1 | header 2 | header 3\n- | - | -\ndata 1 | data 2 | $\\int x^4$\ndata 4 | data 5 | data 6\ndata 7 | data 8 | data 9",images:{},widgets:{"matrix 1":{type:"matrix",alignment:"default",static:false,graded:true,options:{static:false,matrixBoardSize:[3,3],answers:[[]],prefix:"$\\vec A=$ ",suffix:"$\\vec b$",cursorPosition:[0,0]},version:{major:0,minor:0}},"radio 1":{type:"radio",alignment:"default",static:false,graded:true,options:{choices:[{correct:false,content:"one"},{correct:true,content:"two $x^2-4$for the win$^\\circ$"}],randomize:false,multipleSelect:false,countChoices:false,displayCount:null,hasNoneOfTheAbove:false,deselectEnabled:false},version:{major:1,minor:0}}}},answerArea:{calculator:false,chi2Table:false,periodicTable:false,tTable:false,zTable:false},itemDataVersion:{major:0,minor:1},hints:[]};/*
defaultQuestion = {
    question: {
        content: "$x=$ [[☃ expression 1]][[☃ dropdown 1]]\n\n[[☃ radio 1]]\n\n",
        images: {},
        widgets: {
            "expression 1": {
                type: "expression",
                alignment: "default",
                static: false,
                graded: true,
                options: {
                    answerForms: [
                        {
                            value: "\\frac{1}{2}",
                            form: false,
                            simplify: false,
                            considered: "correct",
                            key: 0
                        }
                    ],
                    buttonSets: ["basic"],
                    functions: ["f", "g", "h"],
                    times: false
                },
                version: {
                    major: 1,
                    minor: 0
                }
            },
            "dropdown 1": {
                type: "dropdown",
                alignment: "default",
                static: false,
                graded: true,
                options: {
                    static: false,
                    placeholder: "Select",
                    choices: [
                        {
                            content: "$=$",
                            correct: false
                        },
                        {
                            content: "$\\geq$",
                            correct: true
                        },
                        {
                            content: "$\\leq$",
                            correct: false
                        }
                    ]
                },
                version: {
                    major: 0,
                    minor: 0
                }
            },
            "radio 1": {
                type: "radio",
                alignment: "default",
                static: false,
                graded: true,
                options: {
                    choices: [
                        {
                            content: "My super answer",
                            correct: true
                        },
                        {
                            correct: false,
                            content: "My other answer",
                            clue: "Because, you know...."
                        },
                        {
                            isNoneOfTheAbove: true,
                            correct: false,
                            content: ""
                        }
                    ],
                    randomize: false,
                    multipleSelect: true,
                    countChoices: false,
                    displayCount: null,
                    hasNoneOfTheAbove: true,
                    deselectEnabled: false
                },
                version: {
                    major: 1,
                    minor: 0
                }
            }
        }
    },
    answerArea: {
        calculator: false,
        chi2Table: false,
        periodicTable: false,
        tTable: false,
        zTable: false
    },
    itemDataVersion: {
        major: 0,
        minor: 1
    },
    hints: []
};
*/ // Widget to render the JSON content of a question
function QuestionText(props){var defaultQuestionStr=props.defaultQuestionStr,onChange=props.onChange;var _React$useState=React.useState(defaultQuestionStr),_React$useState2=Object(slicedToArray["a" /* default */])(_React$useState,2),questionStr=_React$useState2[0],setQuestionStr=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=Object(slicedToArray["a" /* default */])(_React$useState3,2),parseError=_React$useState4[0],setParseError=_React$useState4[1];function setQuestion(questionStr){setQuestionStr(questionStr);var newQuestion={};try{newQuestion=JSON.parse(questionStr);setParseError(false);if(onChange){onChange(newQuestion);}}catch(e){setParseError(true);return;}}return React.createElement("textarea",{className:"question-json"+(parseError?" parse-error":""),id:"_question",value:questionStr,onChange:function onChange(e){setQuestion(e.target.value);}});}
// CONCATENATED MODULE: ./src/index.js
//import React from 'react';
//import ReactDOM from 'react-dom';
// When this library gets loaded, window.PerseusRedux will be created.
// We want to access that global object, not anything else to avoid
// multiple copies of Redux getting loaded accidentally
// eslint-disable-line
// inputs/textareas are used to ferry data between PerseusRedux
// and the webpage. (This is because Webwork is able to persist
// data in a textbox.) Since webwork is not around to automatically
// persist the data, use local storage.
function saveStateToLocalStorage(){var state={};for(var _i=0,_arr=["_question","_state","_status","_messages"];_i<_arr.length;_i++){var id=_arr[_i];state[id]=(document.getElementById(id)||{}).value;}window.localStorage.setItem("PerseusReduxDemoState",JSON.stringify(state));}function restoreStateFromLocalStorage(){var state={};try{state=JSON.parse(window.localStorage.getItem("PerseusReduxDemoState"));}catch(e){}for(var id in state){var elm=document.getElementById(id);if(elm){//console.log("setting", id, elm, state[id]);
elm.value=state[id];}}return state;}if(!window.PerseusRedux.hasRenderedDemo){// this function is outside of the component because
// we want to change the DOM without using react
var onStateChange=function onStateChange(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var stateStr=JSON.stringify(state);var status=statusFromState(state,extraState.question.question);document.getElementById("_state").value=stateStr;document.getElementById("_status").value=status.status;document.getElementById("_messages").value=status.message;document.getElementById("_formatted").value=JSON.stringify(status.formatted);};var src_setQuestion=function setQuestion(question){extraState.question=question;renderQuestionBody();};var src_Demo=function Demo(props){return src_React.createElement("div",{className:"container"},src_React.createElement("div",{className:"left"},src_React.createElement("button",{onClick:function onClick(){var elm=document.getElementById("_question");elm.value=src_defaultQuestionStr;// Changing the `.value` won't trigger a change event,
// so manually reset the question
src_setQuestion(defaultQuestion);}},"Reset Question to Default"),src_React.createElement(QuestionText,{defaultQuestionStr:src_defaultQuestionStr,onChange:src_setQuestion})),src_React.createElement("div",{className:"right"},src_React.createElement("div",{className:"data-storage"},"Current State: ",src_React.createElement("input",{id:"_state"}),"Status: ",src_React.createElement("input",{id:"_status"}),"Messages: ",src_React.createElement("input",{id:"_messages"}),"Messages: ",src_React.createElement("input",{id:"_formatted"})),src_React.createElement("div",{className:"question",id:"question"})));};var QuestionBody=function QuestionBody(props){var question=props.question;return src_React.createElement(QuestionRenderer,{question:question.question,onChange:onStateChange,store:store});};var renderQuestionBody=function renderQuestionBody(){if(document.getElementById("question")){var questionBody=src_React.createElement(QuestionBody,{question:extraState.question});ReactDOM.render(questionBody,document.getElementById("question"));}};// this file gets included in `index.html` several times, but we only
// want to execute the code once.
window.PerseusRedux.hasRenderedDemo=true;console.log("demo loading...");// We need to use the React and ReactDOM from the PerseusRedux library,
// or else there will be multiple Reacts that will conflict when rendering
// elements.
var _window$PerseusRedux=window.PerseusRedux,src_React=_window$PerseusRedux.React,ReactDOM=_window$PerseusRedux.ReactDOM,QuestionRenderer=_window$PerseusRedux.QuestionRenderer,MathQuill=_window$PerseusRedux.MathQuill,statusFromState=_window$PerseusRedux.statusFromState,initializeStore=_window$PerseusRedux.initializeStore;// Load the mathquill styles onto the page
MathQuill.addMathquillStyles();var src_defaultQuestionStr=JSON.stringify(defaultQuestion,null,4);var store=window.PerseusRedux.generateStoreForWidgetTree();var extraState=window.extraState={};src_setQuestion(defaultQuestion);ReactDOM.render(src_React.createElement(src_Demo,null),document.getElementById("root"));var loadedState=restoreStateFromLocalStorage();try{initializeStore(store,JSON.parse(loadedState["_state"]));}catch(e){}try{extraState.question=JSON.parse(loadedState["_question"]);}catch(e){}renderQuestionBody();window.onbeforeunload=saveStateToLocalStorage;}else{console.log("demo already loaded");}

/***/ })
/******/ ]);
//# sourceMappingURL=main.js.map